<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE book [<!-- Some useful entities borrowed from HTML -->
    <!ENTITY ndash  "–">
    <!ENTITY mdash  "—">
    <!ENTITY hellip "…">

    <!-- Useful for describing APIs -->
    <!ENTITY GET    '<command xmlns="http://docbook.org/ns/docbook">GET</command>'>
    <!ENTITY PUT    '<command xmlns="http://docbook.org/ns/docbook">PUT</command>'>
    <!ENTITY POST   '<command xmlns="http://docbook.org/ns/docbook">POST</command>'>
    <!ENTITY DELETE '<command xmlns="http://docbook.org/ns/docbook">DELETE</command>'>


    <!ENTITY CHECK  '<inlinemediaobject xmlns="http://docbook.org/ns/docbook">
                 <imageobject>
                  <imagedata fileref="../../img/Check_mark_23x20_02.svg"
                             format="SVG" scale="60"/>
                </imageobject>
              </inlinemediaobject>'>
    <!ENTITY CODES       'Normal Response Code(s):'>
    <!ENTITY ERROR_CODES 'Error Response Code(s):'>
    <!ENTITY NO_REQUEST '<para xmlns="http://docbook.org/ns/docbook">
                          This operation does not require a request body.</para>'>
    <!ENTITY LONG_URI_REFHEAD '
          <thead xmlns="http://docbook.org/ns/docbook">
            <tr>
              <td colspan="1">Verb</td>
              <td colspan="4">URI</td>
              <td colspan="3">Description</td>
            </tr>
          </thead>'>
    <!ENTITY URI_REFHEAD '
          <thead xmlns="http://docbook.org/ns/docbook">
            <tr>
              <td colspan="1">Verb</td>
              <td colspan="1">URI</td>
              <td colspan="4">Description</td>
            </tr>
          </thead>'>
]>
<book xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
  xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:svg="http://www.w3.org/2000/svg"
  xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:html="http://www.w3.org/1999/xhtml"
  xmlns:db="http://docbook.org/ns/docbook" version="5.0">
  <title>IdM Developer Guide</title>
  <info>
    <author>
      <personname>
        <firstname/>
        <surname/>
      </personname>
      <affiliation>
        <orgname>Rackspace Cloud</orgname>
      </affiliation>
    </author>
    <copyright>
      <year>2010</year>
      <holder>Rackspace Hosting, Inc.</holder>
    </copyright>
    <releaseinfo>API v1.0.2010.12</releaseinfo>
    <productname>Identity Management (IdM)</productname>
    <pubdate>1/27/11</pubdate>
    <abstract>
      <para> This document is intended for software developers interested in developing applications
        which utilizes Customer Identity Management System as the authentication engine. It includes
        details on how to integrate with IdM. </para>
    </abstract>
  </info>
  <chapter>
    <title>Overview</title>
    <para>The IdM Service allows Rackspace Applications to obtain tokens that can be used to access
      resources in the Rackspace Cloud. This document is intended for: </para>
    <variablelist>
      <varlistentry>
        <term>Service Developers</term>
        <listitem>
          <para> Service developers are interested in writing client for Rackspace IdM service.
          </para>
        </listitem>
      </varlistentry>
    </variablelist>
    <para> This Guide assumes the reader is familiar with RESTful web services, HTTP/1.1, and JSON
      and/or XML serialization formats. </para>
  </chapter>
  <chapter>
    <title>Concepts</title>
    <para> The IdM system has several key concepts that are important to understand: </para>
    <section>
      <title>Token</title>
      <para>Small bits of text that contain the security information for a login session and
        identifies the user, the user's groups, and the user's privileges. Tokens may be revoked at
        anytime and are valid for a finite duration. </para>
    </section>
    <section>
      <title>Customer</title>
      <para>Organizations that are customers of Rackspace </para>
    </section>
    <section>
      <title>User</title>
      <para>Individuals at a customer that have a login</para>
    </section>
    <section>
      <title>Client</title>
      <para> Rackspace applications (e.g.: Control Panel, Billing, etc.) or Customer third party
        applications. IdM will intially setup all Rackspace applications</para>
    </section>
  </chapter>
  <chapter>
    <title>General API Information</title>
    <para>The IdM API is implemented using a RESTful web service interface. All requests to
      authenticate and operate against the IdM API are performed using SSL over HTTP (HTTPS) on TCP
      port 443.</para>
    <section>
      <title>Request/Response Types</title>
      <para> The IdM API supports both the JSON and XML data serialization formats. The request
        format is specified using the <code>Content-Type</code> header and is required for
        operations that have a request body. The response format can be specified in requests using
        either the <code>Accept</code> header or adding an <code>.xml</code> or <code>.json</code>
        extension to the request URI. Note that it is possible for a response to be serialized using
        a format different from the request (see example below). If no response format is specified,
        JSON is the default. If conflicting formats are specified using both an <code>Accept</code>
        header and a query extension, the query extension takes precedence.</para>
      <table rules="all">
        <caption>Response Types</caption>
        <thead>
          <tr>
            <td>Format</td>
            <td>Accept Header</td>
            <td>Query Extension</td>
            <td>Default</td>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td>JSON</td>
            <td>application/json</td>
            <td>.json</td>
            <td>Yes</td>
          </tr>
          <tr>
            <td>XML</td>
            <td>application/xml</td>
            <td>.xml</td>
            <td>No</td>
          </tr>
        </tbody>
      </table>
      <example>
        <title>JSON Request with Headers</title>
        <programlisting language="xml">
<xi:include href="../../formattedsamples/samplerequestheader.json" parse="text"/>
</programlisting>
        <programlisting language="xml">
<xi:include href="../../formattedsamples/auth_credentials.xml" parse="text"/>
</programlisting>
      </example>
      <example>
        <title>XML Response with Headers</title>
        <programlisting language="xml">
<xi:include href="../../formattedsamples/sampleresponseheader.json" parse="text"/>
</programlisting>
        <programlisting language="xml">
<xi:include href="../../formattedsamples/auth.xml" parse="text"/>
</programlisting>
      </example>
    </section>
    <section>
      <title>Content Compression</title>
      <para>Request and response body data my be encoded with gzip compression in order to
        accelerate interactive performance of API calls and responses. This is controlled using the
          <code>Accept-Encoding</code> header on the request from the client and indicated by the
          <code>Content-Encoding</code> header in the server response. Unless the header is
        explicitly set, encoding defaults to disabled.</para>
      <table rules="all">
        <caption>Compression Headers</caption>
        <thead>
          <tr>
            <td>Header Type</td>
            <td>Name</td>
            <td>Value</td>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td>HTTP/1.1 Request</td>
            <td>Accept-Encoding</td>
            <td>gzip</td>
          </tr>
          <tr>
            <td>HTTP/1.1 Response</td>
            <td>Content-Encoding</td>
            <td>gzip</td>
          </tr>
        </tbody>
      </table>
    </section>
    <section>
      <title>API Version </title>
      <para>The IdM API uses a URI versioning scheme. The first element of the path contains the
        target version identifier (e.g. https://idm.api.rackspace.com/v1.0/...) All requests (except
        to query for version - see below) must contain a target version. Any features or
        functionality changes that would necessitate a break in API-compatibility will require a new
        version, which will result in the URI version being updated accordingly. When new API
        versions are released, older versions will be marked as <code>Deprecated</code>. Rackspace
        will work with developers and partners to ensure there is adequate time to migrate to the
        new version before deprecated versions are discontinued. </para>
      <section>
        <title>List Versions </title>
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &GET; </td>
              <td colspan="4">https://idm.api.rackspace.com/</td>
              <td colspan="3">Retrieve a list of IdM API versions.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
        <simpara>&ERROR_CODES; badRequest (<errorcode>400</errorcode>), idmFault
            (<errorcode>500</errorcode>), serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        <simpara>Your application can programmatically determine available API versions by
          performing a <command>GET</command> on the root URL
          (https://idm.api.rackspace.com/).</simpara>
        &NO_REQUEST;
        <example>
          <title>XML Versions Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/versions.xml" parse="text"/>
</programlisting>
        </example>
      </section>
      <section>
        <title>Get Version Details </title>
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &GET; </td>
              <td colspan="4">https://idm.api.rackspace.com/v1.0/</td>
              <td colspan="3">Retrieve API Version details</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
        <simpara>&ERROR_CODES; badRequest (<errorcode>400</errorcode>), idmFault
            (<errorcode>500</errorcode>), serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        <simpara>You can also obtain additional information about a specific version by performing a
            <command>GET</command> on the base version URL (e.g.
          https://idm.api.rackspace.com/v1.0). Version request URLs should always end with a
          trailing slash (/). If the slash is omitted, the server may respond with a 302 redirection
          request. Format extensions may be placed after the slash (e.g.
          https://idm.api.rackspace.com/v1.0/.xml).</simpara>
        &NO_REQUEST;
        <example>
          <title>XML Version Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/version.xml" parse="text"/>
</programlisting>
        </example>
        <simpara>The detailed version response contains a pointer to both the human readable and a
          machine processable description of the API service. The machine processable description is
          written in the Web Application Description Language (WADL).</simpara>
      </section>
    </section>
    <section>
      <title>Faults</title>
      <para>When an error occurs the system will return an HTTP error response code denoting the
        type of error. The system will also return additional information about the fault in the
        body of the response. </para>
      <example>
        <title>XML Fault Response</title>
        <programlisting language="xml">
<xi:include href="../../formattedsamples/idm_fault.xml" parse="text"/>
</programlisting>
      </example>
      <example>
        <title>JSON Fault Response</title>
        <programlisting language="javascript">
<xi:include href="../../formattedsamples/idm_fault.json" parse="text"/>
</programlisting>
      </example>
      <para>The error code is returned in the body of the response for convenience. The message
        section returns a human readable message. The details section is optional and may contain
        useful information for tracking down an error (e.g a stack trace). </para>
      <para>The root element of the fault (e.g. idmFault) may change depending on the type of error.
        The following is an example of an itemNotFound error. </para>
      <example>
        <title>XML Not Found Fault</title>
        <programlisting language="xml">
<xi:include href="../../formattedsamples/item_not_found.xml" parse="text"/>
</programlisting>
      </example>
      <example>
        <title>JSON Not Found Fault</title>
        <programlisting language="javascript">
<xi:include href="../../formattedsamples/item_not_found.json" parse="text"/>
</programlisting>
      </example>
      <para> The following is a list of possible fault types along with their associated error
        codes. </para>
      <table rules="all">
        <caption>Fault Types</caption>
        <thead>
          <tr>
            <td>Fault Element</td>
            <td>Associated Error Code</td>
            <td>Expected in All Requests</td>
          </tr>
        </thead>
        <tbody>
          <tr align="center">
            <td>idmFault</td>
            <td>500, 400</td>
            <td> &CHECK; </td>
          </tr>
          <tr align="center">
            <td>serviceUnavailable</td>
            <td>503</td>
            <td> &CHECK; </td>
          </tr>
          <tr align="center">
            <td>unauthorized</td>
            <td>401</td>
            <td> &CHECK; </td>
          </tr>
          <tr align="center">
            <td>badRequest</td>
            <td>400</td>
            <td> &CHECK; </td>
          </tr>
          <tr align="center">
            <td>passwordValidation</td>
            <td>400</td>
            <td/>
          </tr>
          <tr align="center">
            <td>userDisabled</td>
            <td>403</td>
            <td/>
          </tr>
          <tr align="center">
            <td>forbidden</td>
            <td>403</td>
            <td/>
          </tr>
          <tr align="center">
            <td>itemNotFound</td>
            <td>404</td>
            <td/>
          </tr>
          <tr align="center">
            <td>clientConflict</td>
            <td>409</td>
            <td/>
          </tr>
          <tr align="center">
            <td>customerConflict</td>
            <td>409</td>
            <td/>
          </tr>
          <tr align="center">
            <td>emailConflict</td>
            <td>409</td>
            <td/>
          </tr>
          <tr align="center">
            <td>usernameConflict</td>
            <td>409</td>
            <td/>
          </tr>
        </tbody>
      </table>
      <para>From an XML schema perspective, all API faults are extensions of the base fault type
          <type>idmFault</type>. When working with a system that binds XML to actual classes (such
        as JAXB), one should be capable of using <type>idmFault</type> as a “catch-all” if
        there&apos;s no interest in distinguishing between individual fault types. </para>
    </section>
  </chapter>
  <chapter>
    <title>Service Developer Operations</title>
    <section>
      <title>Overview</title>
      <para>The operations described in this chapter allow service developers to get and validate
        access tokens, manage users, manage clients, and password related operations (get password
        rules, valid password). </para>
    </section>
    <section>
      <title>Token Operations</title>
      <section>
        <title>Authenticate</title>
        <informaltable rules="all">
          &URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &POST; </td>
              <td colspan="1">/token</td>
              <td colspan="4">Authenticate to generate a token and a service catalog.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue>, <returnvalue>203</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), userDisabled
            (<errorcode>403</errorcode>), badRequest (<errorcode>400</errorcode>), idmFault
            (<errorcode>500</errorcode>), serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        <example>
          <title>XML Auth Request</title>
          <programlisting language="xml">
 <xi:include href="../../formattedsamples/auth_credentials.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Auth Request</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/auth_credentials.json" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>XML Auth Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/auth.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Auth Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/auth.json" parse="text"/>
</programlisting>
        </example>
      </section>
      <section>
        <title>Validate Token</title>
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &GET; </td>
              <td colspan="4"
                  >/token/<parameter>tokenId</parameter>?belongsTo=<returnvalue>Username</returnvalue>&amp;clientId=<returnvalue>ClientId</returnvalue></td>
              <td colspan="3">Check that a token is valid and that it belongs to a particular user
                and return the permissions relevant to a particular client.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue>, <returnvalue>203</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), forbidden
            (<returnvalue>403</returnvalue>), userDisabled(<returnvalue>403</returnvalue>),
          badRequest (<errorcode>400</errorcode>), itemNotFound (<errorcode>404</errorcode>),
            idmFault(<returnvalue>500</returnvalue>),
            serviceUnavailable(<returnvalue>503</returnvalue>)</simpara>
        &NO_REQUEST;
        <example>
          <title>XML Validate Token Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/validatetoken.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Validate Token Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/validatetoken.json" parse="text"/>
</programlisting>
        </example>
      </section>
      <section>
        <title>Revoke Token</title>
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &DELETE; </td>
              <td colspan="4">/token/<parameter>tokenId</parameter></td>
              <td colspan="3"> Revoke an existing token.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>204</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), forbidden
            (<returnvalue>403</returnvalue>), userDisabled(<returnvalue>403</returnvalue>),
          badRequest (<errorcode>400</errorcode>), itemNotFound (<errorcode>404</errorcode>),
            idmFault(<returnvalue>500</returnvalue>),
            serviceUnavailable(<returnvalue>503</returnvalue>)</simpara>
        &NO_REQUEST;
      </section>
      <section>
        <title>Get Token Permissions</title>
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &GET; </td>
              <td colspan="4">/token/<parameter>tokenId</parameter>/permissions</td>
              <td colspan="3"> Gets a list of permissions for the token.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), forbidden
            (<returnvalue>403</returnvalue>), userDisabled(<returnvalue>403</returnvalue>),
          badRequest (<errorcode>400</errorcode>), itemNotFound (<errorcode>404</errorcode>),
            idmFault(<returnvalue>500</returnvalue>),
            serviceUnavailable(<returnvalue>503</returnvalue>)</simpara>
        &NO_REQUEST;
        <example>
          <title>XML Permission List Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/permissions.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Permission List Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/permissions.json" parse="text"/>
</programlisting>
        </example>
      </section>
    </section>
    <section>
      <title>Customer Operations </title>
      <section>
        <title>Set Customer Lock Status </title>
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &PUT; </td>
              <td colspan="4">/customers/<parameter>customerId</parameter>/actions/lock</td>
              <td colspan="3">Lock or unlock a customer.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>204</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>),
            forbidden(<errorcode>403</errorcode>), itemNotFound(<errorcode>404</errorcode>),
          badRequest (<errorcode>400</errorcode>), idmFault (<errorcode>500</errorcode>),
            serviceUnavailable(<errorcode>503</errorcode>)</simpara>
      </section>
      
      
      <section>
          <title>Reset client secret</title>
          <informaltable rules="all">
            &LONG_URI_REFHEAD;
            <tbody>
              <tr>
                <td colspan="1"> &POST; </td>
                <td colspan="4"
                  >/customers/<parameter>customerId</parameter>/clients/<parameter>clientId</parameter>/secret</td>
                <td colspan="3">Reset client secret.</td>         
              </tr>
            </tbody>
          </informaltable>
          <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
          <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), itemNotFound
            (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
            serviceUnavailable(<errorcode>503</errorcode>)</simpara>
            &NO_REQUEST;
          <example>     
            <title>XML Response</title>
            <programlisting language="xml">
<xi:include href="../../formattedsamples/client-credentials-response.xml" parse="text"/>
</programlisting>
          </example>
          <example>
            <title>JSON Response</title>
            <programlisting language="javascript">
<xi:include href="../../formattedsamples/client-credentials-response.json" parse="text"/>
</programlisting>
          </example>       
        </section>
    </section>
    <section>
      <title>User Operations</title>
      <section>
        <title>Create the First User</title>
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &POST; </td>
              <td colspan="4">/users</td>
              <td colspan="3">Create a new customer entry and add the user as an Admin user.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>The Username attribute, CustomerId attribute and Password element are required in
          this request. If a blank password is passed in the Password element, the API will generate
          a random password for the user. The prefLanguage attribute defaults to "US_en" and the
          timeZone attribute defaults to "America/Chicago".</simpara>
        <simpara>&CODES;<returnvalue>201</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), passwordValidation(<errorcode>400</errorcode>), forbidden
            (<errorcode>403</errorcode>), itemNotFound (<errorcode>404</errorcode>),
            customerConflict(<errorcode>409</errorcode>),
            usernameConflict(<errorcode>409</errorcode>), emailConflict(<errorcode>409</errorcode>),
          idmFault (<errorcode>500</errorcode>),
          serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        <example>
          <title>XML User Request</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/adduser.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON User Request</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/adduser.json" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>XML User Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/addfirstuserresponse.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON User Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/addfirstuserresponse.json" parse="text"/>
</programlisting>
        </example>
      </section>
      <section>
        <title>Create a User</title>
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &POST; </td>
              <td colspan="4">/customers/<parameter>customerId</parameter>/users</td>
              <td colspan="3">Create a new user. If a blank password is passed in, the API generates
                a random password for the user.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>The Username attribute and Password element are required in this request. If a
          blank password is passed in the Password element, the API will generate a random password
          for the user. The prefLanguage attribute defaults to "US_en" and the timeZone attribute
          defaults to "America/Chicago".</simpara>
        <simpara>&CODES;<returnvalue>201</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), passwordValidation(<errorcode>400</errorcode>), forbidden
            (<errorcode>403</errorcode>), itemNotFound (<errorcode>404</errorcode>),
            usernameConflict(<errorcode>409</errorcode>), emailConflict(<errorcode>409</errorcode>),
          idmFault (<errorcode>500</errorcode>),
          serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        <example>
          <title>XML User Request</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/adduser.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON User Request</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/adduser.json" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>XML User Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/adduserresponse.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON User Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/addeduser.json" parse="text"/>
</programlisting>
        </example>
      </section>
      <section>
        <title>Get a User</title>
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &GET; </td>
              <td colspan="4"
                  >/customers/<parameter>customerId</parameter>/users/<parameter>userId</parameter></td>
              <td colspan="3">Get a user. </td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), itemNotFound
            (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
            serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        &NO_REQUEST;
        <example>
          <title>XML User Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/getuser.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON User Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/getuser.json" parse="text"/>
</programlisting>
        </example>
      </section>
      <section>
        <title>Get a User by Mosso ID</title>
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &GET; </td>
              <td colspan="4"
                >/mosso/<parameter>mossoId</parameter></td>
              <td colspan="3">Get a user with mossoId. </td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
          (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), itemNotFound
          (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
          serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        &NO_REQUEST;
        <example>
          <title>XML User Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/getuser-with-mosso-id.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON User Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/getuser-with-mosso-id.json" parse="text"/>
</programlisting>
        </example>       
      </section>
      <section>
        <title>Get a User by NAST ID</title>
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &GET; </td>
              <td colspan="4"
                >/nast/<parameter>nastId</parameter></td>
              <td colspan="3">Get a user with a nastId. </td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
          (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), itemNotFound
          (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
          serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        &NO_REQUEST;
        <example>
          <title>XML User Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/getuser-with-nast-id.xml" parse="text"/>
          </programlisting>
        </example>
        <example>
          <title>JSON User Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/getuser-with-nast-id.json" parse="text"/>
</programlisting>
        </example>       
      </section>
      <section>
        <title>Get a User by UserName</title>
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &GET; </td>
              <td colspan="4"
                >/users/<parameter>username</parameter></td>
              <td colspan="3">Get a user with a username. </td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
          (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), itemNotFound
          (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
          serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        &NO_REQUEST;
        <example>
          <title>XML User Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/getuser-with-username.xml" parse="text"/>
          </programlisting>
        </example>
        <example>
          <title>JSON User Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/getuser-with-username.json" parse="text"/>
</programlisting>
        </example>       
      </section>
      <section>
        <title>Update a User</title>
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &PUT; </td>
              <td colspan="4"
                  >/customers/<parameter>customerId</parameter>/users/<parameter>userId</parameter></td>
              <td colspan="3">Update a user. </td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue>, <returnvalue>203</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden(<errorcode>403</errorcode>), itemNotFound
            (<errorcode>404</errorcode>), emailConflict (409), idmFault
          (<errorcode>500</errorcode>), serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        <example>
          <title>XML User Request</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/updateuser.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON User Request</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/updateuser.json" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>XML User Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/updateduser.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON User Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/updateduser.json" parse="text"/>
</programlisting>
        </example>
      </section>
      <section>
        <title>Soft Delete a User</title>
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1">&PUT; </td>
              <td colspan="4"
                  >/customers/<parameter>customerId</parameter>/users/<parameter>userId</parameter>/softDelete</td>
              <td colspan="3">Set a User's softDeleted Flag</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden(<errorcode>403</errorcode>), itemNotFound
            (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
            serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        <example>
          <title>XML User Soft Delete Request</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/userWithOnlySoftDeleted.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON User Soft Delete Request</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/userWithOnlySoftDeleted.json" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>XML User SoftDeleted Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/userWithOnlySoftDeleted.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON User SoftDeleted Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/userWithOnlySoftDeleted.json" parse="text"/>
</programlisting>
        </example>
      </section>
      <section>
        <title>Delete User</title>
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1">&DELETE; </td>
              <td colspan="4"
                  >/customers/<parameter>customerId</parameter>/users/<parameter>userId</parameter></td>
              <td colspan="3">Delete a user. </td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>204</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden(<errorcode>403</errorcode>), itemNotFound
            (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
            serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        &NO_REQUEST;
      </section>
      <section>
        <title>Get User List</title>
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &GET; </td>
              <td colspan="4"
                  >/customers/<parameter>customerId</parameter>/users/?offset=<parameter>x</parameter>&amp;limit=<parameter>y</parameter></td>
              <td colspan="3"> Gets a page of users where <parameter>x</parameter> is the offset and
                  <parameter>y</parameter> is the limit of records to return.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden(<errorcode>403</errorcode>), itemNotFound
            (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
            serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        &NO_REQUEST;
        <example>
          <title>XML User List Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/users.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON User List Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/users.json" parse="text"/>
</programlisting>
        </example>
      </section>
      <section>
        <title>Add Role for a User</title>
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &PUT; </td>
              <td colspan="4"
                  >/customers/<parameter>customerId</parameter>/users/<parameter>userId</parameter>/roles/<parameter>roleName</parameter></td>
              <td colspan="3">Add a role to a user.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;204</simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden(<errorcode>403</errorcode>), itemNotFound
            (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
            serviceUnavailable(<errorcode>503</errorcode>)</simpara>
      </section>
      <section>
        <title>Delete Role from a User</title>
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &DELETE; </td>
              <td colspan="4"
                  >/customers/<parameter>customerId</parameter>/users/<parameter>userId</parameter>/roles/<parameter>roleName</parameter></td>
              <td colspan="3">Delete a role from a user.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;204</simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden(<errorcode>403</errorcode>), itemNotFound
            (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
            serviceUnavailable(<errorcode>503</errorcode>)</simpara>
      </section>
      <section>
        <title>Get a user's roles</title>
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &GET; </td>
              <td colspan="4"
                  >/customers/<parameter>customerId</parameter>/users/<parameter>userId</parameter>/roles/</td>
              <td colspan="3">Get a user&apos;s roles</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden(<errorcode>403</errorcode>), itemNotFound
            (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
            serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        <example>
          <title>XML User Roles Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/roles.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON User Roles Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/roles.json" parse="text"/>
</programlisting>
        </example>
      </section>
      <section>
        <title>Generate/Reset Auth Service Key</title>
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &POST; </td>
              <td colspan="4"
                  >/customers/<parameter>customerId</parameter>/users/<parameter>username</parameter>/key</td>
              <td colspan="3">Generate or reset a user's Auth key. </td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue>, <returnvalue>203</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden(<errorcode>403</errorcode>), itemNotFound
            (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
            serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        &NO_REQUEST;
        <example>
          <title>XML User Auth Key Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/user_api_key.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON User Auth Key Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/user_api_key.json" parse="text"/>
</programlisting>
        </example>
      </section>
      <section>
        <title>Set User Lock</title>
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &PUT; </td>
              <td colspan="4"
                  >/customers/<parameter>customerId</parameter>/users/<parameter>username</parameter>/lock</td>
              <td colspan="3"> Set a user's lock</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>204</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden(<errorcode>403</errorcode>), itemNotFound
            (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
            serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        <example>
          <title>XML User Lock Request</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/userWithOnlyLock.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON User Lock Request</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/userWithOnlyLock.json" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>XML User Lock Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/userWithOnlyLock.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON User Lock Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/userWithOnlyLock.json" parse="text"/>
</programlisting>
        </example>
      </section>
      <section>
        <title>Set User Password</title>
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &PUT; </td>
              <td colspan="4"
                  >/customers/<parameter>customerId</parameter>/users/<parameter>username</parameter>/password?recovery=<parameter>boolean</parameter></td>
              <td colspan="3"> Sets a user's password.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>This method takes an optional boolean query parameter (recovery). True indicates
          that the password change is for Forget Password and will not require the old password.
          False is the normal reset route when an old password is used to reset the
          password.</simpara>
        <simpara>&CODES;<returnvalue>204</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), passwordValidation(<errorcode>400</errorcode>),
            forbidden(<errorcode>403</errorcode>), itemNotFound (<errorcode>404</errorcode>),
          idmFault (<errorcode>500</errorcode>),
          serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        &NO_REQUEST;
        <example>
          <title>XML User Password Request</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/user_credentials.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON User Password Request</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/user_credentials.json" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>XML User Password Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/user_password.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON User Password Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/user_password.json" parse="text"/>
</programlisting>
        </example>
      </section>
      <section>
        <title>Reset User Password</title>
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &POST; </td>
              <td colspan="4"
                  >/customers/<parameter>customerId</parameter>/users/<parameter>username</parameter>/password</td>
              <td colspan="3">Reset a user&apos;s password.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden(<errorcode>403</errorcode>), itemNotFound
            (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
            serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        &NO_REQUEST;
        <example>
          <title>XML Reset User Password Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/reset_user_password.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Reset User Password Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/reset_user_password.json" parse="text"/>
</programlisting>
        </example>
      </section>
      <section>
        <title>Get a User Password</title>
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &GET; </td>
              <td colspan="4"
                  >/customers/<parameter>customerId</parameter>/users/<parameter>userId</parameter>/password</td>
              <td colspan="3">Get a user's password.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), itemNotFound
            (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
            serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        &NO_REQUEST;
        <example>
          <title>XML User Password Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/user_password.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON User Passwrord Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/user_password.json" parse="text"/>
</programlisting>
        </example>
      </section>
      <section>
        <title>Initiate Forget Password</title>
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &POST; </td>
              <td colspan="4"
                  >/customers/<parameter>customerId</parameter>/users/<parameter>username</parameter>/password/recoveryEmail</td>
              <td colspan="3">Send a request to recover a user&apos;s password.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>204</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden(<errorcode>403</errorcode>), itemNotFound
            (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
            serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        <example>
          <title>XML Initiate Forgot Password Request</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/forgot_password.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Initiate Forgot Password Request</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/forgot_password.json" parse="text"/>
</programlisting>
        </example>
      </section>
      <section>
        <title>Get Password Recovery Token</title>
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &POST; </td>
              <td colspan="4"
                  >/customers/<parameter>customerId</parameter>/users/<parameter>username</parameter>/password/recoveryToken</td>
              <td colspan="3">Get a token that can be used to reset a user's password.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>204</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden(<errorcode>403</errorcode>), itemNotFound
            (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
            serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        &NO_REQUEST;
        <example>
          <title>XML Password Recovery Token Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/token.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Password Recovery Token Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/token.json" parse="text"/>
</programlisting>
        </example>
      </section>
      <section>
        <title>Set User Status</title>
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &PUT; </td>
              <td colspan="4"
                  >/customers/<parameter>customerId</parameter>/users/<parameter>username</parameter>/status</td>
              <td colspan="3"> Set a user&apos;s status to ACTIVE or INACTIVE </td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>204</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden(<errorcode>403</errorcode>), itemNotFound
            (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
            serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        <example>
          <title>XML User Status Request</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/userWithOnlyStatus.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON User Status Request</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/userWithOnlyStatus.json" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>XML User Status Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/userWithOnlyStatus.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON User Status Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/userWithOnlyStatus.json" parse="text"/>
</programlisting>
        </example>
      </section>
      <section>
        <title>Set User Secret</title>
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &PUT; </td>
              <td colspan="4"
                  >/customers/<parameter>customerId</parameter>/users/<parameter>username</parameter>/secret</td>
              <td colspan="3">Sets a user&apos;s secret question and answer.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden(<errorcode>403</errorcode>), itemNotFound
            (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
            serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        <example>
          <title>XML User Secret Request</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/user_secret.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON User Secret Request</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/user_secret.json" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>XML User Secret Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/user_secret.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON User Secret Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/user_secret.json" parse="text"/>
</programlisting>
        </example>
      </section>
    </section>
    <section>
      <title> Authentication Operations </title>
      
      <section>
        <title>Authenticate a user by Mosso ID</title>
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &POST; </td>
              <td colspan="4"
                >/auth/mosso</td>
              <td colspan="3">Authenticate a user by mosso Id. Pass in the mosso credentials shown below.</td>         
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
          (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), itemNotFound
          (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
          serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        
        <example>
          <title>Mosso Credentials</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/mossoCredentials.xml" parse="text"/>
</programlisting>
        </example>
        <example>     
          <title>XML Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/mosso-id-authentication-response.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/mosso-id-authentication-response.json" parse="text"/>
</programlisting>
        </example>       
      </section>
      
      <section>
        <title>Authenticate a user by NAST ID</title>
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &POST; </td>
              <td colspan="4"
                >/auth/nast</td>
              <td colspan="3">Authenticate a user by nast Id. Pass in the nast credentials shown below.</td>         
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
          (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), itemNotFound
          (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
          serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        
        <example>
          <title>NAST Credentials</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/nastCredentials.xml" parse="text"/>
</programlisting>
        </example>
        <example>     
          <title>XML Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/mosso-id-authentication-response.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/mosso-id-authentication-response.json" parse="text"/>
</programlisting>
        </example>       
      </section>
      
      <section>
        <title>Authenticate a user by Username</title>
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &POST; </td>
              <td colspan="4"
                >/auth</td>
              <td colspan="3">Authenticate a user by username. Pass in the username credentials shown below.</td>         
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
          (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), itemNotFound
          (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
          serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        
        <example>
          <title>User Data</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/usernameCredentials.xml" parse="text"/>
</programlisting>
        </example>
        <example>     
          <title>XML Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/mosso-id-authentication-response.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/mosso-id-authentication-response.json" parse="text"/>
</programlisting>
        </example>       
      </section>    
    </section>
    
    
    
    <section>
      <title>Customer Application Operations </title>
      <section>
        <title>Add a Customer Application</title>
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &POST; </td>
              <td colspan="4">/customers/<parameter>customerId</parameter>/clients</td>
              <td colspan="3">Add a client.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>201</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), itemNotFound
            (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
            serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        <example>
          <title>XML Add Client Request</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/addclient.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Add Client Request</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/addclient.json" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>XML Add Client Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/addedclient.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Add Client Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/addedclient.json" parse="text"/>
</programlisting>
        </example>
      </section>
      <section>
        <title>Get a Customer Application</title>
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &GET; </td>
              <td colspan="4"
                  >/customers/<parameter>customerId</parameter>/clients/<parameter>clientId</parameter></td>
              <td colspan="3">Get a client.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), itemNotFound
            (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
            serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        <example>
          <title>XML Get Client Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/client.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Get Client Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/client.json" parse="text"/>
</programlisting>
        </example>
      </section>
      <section>
        <title>Get All Applications for a Customer</title>
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &GET; </td>
              <td colspan="4">/customers/<parameter>customerId</parameter>/clients/</td>
              <td colspan="3">Get all clients for <parameter>customerId</parameter></td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), itemNotFound
            (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
            serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        <example>
          <title>XML Get Clients Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/clients.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Get Clients Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/clients.json" parse="text"/>
</programlisting>
        </example>
      </section>
      <section>
        <title>Soft Delete a Customer Application</title>
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &DELETE; </td>
              <td colspan="4"
                  >/customers/<parameter>customerId</parameter>/clients/<parameter>clientId</parameter>/softdeleted</td>
              <td colspan="3">Delete a customer application.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>204</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), itemNotFound
            (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
            serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        <example>
          <title>XML Soft Delete Customer Application Request</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/clientWithOnlySoftDeleted.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Soft Delete Customer Application Request</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/clientWithOnlySoftDeleted.json" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>XML Soft Delete Customer Application Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/clientWithOnlySoftDeleted.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Soft Delete Customer Application Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/clientWithOnlySoftDeleted.json" parse="text"/>
</programlisting>
        </example>
      </section>
      <section>
        <title>Delete a customer application</title>
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &DELETE; </td>
              <td colspan="4"
                  >/customers/<parameter>customerId</parameter>/clients/<parameter>clientId</parameter></td>
              <td colspan="3">Delete a client.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>204</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), itemNotFound
            (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
            serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        &NO_REQUEST;
      </section>
      <section>
        <title>Get Permissions for a Customer Application</title>
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &GET; </td>
              <td colspan="4"
                  >/customers/<parameter>customerId</parameter>/clients/<parameter>clientId</parameter>/permissions</td>
              <td colspan="3">Get all permissions for a <parameter>clientId</parameter> of a
                  <parameter>customerId</parameter></td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), itemNotFound
            (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
            serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        &NO_REQUEST;
        <example>
          <title>XML Permissions Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/permissions.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Permissions Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/permissions.json" parse="text"/>
</programlisting>
        </example>
      </section>
      <section>
        <title>Get Granted Permissions for a Customer Application</title>
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &GET; </td>
              <td colspan="4"
                  >/customers/<parameter>customerId</parameter>/clients/<parameter>clientId</parameter>/permissions/granted</td>
              <td colspan="3">Get all permissions for a <parameter>clientId</parameter> of a
                  <parameter>customerId</parameter></td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), itemNotFound
            (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
            serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        &NO_REQUEST;
        <example>
          <title>XML Granted Permissions Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/grantedpermissions.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Granted Permissions Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/grantedpermissions.json" parse="text"/>
</programlisting>
        </example>
      </section>
      <section>
        <title>Get Defined Permissions for a Customer Application</title>
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &GET; </td>
              <td colspan="4"
                  >/customers/<parameter>customerId</parameter>/clients/<parameter>clientId</parameter>/permissions/defined</td>
              <td colspan="3">Get all permissions for a <parameter>clientId</parameter> of a
                  <parameter>customerId</parameter></td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), itemNotFound
            (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
            serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        &NO_REQUEST;
        <example>
          <title>XML Defined Permissions Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/definedpermissions.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Defined Permissions Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/definedpermissions.json" parse="text"/>
</programlisting>
        </example>
      </section>
      <section>
        <title>Add a Defined Permission for a Customer Application</title>
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &POST; </td>
              <td colspan="4"
                  >/customers/<parameter>customerId</parameter>/clients/<parameter>clientId</parameter>/permissions/defined</td>
              <td colspan="3">Add a resource for a <parameter>clientId</parameter> of a
                  <parameter>customerId</parameter></td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>201</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), itemNotFound
            (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
            serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        <example>
          <title>XML Add a Defined Permission Request</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/permission.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Add a Defined Permission Request</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/permission.json" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>XML Add a Defined Permission Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/permission.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Add a Defined Permission Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/permission.json" parse="text"/>
</programlisting>
        </example>
      </section>
      <section>
        <title>Get a Defined Permission for a Customer Application</title>
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &GET; </td>
              <td colspan="4"
                  >/customers/<parameter>customerId</parameter>/clients/<parameter>clientId</parameter>/permissions/defined/<parameter>permissionId</parameter></td>
              <td colspan="3">Get a <parameter>permissionId</parameter> for a
                  <parameter>clientId</parameter> of a <parameter>customerId</parameter></td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), itemNotFound
            (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
            serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        &NO_REQUEST;
        <example>
          <title>XML Get Defined Permission Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/permission.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Get Defined Permission Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/permission.json" parse="text"/>
</programlisting>
        </example>
      </section>
      <section>
        <title>Update a Defined Permission for a Customer Application</title>
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &PUT; </td>
              <td colspan="4"
                  >/customers/<parameter>customerId</parameter>/clients/<parameter>clientId</parameter>/permissions/defined/<parameter>permissionId</parameter></td>
              <td colspan="3">Update a defined permission for a <parameter>clientId</parameter> of a
                  <parameter>customerId</parameter></td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>201</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), itemNotFound
            (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
            serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        <example>
          <title>XML Update a Defined Permission Request</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/permission.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Update a Defined Permission Request</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/permission.json" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>XML Update a Defined Permission Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/permission.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Update a Defined Permission Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/permission.json" parse="text"/>
</programlisting>
        </example>
      </section>
      <section>
        <title>Delete a Defined Permission for a Customer Application</title>
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &DELETE; </td>
              <td colspan="4"
                  >/customers/<parameter>customerId</parameter>/clients/<parameter>clientId</parameter>/permissions/defined/<parameter>permissionId</parameter></td>
              <td colspan="3">Delete a defined permission for a <parameter>clientId</parameter> of a
                  <parameter>customerId</parameter></td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>204</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), itemNotFound
            (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
            serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        &NO_REQUEST;
      </section>
    </section>
    <section>
      <title>Password Operations </title>
      <section>
        <title>Get Password Rules</title>
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &GET; </td>
              <td colspan="4">/passwordrules</td>
              <td colspan="3">Get Password Rules</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), idmFault
            (<errorcode>500</errorcode>), serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        <example>
          <title>XML Get Password Rules Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/password_rule_results.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Get Password Rules Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/password_rule_results.json" parse="text"/>
</programlisting>
        </example>
      </section>
      <section>
        <title>Password validation check</title>
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &GET; </td>
              <td colspan="4">/passwordrules/validation/<parameter>password</parameter></td>
              <td colspan="3">Check Password Validation for <parameter>password</parameter></td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), itemNotFound
            (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
            serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        <example>
          <title>XML Password Validation Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/password_validation.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Password Validation Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/password_validation.json" parse="text"/>
</programlisting>
        </example>
      </section>
    </section>
    
    <section>
        <title>Admin Operations </title>
        <section>
          <title>Get Base URLs</title>
          <informaltable rules="all">
            &LONG_URI_REFHEAD;
            <tbody>
              <tr>
                <td colspan="1"> &GET; </td>
                <td colspan="4">/baseurls</td>
                <td colspan="3">Get base urls</td>
              </tr>
            </tbody>
          </informaltable>
          <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
          <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), idmFault
            (<errorcode>500</errorcode>), serviceUnavailable(<errorcode>503</errorcode>), itemNotFound
            (<errorcode>404</errorcode>)</simpara>
          <example>
            <title>XML Get BaseURLs Response</title>
            <programlisting language="xml">
<xi:include href="../../formattedsamples/base_urls_response.xml" parse="text"/>
</programlisting>
          </example>
          <example>
            <title>JSON Get Password Rules Response</title>
            <programlisting language="javascript">
<xi:include href="../../formattedsamples/base_urls_response.json" parse="text"/>
</programlisting>
          </example>
        </section>
      
        <section>
          <title>Add Base URL</title>
          <informaltable rules="all">
            &LONG_URI_REFHEAD;
            <tbody>
              <tr>
                <td colspan="1"> &POST; </td>
                <td colspan="4">/baseurls</td>
                <td colspan="3">Add base urls. Pass the base url data (shown below).</td>
              </tr>
            </tbody>
          </informaltable>
          <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
          <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), idmFault
            (<errorcode>500</errorcode>), serviceUnavailable(<errorcode>503</errorcode>), itemNotFound
            (<errorcode>404</errorcode>)</simpara>
          <example>
            <title>Data to be passed in</title>
            <programlisting language="xml">
<xi:include href="../../formattedsamples/add-baseurl-input.xml" parse="text"/>
</programlisting>
          </example>
        </section>
        
        <section>
          <title>Get a Base URL</title>
          <informaltable rules="all">
            &LONG_URI_REFHEAD;
            <tbody>
              <tr>
                <td colspan="1"> &GET; </td>
                <td colspan="4">/baseurls/<parameter>baseUrlId</parameter></td>
                <td colspan="3">Get a base url</td>
              </tr>
            </tbody>
          </informaltable>
          <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
          <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), idmFault
            (<errorcode>500</errorcode>), serviceUnavailable(<errorcode>503</errorcode>), itemNotFound
            (<errorcode>404</errorcode>)</simpara>
          <example>
            <title>XML Response</title>
            <programlisting language="xml">
                  <xi:include href="../../formattedsamples/base_url_response.xml" parse="text"/>
            </programlisting>
          </example>
          <example>
            <title>JSON Response</title>
            <programlisting language="xml">
                  <xi:include href="../../formattedsamples/base_url_response.json" parse="text"/>
            </programlisting>
          </example>
        </section>
        
        <section>
          <title>Delete a Base URL</title>
          <informaltable rules="all">
            &LONG_URI_REFHEAD;
            <tbody>
              <tr>
                <td colspan="1"> &DELETE; </td>
                <td colspan="4">/baseurls/<parameter>baseUrlId</parameter></td>
                <td colspan="3">Delete a base url</td>
              </tr>
            </tbody>
          </informaltable>
          <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
          <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), idmFault
            (<errorcode>500</errorcode>), serviceUnavailable(<errorcode>503</errorcode>), itemNotFound
            (<errorcode>404</errorcode>)</simpara>
        </section>
        
        
        <section>
          <title>Get Base Url Refs</title>
          <informaltable rules="all">
            &LONG_URI_REFHEAD;
            <tbody>
              <tr>
                <td colspan="1"> &GET; </td>
                <td colspan="4">/users/<parameter>username</parameter>/baseurlrefs</td>
                <td colspan="3">Gets a base url</td>
              </tr>
            </tbody>
          </informaltable>
          <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
          <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), idmFault
            (<errorcode>500</errorcode>), serviceUnavailable(<errorcode>503</errorcode>), itemNotFound
            (<errorcode>404</errorcode>)</simpara>
          <example>
            <title>XML response</title>
            <programlisting language="xml">
<xi:include href="../../formattedsamples/baseURLRefs.xml" parse="text"/>
</programlisting>
          </example>
          <example>
            <title>JSON response</title>
            <programlisting language="xml">
<xi:include href="../../formattedsamples/baseURLRefs.json" parse="text"/>
</programlisting>
          </example>
        </section>
        
        <section>
          <title>Add Base URL Ref</title>
          <informaltable rules="all">
            &LONG_URI_REFHEAD;
            <tbody>
              <tr>
                <td colspan="1"> &PUT; </td>
                <td colspan="4">/users/<parameter>username</parameter>/baseurlrefs</td>
                <td colspan="3">Add base url Ref. Pass the base url ref data (shown below).</td>
              </tr>
            </tbody>
          </informaltable>
          <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
          <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), idmFault
            (<errorcode>500</errorcode>), serviceUnavailable(<errorcode>503</errorcode>), itemNotFound
            (<errorcode>404</errorcode>)</simpara>
          <example>
            <title>Data to be passed in</title>
            <programlisting language="xml">
<xi:include href="../../formattedsamples/add-baseurlRef-input.xml" parse="text"/>
</programlisting>
          </example>
        </section>
        
        <section>
          <title>Get Base URL Ref</title>
          <informaltable rules="all">
            &LONG_URI_REFHEAD;
            <tbody>
              <tr>
                <td colspan="1"> &GET; </td>
                <td colspan="4">/users/<parameter>username</parameter>/baseurlrefs/<parameter>baseUrlId</parameter></td>
                <td colspan="3">Get a base url.</td>
              </tr>
            </tbody>
          </informaltable>
          <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
          <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), idmFault
            (<errorcode>500</errorcode>), serviceUnavailable(<errorcode>503</errorcode>), itemNotFound
            (<errorcode>404</errorcode>)</simpara>
          <example>
            <title>XML Response</title>
            <programlisting language="xml">
<xi:include href="../../formattedsamples/base_url_ref_response.xml" parse="text"/>
</programlisting>
          </example>
          
          <example>
            <title>JSON Response</title>
            <programlisting language="xml">
<xi:include href="../../formattedsamples/base_url_ref_response.json" parse="text"/>
</programlisting>
          </example>
        
        </section>
        
        <section>
          <title>Delete a Base URL Ref</title>
          <informaltable rules="all">
            &LONG_URI_REFHEAD;
            <tbody>
              <tr>
                <td colspan="1"> &DELETE; </td>
                <td colspan="4">/users/<parameter>username</parameter>/baseurls/<parameter>baseUrlId</parameter></td>
                <td colspan="3">Delete a base url ref</td>
              </tr>
            </tbody>
          </informaltable>
          <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
          <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), idmFault
            (<errorcode>500</errorcode>), serviceUnavailable(<errorcode>503</errorcode>), itemNotFound
            (<errorcode>404</errorcode>)</simpara>
        </section>        
      
        <section>
          <title>Get Service catalog for user</title>
          <informaltable rules="all">
            &LONG_URI_REFHEAD;
            <tbody>
              <tr>
                <td colspan="1"> &GET; </td>
                <td colspan="4">/users/<parameter>username</parameter>/servicecatalog</td>
                <td colspan="3">Get Service Catalog for users.</td>
              </tr>
            </tbody>
          </informaltable>
          <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
          <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), idmFault
            (<errorcode>500</errorcode>), serviceUnavailable(<errorcode>503</errorcode>), itemNotFound
            (<errorcode>404</errorcode>)</simpara>
          <example>
            <title>XML Response</title>
            <programlisting language="xml">
<xi:include href="../../formattedsamples/service-catalog-response.xml" parse="text"/>
</programlisting>
          </example>
          
          <example>
            <title>JSON Response</title>
            <programlisting language="xml">
<xi:include href="../../formattedsamples/service-catalog-response.json" parse="text"/>
</programlisting>
          </example>
          
        </section>
          
      
    </section>
  </chapter>
</book>
