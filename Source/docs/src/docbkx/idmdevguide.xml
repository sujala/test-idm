<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE book [<!-- Some useful entities borrowed from HTML -->
    <!ENTITY ndash  "–">
    <!ENTITY mdash  "—">
    <!ENTITY hellip "…">

    <!-- Useful for describing APIs -->
    <!ENTITY GET    '<command xmlns="http://docbook.org/ns/docbook">GET</command>'>
    <!ENTITY PUT    '<command xmlns="http://docbook.org/ns/docbook">PUT</command>'>
    <!ENTITY POST   '<command xmlns="http://docbook.org/ns/docbook">POST</command>'>
    <!ENTITY DELETE '<command xmlns="http://docbook.org/ns/docbook">DELETE</command>'>


    <!ENTITY CHECK  '<inlinemediaobject xmlns="http://docbook.org/ns/docbook">
                 <imageobject>
                  <imagedata fileref="../../img/Check_mark_23x20_02.svg"
                             format="SVG" scale="60"/>
                </imageobject>
              </inlinemediaobject>'>
    <!ENTITY CODES       'Normal Response Code(s):'>
    <!ENTITY ERROR_CODES 'Error Response Code(s):'>
    <!ENTITY NO_REQUEST '<para xmlns="http://docbook.org/ns/docbook">
                          This operation does not require a request body.</para>'>
    <!ENTITY AUTH_HEADER '<para xmlns="http://docbook.org/ns/docbook">
    This operation requires an authorization header. See <xref linkend="authheadersection"/> for details.</para>'>
    <!ENTITY LONG_URI_REFHEAD '
          <thead xmlns="http://docbook.org/ns/docbook">
            <tr>
              <td colspan="1">Verb</td>
              <td colspan="4">URI</td>
              <td colspan="3">Description</td>
            </tr>
          </thead>'>
    <!ENTITY URI_REFHEAD '
          <thead xmlns="http://docbook.org/ns/docbook">
            <tr>
              <td colspan="1">Verb</td>
              <td colspan="1">URI</td>
              <td colspan="4">Description</td>
            </tr>
          </thead>'>
    <!ENTITY URI_HEADER '
          <thead xmlns="http://docbook.org/ns/docbook">
          <tr>
          <td colspan="1">Header Type</td>
          <td colspan="1">Name</td>
          <td colspan="4">Value</td>
          </tr>
          </thead>'>
]>
<book xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
  xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:svg="http://www.w3.org/2000/svg"
  xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:html="http://www.w3.org/1999/xhtml"
  xmlns:db="http://docbook.org/ns/docbook" version="5.0" status="draft">
  <title>Global Auth API Developer Guide</title>
  <info>
    <author>
      <personname>
        <firstname/>
        <surname/>
      </personname>
      <affiliation>
        <orgname>Rackspace</orgname>
      </affiliation>
    </author>
    <copyright>
      <year>2010</year>
      <year>2011</year>
      <holder>Rackspace Hosting, Inc.</holder>
    </copyright>
    <releaseinfo>API v1.0</releaseinfo>
    <productname>Global Auth API</productname>
    <pubdate>2011-08-17</pubdate>
    <legalnotice role="apache2">
      <annotation>
        <remark>Copyright details are filled in by the template.</remark>
      </annotation>
    </legalnotice>
    <abstract>
      <para> This document is intended for software developers interested in developing applications
        which utilizes Global Auth API System as the authentication engine. It includes details on
        how to integrate with Global Auth API. </para>
    </abstract>
  </info>
  <chapter>
    <title>Overview</title>
    <para>The Global Auth API allows Rackspace clients to obtain tokens that can be used to access resources
      in Rackspace. It also allows clients manage identities. This document is intended for: </para>
    <variablelist>
      <varlistentry>
        <term>Service Developers</term>
        <listitem>
          <para> Service developers are interested in writing clients for Global Auth API service. </para>
        </listitem>
      </varlistentry>
    </variablelist>
    <para> This Guide assumes the reader is familiar with RESTful web services, HTTP/1.1, and JSON
      and/or XML serialization formats. </para>
  </chapter>
  <chapter>
    <title>Concepts</title>
    <para> The Global Auth system has several key concepts that are important to understand: </para>
    <section>
      <title>Token</title>
      <para>This is an opaque string that grants a client the right to access one or more Applications. Tokens may be revoked at any time and are valid for a finite duration.</para>
    </section>
    <section>
      <title>User</title>
      <para>This is a type of client associated with a person that has access to Rackspace Applications. </para>
    </section>
    <section>
      <title>Application</title>
      <para>An application is a user interface or service API that a client can interact with to consume specific business functionality. e.g Control Panel, Customer Service, Billing Service, etc.</para>
    </section>
    <section>
      <title>Identity Profile</title>
      <para>This describes identity-related information about its associated customer. Examples include whether or not the customer is locked, its passsword rotation policy, etc.  </para>
    </section>
    <section>
      <title>Tenant</title>
      <para>This is a container that contains a collection of a customers products and services that Rackspace provides.</para>
    </section>
    <section>
      <title>Role</title>
      <para>Clients interact with Applications to invoke specific functions. Applications use the Roles assigned to a client to determine what functions that client can perform in the context of those interactions.  A Role in this context is basically analagous with a traditional LDAP role.</para>
    </section>
  </chapter>
  <chapter>
    <title>General API Information</title>
    <para>The Global Auth API is implemented using a RESTful web service interface. All requests to
      authenticate and operate against the Global Auth API are performed using SSL over HTTP (HTTPS)
      on TCP port 443.</para>
    <section>
      <title>Request/Response Types</title>
      <para>The Global Auth API supports both the JSON and XML data serialization formats. The
        request format is specified using the <code>Content-Type</code> header and is required for
        operations that have a request body. The response format can be specified in requests using
        either the <code>Accept</code> header or adding an <code>.xml</code> or <code>.json</code>
        extension to the request URI. Note that it is possible for a response to be serialized using
        a format different from the request (see example below). If no response format is specified,
        XML is the default. If conflicting formats are specified using both an <code>Accept</code>
        header and a query extension, the query extension takes precedence.</para>
      <table rules="all">
        <caption>Response Types</caption>
        <thead>
          <tr>
            <td>Format</td>
            <td>Accept Header</td>
            <td>Query Extension</td>
            <td>Default</td>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td>JSON</td>
            <td>application/json</td>
            <td>.json</td>
            <td>No</td>
          </tr>
          <tr>
            <td>XML</td>
            <td>application/xml</td>
            <td>.xml</td>
            <td>Yes</td>
          </tr>
        </tbody>
      </table>
      <example>
        <title>XML Request with Headers</title>
        <programlisting language="xml">
<xi:include href="../../formattedsamples/samplerequestheader.json" parse="text"/>
</programlisting>
        <programlisting language="xml">
<xi:include href="../../formattedsamples/auth_credentials.xml" parse="text"/>
</programlisting>
      </example>
      <example>
        <title>XML Response with Headers</title>
        <programlisting language="xml">
<xi:include href="../../formattedsamples/sampleresponseheader.json" parse="text"/>
</programlisting>
        <programlisting language="xml">
<xi:include href="../../formattedsamples/auth.xml" parse="text"/>
</programlisting>
      </example>
    </section>
 
    <section>
      <title>API Version </title>
      <para>The Global Auth API uses a URI versioning scheme. The first element of the path contains the
        target version identifier (e.g. https://idm.api.rackspace.com/v1.0/...) All requests (except
        to query for version - see below) must contain a target version. Any features or
        functionality changes that would necessitate a break in API-compatibility will require a new
        version, which will result in the URI version being updated accordingly. When new API
        versions are released, older versions will be marked as <code>Deprecated</code>. Rackspace
        will work with developers and partners to ensure there is adequate time to migrate to the
        new version before deprecated versions are discontinued. </para>
      <section>
        <title>Service</title>
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &GET; </td>
              <td colspan="4">https://{Hostname TBD}/</td>
              <td colspan="3">Retrieve the service profile.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
        <simpara>&ERROR_CODES; badRequest (<errorcode>400</errorcode>), idmFault
            (<errorcode>500</errorcode>), serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        <simpara>Your application can programmatically determine available API versions by
          performing a <command>GET</command> on the root URL
          (https://idm.api.rackspace.com/).</simpara>
        &NO_REQUEST;
        <example>
          <title>XML Service Profile Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/serviceprofile.xml" parse="text"/>
</programlisting>
        </example>
      </section>
      <section>
        <title>Get Version Wadl </title>
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1">&GET; </td>
              <td colspan="4">https://{Hostname TBD}/v1.0/</td>
              <td colspan="3">Retrieve Wadl for specific version</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
        <simpara>&ERROR_CODES; badRequest (<errorcode>400</errorcode>), idmFault
            (<errorcode>500</errorcode>), serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        <simpara>You can obtain the wadl for a specific version of the service by performing a
            <command>GET</command> on the base version URL (e.g. https://idm.api.rackspace.com/v1.0). </simpara>
        &NO_REQUEST;
      </section>
    </section>
    <section>
      <title>Faults</title>
      <para>When an error occurs the system will return an HTTP error response code denoting the
        type of error. The system will also return additional information about the fault in the
        body of the response. </para>
      <example>
        <title>XML Fault Response</title>
        <programlisting language="xml">
<xi:include href="../../formattedsamples/idm_fault.xml" parse="text"/>
</programlisting>
      </example>
      <example>
        <title>JSON Fault Response</title>
        <programlisting language="javascript">
<xi:include href="../../formattedsamples/idm_fault.json" parse="text"/>
</programlisting>
      </example>
      <para>The error code is returned in the body of the response for convenience. The message
        section returns a human readable message. The details section is optional and may contain
        useful information for tracking down an error (e.g a stack trace). </para>
      <para>The root element of the fault (e.g. idmFault) may change depending on the type of error.
        The following is an example of an itemNotFound error. </para>
      <example>
        <title>XML Not Found Fault</title>
        <programlisting language="xml">
<xi:include href="../../formattedsamples/item_not_found.xml" parse="text"/>
</programlisting>
      </example>
      <example>
        <title>JSON Not Found Fault</title>
        <programlisting language="javascript">
<xi:include href="../../formattedsamples/item_not_found.json" parse="text"/>
</programlisting>
      </example>
      <para> The following is a list of possible fault types along with their associated error
        codes. </para>
      <table rules="all">
        <caption>Fault Types</caption>
        <thead>
          <tr>
            <td>Fault Element</td>
            <td>Associated Error Code</td>
            <td>Expected in All Requests</td>
          </tr>
        </thead>
        <tbody>
          <tr align="center">
            <td>idmFault</td>
            <td>500, 400</td>
            <td> &CHECK; </td>
          </tr>
          <tr align="center">
            <td>serviceUnavailable</td>
            <td>503</td>
            <td> &CHECK; </td>
          </tr>
          <tr align="center">
            <td>unauthorized</td>
            <td>401</td>
            <td> &CHECK; </td>
          </tr>
          <tr align="center">
            <td>badRequest</td>
            <td>400</td>
            <td> &CHECK; </td>
          </tr>
          <tr align="center">
            <td>passwordValidation</td>
            <td>400</td>
            <td/>
          </tr>
          <tr align="center">
            <td>userDisabled</td>
            <td>403</td>
            <td/>
          </tr>
          <tr align="center">
            <td>forbidden</td>
            <td>403</td>
            <td/>
          </tr>
          <tr align="center">
            <td>itemNotFound</td>
            <td>404</td>
            <td/>
          </tr>
          <tr align="center">
            <td>clientConflict</td>
            <td>409</td>
            <td/>
          </tr>
          <tr align="center">
            <td>customerConflict</td>
            <td>409</td>
            <td/>
          </tr>
          <tr align="center">
            <td>emailConflict</td>
            <td>409</td>
            <td/>
          </tr>
          <tr align="center">
            <td>usernameConflict</td>
            <td>409</td>
            <td/>
          </tr>
        </tbody>
      </table>
      <para>From an XML schema perspective, all API faults are extensions of the base fault type
          <type>idmFault</type>. When working with a system that binds XML to actual classes (such
        as JAXB), one should be capable of using <type>idmFault</type> as a “catch-all” if
        there&apos;s no interest in distinguishing between individual fault types. </para>
    </section>
    <section>
      <title>Getting Started</title>
      <para>The first step to using the Global Auth API is registering your application with Global
        Auth. The Global Auth Team will need the following information in order to register your
        application.</para>
      <table rules="all">
        <caption>Application Information needed to register with Global Auth API</caption>
        <thead>
          <tr>
            <td>Item</td>
            <td>Description</td>
            <td>Example</td>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td>Name</td>
            <td>The name of the application</td>
            <td>Cloud Servers API</td>
          </tr>
          <tr>
            <td>Simple Name</td>
            <td>A continuous lower case name</td>
            <td>cloud_servers_api</td>
          </tr>
          <tr>
            <td>Description</td>
            <td>A human readable description of what the application does, which should be presentable to end users.</td>
            <td>Cloud Servers API is ...</td>
          </tr>
        </tbody>
      </table>
      <para>Once the Global Auth Team has this information we will add your application to the Global 
        Auth System and send you the clientId and clientSecret that you will need in order to 
        authenticate with the Global Auth API (see section below for Authentication).</para>
      <example>
        <title>XML Request with Headers</title>
        <programlisting language="xml">
<xi:include href="../../formattedsamples/samplerequestheader.json" parse="text"/>
</programlisting>
        <programlisting language="xml">
<xi:include href="../../formattedsamples/auth_credentials.xml" parse="text"/>
</programlisting>
      </example>
      <example>
        <title>XML Response with Headers</title>
        <programlisting language="xml">
<xi:include href="../../formattedsamples/sampleresponseheader.json" parse="text"/>
</programlisting>
        <programlisting language="xml">
<xi:include href="../../formattedsamples/auth.xml" parse="text"/>
</programlisting>
      </example>
    </section>
    <section xml:id="authheadersection">
      <title>Authorization Header</title>
      <para>Most calls made against the Global Auth API require the addition of an authorization
        header in the request.</para>
      <para>The format of the authoriztion header is the word "OAuth" followed by a space followed
        by the access token id that belongs to the entity making the call. For example, here is an
        sample request for getting a user's details. </para>
      <example>
        <title>Authorization Header Request Format</title>
        <programlisting language="xml">
<xi:include href="../../formattedsamples/samplerequestheader2.json" parse="text"/>
</programlisting>
      </example>
    </section>
  </chapter>
  
  <chapter>
    <title>Service API (Client Operations)</title>
    <section>
      <title>Overview</title>
      <para>The operations described in this chapter allow clients to authenticate and get access tokens.</para>
    </section>
    <section>
      <title>Service API</title>
      <para>The operations described in this chapter allow clients to authenticate and get access tokens.</para>
        <note>
          <para>
            The following table of calls are the service apis.
          </para>
        </note>
        <informaltable rules="all">
          &URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &POST; </td>
              <td colspan="1">/tokens</td>
              <td colspan="4">Authenticate a client and generate an access token.</td>
            </tr>
          </tbody>
        </informaltable>
    </section>
    <section>
      <title>Authenticate</title>
      <informaltable rules="all">
        &URI_REFHEAD;
        <tbody>
          <tr>
            <td colspan="1"> &POST; </td>
            <td colspan="1">/tokens</td>
            <td colspan="4">Authenticate a client and generate an access token.</td>
          </tr>
        </tbody>
      </informaltable>
      <simpara>&CODES;<returnvalue>200</returnvalue>, <returnvalue>203</returnvalue></simpara>
      <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), userDisabled
          (<errorcode>403</errorcode>), badRequest (<errorcode>400</errorcode>), idmFault
          (<errorcode>500</errorcode>), serviceUnavailable(<errorcode>503</errorcode>)</simpara>
      <example>
        <title>XML User Auth Request</title>
        <programlisting language="xml">
 <xi:include href="../../formattedsamples/auth_credentials.xml" parse="text"/>
</programlisting>
      </example>
      <example>
        <title>JSON User Auth Request</title>
        <programlisting language="javascript">
<xi:include href="../../formattedsamples/auth_credentials.json" parse="text"/>
</programlisting>
      </example>
      <example>
        <title>XML User Auth Response</title>
        <programlisting language="xml">
<xi:include href="../../formattedsamples/auth.xml" parse="text"/>
</programlisting>
      </example>
      <example>
        <title>JSON User Auth Response</title>
        <programlisting language="javascript">
<xi:include href="../../formattedsamples/auth.json" parse="text"/>
</programlisting>
      </example>
      <example>
        <title>XML Application Auth Request</title>
        <programlisting language="xml">
 <xi:include href="../../formattedsamples/application_auth_credentials.xml" parse="text"/>
</programlisting>
      </example>
      <example>
        <title>JSON Application Auth Request</title>
        <programlisting language="javascript">
<xi:include href="../../formattedsamples/application_auth_credentials.json" parse="text"/>
</programlisting>
      </example>
      <example>
        <title>XML Application Auth Response</title>
        <programlisting language="xml">
<xi:include href="../../formattedsamples/application_auth.xml" parse="text"/>
</programlisting>
      </example>
      <example>
        <title>JSON Application Auth Response</title>
        <programlisting language="javascript">
<xi:include href="../../formattedsamples/application_auth.json" parse="text"/>
</programlisting>
      </example>
    </section>
  </chapter>
  
  
  <chapter>
    <title>Admin API (Service Developer Operations)</title>
    <section>
      <title>Overview</title>
      <para>The operations described in this chapter allow service developers to get and validate
        access tokens, manage users and manage applications. </para>
    </section>
    <section>
      <title>Admin API</title>
      <note>
        <para> The following are tables of the admin api. </para>
      </note>
      <section>
        <title>Tokens</title>
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1">&GET;</td>
              <td colspan="4">/tokens/<parameter>tokenId</parameter></td>
              <td colspan="3">Check that a token is valid and return the token details.</td>
            </tr>
            <tr>
              <td colspan="1">&DELETE;</td>
              <td colspan="4">/tokens/<parameter>tokenId</parameter></td>
              <td colspan="3">Revoke Token.</td>
            </tr>
            <tr>
              <td colspan="1">&GET;</td>
              <td colspan="4">/tokens/<parameter>tokenId</parameter>/applications/<parameter>applicationId</parameter></td>
              <td colspan="3">Check if token has has access to an application.</td>
            </tr>
            <tr>
              <td colspan="1">&GET;</td>
              <td colspan="4">/tokens/<parameter>tokenId</parameter>/applications/<parameter>applicationId</parameter>/roles/<parameter>roleId</parameter></td>
              <td colspan="3">Check if token has role on application.</td>
            </tr>
          </tbody>
        </informaltable>
      </section>
      <section>
        <title>Users</title>
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1">&POST;</td>
              <td colspan="4">/users</td>
              <td colspan="3">Adds a new user. If the customer specified does not exist, adds this first user as the admin user.</td>
            </tr>
            <tr>
              <td colspan="1">&GET;</td>
              <td colspan="4">/users/<parameter>username</parameter></td>
              <td colspan="3">Get a user.</td>
            </tr>
            <tr>
              <td colspan="1">&DELETE;</td>
              <td colspan="4">/users/<parameter>username</parameter></td>
              <td colspan="3">Delete a user.</td>
            </tr>
            <tr>
              <td colspan="1">&PUT;</td>
              <td colspan="4">/users/<parameter>username</parameter></td>
              <td colspan="3">Update a user.</td>
            </tr>
            <tr>
              <td colspan="1">&PUT;</td>
              <td colspan="4">/users/<parameter>username</parameter>/softdeleted</td>
              <td colspan="3">Soft deletes a user.</td>
            </tr>
            <tr>
              <td colspan="1">&PUT;</td>
              <td colspan="4">/users/<parameter>username</parameter>/lock</td>
              <td colspan="3">Set a user's lock.</td>
            </tr>
            <tr>
              <td colspan="1">&PUT;</td>
              <td colspan="4">/users/<parameter>username</parameter>/status</td>
              <td colspan="3">Set a user's status to ACTIVE or INACTIVE.</td>
            </tr>
            <tr>
              <td colspan="1">&PUT;</td>
              <td colspan="4">/users/<parameter>username</parameter>/secret</td>
              <td colspan="3">Set a user's secret question and answer.</td>
            </tr>
            <tr>
              <td colspan="1">&GET;</td>
              <td colspan="4">/users/<parameter>username</parameter>/password</td>
              <td colspan="3">Get a user's password.</td>
            </tr>
            <tr>
              <td colspan="1">&PUT;</td>
              <td colspan="4">/users/<parameter>username</parameter>/password</td>
              <td colspan="3">Set a user's password.</td>
            </tr>
            <tr>
              <td colspan="1">&POST;</td>
              <td colspan="4">/users/<parameter>username</parameter>/password</td>
              <td colspan="3">Reset a user's password.</td>
            </tr>
            <tr>
              <td colspan="1">&GET;</td>
              <td colspan="4">/users/<parameter>username</parameter>/password/recoverytoken</td>
              <td colspan="3">Get a token that can be used to reset a user's password.</td>
            </tr>
            <tr>
              <td colspan="1">&GET;</td>
              <td colspan="4">/users/<parameter>username</parameter>/delegatedrefreshtokens</td>
              <td colspan="3">Get a list of a user's delegated refresh tokens.</td>
            </tr>
            <tr>
              <td colspan="1">&GET;</td>
              <td colspan="4">/users/<parameter>username</parameter>/delegatedrefreshtokens/<parameter>tokendId</parameter></td>
              <td colspan="3">Get a user's delegated refresh token.</td>
            </tr>
            <tr>
              <td colspan="1">&DELETE;</td>
              <td colspan="4">/users/<parameter>username</parameter>/delegatedrefreshtokens/<parameter>tokendId</parameter></td>
              <td colspan="3">Delete a user's delegated refresh token.</td>
            </tr>
            <tr>
              <td colspan="1">&GET;</td>
              <td colspan="4">/users/<parameter>username</parameter>/applications</td>
              <td colspan="3">Get the applications that have been provisioned for a user.</td>
            </tr>
            <tr>
              <td colspan="1">&PUT;</td>
              <td colspan="4">/users/<parameter>username</parameter>/applications/<parameter>applicationId</parameter></td>
              <td colspan="3">Provision an application for a user.</td>
            </tr>
            <tr>
              <td colspan="1">&DELETE;</td>
              <td colspan="4">/users/<parameter>username</parameter>/applications/<parameter>applicationId</parameter></td>
              <td colspan="3">Removes a provisioned application from a user.</td>
            </tr>
            <tr>
              <td colspan="1">&GET;</td>
              <td colspan="4">/users/<parameter>username</parameter>/roles?applicationId=<parameter>applicationId</parameter></td>
              <td colspan="3">Get all the roles that a user has. Optionally filter by
                applicationId.</td>
            </tr>
            <tr>
              <td colspan="1">&PUT;</td>
              <td colspan="4">/users/<parameter>username</parameter>/applications/<parameter>applicationId</parameter>/roles/<parameter>roleId</parameter></td>
              <td colspan="3">Grant user a role on an application.</td>
            </tr>
            <tr>
              <td colspan="1">&DELETE;</td>
              <td colspan="4">/users/<parameter>username</parameter>/applications/<parameter>applicationId</parameter>/roles/<parameter>roleId</parameter></td>
              <td colspan="3">Revoke a user's role on an application.</td>
            </tr>
          </tbody>
        </informaltable>
      </section>
      <section>
        <title>Applications</title>
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1">&POST;</td>
              <td colspan="4">/applications</td>
              <td colspan="3">Add an application.</td>
            </tr>
            <tr>
              <td colspan="1">&GET;</td>
              <td colspan="4">/applications/<parameter>applicationId</parameter></td>
              <td colspan="3">Get an application.</td>
            </tr>
            <tr>
              <td colspan="1">&PUT;</td>
              <td colspan="4">/applications/<parameter>applicationId</parameter></td>
              <td colspan="3">Update an application.</td>
            </tr>
            <tr>
              <td colspan="1">&DELETE;</td>
              <td colspan="4">/applications/<parameter>applicationId</parameter></td>
              <td colspan="3">Delete an application.</td>
            </tr>
            <tr>
              <td colspan="1">&DELETE;</td>
              <td colspan="4">/applications/<parameter>applicationId</parameter>/softdeleted</td>
              <td colspan="3">Soft deletes an application.</td>
            </tr>
            <tr>
              <td colspan="1">&GET;</td>
              <td colspan="4">/applications/<parameter>applicationId</parameter>/definedroles</td>
              <td colspan="3">Get roles defined by an application.</td>
            </tr>
            <tr>
              <td colspan="1">&PUT;</td>
              <td colspan="4">/applications/<parameter>applicationId</parameter>/definedroles/<parameter>roleId</parameter></td>
              <td colspan="3">Add a role defined by an application.</td>
            </tr>
            <tr>
              <td colspan="1">&DELETE;</td>
              <td colspan="4">/applications/<parameter>applicationId</parameter>/definedroles/<parameter>roleId</parameter></td>
              <td colspan="3">Delete a role defined by an application.</td>
            </tr>
            <tr>
              <td colspan="1">&POST;</td>
              <td colspan="4">/applications/<parameter>applicationId</parameter>/secret</td>
              <td colspan="3">Reset application secret.</td>
            </tr>
            <tr>
              <td colspan="1">&GET;</td>
              <td colspan="4">/applications/<parameter>applicationId</parameter>/applications</td>
              <td colspan="3">Get all applications that have been provisioned for this application.</td>
            </tr>
            <tr>
              <td colspan="1">&PUT;</td>
              <td colspan="4">/applications/<parameter>applicationId</parameter>/applications/<parameter>applicationId</parameter></td>
              <td colspan="3">Provision an application for this application.</td>
            </tr>
            <tr>
              <td colspan="1">&DELETE;</td>
              <td colspan="4">/applications/<parameter>applicationId</parameter>/applications/<parameter>applicationId</parameter></td>
              <td colspan="3">Removes a provisioned application from this application.</td>
            </tr>
            <tr>
              <td colspan="1">&GET;</td>
              <td colspan="4">/applications/<parameter>applicationId</parameter>/roles?applicationId=<parameter>applicationId</parameter></td>
              <td colspan="3">Get all the roles that an application has. Optionally filter by applicationId.</td>
            </tr>
            <tr>
              <td colspan="1">&PUT;</td>
              <td colspan="4">/applications/<parameter>applicationId</parameter>/applications/<parameter>applicationId</parameter>/roles/<parameter>roleId</parameter></td>
              <td colspan="3">Grant application a role on a provisioned application.</td>
            </tr>
            <tr>
              <td colspan="1">&DELETE;</td>
              <td colspan="4">/applications/<parameter>applicationId</parameter>/applications/<parameter>applicationId</parameter>/roles/<parameter>roleId</parameter></td>
              <td colspan="3">Revoke an application's role on a provisioned application.</td>
            </tr>
          </tbody>
        </informaltable>
      </section>
      <section>
        <title>Racker</title>
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1">&GET;</td>
              <td colspan="4">/rackers/<parameter>rackerId</parameter>/roles</td>
              <td colspan="3">Get a racker's roles.</td>
            </tr>
          </tbody>
        </informaltable>
      </section>
      <section>
        <title>Identity Profile</title>
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1">&GET;</td>
              <td colspan="4">/identityprofiles/<parameter>customerId</parameter></td>
              <td colspan="3">Gets a customer's identity profile.</td>
            </tr>
            <tr>
              <td colspan="1">&DELETE;</td>
              <td colspan="4">/identityprofiles/<parameter>customerId</parameter></td>
              <td colspan="3">Delete a customer's identity profile.</td>
            </tr>
            <tr>
              <td colspan="1">&GET;</td>
              <td colspan="4">/identityprofiles/<parameter>customerId</parameter>/locked</td>
              <td colspan="3">Lock or unlock a customer's identity profile.</td>
            </tr>
            <tr>
              <td colspan="1">&PUT;</td>
              <td colspan="4">/identityprofiles/<parameter>customerId</parameter>/passwordrotationpolicy</td>
              <td colspan="3">Sets the password rotation policy for a customer.</td>
            </tr>
            <tr>
              <td colspan="1">&GET;</td>
              <td colspan="4">/identityprofiles/<parameter>customerId</parameter>/users</td>
              <td colspan="3">Gets a list of users that this customer owns.</td>
            </tr>
            <tr>
              <td colspan="1">&GET;</td>
              <td colspan="4">/identityprofiles/<parameter>customerId</parameter>/applications</td>
              <td colspan="3">Gets a list of applications that this customer owns.</td>
            </tr>
          </tbody>
        </informaltable>
      </section>
      <section>
        <title>Password</title>
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1">&GET;</td>
              <td colspan="4">/passwordrules</td>
              <td colspan="3">Get password rules.</td>
            </tr>
            <tr>
              <td colspan="1">&POST;</td>
              <td colspan="4">/passwordrules/validation</td>
              <td colspan="3">Check password validation for password.</td>
            </tr>
          </tbody>
        </informaltable>
      </section>
    </section>

    <section>
      <title>Token Operations</title>
      <section>
        <title>Authenticate</title>
        <para>All client operations are supported in the admin API</para>
      </section>
      <section>
        <title>Validate Token</title>
        &AUTH_HEADER;
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1">&GET; </td>
              <td colspan="4">/token/<parameter>tokenId</parameter></td>
              <td colspan="3">Check that a token is valid and return the token details.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue>, <returnvalue>203</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), forbidden
            (<returnvalue>403</returnvalue>), userDisabled(<returnvalue>403</returnvalue>),
          badRequest (<errorcode>400</errorcode>), itemNotFound (<errorcode>404</errorcode>),
            idmFault(<returnvalue>500</returnvalue>),
            serviceUnavailable(<returnvalue>503</returnvalue>)</simpara>
        &NO_REQUEST;
        <example>
          <title>XML Validate Token Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/validatetoken.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Validate Token Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/validatetoken.json" parse="text"/>
</programlisting>
        </example>
      </section>
      <section>
        <title>Revoke Token</title>
        &AUTH_HEADER;
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &DELETE; </td>
              <td colspan="4">/token/<parameter>tokenId</parameter></td>
              <td colspan="3">Revoke token.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>204</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), forbidden
          (<returnvalue>403</returnvalue>), userDisabled(<returnvalue>403</returnvalue>),
          badRequest (<errorcode>400</errorcode>), itemNotFound (<errorcode>404</errorcode>),
          idmFault(<returnvalue>500</returnvalue>),
          serviceUnavailable(<returnvalue>503</returnvalue>)</simpara>
        &NO_REQUEST;
      </section>
      <section>
        <title>Check if Token has access to an Application</title>
        &AUTH_HEADER;
        <informaltable rules="all">
&LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1">&GET;</td>
              <td colspan="4">/tokens/<parameter>tokenId</parameter>/applications/<parameter>applicationId</parameter></td>
              <td colspan="3">Check if token has has access to an application.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>204</returnvalue>
          <returnvalue>404</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), idmFault
            (<errorcode>500</errorcode>), serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        &NO_REQUEST;
      </section>
      <section>
        <title>Check if Token has Role on an Application</title>
        &AUTH_HEADER;
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1">&GET;</td>
              <td colspan="4">/tokens/<parameter>tokenId</parameter>/applications/<parameter>applicationId</parameter>/roles/<parameter>roleId</parameter></td>
              <td colspan="3">Check if token has role on application.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>204</returnvalue>
          <returnvalue>404</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), idmFault
            (<errorcode>500</errorcode>), serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        &NO_REQUEST;
      </section>
    </section>
    
    <section>
      <title>User Operations</title>
      <section>
        <title>Add a User</title>
        &AUTH_HEADER;
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &POST; </td>
              <td colspan="4">/users</td>
              <td colspan="3">Adds a new user. If the customer specified does not exist, adds this first user as the admin user.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>The Username attribute, CustomerId attribute and Password element are required in
          this request. If a blank password is passed in the Password element, the API will generate
          a random password for the user. If the customer does not already exist in IdM, the system
          will create the customer and add this user as the admin user. The prefLanguage attribute defaults 
          to "US_en" and the timeZone attribute defaults to "America/Chicago".</simpara>
        <simpara>&CODES;<returnvalue>201</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), passwordValidation(<errorcode>400</errorcode>), forbidden
            (<errorcode>403</errorcode>), itemNotFound (<errorcode>404</errorcode>),
            customerConflict(<errorcode>409</errorcode>),
            usernameConflict(<errorcode>409</errorcode>), emailConflict(<errorcode>409</errorcode>),
          idmFault (<errorcode>500</errorcode>),
          serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        <example>
          <title>XML Add User Request</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/adduser.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Add User Request</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/adduser.json" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>XML Add User Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/adduserresponse.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Add User Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/adduserresponse.json" parse="text"/>
</programlisting>
        </example>
      </section>
     
      <section>
        <title>Get a User</title>
        &AUTH_HEADER;
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1">&GET; </td>
              <td colspan="4">/users/<parameter>username</parameter></td>
              <td colspan="3">Get a user. </td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), itemNotFound
            (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
            serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        &NO_REQUEST;
        <example>
          <title>XML Get User Response</title>
          <programlisting language="xml">
            <xi:include href="../../formattedsamples/getuser.xml" parse="text"/>
          </programlisting>
        </example>
        <example>
          <title>JSON Get User Response</title>
          <programlisting language="javascript">
            <xi:include href="../../formattedsamples/getuser.json" parse="text"/>
          </programlisting>
        </example>
      </section>
      
      <section>
        <title>Delete User</title>
        &AUTH_HEADER;
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1">&DELETE; </td>
              <td colspan="4">/users/<parameter>username</parameter></td>
              <td colspan="3">Delete a user.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>204</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
          (<errorcode>400</errorcode>), forbidden(<errorcode>403</errorcode>), itemNotFound
          (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
          serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        &NO_REQUEST;
      </section>
      
      <section>
        <title>Update a User</title>
        &AUTH_HEADER;
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &PUT; </td>
              <td colspan="4">/users/<parameter>username</parameter></td>
              <td colspan="3">Update a user. </td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue>, <returnvalue>203</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden(<errorcode>403</errorcode>), itemNotFound
            (<errorcode>404</errorcode>), emailConflict (409), idmFault
          (<errorcode>500</errorcode>), serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        <example>
          <title>XML Update User Request</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/updateuser.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Update User Request</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/updateuser.json" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>XML Update User Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/updateduser.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Update User Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/updateduser.json" parse="text"/>
</programlisting>
        </example>
      </section>
      
      <section>
        <title>Soft Delete a User</title>
        &AUTH_HEADER;
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1">&PUT;</td>
              <td colspan="4">/users/<parameter>username</parameter>/softdeleted</td>
              <td colspan="3">Soft deletes a user.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden(<errorcode>403</errorcode>), itemNotFound
            (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
            serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        <example>
          <title>XML User Soft Delete Request</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/userWithOnlySoftDeleted.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON User Soft Delete Request</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/userWithOnlySoftDeleted.json" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>XML User Soft Delete Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/userWithOnlySoftDeleted.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON User Soft Delete Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/userWithOnlySoftDeleted.json" parse="text"/>
</programlisting>
        </example>
      </section>
     
      <section>
        <title>Set User Lock</title>
        &AUTH_HEADER;
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &PUT; </td>
              <td colspan="4">/users/<parameter>username</parameter>/lock</td>
              <td colspan="3">Set a user's lock</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden(<errorcode>403</errorcode>), itemNotFound
            (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
            serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        <example>
          <title>XML Set User Lock Request</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/userWithOnlyLock.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Set User Lock Request</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/userWithOnlyLock.json" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>XML Set User Lock Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/userWithOnlyLock.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Set User Lock Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/userWithOnlyLock.json" parse="text"/>
</programlisting>
        </example>
      </section>
      
      <section>
        <title>Set User Status</title>
        &AUTH_HEADER;
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &PUT; </td>
              <td colspan="4">/users/<parameter>username</parameter>/status</td>
              <td colspan="3">Set a user&apos;s status to ACTIVE or INACTIVE </td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
          (<errorcode>400</errorcode>), forbidden(<errorcode>403</errorcode>), itemNotFound
          (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
          serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        <example>
          <title>XML Set User Status Request</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/userWithOnlyStatus.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Set User Status Request</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/userWithOnlyStatus.json" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>XML Set User Status Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/userWithOnlyStatus.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Set User Status Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/userWithOnlyStatus.json" parse="text"/>
</programlisting>
        </example>
      </section>
      
      <section>
        <title>Set User Secret</title>
        &AUTH_HEADER;
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &PUT; </td>
              <td colspan="4">/users/<parameter>username</parameter>/secret</td>
              <td colspan="3">Sets a user&apos;s secret question and answer.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
          (<errorcode>400</errorcode>), forbidden(<errorcode>403</errorcode>), itemNotFound
          (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
          serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        <example>
          <title>XML Set User Secret Request</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/user_secret.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Set User Secret Request</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/user_secret.json" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>XML Set User Secret Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/user_secret.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Set User Secret Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/user_secret.json" parse="text"/>
</programlisting>
        </example>
      </section>
    
      <section>
        <title>Get User Password</title>
        &AUTH_HEADER;
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &GET; </td>
              <td colspan="4">/users/<parameter>username</parameter>/password</td>
              <td colspan="3">Get a user's password.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
          (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), itemNotFound
          (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
          serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        &NO_REQUEST;
        <example>
          <title>XML Get User Password Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/user_password.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Get User Passwrord Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/user_password.json" parse="text"/>
</programlisting>
        </example>
      </section>
      
      <section>
        <title>Set User Password</title>
        &AUTH_HEADER;
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &PUT; </td>
              <td colspan="4">/users/<parameter>username</parameter>/password</td>
              <td colspan="3"> Sets a user's password..</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), passwordValidation(<errorcode>400</errorcode>),
            forbidden(<errorcode>403</errorcode>), itemNotFound (<errorcode>404</errorcode>),
          idmFault (<errorcode>500</errorcode>),
          serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        &NO_REQUEST;
        <example>
          <title>XML Set User Password Request</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/user_credentials.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Set User Password Request</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/user_credentials.json" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>XML User Password Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/user_password.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON User Password Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/user_password.json" parse="text"/>
</programlisting>
        </example>
      </section>
      
      <section>
        <title>Reset User Password</title>
        &AUTH_HEADER;
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &POST; </td>
              <td colspan="4">/users/<parameter>username</parameter>/password</td>
              <td colspan="3">Reset a user&apos;s password.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden(<errorcode>403</errorcode>), itemNotFound
            (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
            serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        &NO_REQUEST;
        <example>
          <title>XML Reset User Password Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/reset_user_password.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Reset User Password Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/reset_user_password.json" parse="text"/>
</programlisting>
        </example>
      </section>
    
      <section>
        <title>Get Password Recovery Token</title>
        &AUTH_HEADER;
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &POST; </td>
              <td colspan="4">/users/<parameter>username</parameter>/password/recoverytoken</td>
              <td colspan="3">Get a token that can be used to reset a user's password.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden(<errorcode>403</errorcode>), itemNotFound
            (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
            serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        &NO_REQUEST;
        <example>
          <title>XML Password Recovery Token Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/token.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Password Recovery Token Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/token.json" parse="text"/>
</programlisting>
        </example>
      </section>
     
      <section>
        <title>Get a List of delegated refresh Tokens for a User</title>
        &AUTH_HEADER;
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &GET; </td>
              <td colspan="4">/users/<parameter>username</parameter>/delegatedrefreshtokens</td>
              <td colspan="3">Get a list of a user's delegated refresh tokens.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
          (<errorcode>400</errorcode>), forbidden(<errorcode>403</errorcode>), itemNotFound
          (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
          serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        <example>
          <title>XML Delegated Tokens Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/delegatedtokens.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Delegated Tokens Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/delegatedtokens.json" parse="text"/>
</programlisting>
        </example>
      </section>
      
      <section>
        <title>Get a Delegated Refresh Token for a User</title>
        &AUTH_HEADER;
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &GET; </td>
              <td colspan="4">/users/<parameter>username</parameter>/delegatedrefreshtokens/<parameter>tokendId</parameter></td>
              <td colspan="3">Get a user's delegated refresh token</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
          (<errorcode>400</errorcode>), forbidden(<errorcode>403</errorcode>), itemNotFound
          (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
          serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        <example>
          <title>XML Delegated Token Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/delegatedtoken.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Delegated Token Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/delegatedtoken.json" parse="text"/>
</programlisting>
        </example>
      </section>
      
      <section>
        <title>Delete a Delegated Refresh Token for a User</title>
        &AUTH_HEADER;
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &DELETE; </td>
              <td colspan="4">/users/<parameter>username</parameter>/delegatedrefreshtokens/<parameter>tokendId</parameter></td>
              <td colspan="3">Deletes a user's delegated refresh tokens</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>204</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
          (<errorcode>400</errorcode>), forbidden(<errorcode>403</errorcode>), itemNotFound
          (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
          serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        &NO_REQUEST;
      </section>
      
      <section>
        <title>Get the Applications that a User has Provisioned</title>
        &AUTH_HEADER;
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &GET; </td>
              <td colspan="4">/users/<parameter>username</parameter>/applications</td>
              <td colspan="3">Get the applications that have been provisioned for a user.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), itemNotFound
            (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
            serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        &NO_REQUEST;
        <example>
          <title>XML Get User Applications Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/applications.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Get User Applications Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/applications.json" parse="text"/>
</programlisting>
        </example>
      </section>
      
      <section>
        <title>Provision an Application for a User</title>
        &AUTH_HEADER;
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &PUT; </td>
              <td colspan="4">/users/<parameter>username</parameter>/applications/<parameter>applicationId</parameter></td>
              <td colspan="3">Provision an application for a user.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), itemNotFound
            (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
            serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        <example>
          <title>XML Provision User Application Request</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/application_only_id.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Provision User Application Request</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/application_only_id.json" parse="text"/>
</programlisting>
        </example>
      </section>
      
      <section>
        <title>Remove Provisioned Application from User</title>
        &AUTH_HEADER;
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &DELETE; </td>
              <td colspan="4">/users/<parameter>username</parameter>/applications/<parameter>applicationId</parameter></td>
              <td colspan="3">Removes a provisioned application from a user.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>204</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), itemNotFound
            (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
            serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        &NO_REQUEST;
      </section>
      
      <section>
        <title>Get User Roles</title>
        &AUTH_HEADER;
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &GET; </td>
              <td colspan="4">/users/<parameter>username</parameter>/roles?applicationId=<parameter>applicationId</parameter></td>
              <td colspan="3">Get all the roles that a user has. Optionally filter by applicationId.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
          (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), idmFault
          (<errorcode>500</errorcode>), serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        &NO_REQUEST;
        <example>
          <title>XML Get User Application Roles Response</title>
          <programlisting language="xml">
              <xi:include href="../../formattedsamples/roles.xml" parse="text"/>
           </programlisting>
        </example>
        <example>
          <title>JSON Get User Application Roles Response</title>
          <programlisting language="javascript">
            <xi:include href="../../formattedsamples/roles.json" parse="text"/>
          </programlisting>
        </example>
      </section>
      
      <section>
        <title>Grant User Role on Application</title>
        &AUTH_HEADER;
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &PUT; </td>
              <td colspan="4">/users/<parameter>username</parameter>/applications/<parameter>applicationId</parameter>/roles/<parameter>roleId</parameter></td>
              <td colspan="3">Grant user a role on the application.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
          (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), itemNotFound
          (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
          serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        <example>
          <title>XML Grant User Role Request</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/role.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Grant User Role Request</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/role.json" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>XML Grant User Role Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/role.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Grant User Role Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/role.json" parse="text"/>
</programlisting>
        </example>
      </section>
      
      <section>
        <title>Revoke a User Role on Application</title>
        &AUTH_HEADER;
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &DELETE; </td>
              <td colspan="4">/users/<parameter>username</parameter>/applications/<parameter>applicationId</parameter>/roles/<parameter>roleId</parameter></td>
              <td colspan="3">Revoke a user's role on the application.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>204</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), itemNotFound
            (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
            serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        &NO_REQUEST;
      </section>
    </section>
    
    <section>
      <title>Application Operations </title>
      <section>
        <title>Add an Application</title>
        &AUTH_HEADER;
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &POST; </td>
              <td colspan="4">/applications</td>
              <td colspan="3">Add an application.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>201</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), itemNotFound
            (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
            serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        <example>
          <title>XML Add Application Request</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/addapplication.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Add Application Request</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/addapplication.json" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>XML Add Application Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/addedapplication.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Add Application Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/addedapplication.json" parse="text"/>
</programlisting>
        </example>
      </section>
      
      <section>
        <title>Get an Application</title>
        &AUTH_HEADER;
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &GET; </td>
              <td colspan="4">/applications/<parameter>applicationId</parameter></td>
              <td colspan="3">Get an application.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), itemNotFound
            (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
            serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        <example>
          <title>XML Get Application Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/application.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Get Application Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/application.json" parse="text"/>
</programlisting>
        </example>
      </section>
      
      <section>
        <title>Update an Application</title>
        &AUTH_HEADER;
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &PUT; </td>
              <td colspan="4">/applications/<parameter>applicationId</parameter></td>
              <td colspan="3">Update an application.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden(<errorcode>403</errorcode>), itemNotFound
            (<errorcode>404</errorcode>), emailConflict (409), idmFault
          (<errorcode>500</errorcode>), serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        <example>
          <title>XML Update Application Request</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/updateapplication.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Update Application Request</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/updateapplication.json" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>XML Update Application Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/updatedapplication.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Update Application Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/updatedapplication.json" parse="text"/>
</programlisting>
        </example>
      </section>

      <section>
        <title>Delete an Application</title>
        &AUTH_HEADER;
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &DELETE; </td>
              <td colspan="4">/applications/<parameter>applicationId</parameter></td>
              <td colspan="3">Delete an application.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>204</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
          (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), itemNotFound
          (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
          serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        &NO_REQUEST;
      </section>
      
      <section>
        <title>Soft Delete an Application</title>
        &AUTH_HEADER;
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1">&PUT;</td>
              <td colspan="4">/applications/<parameter>applicationId</parameter>/softdeleted</td>
              <td colspan="3">Soft deletes an application.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), itemNotFound
            (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
            serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        <example>
          <title>XML Soft Delete Application Request</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/applicationWithOnlySoftDeleted.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Soft Delete Application Request</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/applicationWithOnlySoftDeleted.json" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>XML Soft Delete Application Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/applicationWithOnlySoftDeleted.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Soft Delete Application Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/applicationWithOnlySoftDeleted.json" parse="text"/>
</programlisting>
        </example>
      </section>
      
      <section>
        <title>Get all Roles for an Application</title>
        &AUTH_HEADER;
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &GET; </td>
              <td colspan="4">/applications/<parameter>applicationId</parameter>/roles</td>
              <td colspan="3">Get roles defined by an application.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue>
          <returnvalue>404</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
          (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), idmFault
          (<errorcode>500</errorcode>), serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        &NO_REQUEST;
        <example>
          <title>XML Roles Defined by Application Response</title>
          <programlisting language="xml">
              <xi:include href="../../formattedsamples/application_roles.xml" parse="text"/>
           </programlisting>
        </example>
        <example>
          <title>JSON Roles Defined by Application Response</title>
          <programlisting language="javascript">
            <xi:include href="../../formattedsamples/application_roles.json" parse="text"/>
          </programlisting>
        </example>
      </section>
      
      <section>
        <title>Define a Role for an Application</title>
        &AUTH_HEADER;
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &PUT; </td>
              <td colspan="4">/applications/<parameter>applicationId</parameter>/definedroles/<parameter>roleId</parameter></td>
              <td colspan="3">Add a role defined by an application.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
          (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), itemNotFound
          (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
          serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        <example>
          <title>XML Define Role Request</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/addrole.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Define Role Request</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/addrole.json" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>XML Define Role Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/addrole.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Define Role Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/addrole.json" parse="text"/>
</programlisting>
        </example>
      </section>
      
      <section>
        <title>Delete a Defined Role for an Application</title>
        &AUTH_HEADER;
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &DELETE; </td>
              <td colspan="4">/applications/<parameter>applicationId</parameter>/definedroles/<parameter>roleId</parameter></td>
              <td colspan="3">Delete a role defined by an application.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>204</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
          (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), itemNotFound
          (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
          serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        &NO_REQUEST;
      </section>
      
      <section>
        <title>Reset Application Secret</title>
        &AUTH_HEADER;
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1">&POST;</td>
              <td colspan="4">/applications/<parameter>applicationId</parameter>/secret</td>
              <td colspan="3">Reset application secret.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
          (<errorcode>400</errorcode>), forbidden(<errorcode>403</errorcode>), itemNotFound
          (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
          serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        &NO_REQUEST;
        <example>
          <title>XML Reset Application Secret Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/application_credentials.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Reset Application Secret Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/application_credentials.json" parse="text"/>
</programlisting>
        </example>
      </section>
      
      <section>
        <title>Get the Applications that an Application has Provisioned</title>
        &AUTH_HEADER;
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &GET; </td>
              <td colspan="4">/applications/<parameter>applicationId</parameter>/applicationss</td>
              <td colspan="3">Get all applications that have been provisioned for this application.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), itemNotFound
            (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
            serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        &NO_REQUEST;
        <example>
          <title>XML Get Applications Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/applications.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Get Applications Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/applications.json" parse="text"/>
</programlisting>
        </example>
      </section>
      
      <section>
        <title>Provision an Application for an Application</title>
        &AUTH_HEADER;
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &PUT; </td>
              <td colspan="4">/applications/<parameter>applicationId</parameter>/applications/<parameter>applicationId</parameter></td>
              <td colspan="3">Provision an application for this application.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>204</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
          (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), itemNotFound
          (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
          serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        &NO_REQUEST;
        <example>
          <title>XML Provision Application Request</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/application_only_id.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Provision Application Request</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/application_only_id.json" parse="text"/>
</programlisting>
        </example>
      </section>
      
      <section>
        <title>Remove Provisioned Application from Application</title>
        &AUTH_HEADER;
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &DELETE; </td>
              <td colspan="4">/applications/<parameter>applicationId</parameter>/applications/<parameter>applicationId</parameter></td>
              <td colspan="3">Removes a provisioned application from this application</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>204</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
          (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), itemNotFound
          (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
          serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        &NO_REQUEST;
      </section>
      
      <section>
        <title>Get Application Roles</title>
        &AUTH_HEADER;
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1">&GET;</td>
              <td colspan="4">/applications/<parameter>applicationId</parameter>/roles?applicationId=<parameter>applicationId</parameter></td>
              <td colspan="3">Get all the roles that an application has. Optionally filter by applicationId.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue>
          <returnvalue>404</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
          (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), idmFault
          (<errorcode>500</errorcode>), serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        &NO_REQUEST;
        <example>
          <title>XML Get Application Roles Response</title>
          <programlisting language="xml">
              <xi:include href="../../formattedsamples/roles.xml" parse="text"/>
           </programlisting>
        </example>
        <example>
          <title>JSON Get Application Roles Response</title>
          <programlisting language="javascript">
            <xi:include href="../../formattedsamples/roles.json" parse="text"/>
          </programlisting>
        </example>
      </section>
      
      <section>
        <title>Grant an Application a Role on another Application</title>
        &AUTH_HEADER;
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1">&POST;</td>
              <td colspan="4">/applications/<parameter>applicationId</parameter>/applications/<parameter>applicationId</parameter>/roles/<parameter>roleId</parameter></td>
              <td colspan="3">Grant application a role on the provisioned application.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
          (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), itemNotFound
          (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
          serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        <example>
          <title>XML Grant Application Role Request</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/role.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Grant Application Role Request</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/role.json" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>XML Grant Application Role Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/role.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Grant Application Role Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/role.json" parse="text"/>
</programlisting>
        </example>
      </section>
      
      <section>
        <title>Revoke an Application Role on another Application</title>
        &AUTH_HEADER;
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &DELETE; </td>
              <td colspan="4">/applications/<parameter>applicationId</parameter>/applications/<parameter>applicationId</parameter>/roles/<parameter>roleId</parameter></td>
              <td colspan="3">Revoke an application's role on a provisioned application.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>204</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
          (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), itemNotFound
          (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
          serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        &NO_REQUEST;
      </section>
    </section>
    
    <section>
      <title>Identity Profile Operations </title>
      <section>
        <title>Get a Customer's Identity Profile</title>
        &AUTH_HEADER;
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1">&GET;</td>
              <td colspan="4">/identityprofiles/<parameter>customerId</parameter></td>
              <td colspan="3">Gets a customer's identity profile.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>),
          forbidden(<errorcode>403</errorcode>), itemNotFound(<errorcode>404</errorcode>),
          badRequest (<errorcode>400</errorcode>), idmFault (<errorcode>500</errorcode>),
          serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        &NO_REQUEST;
        <example>
          <title>XML Identity Profile Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/identityprofile.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Identity Profile Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/identityprofile.json" parse="text"/>
</programlisting>
        </example>
      </section>
      
      <section>
        <title>Delete a Customer's Identity Profile</title>
        &AUTH_HEADER;
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &DELETE; </td>
              <td colspan="4">/identityprofiles/<parameter>customerId</parameter></td>
              <td colspan="3">Delete a customer's identity profile.</td>         
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>204</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
          (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), itemNotFound
          (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
          serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        &NO_REQUEST;       
      </section>
      
      <section>
        <title>Lock or unlock Customer's Identity Profile</title>
        &AUTH_HEADER;
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &PUT; </td>
              <td colspan="4">/identityprofiles/<parameter>customerId</parameter>/locked</td>
              <td colspan="3">Lock or unlock a customer's identity profile.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>),
          forbidden(<errorcode>403</errorcode>), itemNotFound(<errorcode>404</errorcode>),
          badRequest (<errorcode>400</errorcode>), idmFault (<errorcode>500</errorcode>),
          serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        <example>
          <title>XML Identity Profile Lock Request</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/identityprofilelock.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Identity Profile Lock Request</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/identityprofilelock.json" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>XML Identity Profile Lock Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/identityprofilelock.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Identity Profile Lock Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/identityprofilelock.json" parse="text"/>
</programlisting>
        </example>
      </section>     
      
      <section>
        <title>Set Customer's Password Rotation Policy</title>
        &AUTH_HEADER;
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &PUT; </td>
              <td colspan="4">/identityprofiles/<parameter>customerId</parameter>/passwordrotationpolicy</td>
              <td colspan="3">Sets the password rotation policy for a customer.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), forbidden
          (<returnvalue>403</returnvalue>), userDisabled(<returnvalue>403</returnvalue>),
          badRequest (<errorcode>400</errorcode>), itemNotFound (<errorcode>404</errorcode>),
          idmFault(<returnvalue>500</returnvalue>),
          serviceUnavailable(<returnvalue>503</returnvalue>)</simpara>
        &NO_REQUEST;
        <example>
          <title>XML Password Rotation Policy Request</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/passwordrotation.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Password Rotation Policy Request</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/passwordrotation.json" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>XML Password Rotation Policy Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/passwordrotation.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Password Rotation Policy Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/passwordrotation.json" parse="text"/>
</programlisting>
        </example>
      </section>
      
      <section>
        <title>Get User List</title>
        &AUTH_HEADER;
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1">&GET;</td>
              <td colspan="4">/identityprofiles/<parameter>customerId</parameter>/users</td>
              <td colspan="3"> Gets a list of users that this customer owns.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
          (<errorcode>400</errorcode>), forbidden(<errorcode>403</errorcode>), itemNotFound
          (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
          serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        &NO_REQUEST;
        <example>
          <title>XML Get User List Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/users.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Get User List Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/users.json" parse="text"/>
</programlisting>
        </example>
      </section>
      
      <section>
        <title>Get Application List</title>
        &AUTH_HEADER;
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1">&GET;</td>
              <td colspan="4">/identityprofiles/<parameter>customerId</parameter>/applications</td>
              <td colspan="3">Gets a list of applications that this customer owns.</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
          (<errorcode>400</errorcode>), forbidden(<errorcode>403</errorcode>), itemNotFound
          (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
          serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        &NO_REQUEST;
        <example>
          <title>XML Get User List Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/applications.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Get User List Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/applications.json" parse="text"/>
</programlisting>
        </example>
      </section>
    </section>
    
    <section>
      <title>Password Operations </title>
      <section>
        <title>Get Password Rules</title>
        &AUTH_HEADER;
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &GET; </td>
              <td colspan="4">/passwordrules</td>
              <td colspan="3">Get Password Rules</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), idmFault
            (<errorcode>500</errorcode>), serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        <example>
          <title>XML Get Password Rules Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/password_rule_results.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Get Password Rules Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/password_rule_results.json" parse="text"/>
</programlisting>
        </example>
      </section>
      <section>
        <title>Password validation check</title>
        &AUTH_HEADER;
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &POST; </td>
              <td colspan="4">/passwordrules/validation</td>
              <td colspan="3">Check Password Validation for <parameter>password</parameter></td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden (<errorcode>403</errorcode>), itemNotFound
            (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
            serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        <example>
          <title>XML Password Validation Request</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/user_password.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Password Validation Request</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/user_password.json" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>XML Password Validation Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/password_validation.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Password Validation Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/password_validation.json" parse="text"/>
</programlisting>
        </example>
      </section>
    </section>
    
    <section>
        <title>Racker Operations</title>
      <section>
        <title>Get the Rackspace Roles for a Racker</title>
        &AUTH_HEADER;
        <informaltable rules="all">
          &LONG_URI_REFHEAD;
          <tbody>
            <tr>
              <td colspan="1"> &GET; </td>
              <td colspan="4">/rackers/<parameter>rackerId</parameter>/roles</td>
              <td colspan="3">Get a racker's roles</td>
            </tr>
          </tbody>
        </informaltable>
        <simpara>&CODES;<returnvalue>200</returnvalue></simpara>
        <simpara>&ERROR_CODES; unauthorized (<errorcode>401</errorcode>), badRequest
            (<errorcode>400</errorcode>), forbidden(<errorcode>403</errorcode>), itemNotFound
            (<errorcode>404</errorcode>), idmFault (<errorcode>500</errorcode>),
            serviceUnavailable(<errorcode>503</errorcode>)</simpara>
        <example>
          <title>XML Racker Roles Response</title>
          <programlisting language="xml">
<xi:include href="../../formattedsamples/rackerroles.xml" parse="text"/>
</programlisting>
        </example>
        <example>
          <title>JSON Racker Roles Response</title>
          <programlisting language="javascript">
<xi:include href="../../formattedsamples/rackerroles.json" parse="text"/>
</programlisting>
        </example>
      </section>
      
    </section>
  </chapter>
</book>
