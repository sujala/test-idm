
schema set attribute (1.3.6.1.4.1.20988.2.1.1) = {
	name = middleName
	ldap-names = middleName
	syntax = CaseIgnoreString
};

schema set attribute (1.3.6.1.4.1.20988.2.1.2) = {
	name = rsRegion
	ldap-names = rsRegion
	equality = caseIgnoreMatch
	syntax = directoryString
	description = "The region for a user"
};

schema set attribute (1.3.6.1.4.1.20988.2.1.3) = {
	name = softDeleted
	ldap-names = softDeleted
	syntax = boolean
	description = "record soft deleted"
};

schema set attribute (1.3.6.1.4.1.20988.2.1.4) = {
	name = locked
	ldap-names = locked
	syntax = boolean
	description = "record is locked"
};

schema set attribute (1.3.6.1.4.1.20988.2.1.5) = {
	name = rsApiKey
	ldap-names = rsApiKey
	syntax = octetString
	description = "An API Key for a user"
};

schema set attribute (1.3.6.1.4.1.20988.2.1.6) = {
	name = clientId
	ldap-names = clientId
	equality = caseIgnoreMatch
	syntax = directoryString
	description = "An API Key for a user"
};

schema set attribute (1.3.6.1.4.1.20988.2.1.7) = {
	name = status
	ldap-names = status
	equality = caseIgnoreMatch
	syntax = directoryString
	description = "status"
};

schema set attribute (1.3.6.1.4.1.20988.2.1.8) = {
	name = groupType
	ldap-names = groupType
	equality = caseIgnoreMatch
	syntax = directoryString
	description = "groupType"
};

schema set attribute (1.3.6.1.4.1.20988.2.1.9) = {
	name = permissionType
	ldap-names = permissionType
	equality = caseIgnoreMatch
	syntax = directoryString
	description = "permissionType"
};

schema set attribute (1.3.6.1.4.1.20988.2.1.10) = {
	name = inum
	ldap-names = inum
	equality = caseIgnoreMatch
	syntax = directoryString
	description = "An i-number"
};

schema set attribute (1.3.6.1.4.1.20988.2.1.11) = {
	name = iname
	ldap-names = iname
	equality = caseIgnoreMatch
	syntax = directoryString
	description = "An i-name"
};

schema set attribute (1.3.6.1.4.1.20988.2.1.12) = {
	name = blob
	ldap-names = blob
	equality = caseIgnoreMatch
	syntax = directoryString
	description = "blob"
};

schema set attribute (1.3.6.1.4.1.20988.2.1.13) = {
	name = timeZone
	ldap-names = timeZone
	equality = caseIgnoreMatch
	syntax = directoryString
	description = "Property of a User indicating the time zone"
};

schema set attribute (1.3.6.1.4.1.20988.2.1.14) = {
	name = tokenRequestor
	ldap-names = tokenRequestor
	equality = caseIgnoreMatch
	syntax = directoryString
	description = "The XRI of the token requestor"
};

schema set attribute (1.3.6.1.4.1.20988.2.1.15) = {
	name = tokenOwner
	ldap-names = tokenOwner
	equality = caseIgnoreMatch
	syntax = directoryString
	description = "The token owner"
};

schema set attribute (1.3.6.1.4.1.20988.2.1.16) = {
	name = secretQuestion
	ldap-names = secretQuestion
	syntax = octetString
	description = "Users secret question used to reset password"
};

schema set attribute (1.3.6.1.4.1.20988.2.1.17) = {
	name = secretAnswer
	ldap-names = secretAnswer
	syntax = octetString
	description = "Users secret answer used to reset password"
};

schema set attribute (1.3.6.1.4.1.20988.2.1.18) = {
	name = clearPassword
	ldap-names = clearPassword
	syntax = octetString
	description = "Clear text password"
};

schema set attribute (1.3.6.1.4.1.20988.2.1.19) = {
	name = RCN
	ldap-names = RCN
	equality = caseIgnoreMatch
	syntax = directoryString
	description = "Property of an rackspaceUser denoting the Customer Id the the User is associated with"
};

schema set attribute (1.3.6.1.4.1.20988.2.1.20) = {
	name = RPN
	ldap-names = RPN
	equality = caseIgnoreMatch
	syntax = directoryString
	description = "Property of an rackspaceUser denoting the Person Id the the User is associated with"
};

schema set attribute (1.3.6.1.4.1.20988.2.1.21) = {
	name = permission
	ldap-names = permission
	equality = caseIgnoreMatch
	syntax = directoryString
	description = "A list of permissions"
};

schema set attribute (1.3.6.1.4.1.20988.2.1.22) = {
	name = expiration
	ldap-names = expiration
	equality = generalizedTimeMatch
	syntax = generalizedTime
	single-valued
	description = "UTC Time of Token Expiration"
};

schema set attribute (1.3.6.1.4.1.20988.2.1.23) = {
	name = rsMossoId
	ldap-names = rsMossoId
	syntax = integer
	description = "MossoId"
};

schema set attribute (1.3.6.1.4.1.20988.2.1.24) = {
	name = rsNastId
	ldap-names = rsNastId
	equality = caseIgnoreMatch
	syntax = directoryString
	description = "NastId"
};

schema set attribute (1.3.6.1.4.1.20988.2.1.25) = {
	name = baseUrlId
	ldap-names = baseUrlId
	syntax = integer
	description = "baseUrlId"
};

schema set attribute (1.3.6.1.4.1.20988.2.1.26) = {
	name = baseUrlType
	ldap-names = baseUrlType
	equality = caseIgnoreMatch
	syntax = directoryString
	description = "baseUrlType"
};

schema set attribute (1.3.6.1.4.1.20988.2.1.27) = {
	name = service
	ldap-names = service
	equality = caseIgnoreMatch
	syntax = directoryString
	description = "service"
};

schema set attribute (1.3.6.1.4.1.20988.2.1.28) = {
	name = publicUrl
	ldap-names = publicUrl
	equality = caseIgnoreMatch
	syntax = directoryString
	description = "publicUrl"
};

schema set attribute (1.3.6.1.4.1.20988.2.1.29) = {
	name = internalUrl
	ldap-names = internalUrl
	equality = caseIgnoreMatch
	syntax = directoryString
	description = "internalUrl"
};

schema set attribute (1.3.6.1.4.1.20988.2.1.30) = {
	name = rsAdminUrl
	ldap-names = rsAdminUrl
	equality = caseIgnoreMatch
	syntax = directoryString
	description = "adminUrl"
};

schema set attribute (1.3.6.1.4.1.20988.2.1.31) = {
	name = def
	ldap-names = def
	syntax = boolean
	description = "def"
};

schema set attribute (1.3.6.1.4.1.20988.2.1.32) = {
	name = softDeletedTimestamp
	ldap-names = softDeletedTimestamp
	equality = caseIgnoreMatch
	syntax = directoryString
	description = "softDeletedTimeStamp"
};

schema set attribute (1.3.6.1.4.1.20988.2.1.33) = {
	name = endpoint
	ldap-names = endpoint
	equality = caseIgnoreMatch
	syntax = directoryString
	description = "endpoint"
};

schema set attribute (1.3.6.1.4.1.20988.2.1.34) = {
	name = rsMail
	ldap-names = rsMail
	syntax = octetString
	description = "encrypted email"
};

schema set attribute (1.3.6.1.4.1.20988.2.1.35) = {
        name = rsDisplayName
        ldap-names = rsDisplayName
        syntax = octetString
        description = "encrypted display name"
};

schema set attribute (1.3.6.1.4.1.20988.2.1.36) = {
        name = rsGivenName
        ldap-names = rsGivenName
        syntax = octetString
        description = "encrypted given name"
};

schema set attribute (1.3.6.1.4.1.20988.2.1.37) = {
        name = rsSn
        ldap-names = rsSn
        syntax = octetString
        description = "encrypted dsurname"
};

schema set attribute (1.3.6.1.4.1.20988.2.1.38) = {
        name = passwordUpdatedTimestamp
        ldap-names = passwordUpdatedTimestamp
        equality = generalizedTimeMatch
	    syntax = generalizedTime
        description = "The last time the password was changed"
};

schema set attribute (1.3.6.1.4.1.20988.2.1.39) = {
        name = passwordSelfUpdated
        ldap-names = passwordSelfUpdated
        syntax = boolean
        description = "Did the user change his/her own password last time?"
};

schema set attribute (1.3.6.1.4.1.20988.2.1.40) = {
        name = passwordRotationEnabled
        ldap-names = passwordRotationEnabled
        syntax = boolean
        description = "Is the password rotation policy enabled for this customer?"
};

schema set attribute (1.3.6.1.4.1.20988.2.1.41) = {
        name = passwordRotationDuration
        ldap-names = passwordRotationDuration
        syntax = integer
        description = "Password rotation duration in days"
};

schema set attribute (1.3.6.1.4.1.20988.2.1.42) = {
    name = accessToken
    ldap-names = accessToken
    equality = caseIgnoreMatch
    syntax = directoryString
    description = "An Oauth Access Token"
};

schema set attribute (1.3.6.1.4.1.20988.2.1.43) = {
    name = refreshToken
    ldap-names = refreshToken
    equality = caseIgnoreMatch
    syntax = directoryString
    description = "An Oauth Refresh Token"
};

schema set attribute (1.3.6.1.4.1.20988.2.1.44) = {
        name = accessTokenExp
        ldap-names = accessTokenExp
        equality = generalizedTimeMatch
        syntax = generalizedTime
        description = "Expiration Time for an Access Token"
};

schema set attribute (1.3.6.1.4.1.20988.2.1.45) = {
        name = refreshTokenExp
        ldap-names = refreshTokenExp
        equality = generalizedTimeMatch
        syntax = generalizedTime
        description = "Expiration Time for a Refresh Token"
};

schema set attribute (1.3.6.1.4.1.20988.2.1.46) = {
    name = tokenScope
    ldap-names = tokenScope
    equality = caseIgnoreMatch
    syntax = directoryString
    description = "An Oauth Token Scope"
};

schema set attribute (1.3.6.1.4.1.20988.2.1.47) = {
    name = rsTitle
    ldap-names = rsTitle
    equality = caseIgnoreMatch
    syntax = directoryString
    description = "A Human Readable Permission Title"
};

schema set attribute (1.3.6.1.4.1.20988.2.1.48) = {
    name = resourceGroup
    ldap-names = resourceGroup
    equality = caseIgnoreMatch
    syntax = directoryString
    description = "A permission resource group"
};

schema set attribute (1.3.6.1.4.1.20988.2.1.49) = {
        name = grantedByDefault
        ldap-names = grantedByDefault
        syntax = boolean
        description = "Is this permission granted to a user by default?"
};

schema set attribute (1.3.6.1.4.1.20988.2.1.50) = {
        name = enabled
        ldap-names = enabled
        syntax = boolean
        description = "Is this object enabled?"
};

schema set attribute (1.3.6.1.4.1.20988.2.1.51) = {
    name = clientRCN
    ldap-names = clientRCN
    equality = caseIgnoreMatch
    syntax = directoryString
    description = "A client RCN"
};

schema set attribute (1.3.6.1.4.1.20988.2.1.52) = {
    name = userRCN
    ldap-names = userRCN
    equality = caseIgnoreMatch
    syntax = directoryString
    description = "A user RCN"
};

schema set object-class (1.3.6.1.4.1.20988.2.2.9) = {
    name = scopeAccess
    ldap-names = scopeAccess
    subclass-of top
    kind = structural
    must-contain
        clientId,
        clientRCN
    may-contain
        tokenScope,
        accessToken,
        accessTokenExp,
        refreshToken,
        refreshTokenEXP,
        uid,
        userRCN
};

schema set object-class (1.3.6.1.4.1.20988.2.2.8) = {
	name = clientGroup
	ldap-names = clientGroup
	subclass-of groupOfNames
	kind = structural
	must-contain
		cn,
		clientId,
		RCN
	may-contain
		c,
		displayName,
		permission,
		groupType
};

schema set object-class (1.3.6.1.4.1.20988.2.2.1) = {
	name = rsPerson
	ldap-names = rsPerson
	subclass-of top
	kind = structural
	must-contain
		inum
	may-contain
		c,
		rsDisplayName,
		rsGivenName,
		iname,
		locked,
		rsMail,
		middleName,
		o,
		permission,
		preferredLanguage,
		RCN,
		RPN,
		rsApiKey,
		rsMossoId,
		rsNastId,
		secretQuestion,
		secretAnswer,
		clearPassword,
		status,
		seeAlso,
		rsSn,
		timeZone,
		uid,
		userPassword,
		rsRegion,
		softDeleted,
		softDeletedTimestamp,
		endpoint,
		passwordUpdatedTimestamp,
		passwordSelfUpdated
};

schema set object-class (1.3.6.1.4.1.20988.2.2.2) = {
	name = rsOrganization
	ldap-names = rsOrganization
	subclass-of top
	kind = structural
	must-contain
		inum
	may-contain
		iname,
		locked,
		o,
		owner,
		RCN,
		status,
		seeAlso,
		softDeleted,
		passwordRotationEnabled,
        passwordRotationDuration
};

schema set object-class (1.3.6.1.4.1.20988.2.2.3) = {
	name = rsApplication
	ldap-names = rsApplication
	subclass-of top
	kind = structural
	must-contain
		cn,
		inum,
		clientId,
		userPassword
	may-contain
	    description,
		iname,
		locked,
		owner,
		o,
		permission,
		RCN,
		status,
		seeAlso,
		softDeleted,
		tokenScope
};

schema set object-class (1.3.6.1.4.1.20988.2.2.4) = {
	name = rsToken
	ldap-names = rsToken
	subclass-of top
	kind = structural
	must-contain
		o
	may-contain
		expiration,
		status,
		seeAlso,
		tokenOwner,
		tokenRequestor
};

schema set object-class (1.3.6.1.4.1.20988.2.2.5) = {
	name = rsGroup
	ldap-names = rsGroup
	subclass-of groupOfNames
	kind = structural
	must-contain
		inum
	may-contain
		c,
		cn,
		groupType,
		iname,
		o,
		permission,
		RCN,
		status,
		softDeleted
};

schema set object-class (1.3.6.1.4.1.20988.2.2.6) = {
	name = clientPermission
	ldap-names = clientPermission
	subclass-of top
	kind = structural
	must-contain
		cn,
		clientId,
		RCN
	may-contain
	    blob,
		permissionType,
		title,
		description,
		grantedByDefault,
		enabled,
		resourceGroup
};

schema set object-class (1.3.6.1.4.1.20988.2.2.7) = {
	name = baseUrl
	ldap-names = baseUrl
	subclass-of top
	kind = structural
	must-contain
		baseUrlId,
		baseUrlType,
		service,
		def,
		publicUrl
	may-contain
		rsRegion,
		internalUrl,
		adminUrl
};
