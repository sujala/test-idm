<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project name="idm-api-dev-1.5.2011" resourceRoot="" defaultScriptLanguage="Groovy" soapui-version="3.6.1" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.TestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Global Properties" value=""/>
  <con:entry key="TestSuite" value="&lt;all>"/>
  <con:entry key="Report to Generate" value=""/>
  <con:entry key="Password" value=""/>
  <con:entry key="soapui-setings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Save Project" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Export JUnit Results" value="false"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Export All" value="false"/>
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="TestCase" value="&lt;all>"/>
  <con:entry key="Print Report" value="false"/>
  <con:entry key="Username" value=""/>
  <con:entry key="Root Folder" value=""/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="Endpoint" value=""/>
</xml-fragment>]]></con:setting></con:settings><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="idm-api" type="rest" basePath="" definitionUrl="http://172.17.16.85:8080/idm-docs/idm-api.wadl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://172.17.16.85:8080/idm-docs/idm-api.wadl"><con:part><con:url>http://172.17.16.85:8080/idm-docs/idm-api.wadl</con:url><con:content><![CDATA[<application xsi:schemaLocation="xsd/idmapi.xsd" xmlns="http://wadl.dev.java.net/2009/02" xmlns:idm="http://docs.rackspacecloud.com/idm/api/v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <grammars>
    <include href="xsd/idmapi.xsd"/>
  </grammars>
  <resources base="http://172.17.16.85:8080">
    <resource id="version" path="v1.0">
      <method href="#getVersionInfo"/>
      <resource path="users" id="firstUsers">
        <method href="#addFirstUser"/>
      </resource>
      <resource path="customers" id="customers">
        <resource path="{customerId}" id="customer">
          <param name="customerId" type="xsd:string" required="true" style="template"/>
          <resource path="actions" id="customerActions">
            <resource path="lock" id="lock">
              <method href="#setCustomerLockStatus"/>
            </resource>
          </resource>
          <resource path="clients" id="clients">
            <method href="#getClients"/>
            <method href="#addClient"/>
            <resource path="{clientId}" id="client">
              <param name="clientId" type="xsd:string" required="true" style="template"/>
              <method href="#getClient"/>
              <method href="#deleteClient"/>
              <resource path="permissions" id="clientPermissions">
                <method href="#getClientPermissions"/>
                <resource path="granted" id="grantedPermissions">
                  <method href="#getClientGrantedPermissions"/>
                </resource>
                <resource path="defined" id="definedPermissions">
                  <method href="#getClientDefinedPermissions"/>
                  <method href="#addClientPermission"/>
                  <resource path="{permissionId}" id="permission">
                    <method href="#getClientPermission"/>
                    <method href="#deleteClientPermission"/>
                    <method href="#updateClientPermission"/>
                  </resource>
                </resource>
              </resource>
              <resource path="softdelete" id="clientSoftDelete">
                <method href="#setClientSoftDelete"/>
              </resource>
            </resource>
          </resource>
          <resource path="users" id="users">
            <method href="#getUsers"/>
            <method href="#addUser"/>
            <resource path="{username}" id="user">
              <param name="username" type="xsd:string" required="true" style="template"/>
              <method href="#getUser"/>
              <method href="#deleteUser"/>
              <method href="#updateUser"/>
              <resource path="key" id="userApiKey">
                <method href="#resetApiKey"/>
              </resource>
              <resource path="lock" id="userLock">
                <method href="#setUserLock"/>
              </resource>
              <resource path="password" id="userPassword">
                <method href="#getUserPassword"/>
                <method href="#setUserPassword"/>
                <method href="#resetUserPassword"/>
                <resource path="recoveryemail" id="recoveryEmail">
                  <method href="#sendRecoveryEmail"/>
                </resource>
                <resource path="recoverytoken" id="recoveryToken">
                  <method href="#getRecoveryToken"/>
                </resource>
              </resource>
              <resource path="roles" id="userRoles">
                <method href="#getUserRoles"/>
                <resource path="{roleName}" id="userRole">
                  <param name="roleName" type="xsd:string" required="true" style="template"/>
                  <method href="#setUserRole"/>
                  <method href="#deleteUserRole"/>
                </resource>
              </resource>
              <resource path="secret" id="userSecret">
                <method href="#setUserSecret"/>
              </resource>
              <resource path="softdelete" id="userSoftDelete">
                <method href="#setUserSoftDelete"/>
              </resource>
              <resource path="status" id="userStatus">
                <method href="#setUserStatus"/>
              </resource>
            </resource>
          </resource>
        </resource>
      </resource>
      <resource path="passwordrules" id="passwordRules">
        <method href="#getPasswordRules"/>
        <resource path="validation/{password}" id="passwordValidation">
          <param name="password" type="xsd:string" required="true" style="template"/>
          <method href="#validatePassword"/>
        </resource>
      </resource>
      <resource path="token" id="token">
        <method href="#getToken"/>
        <resource path="{tokenId}" id="tokenId">
          <param name="tokenId" type="xsd:string" required="true" style="template"/>
          <method href="#validateToken"/>
          <method href="#revokeToken"/>
          <resource path="permissions" id="permissions">
            <method href="#getPermissions"/>
          </resource>
        </resource>
      </resource>
    </resource>
  </resources>
  <!--General Methods-->
  <method name="GET" id="getVersionInfo">
    <response status="200">
      <representation mediaType="application/xml" element="idm:version"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="idm:idmFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="idm:serviceUnavailable"/>
    </response>
    <response status="500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <!--Client Methods-->
  <method name="GET" id="getClients">
    <request>
      <param name="Authorization" style="header" required="true"/>
    </request>
    <response status="200">
      <representation mediaType="application/xml" element="idm:clients"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="idm:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="idm:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="idm:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="idm:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="idm:idmFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="idm:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="POST" id="addClient">
    <request>
      <param name="Authorization" style="header" required="true"/>
      <representation mediaType="application/xml" element="idm:client"/>
      <representation mediaType="application/json"/>
    </request>
    <response status="201">
      <representation mediaType="application/xml" element="idm:client">
        <param name="Location" type="xsd:anyURI" style="header"/>
      </representation>
      <representation mediaType="application/json">
        <param name="Location" type="xsd:anyURI" style="header"/>
      </representation>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="idm:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="idm:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="idm:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="idm:itemNotFound"/>
    </response>
    <response status="409">
      <representation mediaType="application/xml" element="idm:clientnameConflict"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="idm:idmFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="idm:serviceUnavailable"/>
    </response>
    <response status="400 401 403 409 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getClient">
    <request>
      <param name="Authorization" style="header" required="true"/>
    </request>
    <response status="200">
      <representation mediaType="application/xml" element="idm:client"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="idm:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="idm:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="idm:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="idm:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="idm:idmFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="idm:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="DELETE" id="deleteClient">
    <request>
      <param name="Authorization" style="header" required="true"/>
    </request>
    <response status="204"/>
    <response status="400">
      <representation mediaType="application/xml" element="idm:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="idm:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="idm:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="idm:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="idm:idmFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="idm:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="PUT" id="setClientSoftDelete">
    <request>
      <param name="Authorization" style="header" required="true"/>
      <representation mediaType="application/xml" element="idm:client"/>
      <representation mediaType="application/json"/>
    </request>
    <response status="200">
      <representation mediaType="application/xml" element="idm:client"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="idm:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="idm:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="idm:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="idm:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="idm:idmFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="idm:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getClientPermissions">
    <request>
      <param name="Authorization" style="header" required="true"/>
    </request>
    <response status="200">
      <representation mediaType="application/xml" element="idm:permissions"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="idm:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="idm:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="idm:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="idm:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="idm:idmFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="idm:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getClientGrantedPermissions">
    <request>
      <param name="Authorization" style="header" required="true"/>
    </request>
    <response status="200">
      <representation mediaType="application/xml" element="idm:permissions"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="idm:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="idm:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="idm:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="idm:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="idm:idmFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="idm:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getClientDefinedPermissions">
    <request>
      <param name="Authorization" style="header" required="true"/>
    </request>
    <response status="200">
      <representation mediaType="application/xml" element="idm:permissions"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="idm:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="idm:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="idm:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="idm:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="idm:idmFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="idm:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getClientPermission">
    <request>
      <param name="Authorization" style="header" required="true"/>
    </request>
    <response status="200">
      <representation mediaType="application/xml" element="idm:permission"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="idm:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="idm:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="idm:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="idm:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="idm:idmFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="idm:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="POST" id="addClientPermission">
    <request>
      <param name="Authorization" style="header" required="true"/>
      <representation mediaType="application/xml" element="idm:resource"/>
      <representation mediaType="application/json"/>
    </request>
    <response status="200">
      <representation mediaType="application/xml" element="idm:resource"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="idm:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="idm:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="idm:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="idm:itemNotFound"/>
    </response>
    <response status="409">
      <representation mediaType="application/xml" element="idm:resourceIdConflict"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="idm:idmFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="idm:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="DELETE" id="deleteClientPermission">
    <request>
      <param name="Authorization" style="header" required="true"/>
    </request>
    <response status="204"/>
    <response status="400">
      <representation mediaType="application/xml" element="idm:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="idm:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="idm:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="idm:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="idm:idmFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="idm:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="PUT" id="updateClientPermission">
    <request>
      <param name="Authorization" style="header" required="true"/>
      <representation mediaType="application/xml" element="idm:resource"/>
      <representation mediaType="application/json"/>
    </request>
    <response status="200">
      <representation mediaType="application/xml" element="idm:resource"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="idm:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="idm:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="idm:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="idm:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="idm:idmFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="idm:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <!--Customer Methods-->
  <method name="PUT" id="setCustomerLockStatus">
    <request>
      <param name="Authorization" style="header" required="true"/>
      <representation mediaType="application/xml" element="idm:customer"/>
      <representation mediaType="application/json"/>
    </request>
    <response status="204">
      <representation mediaType="application/xml" element="idm:customer"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="idm:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="idm:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="idm:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="idm:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="idm:idmFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="idm:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <!--User Methods-->
  <method name="POST" id="addFirstUser">
    <request>
      <param name="Authorization" style="header" required="true"/>
      <representation mediaType="application/xml" element="idm:user"/>
      <representation mediaType="application/json"/>
    </request>
    <response status="201">
      <representation mediaType="application/xml" element="idm:user">
        <param name="Location" type="xsd:anyURI" style="header"/>
      </representation>
      <representation mediaType="application/json">
        <param name="Location" type="xsd:anyURI" style="header"/>
      </representation>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="idm:badRequest"/>
      <representation mediaType="application/xml" element="idm:passwordValidation"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="idm:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="idm:forbidden"/>
    </response>
    <response status="409">
      <representation mediaType="application/xml" element="idm:usernameConflict"/>
      <representation mediaType="application/xml" element="idm:customerIdConflict"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="idm:idmFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="idm:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 409 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getUsers">
    <request>
      <param name="Authorization" style="header" required="true"/>
      <param name="offset" style="query" required="false" type="xsd:integer"/>
      <param name="limit" style="query" required="false" type="xsd:integer"/>
    </request>
    <response status="200">
      <representation mediaType="application/xml" element="idm:users"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="idm:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="idm:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="idm:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="idm:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="idm:idmFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="idm:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="POST" id="addUser">
    <request>
      <param name="Authorization" style="header" required="true"/>
      <representation mediaType="application/xml" element="idm:user"/>
      <representation mediaType="application/json"/>
    </request>
    <response status="201">
      <representation mediaType="application/xml" element="idm:user">
        <param name="Location" type="xsd:anyURI" style="header"/>
      </representation>
      <representation mediaType="application/json">
        <param name="Location" type="xsd:anyURI" style="header"/>
      </representation>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="idm:badRequest"/>
      <representation mediaType="application/xml" element="idm:passwordValidation"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="idm:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="idm:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="idm:itemNotFound"/>
    </response>
    <response status="409">
      <representation mediaType="application/xml" element="idm:usernameConflict"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="idm:idmFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="idm:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 409 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getUser">
    <request>
      <param name="Authorization" style="header" required="true"/>
    </request>
    <response status="200">
      <representation mediaType="application/xml" element="idm:user"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="idm:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="idm:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="idm:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="idm:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="idm:idmFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="idm:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="DELETE" id="deleteUser">
    <request>
      <param name="Authorization" style="header" required="true"/>
    </request>
    <response status="204"/>
    <response status="400">
      <representation mediaType="application/xml" element="idm:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="idm:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="idm:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="idm:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="idm:idmFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="idm:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="PUT" id="setUserSoftDelete">
    <request>
      <param name="Authorization" style="header" required="true"/>
      <representation mediaType="application/xml" element="idm:user"/>
      <representation mediaType="application/json"/>
    </request>
    <response status="200">
      <representation mediaType="application/xml" element="idm:user"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="idm:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="idm:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="idm:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="idm:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="idm:idmFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="idm:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="PUT" id="updateUser">
    <request>
      <param name="Authorization" style="header" required="true"/>
      <representation mediaType="application/xml" element="idm:user"/>
      <representation mediaType="application/json"/>
    </request>
    <response status="200">
      <representation mediaType="application/xml" element="idm:user"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="idm:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="idm:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="idm:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="idm:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="idm:idmFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="idm:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 409 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="POST" id="resetApiKey">
    <request>
      <param name="Authorization" style="header" required="true"/>
    </request>
    <response status="200">
      <representation mediaType="application/xml" element="idm:userApiKey"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="idm:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="idm:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="idm:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="idm:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="idm:idmFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="idm:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getUserPassword">
    <request>
      <param name="Authorization" style="header" required="true"/>
    </request>
    <response status="200">
      <representation mediaType="application/xml" element="idm:userPassword"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="idm:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="idm:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="idm:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="idm:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="idm:idmFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="idm:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="PUT" id="setUserPassword">
    <request>
      <param name="Authorization" style="header" required="true"/>
      <param name="recovery" type="xsd:boolean" required="false" style="query"/>
      <representation mediaType="application/xml" element="idm:userCredentials"/>
      <representation mediaType="application/json"/>
    </request>
    <response status="204">
      <representation mediaType="application/xml"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="idm:badRequest"/>
      <representation mediaType="application/xml" element="idm:passwordValidation"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="idm:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="idm:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="idm:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="idm:idmFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="idm:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="POST" id="resetUserPassword">
    <request>
      <param name="Authorization" style="header" required="true"/>
    </request>
    <response status="200">
      <representation mediaType="application/xml" element="idm:userPassword"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="idm:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="idm:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="idm:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="idm:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="idm:idmFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="idm:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="POST" id="sendRecoveryEmail">
    <request>
      <param name="Authorization" style="header" required="true"/>
      <representation mediaType="application/xml" element="idm:passwordRecovery"/>
      <representation mediaType="application/json"/>
    </request>
    <response status="204">
      <representation mediaType="application/xml"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="idm:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="idm:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="idm:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="idm:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="idm:idmFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="idm:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="POST" id="getRecoveryToken">
    <request>
      <param name="Authorization" style="header" required="true"/>
    </request>
    <response status="204">
      <representation mediaType="application/xml" element="idm:auth"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="idm:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="idm:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="idm:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="idm:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="idm:idmFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="idm:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getUserRoles">
    <request>
      <param name="Authorization" style="header" required="true"/>
    </request>
    <response status="200">
      <representation mediaType="application/xml" element="idm:roles"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="idm:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="idm:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="idm:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="idm:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="idm:idmFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="idm:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="PUT" id="setUserRole">
    <request>
      <param name="Authorization" style="header" required="true"/>
    </request>
    <response status="204"/>
    <response status="400">
      <representation mediaType="application/xml" element="idm:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="idm:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="idm:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="idm:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="idm:idmFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="idm:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="DELETE" id="deleteUserRole">
    <request>
      <param name="Authorization" style="header" required="true"/>
    </request>
    <response status="204"/>
    <response status="400">
      <representation mediaType="application/xml" element="idm:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="idm:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="idm:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="idm:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="idm:idmFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="idm:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="PUT" id="setUserSecret">
    <request>
      <param name="Authorization" style="header" required="true"/>
      <representation mediaType="application/xml" element="idm:userSecret"/>
      <representation mediaType="application/json"/>
    </request>
    <response status="200">
      <representation mediaType="application/xml" element="idm:userSecret"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="idm:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="idm:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="idm:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="idm:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="idm:idmFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="idm:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="PUT" id="setUserStatus">
    <request>
      <param name="Authorization" style="header" required="true"/>
      <representation mediaType="application/xml" element="idm:user"/>
      <representation mediaType="application/json"/>
    </request>
    <response status="200">
      <representation mediaType="application/xml" element="idm:user"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="idm:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="idm:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="idm:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="idm:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="idm:idmFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="idm:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="PUT" id="setUserLock">
    <request>
      <param name="Authorization" style="header" required="true"/>
      <representation mediaType="application/xml" element="idm:user"/>
      <representation mediaType="application/json"/>
    </request>
    <response status="200">
      <representation mediaType="application/xml" element="idm:user"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="idm:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="idm:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="idm:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="idm:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="idm:idmFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="idm:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <!--Password Rules methods-->
  <method name="GET" id="getPasswordRules">
    <request>
      <param name="Authorization" style="header" required="true"/>
    </request>
    <response status="200">
      <representation mediaType="application/xml" element="idm:passwordRules"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="idm:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="idm:forbidden"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="idm:idmFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="idm:serviceUnavailable"/>
    </response>
    <response status="401 403 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <!--Validation methods-->
  <method name="GET" id="validatePassword">
    <request>
      <param name="Authorization" style="header" required="true"/>
    </request>
    <response status="200">
      <representation mediaType="application/xml" element="idm:passwordValidation"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="idm:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="idm:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="idm:forbidden"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="idm:idmFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="idm:serviceUnavailable"/>
    </response>
    <response status="400 401 403 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <!--Token methods-->
  <method name="POST" id="getToken">
    <request>
      <representation mediaType="application/xml" element="idm:authCredentials"/>
      <representation mediaType="application/json"/>
    </request>
    <response status="200">
      <representation mediaType="application/xml" element="idm:auth"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="idm:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="idm:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="idm:forbidden"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="idm:idmFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="idm:serviceUnavailable"/>
    </response>
    <response status="400 401 403 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="validateToken">
    <request>
      <param name="Authorization" style="header" required="true"/>
      <param name="belongsTo" style="query" required="false" type="xsd:string"/>
      <param name="clientId" style="query" required="false" type="xsd:string"/>
    </request>
    <response status="200">
      <representation mediaType="application/xml" element="idm:auth"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="idm:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="idm:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="idm:forbidden"/>
      <representation mediaType="application/xml" element="idm:userDisabled"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="idm:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="idm:idmFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="idm:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="DELETE" id="revokeToken">
    <request>
      <param name="Authorization" style="header" required="true"/>
    </request>
    <response status="204"/>
    <response status="400">
      <representation mediaType="application/xml" element="idm:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="idm:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="idm:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="idm:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="idm:idmFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="idm:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getPermissions">
    <request>
      <param name="Authorization" style="header" required="true"/>
    </request>
    <response status="200">
      <representation mediaType="application/xml" element="idm:permissions"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="idm:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="idm:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="idm:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="idm:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="idm:idmFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="idm:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
</application>]]></con:content><con:type>http://wadl.dev.java.net/2009/02</con:type></con:part><con:part><con:url>http://172.17.16.85:8080/idm-docs/xsd/idmapi.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2010 Rackspace Hosting, All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.rackspacecloud.com/idm/api/v1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:idm="http://docs.rackspacecloud.com/idm/api/v1.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0">
  <annotation>
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Idm API Schema Types</xsdxt:title>
      <xsdxt:link rev="index" href="client.xsd"/>
      <xsdxt:link rev="index" href="customer.xsd"/>
      <xsdxt:link rev="index" href="fault.xsd"/>
      <xsdxt:link rev="index" href="link.xsd"/>
      <xsdxt:link rev="index" href="password.xsd"/>
      <xsdxt:link rev="index" href="token.xsd"/>
      <xsdxt:link rev="index" href="user.xsd"/>
      <xsdxt:link rev="index" href="version.xsd"/>
      <xsdxt:link rev="index" href="role.xsd"/>
      <xsdxt:link rev="index" href="permission.xsd"/>
      <xsdxt:link rev="index" href="password_recovery.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>This is the main index XML Schema document for the
				Rackspace
				Identity Management API.</p>
    </xsd:documentation>
  </annotation>
  <include schemaLocation="link.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Entities related to atom links.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <include schemaLocation="permission.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Entities related to IdM permissions.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <include schemaLocation="role.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Entities related to IdM roles.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <include schemaLocation="version.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Entities related to API version details.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <include schemaLocation="user.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>User entities.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <include schemaLocation="client.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Client entities.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <include schemaLocation="customer.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Customer entities.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <include schemaLocation="token.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Defines credentials used to obtain an OAuth token.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <include schemaLocation="password.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Password entities.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <include schemaLocation="fault.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>All fault types.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <include schemaLocation="password_recovery.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>End user password recovery request..</p>
      </xsd:documentation>
    </annotation>
  </include>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://172.17.16.85:8080/idm-docs/xsd/link.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2010 Rackspace Hosting, All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" jaxb:version="2.1" jaxb:extensionBindingPrefixes="xjc" targetNamespace="http://docs.rackspacecloud.com/idm/api/v1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:idm="http://docs.rackspacecloud.com/idm/api/v1.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:jaxb="http://java.sun.com/xml/ns/jaxb" xmlns:xjc="http://java.sun.com/xml/ns/jaxb/xjc">
  <annotation>
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Links</xsdxt:title>
      <xsdxt:link rel="index" href="idmapi.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>This schema file defines entities related to atom links.</p>
    </xsd:documentation>
  </annotation>
  <complexType name="Link">
    <attribute name="rel" type="xsd:string" use="required"/>
    <attribute name="href" type="xsd:string" use="required"/>
  </complexType>
  <element name="link" type="idm:Link"/>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://172.17.16.85:8080/idm-docs/xsd/permission.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2010 Rackspace Hosting, All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.rackspacecloud.com/idm/api/v1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:idm="http://docs.rackspacecloud.com/idm/api/v1.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0">
  <annotation>
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Clients</xsdxt:title>
      <xsdxt:link rel="index" href="idmapi.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>This schema file defines entities related to permissions.</p>
    </xsd:documentation>
  </annotation>
  <!--Elements-->
  <element name="permission" type="idm:Permission">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A permission.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/permission.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/permission.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="permissions" type="idm:PermissionSet">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A list of permissions.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/permissions.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/permissions.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="Permission">
    <simpleContent>
      <extension base="xsd:string">
        <attribute name="permissionId" type="xsd:string" use="required">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
              <p>A id of a permission.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
        <attribute name="customerId" type="xsd:string" use="required">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
              <p>The customerId that owns the clientId.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
        <attribute name="clientId" type="xsd:string" use="required">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
              <p>The clientId that owns the permission.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
        <attribute name="type" type="xsd:string" use="optional">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
              <p>The mime type of the permission.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
      </extension>
    </simpleContent>
  </complexType>
  <complexType name="PermissionList">
    <sequence>
      <element name="permission" type="idm:Permission" minOccurs="0" maxOccurs="unbounded"></element>
    </sequence>
  </complexType>
  <complexType name="PermissionSet">
    <sequence>
      <element name="granted" type="idm:PermissionList" minOccurs="0" maxOccurs="1"></element>
      <element name="defined" type="idm:PermissionList" minOccurs="0" maxOccurs="1"/>
    </sequence>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://172.17.16.85:8080/idm-docs/xsd/role.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2010 Rackspace Hosting, All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" jaxb:version="2.1" jaxb:extensionBindingPrefixes="xjc" targetNamespace="http://docs.rackspacecloud.com/idm/api/v1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:idm="http://docs.rackspacecloud.com/idm/api/v1.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:jaxb="http://java.sun.com/xml/ns/jaxb" xmlns:xjc="http://java.sun.com/xml/ns/jaxb/xjc">
  <include schemaLocation="permission.xsd"/>
  <annotation>
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Clients</xsdxt:title>
      <xsdxt:link rel="index" href="idmapi.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>This schema file defines entities related to roles.</p>
    </xsd:documentation>
  </annotation>
  <!--Elements-->
  <element name="role" type="idm:Role">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A role.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/role.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/role.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="roles" type="idm:RoleList">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A list of roles.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/roles.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/roles.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="Role">
    <sequence>
      <element name="permissions" type="idm:PermissionList">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The list of permissions associated with the role.</p>
          </xsd:documentation>
        </annotation>
      </element>
    </sequence>
    <attribute name="name" type="xsd:string" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The name of the role.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="type" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The role type.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
  </complexType>
  <complexType name="RoleList">
    <sequence>
      <element name="role" type="idm:Role" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://172.17.16.85:8080/idm-docs/xsd/version.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2010 Rackspace Hosting, All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" jaxb:version="2.1" jaxb:extensionBindingPrefixes="xjc" targetNamespace="http://docs.rackspacecloud.com/idm/api/v1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:idm="http://docs.rackspacecloud.com/idm/api/v1.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:jaxb="http://java.sun.com/xml/ns/jaxb" xmlns:xjc="http://java.sun.com/xml/ns/jaxb/xjc">
  <annotation>
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>API Version Details</xsdxt:title>
      <xsdxt:link rel="index" href="idmapi.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>This schema file defines a version element which provides
				meta information about the current version of the API.</p>
    </xsd:documentation>
  </annotation>
  <element name="version" type="idm:Version">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>This element provides detailed meta information regarding the
					status of the API version. Included is a pointer to both a
					human readable and a machine processable description of the
					API service. The machine processable description is written
					in the Web Application Description Language (WADL). If a
					discrepancy exists between the two specifications, the WADL is
					authoritative as it contains the most accurate and up-to-date
					description of the API service.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/version.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/version.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="Version">
    <attribute type="xsd:string" name="id" use="required" fixed="v1.1">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>
            A unique ID which identifies the API version. Currently
						this is fixed as
            <strong>v1.0</strong>
            . The first element
						of the path to the API endpoints always contains the
						target version ID.
          </p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute type="idm:VersionStatus" name="status" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>
            The status of the API version. A stable version will
						always have the value
            <strong>CURRENT</strong>
            . See
            <a href="#type_VersionStatus" title="VersionStatus">VersionStatus</a>
            .
          </p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute type="xsd:anyURI" name="docURL" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A URL to a human readable API specification in PDF
						format. This URL will always point to the latest version
						of the specification applicable to the requested
						implementation.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute type="xsd:anyURI" name="wadl" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A URL to a machine readable API specification in WADL
						format. This URL will always point to the latest version
						of the specification applicable to the requested
						implementation.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
  </complexType>
  <!--Simple Types-->
  <simpleType name="VersionStatus">
    <restriction base="xsd:string">
      <enumeration value="BETA">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>A status of BETA indicates that this version is a
							candidate for the next major release and may feature
							functionality not available in the current version.
							Developers are encouraged to test and begin the migration
							processes to a BETA version. Note that a BETA version is
							undergoing testing, it has not been officially released,
							and my not be stable.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="CURRENT">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The API version is stable and has been tested. Developers
							are encouraged to develop against this API version. The
							current released version of the API will always be marked
							as CURRENT.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="DEPRECATED">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>A status of DEPRECATED indicates that a newer version of
							the API is available. Application developers are
							discouraged from using this version and should instead
							develop against the latest current version of the API.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
    </restriction>
  </simpleType>
  <complexType name="VersionList">
    <sequence>
      <element name="version" type="idm:Version" minOccurs="1" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <element name="versions" type="idm:VersionList"/>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://172.17.16.85:8080/idm-docs/xsd/user.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2010 Rackspace Hosting, All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.rackspacecloud.com/idm/api/v1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:idm="http://docs.rackspacecloud.com/idm/api/v1.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0">
  <include schemaLocation="role.xsd"/>
  <include schemaLocation="link.xsd"/>
  <annotation>
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Users</xsdxt:title>
      <xsdxt:link rel="index" href="idmapi.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>This schema file defines entities related to a user.</p>
    </xsd:documentation>
  </annotation>
  <!--Elements-->
  <element name="userCredentials" type="idm:UserCredentials">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A rackspace user's credentials.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/user_credentials.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/user_credentials.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="userApiKey" type="idm:UserApiKey">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A rackspace user's api key.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/user_api_key.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/user_api_key.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="userPassword" type="idm:UserPassword">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A rackspace user's password.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/user_api_key.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/user_api_key.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="user" type="idm:User">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A rackspace user.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/user.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/user.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="users" type="idm:UserList">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A list of rackspace users.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/users.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/users.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="userSecret" type="idm:UserSecret">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A rackspace user's secret question and answer.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/user_secret.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/user_secret.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="UserCredentials">
    <sequence>
      <element name="newPassword" type="idm:UserPassword" minOccurs="0" maxOccurs="1">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The user's new password.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element name="currentPassword" type="idm:UserPassword" minOccurs="0" maxOccurs="1">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The user's current password.</p>
          </xsd:documentation>
        </annotation>
      </element>
    </sequence>
  </complexType>
  <complexType name="UserSecret">
    <attribute name="secretQuestion" type="string" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A user's secret question.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="secretAnswer" type="string" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The answer to the user's secret question.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
  </complexType>
  <complexType name="User">
    <sequence>
      <element name="secret" type="idm:UserSecret" minOccurs="0" maxOccurs="1">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The user's secret contains a question and
							answer that can be
							used to confirm the
							user's identity.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element name="password" type="idm:UserPassword" minOccurs="0" maxOccurs="1">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>A user's password.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element name="apiKey" type="idm:UserApiKey" minOccurs="0" maxOccurs="1">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>A user's api key.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element name="roles" type="idm:RoleList" minOccurs="0" maxOccurs="1">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>A list of roles the user belongs to.</p>
          </xsd:documentation>
        </annotation>
      </element>
    </sequence>
    <attribute name="username" type="string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The unique username of the user.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="customerId" type="string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The customerId of the customer that the user is
						associated with.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="customerInum" type="string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The customer inum of the customer that the user
						is associated
						with.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="email" type="string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The user's email address.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="personId" type="string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A unique rackspace personId for the user.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="firstName" type="string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The user's first name.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="middleName" type="string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The user's middle name.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="lastName" type="string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The user's last name.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="displayName" type="string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The user's display name.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="prefLanguage" type="string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The user's preferred language.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="inum" type="string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The user's unique i-number.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="iname" type="string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The user's unique i-name.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="region" type="string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The airport code of the user's region.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="status" type="idm:UserStatus" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The user's status.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="locked" type="boolean" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A boolean which indicates if the user is locked.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="softDeleted" type="boolean" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A boolean which indicates if the user has been
						soft deleted.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="country" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The user's country.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="timeZone" type="xsd:string" use="optional" default="America/Chicago">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The user's time zone.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
  </complexType>
  <complexType name="UserList">
    <sequence>
      <element name="user" type="idm:User" minOccurs="0" maxOccurs="unbounded"></element>
      <element name="link" type="idm:Link" minOccurs="0" maxOccurs="3"/>
    </sequence>
    <attribute name="totalRecords" type="xsd:int" use="optional"/>
    <attribute name="offset" type="xsd:int" use="optional"/>
    <attribute name="limit" type="xsd:int" use="optional"/>
  </complexType>
  <complexType name="UserApiKey">
    <attribute name="apiKey" type="string" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A user's api key.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
  </complexType>
  <complexType name="UserPassword">
    <attribute name="password" type="string" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A user's password.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
  </complexType>
  <!--Simple Types-->
  <simpleType name="UserStatus">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>The UserStatus indicates whether the user is active
					or inactive</p>
      </xsd:documentation>
    </annotation>
    <restriction base="string">
      <enumeration value="ACTIVE">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The user is Active and can authenticate with
							the Idm API.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="INACTIVE">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The user is Inactive and cannot authenticate
							with the Idm API.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
    </restriction>
  </simpleType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://172.17.16.85:8080/idm-docs/xsd/client.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2010 Rackspace Hosting, All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" jaxb:version="2.1" jaxb:extensionBindingPrefixes="xjc" targetNamespace="http://docs.rackspacecloud.com/idm/api/v1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:idm="http://docs.rackspacecloud.com/idm/api/v1.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:jaxb="http://java.sun.com/xml/ns/jaxb" xmlns:xjc="http://java.sun.com/xml/ns/jaxb/xjc">
  <include schemaLocation="permission.xsd"/>
  <annotation>
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Clients</xsdxt:title>
      <xsdxt:link rel="index" href="idmapi.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>This schema file defines entities related to a client.</p>
    </xsd:documentation>
  </annotation>
  <!--Elements-->
  <element name="client" type="idm:Client">
    <annotation>
      <xsd:documentation>
        <p>A rackspace client.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/client.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/client.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="clients" type="idm:ClientList">
    <annotation>
      <xsd:documentation>
        <p>A list of rackspace clients.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/clients.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/clients.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="clientCredentials" type="idm:ClientCredentials">
    <annotation>
      <xsd:documentation>
        <p>A rackspace client's credentials.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/client_credentials.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/client_credentials.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="Client">
    <sequence>
      <element name="credentials" type="idm:ClientCredentials" minOccurs="0" maxOccurs="1">
        <annotation>
          <documentation>
            <p>The client's credentials.</p>
          </documentation>
        </annotation>
      </element>
      <element name="permissions" type="idm:PermissionList" minOccurs="0" maxOccurs="1">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>A list of permissions the client has.</p>
          </xsd:documentation>
        </annotation>
      </element>
    </sequence>
    <attribute name="clientId" type="string" use="optional">
      <annotation>
        <documentation>
          <p>The client's unique Id.</p>
        </documentation>
      </annotation>
    </attribute>
    <attribute name="customerId" type="xsd:string" use="required">
      <annotation>
        <documentation>
          <p>The unique Id for the customer the client belongs to.</p>
        </documentation>
      </annotation>
    </attribute>
    <attribute name="name" type="string" use="required">
      <annotation>
        <documentation>
          <p>The client name.</p>
        </documentation>
      </annotation>
    </attribute>
    <attribute name="inum" type="string" use="optional">
      <annotation>
        <documentation>
          <p>The client's unique i-number.</p>
        </documentation>
      </annotation>
    </attribute>
    <attribute name="iname" type="string" use="optional">
      <annotation>
        <documentation>
          <p>The client's unique i-name.</p>
        </documentation>
      </annotation>
    </attribute>
    <attribute name="status" type="idm:ClientStatus" use="optional">
      <annotation>
        <documentation>
          <p>The user's status.</p>
        </documentation>
      </annotation>
    </attribute>
    <attribute name="locked" type="boolean" use="optional">
      <annotation>
        <documentation>
          <p>A boolean which indicates if the client is
						locked.</p>
        </documentation>
      </annotation>
    </attribute>
    <attribute name="softDeleted" type="boolean" use="optional">
      <annotation>
        <documentation>
          <p>A boolean which indicates if the client has been
						soft deleted.</p>
        </documentation>
      </annotation>
    </attribute>
  </complexType>
  <complexType name="ClientList">
    <sequence>
      <element name="client" type="idm:Client" minOccurs="0" maxOccurs="unbounded"></element>
    </sequence>
  </complexType>
  <complexType name="ClientCredentials">
    <attribute name="clientSecret" type="string" use="required">
      <annotation>
        <documentation>
          <p>A client's secret.</p>
        </documentation>
      </annotation>
    </attribute>
  </complexType>
  <!--Simple Types-->
  <simpleType name="ClientStatus">
    <annotation>
      <documentation>
        <p>The ClientStatus indicates whether the user is
					active or inactive</p>
      </documentation>
    </annotation>
    <restriction base="string">
      <enumeration value="ACTIVE">
        <annotation>
          <documentation>
            <p>The client is Active and can authenticate
							with the Idm API.</p>
          </documentation>
        </annotation>
      </enumeration>
      <enumeration value="INACTIVE">
        <annotation>
          <documentation>
            <p>The client is Inactive and cannot
							authenticate with the Idm API.</p>
          </documentation>
        </annotation>
      </enumeration>
    </restriction>
  </simpleType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://172.17.16.85:8080/idm-docs/xsd/customer.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2010 Rackspace Hosting, All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" jaxb:version="2.1" jaxb:extensionBindingPrefixes="xjc" targetNamespace="http://docs.rackspacecloud.com/idm/api/v1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:idm="http://docs.rackspacecloud.com/idm/api/v1.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:jaxb="http://java.sun.com/xml/ns/jaxb" xmlns:xjc="http://java.sun.com/xml/ns/jaxb/xjc">
  <annotation>
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Customers</xsdxt:title>
      <xsdxt:link rel="index" href="idmapi.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>This schema file defines entities related to a customer.</p>
    </xsd:documentation>
  </annotation>
  <!--Elements-->
  <element name="customer" type="idm:Customer">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A rackspace customer.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/customer.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/customer.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="customers" type="idm:CustomerList">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A list of rackspace customers.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/customers.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/customers.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="Customer">
    <attribute name="customerId" type="string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A unique customer Id. This is also known as the customer number.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="inum" type="string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A unique inum associated with the customer.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="iname" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A unique iname associated with the customer inum.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="locked" type="boolean" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A boolean indicating if the customer is locked.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="softDeleted" type="boolean" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A boolean indicating if the customer has been soft deleted.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
  </complexType>
  <complexType name="CustomerList">
    <sequence>
      <element name="customer" type="idm:Customer" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://172.17.16.85:8080/idm-docs/xsd/token.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2010 Rackspace Hosting, All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" jaxb:version="2.1" jaxb:extensionBindingPrefixes="xjc" targetNamespace="http://docs.rackspacecloud.com/idm/api/v1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:idm="http://docs.rackspacecloud.com/idm/api/v1.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:jaxb="http://java.sun.com/xml/ns/jaxb" xmlns:xjc="http://java.sun.com/xml/ns/jaxb/xjc">
  <annotation>
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Tokens</xsdxt:title>
      <xsdxt:link rel="index" href="idmapi.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>This schema file defines entities related to tokens.</p>
    </xsd:documentation>
  </annotation>
  <include schemaLocation="user.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Entities related users.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <include schemaLocation="client.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Entities related to clients.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <include schemaLocation="permission.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Entities related to permissions.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <!--Elements-->
  <element name="auth" type="idm:AuthData">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>The data returned for a successful authentication.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/auth.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/auth.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="authCredentials" type="idm:AuthCredentials">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>The data required for authentication.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/auth_credentials.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/auth_credentials.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="token" type="idm:Token">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>An authentication Token.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/token.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/token.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="Token">
    <attribute name="id" type="xsd:string" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The token id.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="expires_in" type="xsd:int" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A number of seconds until the token expires.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
  </complexType>
  <complexType name="AuthData">
    <sequence>
      <element name="access_token" type="idm:Token" minOccurs="1" maxOccurs="1">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>An access token.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element name="refresh_token" type="idm:Token" minOccurs="0" maxOccurs="1">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>A refresh token.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element name="user" type="idm:User" minOccurs="0" maxOccurs="1">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The user associated with the token.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element name="client" type="idm:Client" minOccurs="0" maxOccurs="1">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>A client associated with the token.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element name="permissions" type="idm:PermissionList" minOccurs="0" maxOccurs="1"/>
    </sequence>
  </complexType>
  <complexType name="AuthCredentials">
    <attribute name="grant_type" type="idm:AuthGrantType" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The OAuth grant type.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="client_id" type="string" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The client Id.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="client_secret" type="string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The client secret.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="username" type="string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The user's username.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="password" type="string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The user's password.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="refresh_token" type="string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The refresh token Id.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
  </complexType>
  <!--Simple Types-->
  <simpleType name="AuthGrantType">
    <restriction base="string">
      <enumeration value="API_CREDENTIALS">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The OAuth grant type api_credentials.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="ASSERTION">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The OAuth grant type assertion.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="AUTHORIZATION_CODE">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The OAuth grant type authorization_code.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="NONE">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The OAuth grant type none.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="PASSWORD">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The OAuth grant type password.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="REFRESH_TOKEN">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The OAuth grant type refresh_token.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
    </restriction>
  </simpleType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://172.17.16.85:8080/idm-docs/xsd/password.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2010 Rackspace Hosting, All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" jaxb:version="2.1" jaxb:extensionBindingPrefixes="xjc" targetNamespace="http://docs.rackspacecloud.com/idm/api/v1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:idm="http://docs.rackspacecloud.com/idm/api/v1.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:jaxb="http://java.sun.com/xml/ns/jaxb" xmlns:xjc="http://java.sun.com/xml/ns/jaxb/xjc">
  <annotation>
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Passwords</xsdxt:title>
      <xsdxt:link rel="index" href="idmapi.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>This schema file defines entities related to a password.</p>
    </xsd:documentation>
  </annotation>
  <!--Elements-->
  <element name="passwordRule" type="idm:PasswordRule">
    <annotation>
      <xsd:documentation>
        <p>A password rule.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/password_rule.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/password_rule.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="passwordRules" type="idm:PasswordRuleList">
    <annotation>
      <xsd:documentation>
        <p>A list of password rules.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/password_rules.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/password_rules.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="passwordValidation" type="idm:PasswordValidation">
    <annotation>
      <xsd:documentation>
        <p>A password validation.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/password_validation.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/password_validation.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="passwordRuleResult" type="idm:PasswordRuleResult">
    <annotation>
      <xsd:documentation>
        <p>A password rule result.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/password_rule_result.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/password_rule_result.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="passwordRuleResults" type="idm:PasswordRuleResultList">
    <annotation>
      <xsd:documentation>
        <p>A list of password rule results.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/password_rule_results.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/password_rule_results.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="PasswordRule">
    <attribute name="id" type="int" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A unique Id for the password rule.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="name" type="string" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The name of the password rule.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="message" type="string" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A human readable description of the rule.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
  </complexType>
  <complexType name="PasswordRuleList">
    <sequence>
      <element name="passwordRule" type="idm:PasswordRule" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <complexType name="PasswordRuleResult">
    <attribute name="passed" type="boolean" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A boolean which indicates whether the password passed the rule.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="ruleId" type="int" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A unique Id for the password rule.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="ruleName" type="string" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The name of the password rule.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="ruleMessage" type="string" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A human readable description of the rule.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
  </complexType>
  <complexType name="PasswordRuleResultList">
    <sequence>
      <element name="passwordRuleResults" type="idm:PasswordRuleResult" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <complexType name="PasswordValidation">
    <sequence>
      <element name="passwordRuleResults" type="idm:PasswordRuleResultList"></element>
    </sequence>
    <attribute name="validPassword" type="boolean" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A boolean which indicates whether the password passed all rules.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://172.17.16.85:8080/idm-docs/xsd/fault.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2010 Rackspace Hosting, All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" jaxb:version="2.1" jaxb:extensionBindingPrefixes="xjc" targetNamespace="http://docs.rackspacecloud.com/idm/api/v1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:idm="http://docs.rackspacecloud.com/idm/api/v1.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:jaxb="http://java.sun.com/xml/ns/jaxb" xmlns:xjc="http://java.sun.com/xml/ns/jaxb/xjc">
  <annotation>
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Faults</xsdxt:title>
      <xsdxt:link rel="index" href="idmapi.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>
        This schema file defines faults that may be raised by the IdM
				API.
				These faults are derived from the
        <a href="#type_IdmFault" title="See definition of              IdmFault">IdmFault</a>
      </p>
      <p>
        Faults are associated with a default HTTP status code that
				corresponds to the particular fault type. For example an
        <a href="#element_itemNotFound" title="see definition of              itemNotFound">&lt;itemNotFound></a>
        element is associated
				with the HTTP status code 404. Some elements,
				the
        <a href="#element_authFault" title="see definition of              idmFault">&lt;idmFault></a>
        element for example, may be
				associated with multiple status codes. It
				is also possible
				for multiple fault elements to be associated with
				the same
				default code. The examples below showcase the default status
				codes for each element type. Note that these default codes are
				not
				part of the formal schema. In practice, however, an
				element type will
				likely be associated with its corresponding
				default status code.
      </p>
    </xsd:documentation>
  </annotation>
  <!--Elements-->
  <element name="idmFault" type="idm:IdmFault">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A generic Idm Fault.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/idm_fault.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/idm_fault.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="userDisabled" type="idm:UserDisabledFault">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>The user has been disabled and is not permitted to
					authenticate.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/user_disabled.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/user_disabled.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="missingUsername" type="idm:UserNotFoundFault">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>An authentication request requires a username.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/missing_username.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/missing_username.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="badRequest" type="idm:BadRequestFault">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>The request is malformed.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/bad_request.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/bad_request.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="unauthorized" type="idm:UnauthorizedFault">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Authorization failed. Bad API Key? Username?</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/unauthorized.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/unauthorized.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="itemNotFound" type="idm:ItemNotFoundFault">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>The item or resource could not be found.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/item_not_found.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/item_not_found.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="forbidden" type="idm:ForbiddenFault">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Authentication succeeded but you lack sufficient privileges.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/forbidden.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/forbidden.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="usernameConflict" type="idm:UsernameConflictFault">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A user with that username already exists.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/username_conflict.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/username_conflict.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="clientnameConflict" type="idm:ClientnameConflictFault">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A client with that clientname already exists.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/clientname_conflict.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/clientname_conflict.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="resourceIdConflict" type="idm:ResourceIdConflictFault">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A resource with that resourceId already exists.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/resourceId_conflict.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/resourceId_conflict.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="emailConflict" type="idm:EmailConflictFault">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A user with that email address already exists.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/email_conflict.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/email_conflict.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="customerIdConflict" type="idm:CustomerIdConflictFault">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A customer with that customerId already exists.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/customer_conflict.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/customer_conflict.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="serviceUnavailable" type="idm:ServiceUnavailableFault">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>The API is currently unavailable.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/unavailable.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/unavailable.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="passwordValidationFault" type="idm:PasswordValidationFault">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>The password failed validation.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/passwordvalidationfault.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/passwordvalidationfault.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="IdmFault">
    <sequence>
      <element name="message" type="xsd:string">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>A human readable message that is appropriate for display
							to the
							end user.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element name="details" type="xsd:string" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The optional &lt;details> element may contain useful
							information for tracking down errors (e.g a stack
							trace). This
							information may or may not be appropriate
							for display to an end
							user.</p>
          </xsd:documentation>
        </annotation>
      </element>
    </sequence>
    <attribute name="code" type="xsd:int" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The HTTP status code associated with the current fault.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
  </complexType>
  <complexType name="UserDisabledFault">
    <complexContent>
      <extension base="idm:IdmFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="UserNotFoundFault">
    <complexContent>
      <extension base="idm:IdmFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="BadRequestFault">
    <complexContent>
      <extension base="idm:IdmFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="UnauthorizedFault">
    <complexContent>
      <extension base="idm:IdmFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="ItemNotFoundFault">
    <complexContent>
      <extension base="idm:IdmFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="ForbiddenFault">
    <complexContent>
      <extension base="idm:IdmFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="UsernameConflictFault">
    <complexContent>
      <extension base="idm:IdmFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="EmailConflictFault">
    <complexContent>
      <extension base="idm:IdmFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="CustomerIdConflictFault">
    <complexContent>
      <extension base="idm:IdmFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="ResourceIdConflictFault">
    <complexContent>
      <extension base="idm:IdmFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="ClientnameConflictFault">
    <complexContent>
      <extension base="idm:IdmFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="ServiceUnavailableFault">
    <complexContent>
      <extension base="idm:IdmFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="PasswordValidationFault">
    <complexContent>
      <extension base="idm:IdmFault"/>
    </complexContent>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://172.17.16.85:8080/idm-docs/xsd/password_recovery.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2010 Rackspace Hosting, All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" jaxb:version="2.1" jaxb:extensionBindingPrefixes="xjc" targetNamespace="http://docs.rackspacecloud.com/idm/api/v1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:idm="http://docs.rackspacecloud.com/idm/api/v1.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:jaxb="http://java.sun.com/xml/ns/jaxb" xmlns:xjc="http://java.sun.com/xml/ns/jaxb/xjc">
  <annotation>
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Password Recovery</xsdxt:title>
      <xsdxt:link rel="index" href="idmapi.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>Parameters for password recovery email. Allows for
				client-specified named parameters that will be substituted into
				placeholders in email template.</p>
    </xsd:documentation>
  </annotation>
  <complexType name="emailConfiguration">
    <sequence>
      <element name="customParams" type="idm:customParamsList" minOccurs="0" maxOccurs="1"/>
    </sequence>
    <attribute name="callbackUrl" type="anyURI" use="required"/>
    <attribute name="templateUrl" type="anyURI" use="required"/>
    <attribute name="from" type="string" use="required"/>
    <attribute name="replyTo" type="string"/>
    <attribute name="subject" type="string" use="required"/>
  </complexType>
  <complexType name="customParam">
    <annotation>
      <documentation>Client-specified named parameter. The parameter names
				are arbitrary and irrelevant to the IDM system itself,
				other than the
				matching placeholders in email template
				will be substituted with the
				value of the incoming named
				parameters.</documentation>
    </annotation>
    <attribute name="name" type="string"/>
    <attribute name="value" type="string"/>
  </complexType>
  <element name="passwordRecovery" type="idm:emailConfiguration">
    <annotation>
      <xsd:documentation>
        <p>A password recovery object.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/password_recovery.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/password_recovery.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <complexType name="customParamsList">
    <sequence>
      <element name="params" type="idm:customParam" minOccurs="0" maxOccurs="25"/>
    </sequence>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>${#Project#env-apiUrl}</con:endpoint></con:endpoints><con:resource name="v1.0" path="v1.0"><con:settings/><con:parameters/><con:resource name="users" path="users"><con:settings/><con:parameters/><con:method name="POST - addFirstUser" method="POST"><con:settings/><con:parameters><con:parameter required="true"><con:name>Authorization</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:passwordValidation</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>409</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:usernameConflict</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>409</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:customerIdConflict</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:idmFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 409 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://172.17.16.85:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="customers" path="customers"><con:settings/><con:parameters/><con:resource name="{customerId}" path="{customerId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>customerId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="actions" path="actions"><con:settings/><con:parameters/><con:resource name="lock" path="lock"><con:settings/><con:parameters/><con:method name="PUT - setCustomerLockStatus" method="PUT"><con:settings/><con:parameters><con:parameter required="true"><con:name>Authorization</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:customer</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>204</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:customer</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>204</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:idmFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://172.17.16.85:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource></con:resource><con:resource name="clients" path="clients"><con:settings/><con:parameters/><con:resource name="{clientId}" path="{clientId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>clientId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="permissions" path="permissions"><con:settings/><con:parameters/><con:resource name="granted" path="granted"><con:settings/><con:parameters/><con:method name="GET - getClientGrantedPermissions" method="GET"><con:settings/><con:parameters><con:parameter required="true"><con:name>Authorization</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:permissions</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:idmFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://172.17.16.85:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="defined" path="defined"><con:settings/><con:parameters/><con:resource name="{permissionId}" path="{permissionId}"><con:settings/><con:parameters/><con:method name="GET - getClientPermission" method="GET"><con:settings/><con:parameters><con:parameter required="true"><con:name>Authorization</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:permission</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:idmFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://172.17.16.85:8080</con:endpoint><con:parameters/></con:request></con:method><con:method name="DELETE - deleteClientPermission" method="DELETE"><con:settings/><con:parameters><con:parameter required="true"><con:name>Authorization</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:idmFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://172.17.16.85:8080</con:endpoint><con:parameters/></con:request></con:method><con:method name="PUT - updateClientPermission" method="PUT"><con:settings/><con:parameters><con:parameter required="true"><con:name>Authorization</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:resource</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:resource</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:idmFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://172.17.16.85:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:method name="GET - getClientDefinedPermissions" method="GET"><con:settings/><con:parameters><con:parameter required="true"><con:name>Authorization</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:permissions</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:idmFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://172.17.16.85:8080</con:endpoint><con:parameters/></con:request></con:method><con:method name="POST - addClientPermission" method="POST"><con:settings/><con:parameters><con:parameter required="true"><con:name>Authorization</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:resource</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:resource</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>409</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:resourceIdConflict</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:idmFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://172.17.16.85:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:method name="GET - getClientPermissions" method="GET"><con:settings/><con:parameters><con:parameter required="true"><con:name>Authorization</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:permissions</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:idmFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://172.17.16.85:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="softdelete" path="softdelete"><con:settings/><con:parameters/><con:method name="PUT - setClientSoftDelete" method="PUT"><con:settings/><con:parameters><con:parameter required="true"><con:name>Authorization</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:client</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:client</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:idmFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://172.17.16.85:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:method name="GET - getClient" method="GET"><con:settings/><con:parameters><con:parameter required="true"><con:name>Authorization</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:client</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:idmFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://172.17.16.85:8080</con:endpoint><con:parameters/></con:request></con:method><con:method name="DELETE - deleteClient" method="DELETE"><con:settings/><con:parameters><con:parameter required="true"><con:name>Authorization</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:idmFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://172.17.16.85:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:method name="GET - getClients" method="GET"><con:settings/><con:parameters><con:parameter required="true"><con:name>Authorization</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:clients</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:idmFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://172.17.16.85:8080</con:endpoint><con:parameters/></con:request></con:method><con:method name="POST - addClient" method="POST"><con:settings/><con:parameters><con:parameter required="true"><con:name>Authorization</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:client</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:client</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>409</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:clientnameConflict</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:idmFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 409 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://172.17.16.85:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="users" path="users"><con:settings/><con:parameters/><con:resource name="{username}" path="{username}"><con:settings/><con:parameters><con:parameter required="true"><con:name>username</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="key" path="key"><con:settings/><con:parameters/><con:method name="POST - resetApiKey" method="POST"><con:settings/><con:parameters><con:parameter required="true"><con:name>Authorization</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:userApiKey</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:idmFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://172.17.16.85:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="lock" path="lock"><con:settings/><con:parameters/><con:method name="PUT - setUserLock" method="PUT"><con:settings/><con:parameters><con:parameter required="true"><con:name>Authorization</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:idmFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://172.17.16.85:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="password" path="password"><con:settings/><con:parameters/><con:resource name="recoveryemail" path="recoveryemail"><con:settings/><con:parameters/><con:method name="POST - sendRecoveryEmail" method="POST"><con:settings/><con:parameters><con:parameter required="true"><con:name>Authorization</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:passwordRecovery</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>204</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>204</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:idmFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://172.17.16.85:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="recoverytoken" path="recoverytoken"><con:settings/><con:parameters/><con:method name="POST - getRecoveryToken" method="POST"><con:settings/><con:parameters><con:parameter required="true"><con:name>Authorization</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>204</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:auth</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>204</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:idmFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://172.17.16.85:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:method name="GET - getUserPassword" method="GET"><con:settings/><con:parameters><con:parameter required="true"><con:name>Authorization</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:userPassword</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:idmFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://172.17.16.85:8080</con:endpoint><con:parameters/></con:request></con:method><con:method name="PUT - setUserPassword" method="PUT"><con:settings/><con:parameters><con:parameter required="true"><con:name>Authorization</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>recovery</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:boolean</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:userCredentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>204</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>204</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:passwordValidation</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:idmFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://172.17.16.85:8080</con:endpoint><con:parameters/></con:request></con:method><con:method name="POST - resetUserPassword" method="POST"><con:settings/><con:parameters><con:parameter required="true"><con:name>Authorization</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:userPassword</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:idmFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://172.17.16.85:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="roles" path="roles"><con:settings/><con:parameters/><con:resource name="{roleName}" path="{roleName}"><con:settings/><con:parameters><con:parameter required="true"><con:name>roleName</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="PUT - setUserRole" method="PUT"><con:settings/><con:parameters><con:parameter required="true"><con:name>Authorization</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:idmFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://172.17.16.85:8080</con:endpoint><con:parameters/></con:request></con:method><con:method name="DELETE - deleteUserRole" method="DELETE"><con:settings/><con:parameters><con:parameter required="true"><con:name>Authorization</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:idmFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://172.17.16.85:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:method name="GET - getUserRoles" method="GET"><con:settings/><con:parameters><con:parameter required="true"><con:name>Authorization</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:roles</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:idmFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://172.17.16.85:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="secret" path="secret"><con:settings/><con:parameters/><con:method name="PUT - setUserSecret" method="PUT"><con:settings/><con:parameters><con:parameter required="true"><con:name>Authorization</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:userSecret</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:userSecret</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:idmFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://172.17.16.85:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="softdelete" path="softdelete"><con:settings/><con:parameters/><con:method name="PUT - setUserSoftDelete" method="PUT"><con:settings/><con:parameters><con:parameter required="true"><con:name>Authorization</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:idmFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://172.17.16.85:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="status" path="status"><con:settings/><con:parameters/><con:method name="PUT - setUserStatus" method="PUT"><con:settings/><con:parameters><con:parameter required="true"><con:name>Authorization</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:idmFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://172.17.16.85:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:method name="GET - getUser" method="GET"><con:settings/><con:parameters><con:parameter required="true"><con:name>Authorization</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:idmFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://172.17.16.85:8080</con:endpoint><con:parameters/></con:request></con:method><con:method name="DELETE - deleteUser" method="DELETE"><con:settings/><con:parameters><con:parameter required="true"><con:name>Authorization</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:idmFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml"><con:settings/><con:endpoint>http://172.17.16.85:8080</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="PUT - updateUser" method="PUT"><con:settings/><con:parameters><con:parameter required="true"><con:name>Authorization</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:idmFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 409 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://172.17.16.85:8080</con:endpoint><con:request>&lt;v1:user xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="customerId" value="RCN" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method></con:resource><con:method name="GET - getUsers" method="GET"><con:settings/><con:parameters><con:parameter required="true"><con:name>Authorization</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>offset</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:integer</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:integer</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:users</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:idmFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://172.17.16.85:8080</con:endpoint><con:parameters/></con:request></con:method><con:method name="POST - addUser" method="POST"><con:settings/><con:parameters><con:parameter required="true"><con:name>Authorization</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:passwordValidation</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>409</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:usernameConflict</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:idmFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 409 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://172.17.16.85:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource><con:resource name="passwordrules" path="passwordrules"><con:settings/><con:parameters/><con:resource name="validation/{password}" path="validation/{password}"><con:settings/><con:parameters><con:parameter required="true"><con:name>password</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="GET - validatePassword" method="GET"><con:settings/><con:parameters><con:parameter required="true"><con:name>Authorization</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:passwordValidation</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:idmFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://172.17.16.85:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:method name="GET - getPasswordRules" method="GET"><con:settings/><con:parameters><con:parameter required="true"><con:name>Authorization</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:passwordRules</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:idmFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401 403 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://172.17.16.85:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="token" path="token"><con:settings/><con:parameters/><con:resource name="{tokenId}" path="{tokenId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>tokenId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="permissions" path="permissions"><con:settings/><con:parameters/><con:method name="GET - getPermissions" method="GET"><con:settings/><con:parameters><con:parameter required="true"><con:name>Authorization</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:permissions</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:idmFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://172.17.16.85:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:method name="GET - validateToken" method="GET"><con:settings/><con:parameters><con:parameter required="true"><con:name>Authorization</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>belongsTo</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>clientId</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:auth</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:userDisabled</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:idmFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://172.17.16.85:8080</con:endpoint><con:parameters/></con:request></con:method><con:method name="DELETE - revokeToken" method="DELETE"><con:settings/><con:parameters><con:parameter required="true"><con:name>Authorization</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:idmFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://172.17.16.85:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:method name="POST - getToken" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:authCredentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:auth</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:idmFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://172.17.16.85:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:method name="GET - getVersionInfo" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:version</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:idmFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://172.17.16.85:8080</con:endpoint><con:parameters/></con:request></con:method></con:resource></con:interface><con:testSuite name="TestSuite - General"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getVersion" searchProperties="true" id="578acfc4-4b02-461d-a6da-c7dc6aa0c13f"><con:settings/><con:testStep type="restrequest" name="GET getVersionInfo"><con:settings/><con:config service="idm-api" methodName="GET - getVersionInfo" resourcePath="/v1.0" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getVersionInfo" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="XPath Match" name="Check for existance of [version]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:version)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite name="TestSuite - Users"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="addFirstUser - admin" searchProperties="true" id="82e6ef45-ab11-47c4-bf27-b16576d6f4a4"><con:settings/><con:testStep type="properties" name="Properties - stored variables"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-98e6c8238844fff4edec9c9109acd294cbd6b73c</con:value></con:property><con:property><con:name>refresh_token</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="properties" name="Properties - user"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>email</con:name><con:value>mark.mcgwire@rackspace.com</con:value></con:property><con:property><con:name>f-name</con:name><con:value>Mark</con:value></con:property><con:property><con:name>m-name</con:name><con:value>Giovanni</con:value></con:property><con:property><con:name>l-name</con:name><con:value>McGwire</con:value></con:property><con:property><con:name>display-name</con:name><con:value>${f-name} ${l-name}</con:value></con:property><con:property><con:name>pref-language</con:name><con:value>english</con:value></con:property><con:property><con:name>region</con:name><con:value>South Central</con:value></con:property><con:property><con:name>country</con:name><con:value>United States</con:value></con:property><con:property><con:name>time-zone</con:name><con:value>America/Chicago</con:value></con:property><con:property><con:name>user-secret-question</con:name><con:value>who am i</con:value></con:property><con:property><con:name>user-secret-answer</con:name><con:value>M McGwire</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>1000</end><step/><pattern>mark.mcgwire</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99</start><end>999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-cnum</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Template"><con:configuration><template>RCN-${gen-cnum}-${gen-cnum}-${gen-cnum}</template><entitize>false</entitize></con:configuration><con:name>gen-new-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>9</start><end>999</end><step/><pattern>G!ldberg</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-password</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>9</start><end>999</end><step/><pattern>BEARS</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - admin"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - admin" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="mkovacs" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - access_token"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getToken - admin</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addFirstUser"><con:settings/><con:config service="idm-api" methodName="POST - addFirstUser" resourcePath="/v1.0/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addFirstUser" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user country="" customerId="${DataGen - user#gen-new-cust-id}" customerInum="" displayName="" email="" firstName="" lastName="" locked="false" middleName="" personId="${DataGen - user#gen-person-id}" prefLanguage="" region="" softDeleted="false" status="ACTIVE" timeZone="" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="" secretQuestion=""/>&lt;v1:password password="${DataGen - user#gen-u-password}"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 403 Status"><con:configuration><scriptText>def response = context.testCase.testSteps["POST addFirstUser"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 403 Forbidden")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [forbidden]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:forbidden)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="addFirstUser - user" searchProperties="true" id="3fc0e04b-e8e0-466d-bff0-cc2119872b6a"><con:settings/><con:testStep type="properties" name="Properties - stored variables"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-bfb7dbe351a25959c02618adc948fbed63c4d3db</con:value></con:property><con:property><con:name>refresh_token</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="properties" name="Properties - user"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>email</con:name><con:value>mark.mcgwire@rackspace.com</con:value></con:property><con:property><con:name>f-name</con:name><con:value>Mark</con:value></con:property><con:property><con:name>m-name</con:name><con:value>Giovanni</con:value></con:property><con:property><con:name>l-name</con:name><con:value>McGwire</con:value></con:property><con:property><con:name>display-name</con:name><con:value>${f-name} ${l-name}</con:value></con:property><con:property><con:name>pref-language</con:name><con:value>english</con:value></con:property><con:property><con:name>region</con:name><con:value>South Central</con:value></con:property><con:property><con:name>country</con:name><con:value>United States</con:value></con:property><con:property><con:name>time-zone</con:name><con:value>America/Chicago</con:value></con:property><con:property><con:name>user-secret-question</con:name><con:value>who am i</con:value></con:property><con:property><con:name>user-secret-answer</con:name><con:value>M McGwire</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>1000</end><step/><pattern>mark.mcgwire</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99</start><end>999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-cnum</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Template"><con:configuration><template>RCN-${gen-cnum}-${gen-cnum}-${gen-cnum}</template><entitize>false</entitize></con:configuration><con:name>gen-new-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>9</start><end>999</end><step/><pattern>G!ldberg</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-password</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>9</start><end>999</end><step/><pattern>BEARS</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - user"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - user" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="testuser" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - access_token"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getToken - user</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addFirstUser"><con:settings/><con:config service="idm-api" methodName="POST - addFirstUser" resourcePath="/v1.0/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addFirstUser" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user country="" customerId="${DataGen - user#gen-new-cust-id}" customerInum="" displayName="" email="" firstName="" lastName="" locked="false" middleName="" personId="${DataGen - user#gen-person-id}" prefLanguage="" region="" softDeleted="false" status="ACTIVE" timeZone="" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="" secretQuestion=""/>&lt;v1:password password="${DataGen - user#gen-u-password}"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 403 Status"><con:configuration><scriptText>def response = context.testCase.testSteps["POST addFirstUser"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 403 Forbidden")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [forbidden]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:forbidden)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="addFirstUser - unauthorized client" searchProperties="true" id="ccc24567-34d6-4353-a49a-baf4c9edfa62"><con:settings/><con:testStep type="properties" name="Properties - stored variables"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-aaf0009f0520b724c6f391bd2af187c487333b6b</con:value></con:property><con:property><con:name>refresh_token</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="properties" name="Properties - user"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>email</con:name><con:value>mark.mcgwire@rackspace.com</con:value></con:property><con:property><con:name>f-name</con:name><con:value>Mark</con:value></con:property><con:property><con:name>m-name</con:name><con:value>Giovanni</con:value></con:property><con:property><con:name>l-name</con:name><con:value>McGwire</con:value></con:property><con:property><con:name>display-name</con:name><con:value>${f-name} ${l-name}</con:value></con:property><con:property><con:name>pref-language</con:name><con:value>english</con:value></con:property><con:property><con:name>region</con:name><con:value>South Central</con:value></con:property><con:property><con:name>country</con:name><con:value>United States</con:value></con:property><con:property><con:name>time-zone</con:name><con:value>America/Chicago</con:value></con:property><con:property><con:name>user-secret-question</con:name><con:value>who am i</con:value></con:property><con:property><con:name>user-secret-answer</con:name><con:value>M McGwire</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>1000</end><step/><pattern>mark.mcgwire</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99</start><end>999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-cnum</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Template"><con:configuration><template>RCN-${gen-cnum}-${gen-cnum}-${gen-cnum}</template><entitize>false</entitize></con:configuration><con:name>gen-new-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>9</start><end>999</end><step/><pattern>G!ldberg</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-password</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>9</start><end>999</end><step/><pattern>BEARS</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - cp client"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - cp client" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - access_token"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getToken - cp client</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addFirstUser"><con:settings/><con:config service="idm-api" methodName="POST - addFirstUser" resourcePath="/v1.0/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addFirstUser" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user country="" customerId="${DataGen - user#gen-new-cust-id}" customerInum="" displayName="" email="" firstName="" lastName="" locked="false" middleName="" personId="${DataGen - user#gen-person-id}" prefLanguage="" region="" softDeleted="false" status="ACTIVE" timeZone="" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="" secretQuestion=""/>&lt;v1:password password="${DataGen - user#gen-u-password}"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 403 Status"><con:configuration><scriptText>def response = context.testCase.testSteps["POST addFirstUser"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 403 Forbidden")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [forbidden]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:forbidden)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="addFirstUser - authorized client" searchProperties="true" id="909f53b4-5b02-4b62-9b53-60d834184755"><con:settings/><con:testStep type="properties" name="Properties - stored variables"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-b7347454ccf6cbc5ed9a14d41d79e127965a2b93</con:value></con:property><con:property><con:name>refresh_token</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="properties" name="Properties - user"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>email</con:name><con:value>mark.mcgwire@rackspace.com</con:value></con:property><con:property><con:name>f-name</con:name><con:value>Mark</con:value></con:property><con:property><con:name>m-name</con:name><con:value>Giovanni</con:value></con:property><con:property><con:name>l-name</con:name><con:value>McGwire</con:value></con:property><con:property><con:name>display-name</con:name><con:value>${f-name} ${l-name}</con:value></con:property><con:property><con:name>pref-language</con:name><con:value>english</con:value></con:property><con:property><con:name>region</con:name><con:value>South Central</con:value></con:property><con:property><con:name>country</con:name><con:value>United States</con:value></con:property><con:property><con:name>time-zone</con:name><con:value>America/Chicago</con:value></con:property><con:property><con:name>user-secret-question</con:name><con:value>who am i</con:value></con:property><con:property><con:name>user-secret-answer</con:name><con:value>M McGwire</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>1000</end><step/><pattern>mark.mcgwire</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99</start><end>999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-cnum</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Template"><con:configuration><template>RCN-${gen-cnum}-${gen-cnum}-${gen-cnum}</template><entitize>false</entitize></con:configuration><con:name>gen-new-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>9</start><end>999</end><step/><pattern>G!ldberg</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-password</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>9</start><end>999</end><step/><pattern>BEARS</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - signup service"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - signup service" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="MNOPQR" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - access_token"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getToken - signup service</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addFirstUser - conflicted customerId"><con:settings/><con:config service="idm-api" methodName="POST - addFirstUser" resourcePath="/v1.0/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addFirstUser - conflicted customerId" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user country="" customerId="RACKSPACE" customerInum="" displayName="" email="" firstName="" lastName="" locked="false" middleName="" personId="${DataGen - user#gen-person-id}" prefLanguage="" region="" softDeleted="false" status="ACTIVE" timeZone="" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="" secretQuestion=""/>&lt;v1:password password="${DataGen - user#gen-u-password}"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 409 status"><con:configuration><scriptText>def response = context.testCase.testSteps["POST addFirstUser - conflicted customerId"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 409 Conflict")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [customerIdConflict]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:customerIdConflict)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST addFirstUser - conflicted username"><con:settings/><con:config service="idm-api" methodName="POST - addFirstUser" resourcePath="/v1.0/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addFirstUser - conflicted username" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user country="" customerId="${DataGen - user#gen-new-cust-id}" customerInum="" displayName="" email="" firstName="" lastName="" locked="false" middleName="" personId="${DataGen - user#gen-person-id}" prefLanguage="" region="" softDeleted="false" status="ACTIVE" timeZone="" username="mkovacs" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="" secretQuestion=""/>&lt;v1:password password="${DataGen - user#gen-u-password}"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 409 status"><con:configuration><scriptText>def response = context.testCase.testSteps["POST addFirstUser - conflicted username"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 409 Conflict")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [usernameConflict]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:usernameConflict)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST addFirstUser - empty username"><con:settings/><con:config service="idm-api" methodName="POST - addFirstUser" resourcePath="/v1.0/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addFirstUser - empty username" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user country="" customerId="${DataGen - user#gen-new-cust-id}" customerInum="" displayName="" email="" firstName="" lastName="" locked="false" middleName="" personId="${DataGen - user#gen-person-id}" prefLanguage="" region="" softDeleted="false" status="ACTIVE" timeZone="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="" secretQuestion=""/>&lt;v1:password password="${DataGen - user#gen-u-password}"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 400 status"><con:configuration><scriptText>def response = context.testCase.testSteps["POST addFirstUser - empty username"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 400 Bad Request")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [badRequest]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:badRequest)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST addFirstUser - success"><con:settings/><con:config service="idm-api" methodName="POST - addFirstUser" resourcePath="/v1.0/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addFirstUser - success" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user country="${Properties - user#country}" customerId="${DataGen - user#gen-new-cust-id}" customerInum="" displayName="${Properties - user#display-name}" email="${Properties - user#email}" firstName="${Properties - user#f-name}" lastName="${Properties - user#l-name}" locked="false" middleName="${Properties - user#m-name}" personId="${DataGen - user#gen-person-id}" prefLanguage="${Properties - user#pref-language}" region="${Properties - user#region}" softDeleted="false" status="ACTIVE" timeZone="${Properties - user#time-zone}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="${Properties - user#user-secret-answer}" secretQuestion="${Properties - user#user-secret-question}"/>&lt;v1:password password="${DataGen - user#gen-u-password}"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 201 status"><con:configuration><scriptText>def response = context.testCase.testSteps["POST addFirstUser - success"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 201 Created")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [user]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:user)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getUsers - authorized admin" searchProperties="true" id="95c30485-8e9c-4728-afba-d69bb087dc08"><con:settings/><con:testStep type="properties" name="Properties - stored variables"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-98e6c8238844fff4edec9c9109acd294cbd6b73c</con:value></con:property><con:property><con:name>refresh_token</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - admin"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - admin" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="mkovacs" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - access_token"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>access_token</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getToken - admin</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GET getUsers - success"><con:settings/><con:config service="idm-api" methodName="GET - getUsers" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUsers - success" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 200 status"><con:configuration><scriptText>def response = context.testCase.testSteps["GET getUsers - success"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 200 OK")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [users]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:users)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="customerId" value="RACKSPACE"/>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getUsers - customer not found"><con:settings/><con:config service="idm-api" methodName="GET - getUsers" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUsers - customer not found" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 404 status"><con:configuration><scriptText>def response = context.testCase.testSteps["GET getUsers - customer not found"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 404 Not Found")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [itemNotFound]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:itemNotFound)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="customerId" value="RCN-idontexist"/>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getUsers - bad access token"><con:settings/><con:config service="idm-api" methodName="GET - getUsers" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUsers - bad access token" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 200 status"><con:configuration><scriptText>def response = context.testCase.testSteps["GET getUsers - bad access token"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 401 Unauthorized")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [unauthorized]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:unauthorized)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth bad_tokenxxxasdf1234"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getUsers - unauthorized admin (different customer)" searchProperties="true" id="833b7fbf-f59b-479a-bbb7-4771a4ebc19e"><con:settings/><con:testStep type="properties" name="Properties - stored variables"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-98e6c8238844fff4edec9c9109acd294cbd6b73c</con:value></con:property><con:property><con:name>refresh_token</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - admin"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - admin" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="mkovacs" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - access_token"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>access_token</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getToken - admin</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GET getUsers - unauthorized"><con:settings/><con:config service="idm-api" methodName="GET - getUsers" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUsers - unauthorized" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 403 status"><con:configuration><scriptText>def response = context.testCase.testSteps["GET getUsers - unauthorized"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 403 Forbidden")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [forbidden]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:forbidden)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
  <con:entry key="customerId" value="RCN-111-111-111"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getUsers - client" searchProperties="true" id="270804d2-b5e4-4818-8b9d-5cec58c76dde"><con:settings/><con:testStep type="properties" name="Properties - stored variables"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-b7347454ccf6cbc5ed9a14d41d79e127965a2b93</con:value></con:property><con:property><con:name>refresh_token</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - application"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - application" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="MNOPQR" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - access_token"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>access_token</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getToken - application</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GET getUsers - success"><con:settings/><con:config service="idm-api" methodName="GET - getUsers" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUsers - success" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 200 status"><con:configuration><scriptText>def response = context.testCase.testSteps["GET getUsers - success"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 200 OK")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [users]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:users)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getUsers - customer not found"><con:settings/><con:config service="idm-api" methodName="GET - getUsers" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUsers - customer not found" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 404 status"><con:configuration><scriptText>def response = context.testCase.testSteps["GET getUsers - customer not found"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 404 Not Found")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [itemNotFound]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:itemNotFound)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="customerId" value="RCN-idontexist"/>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getUsers - user" searchProperties="true" id="3761749e-4c40-41d5-9ea0-f383f4bc34e9"><con:settings/><con:testStep type="properties" name="PropertyTransfer - user_token"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>user_token</con:name><con:value>DFW-000bf31b50a9dba889b44702553a20d0cf4b1513</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="properties" name="Properties - stored variables"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-98e6c8238844fff4edec9c9109acd294cbd6b73c</con:value></con:property><con:property><con:name>refresh_token</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - admin"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - admin" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="mkovacs" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - access_token"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>access_token</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getToken - admin</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addUser - success"><con:settings/><con:config service="idm-api" methodName="POST - addUser" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addUser - success" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user customerId="RACKSPACE" displayName="TestUserDisplayName" email="${DataGen - user#gen-email}" firstName="${DataGen - user#gen-user-name}" lastName="testUserLyName" middleName="testuserMiddleName" personId="${DataGen - user#gen-person-id}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="secret answer" secretQuestion="secret question"/>&lt;v1:password password="P@ssw0rd"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:assertion type="XPath Match" name="Check for existence of [user]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:user)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="customerId" value="RACKSPACE"/>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - user"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - user" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="P@ssw0rd" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" ignoreEmpty="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getToken - user</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>user_token</con:targetType><con:targetStep>PropertyTransfer - user_token</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GET getUsers - unauthorized"><con:settings/><con:config service="idm-api" methodName="GET - getUsers" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUsers - unauthorized" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 403 status"><con:configuration><scriptText>def response = context.testCase.testSteps["GET getUsers - unauthorized"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 403 Forbidden")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [forbidden]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:forbidden)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${PropertyTransfer - user_token#user_token}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="addUser - authorized admin" searchProperties="true" id="3ad70278-22a6-4ecc-8c3d-b55153f7b280"><con:settings/><con:testStep type="properties" name="Properties - stored variables"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-98e6c8238844fff4edec9c9109acd294cbd6b73c</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - admin"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - admin" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="mkovacs" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - access_token"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getToken - admin</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addUser - invalid password"><con:settings/><con:config service="idm-api" methodName="POST - addUser" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addUser - invalid password" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user customerId="RACKSPACE" displayName="TestUserDisplayName" email="${DataGen - user#gen-email}" firstName="${DataGen - user#gen-user-name}" lastName="testUserLyName" middleName="testuserMiddleName" personId="${DataGen - user#gen-person-id}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="secret answer" secretQuestion="secret question"/>&lt;v1:password password="password"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 400 Status"><con:configuration><scriptText>def response = context.testCase.testSteps["POST addUser - invalid password"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 400 Bad Request")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [passwordValidationFault]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:passwordValidationFault)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="customerId" value="RACKSPACE"/>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST addUser - empty username"><con:settings/><con:config service="idm-api" methodName="POST - addUser" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addUser - empty username" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user customerId="RACKSPACE" displayName="TestUserDisplayName" email="${DataGen - user#gen-email}" firstName="${DataGen - user#gen-user-name}" lastName="testUserLyName" middleName="testuserMiddleName" personId="${DataGen - user#gen-person-id}" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="secret answer" secretQuestion="secret question"/>&lt;v1:password password="P@ssw0rd"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 400 status"><con:configuration><scriptText>def response = context.testCase.testSteps["POST addUser - empty username"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 400 Bad Request")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [badRequest]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:badRequest)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="customerId" value="RACKSPACE"/>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST addUser - bad token"><con:settings/><con:config service="idm-api" methodName="POST - addUser" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addUser - bad token" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user customerId="RACKSPACE" displayName="TestUserDisplayName" email="${DataGen - user#gen-email}" firstName="${DataGen - user#gen-user-name}" lastName="testUserLyName" middleName="testuserMiddleName" personId="${DataGen - user#gen-person-id}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="secret answer" secretQuestion="secret question"/>&lt;v1:password password="P@ssw0rd"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 401 status"><con:configuration><scriptText>def response = context.testCase.testSteps["POST addUser - bad token"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 401 Unauthorized")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [unauthorized]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:unauthorized)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth badtoken-xxxx-asdf1234"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST addUser - success"><con:settings/><con:config service="idm-api" methodName="POST - addUser" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addUser - success" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user customerId="RACKSPACE" displayName="TestUserDisplayName" email="${DataGen - user#gen-email}" firstName="${DataGen - user#gen-user-name}" lastName="testUserLyName" middleName="testuserMiddleName" personId="${DataGen - user#gen-person-id}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="secret answer" secretQuestion="secret question"/>&lt;v1:password password="P@ssw0rd"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 201 status"><con:configuration><scriptText>def response = context.testCase.testSteps["POST addUser - success"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 201 Created")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [user]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:user)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="customerId" value="RACKSPACE"/>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST addUser - conflicted username"><con:settings/><con:config service="idm-api" methodName="POST - addUser" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addUser - conflicted username" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user customerId="RACKSPACE" displayName="TestUserDisplayName" email="${DataGen - user#gen-email}" firstName="${DataGen - user#gen-user-name}" lastName="testUserLyName" middleName="testuserMiddleName" personId="${DataGen - user#gen-person-id}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="secret answer" secretQuestion="secret question"/>&lt;v1:password password="P@ssw0rd"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 409 status"><con:configuration><scriptText>def response = context.testCase.testSteps["POST addUser - conflicted username"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 409 Conflict")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [usernameConflict]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:usernameConflict)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST addUser - customer not found"><con:settings/><con:config service="idm-api" methodName="POST - addUser" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addUser - customer not found" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user customerId="RCN-idontexist-asdf1234" displayName="TestUserDisplayName" email="${DataGen - user#gen-email}" firstName="${DataGen - user#gen-user-name}" lastName="testUserLyName" middleName="testuserMiddleName" personId="${DataGen - user#gen-person-id}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="secret answer" secretQuestion="secret question"/>&lt;v1:password password="P@ssw0rd"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 403 status"><con:configuration><scriptText>def response = context.testCase.testSteps["POST addUser - customer not found"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 403 Forbidden")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [forbidden]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:forbidden)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="customerId" value="RCN-idontexist-asdf1234"/>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE deleteUser"><con:settings/><con:config service="idm-api" methodName="DELETE - deleteUser" resourcePath="/v1.0/customers/{customerId}/users/{username}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE deleteUser" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="addUser - user" searchProperties="true" id="89b04e09-58d2-41e8-ac57-13a25fccfe9c"><con:settings/><con:testStep type="properties" name="Properties - stored variables"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-bfb7dbe351a25959c02618adc948fbed63c4d3db</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - user"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - user" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="testuser" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - access_token"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getToken - user</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addUser - success"><con:settings/><con:config service="idm-api" methodName="POST - addUser" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addUser - success" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user customerId="RACKSPACE" displayName="TestUserDisplayName" email="${DataGen - user#gen-email}" firstName="${DataGen - user#gen-user-name}" lastName="testUserLyName" middleName="testuserMiddleName" personId="${DataGen - user#gen-person-id}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="secret answer" secretQuestion="secret question"/>&lt;v1:password password="P@ssw0rd"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 403 status"><con:configuration><scriptText>def response = context.testCase.testSteps["POST addUser - success"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 403 Forbidden")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [forbidden]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:forbidden)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="customerId" value="RACKSPACE"/>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="addUser - authorized client" searchProperties="true" id="60f22bfa-f07d-4761-9873-67bca3c8ee46"><con:settings/><con:testStep type="properties" name="Properties - stored variables"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-b7347454ccf6cbc5ed9a14d41d79e127965a2b93</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - signup service"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - signup service" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="MNOPQR" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - access_token"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getToken - signup service</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addUser - success"><con:settings/><con:config service="idm-api" methodName="POST - addUser" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addUser - success" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user customerId="RACKSPACE" displayName="TestUserDisplayName" email="${DataGen - user#gen-email}" firstName="${DataGen - user#gen-user-name}" lastName="testUserLyName" locked="false" middleName="testuserMiddleName" personId="${DataGen - user#gen-person-id}" softDeleted="false" status="ACTIVE" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="secret answer" secretQuestion="secret question"/>&lt;v1:password password="P@ssw0rd"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 201 Created"><con:configuration><scriptText>def response = context.testCase.testSteps["POST addUser - success"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 201 Created")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [user]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:user)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="customerId" value="RACKSPACE"/>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="addUser - unauthorized admin (different customer)" searchProperties="true" id="fc8c2136-d3bf-4835-abff-660f0294fc8b"><con:settings/><con:testStep type="properties" name="Properties - stored variables"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-98e6c8238844fff4edec9c9109acd294cbd6b73c</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - admin"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - admin" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="mkovacs" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - access_token"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getToken - admin</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addUser - unauthorized"><con:settings/><con:config service="idm-api" methodName="POST - addUser" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addUser - unauthorized" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user customerId="RCN-111-111-111" displayName="TestUserDisplayName" email="${DataGen - user#gen-email}" firstName="${DataGen - user#gen-user-name}" lastName="testUserLyName" middleName="testuserMiddleName" personId="${DataGen - user#gen-person-id}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="secret answer" secretQuestion="secret question"/>&lt;v1:password password="P@ssw0rd"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 403 status"><con:configuration><scriptText>def response = context.testCase.testSteps["POST addUser - unauthorized"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 403 Forbidden")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [forbidden]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:forbidden)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
  <con:entry key="customerId" value="RCN-111-111-111"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getUser - authorized admin" searchProperties="true" id="a6c2cca4-3006-497e-b7ab-620c3cb0632a"><con:settings/><con:testStep type="properties" name="Properties - stored variables"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-98e6c8238844fff4edec9c9109acd294cbd6b73c</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - admin"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - admin" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="mkovacs" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - access_token"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>access_token</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getToken - admin</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GET getUser - success"><con:settings/><con:config service="idm-api" methodName="GET - getUser" resourcePath="/v1.0/customers/{customerId}/users/{username}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUser - success" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 200 Status"><con:configuration><scriptText>def response = context.testCase.testSteps["GET getUser - success"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 200 OK")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [user]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:user)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="mkovacs"/>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getUser - user not found"><con:settings/><con:config service="idm-api" methodName="GET - getUser" resourcePath="/v1.0/customers/{customerId}/users/{username}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUser - user not found" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 404 Status"><con:configuration><scriptText>def response = context.testCase.testSteps["GET getUser - user not found"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 404 Not Found")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [itemNotFound]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:itemNotFound)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="baduser-idontexists-asdf1234"/>
  <con:entry key="customerId" value="RACKSPACE"/>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getUser - customer not found"><con:settings/><con:config service="idm-api" methodName="GET - getUser" resourcePath="/v1.0/customers/{customerId}/users/{username}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUser - customer not found" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 404 Status"><con:configuration><scriptText>def response = context.testCase.testSteps["GET getUser - customer not found"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 404 Not Found")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [itemNotFound]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:itemNotFound)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="mkovacs"/>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
  <con:entry key="customerId" value="RCN-idontexists-xxxx-asdfd234"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getUser - bad token"><con:settings/><con:config service="idm-api" methodName="GET - getUser" resourcePath="/v1.0/customers/{customerId}/users/{username}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUser - bad token" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 401 Status"><con:configuration><scriptText>def response = context.testCase.testSteps["GET getUser - bad token"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 401 Unauthorized")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [unauthorized]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:unauthorized)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="mkovacs"/>
  <con:entry key="customerId" value="RACKSPACE"/>
  <con:entry key="Authorization" value="OAuth badtoken-xxxx-asdf1234"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getUser - unauthorized admin (different customer)" searchProperties="true" id="570331e1-c9cb-4365-ae08-74aae42c8407"><con:settings/><con:testStep type="properties" name="Properties - stored variables"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-98e6c8238844fff4edec9c9109acd294cbd6b73c</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - admin"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - admin" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="mkovacs" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - access_token"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>access_token</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getToken - admin</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GET getUser - unauthorized"><con:settings/><con:config service="idm-api" methodName="GET - getUser" resourcePath="/v1.0/customers/{customerId}/users/{username}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUser - unauthorized" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 403 Status"><con:configuration><scriptText>def response = context.testCase.testSteps["GET getUser - unauthorized"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 403 Forbidden")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [forbidden]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:forbidden)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="testuser"/>
  <con:entry key="customerId" value="RCN-111-111-111"/>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="deleteUser - user" searchProperties="true" id="adba68a9-022a-4ff3-b4ab-910840ec1451"><con:settings/><con:testStep type="properties" name="Properties - stored variables"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-bfb7dbe351a25959c02618adc948fbed63c4d3db</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - user"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - user" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="testuser" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - access_token"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getToken - user</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="DELETE deleteUser - unauthorized"><con:settings/><con:config service="idm-api" methodName="DELETE - deleteUser" resourcePath="/v1.0/customers/{customerId}/users/{username}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE deleteUser - unauthorized" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 403 status"><con:configuration><scriptText>def response = context.testCase.testSteps["DELETE deleteUser - unauthorized"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 403 Forbidden")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [forbidden]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:forbidden)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="mkovacs"/>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getUser - unauthorized user (not getting self)" searchProperties="true" id="02577f28-b404-4242-840e-3ecc9b580d8d"><con:settings/><con:testStep type="properties" name="Properties - stored variables"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-bfb7dbe351a25959c02618adc948fbed63c4d3db</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - user"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - user" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="testuser" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - access_token"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>access_token</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getToken - user</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GET getUser - unauthorized"><con:settings/><con:config service="idm-api" methodName="GET - getUser" resourcePath="/v1.0/customers/{customerId}/users/{username}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUser - unauthorized" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 403 Status"><con:configuration><scriptText>def response = context.testCase.testSteps["GET getUser - unauthorized"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 403 Forbidden")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [forbidden]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:forbidden)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="mkovacs"/>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getUser - unauthorized client" searchProperties="true" id="8125ed14-c06d-4fd8-aad3-eeef31cfbf9b"><con:settings/><con:testStep type="properties" name="Properties - stored variables"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-aaf0009f0520b724c6f391bd2af187c487333b6b</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - user"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - user" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - access_token"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>access_token</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getToken - user</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GET getUser - unauthorized"><con:settings/><con:config service="idm-api" methodName="GET - getUser" resourcePath="/v1.0/customers/{customerId}/users/{username}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUser - unauthorized" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 403 Status"><con:configuration><scriptText>def response = context.testCase.testSteps["GET getUser - unauthorized"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 403 Forbidden")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [forbidden]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:forbidden)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="mkovacs"/>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="deleteUser - admin" searchProperties="true" id="884b7d96-7910-4524-a657-62253236c590"><con:settings/><con:testStep type="properties" name="Properties - stored variables"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-98e6c8238844fff4edec9c9109acd294cbd6b73c</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - admin"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - admin" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="mkovacs" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - access_token"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getToken - admin</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addUser"><con:settings/><con:config service="idm-api" methodName="POST - addUser" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addUser" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user customerId="RACKSPACE" displayName="TestUserDisplayName" email="${DataGen - user#gen-email}" firstName="${DataGen - user#gen-user-name}" lastName="testUserLyName" middleName="testuserMiddleName" personId="${DataGen - user#gen-person-id}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="secret answer" secretQuestion="secret question"/>&lt;v1:password password="P@ssw0rd"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="customerId" value="RACKSPACE"/>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE deleteUser - success"><con:settings/><con:config service="idm-api" methodName="DELETE - deleteUser" resourcePath="/v1.0/customers/{customerId}/users/{username}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE deleteUser - success" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 204 status"><con:configuration><scriptText>def response = context.testCase.testSteps["DELETE deleteUser - success"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 204 No Content")</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE deleteUser - user not found"><con:settings/><con:config service="idm-api" methodName="DELETE - deleteUser" resourcePath="/v1.0/customers/{customerId}/users/{username}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE deleteUser - user not found" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 404 status"><con:configuration><scriptText>def response = context.testCase.testSteps["DELETE deleteUser - user not found"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 404 Not Found")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [itemNotFound]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:itemNotFound)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE deleteUser - customer not found"><con:settings/><con:config service="idm-api" methodName="DELETE - deleteUser" resourcePath="/v1.0/customers/{customerId}/users/{username}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE deleteUser - customer not found" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 404 status"><con:configuration><scriptText>def response = context.testCase.testSteps["DELETE deleteUser - customer not found"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 404 Not Found")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [itemNotFound]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:itemNotFound)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="customerId" value="RCN-idontexists-xxx-asdf1234"/>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE deleteUser - unauthorized (deleting self)"><con:settings/><con:config service="idm-api" methodName="DELETE - deleteUser" resourcePath="/v1.0/customers/{customerId}/users/{username}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE deleteUser - unauthorized (deleting self)" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 403 status"><con:configuration><scriptText>def response = context.testCase.testSteps["DELETE deleteUser - unauthorized (deleting self)"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 403 Forbidden")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [forbidden]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:forbidden)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="mkovacs"/>
  <con:entry key="customerId" value="RACKSPACE"/>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE deleteUser - bad token"><con:settings/><con:config service="idm-api" methodName="DELETE - deleteUser" resourcePath="/v1.0/customers/{customerId}/users/{username}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE deleteUser - bad token" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 401 status"><con:configuration><scriptText>def response = context.testCase.testSteps["DELETE deleteUser - bad token"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 401 Unauthorized")</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
  <con:entry key="Authorization" value="OAuth badtoken-idontexists-xxx-asdf1234"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="deleteUser - authorized client" searchProperties="true" id="31398540-9585-4cdb-b04a-b5fb0f607cab"><con:settings/><con:testStep type="properties" name="Properties - stored variables"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-98e6c8238844fff4edec9c9109acd294cbd6b73c</con:value></con:property><con:property><con:name>rackerapp_token</con:name><con:value>DFW-aaf0009f0520b724c6f391bd2af187c487333b6b</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - admin"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - admin" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="mkovacs" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - access_token"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getToken - admin</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addUser"><con:settings/><con:config service="idm-api" methodName="POST - addUser" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addUser" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user customerId="RACKSPACE" displayName="TestUserDisplayName" email="${DataGen - user#gen-email}" firstName="${DataGen - user#gen-user-name}" lastName="testUserLyName" middleName="testuserMiddleName" personId="${DataGen - user#gen-person-id}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="secret answer" secretQuestion="secret question"/>&lt;v1:password password="P@ssw0rd"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="customerId" value="RACKSPACE"/>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - rackerapp"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - rackerapp" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - rackerapp_token"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getToken - rackerapp</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>rackerapp_token</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="DELETE deleteUser - success"><con:settings/><con:config service="idm-api" methodName="DELETE - deleteUser" resourcePath="/v1.0/customers/{customerId}/users/{username}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE deleteUser - success" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 204 status"><con:configuration><scriptText>def response = context.testCase.testSteps["DELETE deleteUser - success"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 204 No Content")</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#rackerapp_token}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="deleteUser - unauthorized client" searchProperties="true" id="1b0cf130-fd30-4baa-bb8e-af914b33f424"><con:settings/><con:testStep type="properties" name="Properties - stored variables"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-98e6c8238844fff4edec9c9109acd294cbd6b73c</con:value></con:property><con:property><con:name>rackerapp_token</con:name><con:value>DFW-b7347454ccf6cbc5ed9a14d41d79e127965a2b93</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - admin"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - admin" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="mkovacs" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - access_token"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getToken - admin</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addUser"><con:settings/><con:config service="idm-api" methodName="POST - addUser" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addUser" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user customerId="RACKSPACE" displayName="TestUserDisplayName" email="${DataGen - user#gen-email}" firstName="${DataGen - user#gen-user-name}" lastName="testUserLyName" middleName="testuserMiddleName" personId="${DataGen - user#gen-person-id}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="secret answer" secretQuestion="secret question"/>&lt;v1:password password="P@ssw0rd"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="customerId" value="RACKSPACE"/>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - signup service"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - signup service" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="MNOPQR" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - rackerapp_token"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getToken - signup service</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>rackerapp_token</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="DELETE deleteUser - unauthorized"><con:settings/><con:config service="idm-api" methodName="DELETE - deleteUser" resourcePath="/v1.0/customers/{customerId}/users/{username}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE deleteUser - unauthorized" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 403 Status"><con:configuration><scriptText>def response = context.testCase.testSteps["DELETE deleteUser - unauthorized"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 403 Forbidden")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [forbidden]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:forbidden)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#rackerapp_token}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getUser - authorized user (getting self)" searchProperties="true" id="ac1670fe-f31d-46a5-a586-6f85fe53f0c9"><con:settings/><con:testStep type="properties" name="Properties - stored variables"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-bfb7dbe351a25959c02618adc948fbed63c4d3db</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - user"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - user" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="testuser" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - access_token"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>access_token</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getToken - user</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GET getUser - success"><con:settings/><con:config service="idm-api" methodName="GET - getUser" resourcePath="/v1.0/customers/{customerId}/users/{username}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUser - success" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 200 Status"><con:configuration><scriptText>def response = context.testCase.testSteps["GET getUser - success"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 200 OK")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [user]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:user)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="testuser"/>
  <con:entry key="customerId" value="RCN-111-111-111"/>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="updateUser - authorized admin" searchProperties="true" id="5475e58c-01d8-42ad-98c5-b13f6503c45f"><con:settings/><con:testStep type="properties" name="Properties - stored variables"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-98e6c8238844fff4edec9c9109acd294cbd6b73c</con:value></con:property><con:property><con:name>customerId</con:name><con:value>RACKSPACE</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="properties" name="Properties - addeduser"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>inum</con:name><con:value>@!FFFF.FFFF.FFFF.FFFF!EEEE.EEEE!912D</con:value></con:property><con:property><con:name>country</con:name><con:value/></con:property><con:property><con:name>displayname</con:name><con:value>TestUserDisplayName</con:value></con:property><con:property><con:name>firstname</con:name><con:value>soapuitestuser-6617096</con:value></con:property><con:property><con:name>lastname</con:name><con:value>testUserLastName</con:value></con:property><con:property><con:name>iname</con:name><con:value/></con:property><con:property><con:name>middlename</con:name><con:value>testuserMiddleName</con:value></con:property><con:property><con:name>email</con:name><con:value>soapuitestuser9330726.@examplecom</con:value></con:property><con:property><con:name>pref-lang</con:name><con:value>en_US</con:value></con:property><con:property><con:name>apikey</con:name><con:value/></con:property><con:property><con:name>customerNumber</con:name><con:value/></con:property><con:property><con:name>personNumber</con:name><con:value>8319703</con:value></con:property><con:property><con:name>region</con:name><con:value/></con:property><con:property><con:name>secretQuestion</con:name><con:value/></con:property><con:property><con:name>secretAnswer</con:name><con:value/></con:property><con:property><con:name>timeZone</con:name><con:value>America/Chicago</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - admin"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - admin" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="mkovacs" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - access_token"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getToken - admin</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addUser"><con:settings/><con:config service="idm-api" methodName="POST - addUser" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addUser" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user country="usa" customerId="${Properties - stored variables#customerId}" displayName="TestUserDisplayName" email="${DataGen - user#gen-email}" firstName="${DataGen - user#gen-user-name}" lastName="testUserLastName" locked="false" middleName="testuserMiddleName" personId="${DataGen - user#gen-person-id}" softDeleted="false" status="ACTIVE" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="secret answer" secretQuestion="secret question"/>&lt;v1:password password="P@ssw0rd"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="customerId" value="RACKSPACE"/>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getUser"><con:settings/><con:config service="idm-api" methodName="GET - getUser" resourcePath="/v1.0/customers/{customerId}/users/{username}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUser" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
  <con:entry key="customerId" value="${Properties - stored variables#customerId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - addedUser"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" useXQuery="false" transferChildNodes="false" transferToAll="false" entitize="false"><con:name>user</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>GET getUser</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:user[1]</con:sourcePath><con:targetType>inum</con:targetType><con:targetStep>Properties - addeduser</con:targetStep><con:targetPath/></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>timeZone</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>GET getUser</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:user[1]/@timeZone</con:sourcePath><con:targetType>timeZone</con:targetType><con:targetStep>Properties - addeduser</con:targetStep><con:targetPath/></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>inum</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>GET getUser</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:user[1]/@inum</con:sourcePath><con:targetType>inum</con:targetType><con:targetStep>Properties - addeduser</con:targetStep><con:targetPath/></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>prefLanguage</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>GET getUser</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:user[1]/@prefLanguage</con:sourcePath><con:targetType>pref-lang</con:targetType><con:targetStep>Properties - addeduser</con:targetStep><con:targetPath/></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>displayName</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>GET getUser</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:user[1]/@displayName</con:sourcePath><con:targetType>displayname</con:targetType><con:targetStep>Properties - addeduser</con:targetStep><con:targetPath/></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>lastName</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>GET getUser</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:user[1]/@lastName</con:sourcePath><con:targetType>lastname</con:targetType><con:targetStep>Properties - addeduser</con:targetStep><con:targetPath/></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>middleName</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>GET getUser</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:user[1]/@middleName</con:sourcePath><con:targetType>middlename</con:targetType><con:targetStep>Properties - addeduser</con:targetStep><con:targetPath/></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>firstName</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>GET getUser</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:user[1]/@firstName</con:sourcePath><con:targetType>firstname</con:targetType><con:targetStep>Properties - addeduser</con:targetStep><con:targetPath/></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>personId</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>GET getUser</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:user[1]/@personId</con:sourcePath><con:targetType>personNumber</con:targetType><con:targetStep>Properties - addeduser</con:targetStep><con:targetPath/></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>email</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>GET getUser</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:user[1]/@email</con:sourcePath><con:targetType>email</con:targetType><con:targetStep>Properties - addeduser</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="PUT updateUser - success"><con:settings/><con:config service="idm-api" methodName="PUT - updateUser" resourcePath="/v1.0/customers/{customerId}/users/{username}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT updateUser - success" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user country="${Properties - addeduser#country}" customerId="${Properties - stored variables#customerId}" displayName="updatedDisplayName" email="updatedemail@example.com" firstName="updatedFirstName" iname="${Properties - addeduser#iname}" inum="${Properties - addeduser#inum}" lastName="updatedLastName" locked="false" middleName="updatedMiddlenName" personId="${Properties - addeduser#personNumber}" prefLanguage="${Properties - addeduser#pref-lang}" region="${Properties - addeduser#region}" softDeleted="false" status="ACTIVE" timeZone="${Properties - addeduser#timeZone}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:password password=""/>&lt;v1:apiKey apiKey="${Properties - addeduser#apikey}"/>&lt;v1:secret secretAnswer="${Properties - addeduser#secretAnswer}" secretQuestion="${Properties - addeduser#secretQuestion}"/>&lt;/v1:user></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 200 status"><con:configuration><scriptText>def response = context.testCase.testSteps["PUT updateUser - success"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 200 OK")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [user]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:user)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
  <con:entry key="customerId" value="${Properties - stored variables#customerId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE deleteUser"><con:settings/><con:config service="idm-api" methodName="DELETE - deleteUser" resourcePath="/v1.0/customers/{customerId}/users/{username}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE deleteUser" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT updateUser - user not found"><con:settings/><con:config service="idm-api" methodName="PUT - updateUser" resourcePath="/v1.0/customers/{customerId}/users/{username}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT updateUser - user not found" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user country="${Properties - addeduser#country}" customerId="${Properties - stored variables#customerId}" displayName="updatedDisplayName" email="updatedemail@example.com" firstName="updatedFirstName" iname="${Properties - addeduser#iname}" inum="${Properties - addeduser#inum}" lastName="updatedLastName" locked="false" middleName="updatedMiddlenName" personId="${Properties - addeduser#personNumber}" prefLanguage="${Properties - addeduser#pref-lang}" region="${Properties - addeduser#region}" softDeleted="false" status="ACTIVE" timeZone="${Properties - addeduser#timeZone}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:password password=""/>&lt;v1:apiKey apiKey="${Properties - addeduser#apikey}"/>&lt;v1:secret secretAnswer="${Properties - addeduser#secretAnswer}" secretQuestion="${Properties - addeduser#secretQuestion}"/>&lt;/v1:user></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 404 status"><con:configuration><scriptText>def response = context.testCase.testSteps["PUT updateUser - user not found"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 404 Not Found")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [itemNotFound]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:itemNotFound)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
  <con:entry key="customerId" value="${Properties - stored variables#customerId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT updateUser - bad token"><con:settings/><con:config service="idm-api" methodName="PUT - updateUser" resourcePath="/v1.0/customers/{customerId}/users/{username}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT updateUser - bad token" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user country="${Properties - addeduser#country}" customerId="${Properties - stored variables#customerId}" displayName="updatedDisplayName" email="updatedemail@example.com" firstName="updatedFirstName" iname="${Properties - addeduser#iname}" inum="${Properties - addeduser#inum}" lastName="updatedLastName" locked="false" middleName="updatedMiddlenName" personId="${Properties - addeduser#personNumber}" prefLanguage="${Properties - addeduser#pref-lang}" region="${Properties - addeduser#region}" softDeleted="false" status="ACTIVE" timeZone="${Properties - addeduser#timeZone}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:password password=""/>&lt;v1:apiKey apiKey="${Properties - addeduser#apikey}"/>&lt;v1:secret secretAnswer="${Properties - addeduser#secretAnswer}" secretQuestion="${Properties - addeduser#secretQuestion}"/>&lt;/v1:user></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 200 status"><con:configuration><scriptText>def response = context.testCase.testSteps["PUT updateUser - bad token"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 401 Unauthorized")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [unauthorized]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:unauthorized)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="customerId" value="${Properties - stored variables#customerId}"/>
  <con:entry key="Authorization" value="OAuth badtoken-idontexists-xxx-asdf123"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SetUserLockByRackerApp" searchProperties="true" id="0e56d35c-6e0e-4b32-bee9-36e97be01c61"><con:settings/><con:testStep type="properties" name="Properties - stored variables"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-aaf0009f0520b724c6f391bd2af187c487333b6b</con:value></con:property><con:property><con:name>customerId</con:name><con:value>RACKSPACE</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - RackerApp"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - RackerApp" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - access_token"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getToken - RackerApp</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="PUT setUserLock - expired token"><con:settings/><con:config service="idm-api" methodName="PUT - setUserLock" resourcePath="/v1.0/customers/{customerId}/users/{username}/lock" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT setUserLock - expired token" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 401 Status"><con:configuration><scriptText>def response = context.testCase.testSteps["PUT setUserLock - expired token"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 401 Unauthorized")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [unauthorized]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:unauthorized)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="testuser"/>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}xxx"/>
  <con:entry key="customerId" value="${Properties - stored variables#customerId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT setUserLock - lock value not specified"><con:settings/><con:config service="idm-api" methodName="PUT - setUserLock" resourcePath="/v1.0/customers/{customerId}/users/{username}/lock" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT setUserLock - lock value not specified" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 400 Status"><con:configuration><scriptText>def response = context.testCase.testSteps["PUT setUserLock - lock value not specified"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 400 Bad Request")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [badRequest]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:badRequest)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="testuser"/>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
  <con:entry key="customerId" value="${Properties - stored variables#customerId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT setUserLock - nonexistent user"><con:settings/><con:config service="idm-api" methodName="PUT - setUserLock" resourcePath="/v1.0/customers/{customerId}/users/{username}/lock" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT setUserLock - nonexistent user" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user locked="false" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:assertion type="XPath Match" name="Status 404 - User not found"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:itemNotFound[1]/@code</path><content>404</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="testuser1"/>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
  <con:entry key="customerId" value="${Properties - stored variables#customerId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT setUserLock - false"><con:settings/><con:config service="idm-api" methodName="PUT - setUserLock" resourcePath="/v1.0/customers/{customerId}/users/{username}/lock" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT setUserLock - false" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user locked="false" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:assertion type="XPath Match" name="Match content of [locked]"><con:configuration><path>declare namespace ns1='http://localhost/v1.0/customers/RACKSPACE/users/mkovacs/lock';
//ns1:Response[1]/ns1:locked[1]/text()</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="mkovacs"/>
  <con:entry key="customerId" value="RACKSPACE"/>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SetUserLockByBillingApp" searchProperties="true" id="50ac0aeb-ebdc-4d82-83c0-1bca0ab191c2"><con:settings/><con:testStep type="properties" name="Properties - stored variables"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-c7533ecf64a72fca558ba58120efc16368e611d6</con:value></con:property><con:property><con:name>customerId</con:name><con:value>RACKSPACE</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - BillingApp"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - BillingApp" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="GHIJKL" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - access_token"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getToken - BillingApp</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="PUT setUserLock - false"><con:settings/><con:config service="idm-api" methodName="PUT - setUserLock" resourcePath="/v1.0/customers/{customerId}/users/{username}/lock" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT setUserLock - false" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user locked="false" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:assertion type="XPath Match" name="Match content of [@locked]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:user[1]/@locked</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="mkovacs"/>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SignupServiceShouldNotSetUserLock" searchProperties="true" id="10821ad7-f3f3-4a77-a5c9-a4b34e6765fa"><con:settings/><con:testStep type="properties" name="Properties - stored variables"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-b7347454ccf6cbc5ed9a14d41d79e127965a2b93</con:value></con:property><con:property><con:name>customerId</con:name><con:value>RACKSPACE</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - SignupService"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - SignupService" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="MNOPQR" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - access_token"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getToken - SignupService</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="PUT setUserLock - false"><con:settings/><con:config service="idm-api" methodName="PUT - setUserLock" resourcePath="/v1.0/customers/{customerId}/users/{username}/lock" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT setUserLock - false" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user locked="false" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>def response = context.testCase.testSteps["PUT setUserLock - false"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 401 Unauthorized")</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="mkovacs"/>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CloudControlShouldNotSetUserLock" searchProperties="true" id="f04fc3a0-a69a-4a9f-a0be-b20de2b1d53b"><con:settings/><con:testStep type="properties" name="Properties - stored variables"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-1220f4b941e183aa052b6ea3d121e2b66f161019</con:value></con:property><con:property><con:name>customerId</con:name><con:value>RACKSPACE</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - For Cloud Control"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - For Cloud Control" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="STUVWX" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - access_token"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getToken - For Cloud Control</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="PUT setUserLock - false"><con:settings/><con:config service="idm-api" methodName="PUT - setUserLock" resourcePath="/v1.0/customers/{customerId}/users/{username}/lock" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT setUserLock - false" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user locked="false" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>def response = context.testCase.testSteps["PUT setUserLock - false"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 401 Unauthorized")</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="mkovacs"/>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RackspaceApplicationShouldNotLockUserFromOtherCompany" searchProperties="true" id="04fa2f70-9f6b-43af-84e6-262fe0aced18"><con:settings/><con:testStep type="properties" name="Properties - stored variables"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-1220f4b941e183aa052b6ea3d121e2b66f161019</con:value></con:property><con:property><con:name>customerId</con:name><con:value>RACKSPACE</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - For Admin"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - For Admin" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="STUVWX" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - access_token"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getToken - For Admin</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="PUT setUserLock - false"><con:settings/><con:config service="idm-api" methodName="PUT - setUserLock" resourcePath="/v1.0/customers/{customerId}/users/{username}/lock" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT setUserLock - false" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user locked="false" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>def response = context.testCase.testSteps["PUT setUserLock - false"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 401 Unauthorized")</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="testuser"/>
  <con:entry key="customerId" value="RCN-111-111-111"/>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetUserRolesByAdmin" searchProperties="true" id="79fa50e0-1160-46f1-b9c8-a0ef2eb2fe47"><con:settings/><con:testStep type="restrequest" name="POST GetUserToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetUserToken" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="testuser" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetUserToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://172.17.16.83/v1.0/token';
//ns1:Response[1]/ns1:access_token[1]/ns1:id[1]</con:sourcePath><con:targetType>user_token</con:targetType><con:targetStep>Properties - userToken</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties - userToken"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>user_token</con:name><con:value>DFW-bfb7dbe351a25959c02618adc948fbed63c4d3db</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="GET userRoles"><con:settings/><con:config service="idm-api" methodName="GET - getUserRoles" resourcePath="/v1.0/customers/{customerId}/users/{username}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET userRoles" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Status - 200 OK"><con:configuration><scriptText>def response = context.testCase.testSteps["GET userRoles"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 200 OK")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [roles]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:roles)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="testuser"/>
  <con:entry key="Authorization" value="OAuth ${Properties - userToken#user_token}"/>
  <con:entry key="customerId" value="RCN-111-111-111"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET userRoles - nonexistent user"><con:settings/><con:config service="idm-api" methodName="GET - getUserRoles" resourcePath="/v1.0/customers/{customerId}/users/{username}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET userRoles - nonexistent user" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="XPath Match" name="Check for existance of [itemNotFound]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:itemNotFound)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="testuser123"/>
  <con:entry key="customerId" value="RCN-111-111-111"/>
  <con:entry key="Authorization" value="OAuth ${Properties - userToken#user_token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetUserRolesByRackerApp" searchProperties="true" id="92c34d0b-8b81-4e22-b20d-e07d04394ba3"><con:settings/><con:testStep type="restrequest" name="POST GetRackerAppToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetRackerAppToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetRackerAppToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>user_token</con:targetType><con:targetStep>Properties - userToken</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties - userToken"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>user_token</con:name><con:value>DFW-aaf0009f0520b724c6f391bd2af187c487333b6b</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="GET userRoles"><con:settings/><con:config service="idm-api" methodName="GET - getUserRoles" resourcePath="/v1.0/customers/{customerId}/users/{username}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET userRoles" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Status - 200 OK"><con:configuration><scriptText>def response = context.testCase.testSteps["GET userRoles"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 200 OK")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [roles]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:roles)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="testuser"/>
  <con:entry key="Authorization" value="OAuth ${Properties - userToken#user_token}"/>
  <con:entry key="customerId" value="RCN-111-111-111"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetUserRolesByBillingApp" searchProperties="true" id="73d155bf-f9b9-413f-8f23-36014779fca0"><con:settings/><con:testStep type="restrequest" name="POST GetBillingAppToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetBillingAppToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="GHIJKL" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetBillingAppToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>user_token</con:targetType><con:targetStep>Properties - userToken</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties - userToken"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>user_token</con:name><con:value>DFW-c7533ecf64a72fca558ba58120efc16368e611d6</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="GET userRoles"><con:settings/><con:config service="idm-api" methodName="GET - getUserRoles" resourcePath="/v1.0/customers/{customerId}/users/{username}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET userRoles" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Status - 200 OK"><con:configuration><scriptText>def response = context.testCase.testSteps["GET userRoles"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 200 OK")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [roles]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:roles)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="testuser"/>
  <con:entry key="Authorization" value="OAuth ${Properties - userToken#user_token}"/>
  <con:entry key="customerId" value="RCN-111-111-111"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetUserRolesBySignupService" searchProperties="true" id="67a40ca2-5006-435b-8ead-efa87674b858"><con:settings/><con:testStep type="restrequest" name="POST GetSignupServiceToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetSignupServiceToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="MNOPQR" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetSignupServiceToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>user_token</con:targetType><con:targetStep>Properties - userToken</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties - userToken"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>user_token</con:name><con:value>DFW-b7347454ccf6cbc5ed9a14d41d79e127965a2b93</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="GET userRoles"><con:settings/><con:config service="idm-api" methodName="GET - getUserRoles" resourcePath="/v1.0/customers/{customerId}/users/{username}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET userRoles" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Status - 200 OK"><con:configuration><scriptText>def response = context.testCase.testSteps["GET userRoles"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 200 OK")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [roles]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:roles)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="testuser"/>
  <con:entry key="Authorization" value="OAuth ${Properties - userToken#user_token}"/>
  <con:entry key="customerId" value="RCN-111-111-111"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SetUserRoleByAdmin" searchProperties="true" id="b168d7d0-e037-4477-a465-8c438c92b836"><con:settings/><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="restrequest" name="POST GetAdminToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetAdminToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="mkovacs" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="properties" name="Properties - Admin token"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>admin_token_1</con:name><con:value>DFW-98e6c8238844fff4edec9c9109acd294cbd6b73c</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetAdminToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>admin_token_1</con:targetType><con:targetStep>Properties - Admin token</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addUser - success"><con:settings/><con:config service="idm-api" methodName="POST - addUser" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addUser - success" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user customerId="RACKSPACE" displayName="TestUserDisplayName" email="${DataGen - user#gen-email}" firstName="${DataGen - user#gen-user-name}" lastName="testUserLyName" middleName="testuserMiddleName" personId="${DataGen - user#gen-person-id}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="secret answer" secretQuestion="secret question"/>&lt;v1:password password="P@ssw0rd"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token#admin_token_1}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT setUserRole"><con:settings/><con:config service="idm-api" methodName="PUT - setUserRole" resourcePath="/v1.0/customers/{customerId}/users/{username}/roles/{roleName}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT setUserRole" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Status - 204"><con:configuration><scriptText>def response = context.testCase.testSteps["PUT setUserRole"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 204 No Content")</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token#admin_token_1}"/>
  <con:entry key="roleName" value="Idm Admin"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Get userRoles"><con:settings/><con:config service="idm-api" methodName="GET - getUserRoles" resourcePath="/v1.0/customers/{customerId}/users/{username}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get userRoles" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="XPath Match" name="Check for existance of [name]"><con:configuration><path>declare namespace ns1='http://localhost/v1.0/customers/RACKSPACE/users/${DataGen - user#gen-user-name}/roles';
exists( //ns1:Response/ns1:role/ns1:e/ns1:name)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token#admin_token_1}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT setUserRole - no role name specified"><con:settings/><con:config service="idm-api" methodName="PUT - setUserRole" resourcePath="/v1.0/customers/{customerId}/users/{username}/roles/{roleName}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT setUserRole - no role name specified" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Status - 204"><con:configuration><scriptText>def response = context.testCase.testSteps["PUT setUserRole - no role name specified"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 400 Bad request")</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token#admin_token_1}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT setUserRole - non-existent role name specified"><con:settings/><con:config service="idm-api" methodName="PUT - setUserRole" resourcePath="/v1.0/customers/{customerId}/users/{username}/roles/{roleName}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT setUserRole - non-existent role name specified" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Status - 404 Not Found"><con:configuration><scriptText>def response = context.testCase.testSteps["PUT setUserRole - non-existent role name specified"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 404 Not Found")</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token#admin_token_1}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
  <con:entry key="roleName" value="adfsxcvxvc"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SetUserRoleBySignupService" searchProperties="true" id="4be0aa10-90b7-45dc-b27e-671c214fd797"><con:settings/><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="restrequest" name="POST GetSignupServiceToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetSignupServiceToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="MNOPQR" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="properties" name="Properties - Admin token"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>admin_token_1</con:name><con:value>DFW-b7347454ccf6cbc5ed9a14d41d79e127965a2b93</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetSignupServiceToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>admin_token_1</con:targetType><con:targetStep>Properties - Admin token</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="PUT setUserRole"><con:settings/><con:config service="idm-api" methodName="PUT - setUserRole" resourcePath="/v1.0/customers/{customerId}/users/{username}/roles/{roleName}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT setUserRole" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>def response = context.testCase.testSteps["PUT setUserRole"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 204 No Content")</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="mkovacs"/>
  <con:entry key="customerId" value="RACKSPACE"/>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token#admin_token_1}"/>
  <con:entry key="roleName" value="Idm Admin"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SetUserRoleByRackerAppShouldNotBeAuthorized" searchProperties="true" id="b9b19384-f774-4f61-9abd-1f21863ce1ce"><con:settings/><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="restrequest" name="POST GetRackerAppToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetRackerAppToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="properties" name="Properties - Admin token"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>admin_token_1</con:name><con:value>DFW-aaf0009f0520b724c6f391bd2af187c487333b6b</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetRackerAppToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>admin_token_1</con:targetType><con:targetStep>Properties - Admin token</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="PUT setUserRole"><con:settings/><con:config service="idm-api" methodName="PUT - setUserRole" resourcePath="/v1.0/customers/{customerId}/users/{username}/roles/{roleName}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT setUserRole" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="XPath Match" name="Match content of [@code]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:forbidden[1]/@code</path><content>403</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="mkovacs"/>
  <con:entry key="customerId" value="RACKSPACE"/>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token#admin_token_1}"/>
  <con:entry key="roleName" value="Idm Admin"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SetUserRoleByBillingAppShouldNotBeAuthorized" searchProperties="true" id="efc0615b-21c3-4bbb-8564-d648403a4cf5"><con:settings/><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="restrequest" name="POST GetBillingAppToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetBillingAppToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="GHIJKL" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="properties" name="Properties - Admin token"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>admin_token_1</con:name><con:value>DFW-c7533ecf64a72fca558ba58120efc16368e611d6</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetBillingAppToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>admin_token_1</con:targetType><con:targetStep>Properties - Admin token</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="PUT setUserRole"><con:settings/><con:config service="idm-api" methodName="PUT - setUserRole" resourcePath="/v1.0/customers/{customerId}/users/{username}/roles/{roleName}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT setUserRole" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="XPath Match" name="Match content of [@code]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:forbidden[1]/@code</path><content>403</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="mkovacs"/>
  <con:entry key="customerId" value="RACKSPACE"/>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token#admin_token_1}"/>
  <con:entry key="roleName" value="Idm Admin"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SetUserRoleByUserShouldNotBeAuthorized" searchProperties="true" id="ea13403e-aeaf-4260-810e-6690a66e7c25"><con:settings/><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="restrequest" name="POST GetAdminToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetAdminToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="mkovacs" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="properties" name="Properties - Admin token"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>admin_token_1</con:name><con:value>DFW-98e6c8238844fff4edec9c9109acd294cbd6b73c</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetAdminToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>admin_token_1</con:targetType><con:targetStep>Properties - Admin token</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addUser - success"><con:settings/><con:config service="idm-api" methodName="POST - addUser" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addUser - success" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user customerId="RACKSPACE" displayName="TestUserDisplayName" email="${DataGen - user#gen-email}" firstName="${DataGen - user#gen-user-name}" lastName="testUserLyName" middleName="testuserMiddleName" personId="${DataGen - user#gen-person-id}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="secret answer" secretQuestion="secret question"/>&lt;v1:password password="P@ssw0rd"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token#admin_token_1}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST GetUserToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetUserToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="P@ssw0rd" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetUserToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>user_token_1</con:targetType><con:targetStep>Properties - User token</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties - User token"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>user_token_1</con:name><con:value>DFW-1463130b914eabfe6937009b24fce12b8a1ca873</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="PUT setUserRole"><con:settings/><con:config service="idm-api" methodName="PUT - setUserRole" resourcePath="/v1.0/customers/{customerId}/users/{username}/roles/{roleName}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT setUserRole" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="XPath Match" name="Match content of [@code]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:forbidden[1]/@code</path><content>403</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [forbidden]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:forbidden)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - User token#user_token_1}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
  <con:entry key="roleName" value="Idm Admin"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DeleteUserRoleByAdmin" searchProperties="true" id="473657c3-0894-4a64-b58b-e874cd8143f8"><con:settings/><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="restrequest" name="POST GetAdminToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetAdminToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="mkovacs" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="properties" name="Properties - Admin token"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>admin_token_1</con:name><con:value>DFW-98e6c8238844fff4edec9c9109acd294cbd6b73c</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetAdminToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>admin_token_1</con:targetType><con:targetStep>Properties - Admin token</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addUser - success"><con:settings/><con:config service="idm-api" methodName="POST - addUser" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addUser - success" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user customerId="RACKSPACE" displayName="TestUserDisplayName" email="${DataGen - user#gen-email}" firstName="${DataGen - user#gen-user-name}" lastName="testUserLyName" middleName="testuserMiddleName" personId="${DataGen - user#gen-person-id}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="secret answer" secretQuestion="secret question"/>&lt;v1:password password="P@ssw0rd"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token#admin_token_1}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT setUserRole"><con:settings/><con:config service="idm-api" methodName="PUT - setUserRole" resourcePath="/v1.0/customers/{customerId}/users/{username}/roles/{roleName}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT setUserRole" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Status - 204"><con:configuration><scriptText>def response = context.testCase.testSteps["PUT setUserRole"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 204 No Content")</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token#admin_token_1}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
  <con:entry key="roleName" value="Idm Admin"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE userRole"><con:settings/><con:config service="idm-api" methodName="DELETE - deleteUserRole" resourcePath="/v1.0/customers/{customerId}/users/{username}/roles/{roleName}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE userRole" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Status 204 - OK"><con:configuration><scriptText>def response = context.testCase.testSteps["DELETE userRole"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 204 No Content")</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token#admin_token_1}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
  <con:entry key="roleName" value="Idm Admin"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST GetUserRoles - No roles present"><con:settings/><con:config service="idm-api" methodName="GET - getUserRoles" resourcePath="/v1.0/customers/{customerId}/users/{username}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetUserRoles - No roles present" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>def response = context.testCase.testSteps["POST GetUserRoles - No roles present"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 200 OK")</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token#admin_token_1}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DeleteUserRoleByRackerAppShouldNotBeAuthorized" searchProperties="true" id="3174ee8b-04fe-4370-8412-0914502afd4e"><con:settings/><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="restrequest" name="POST GetAdminToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetAdminToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="properties" name="Properties - Admin token"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>admin_token_1</con:name><con:value>DFW-aaf0009f0520b724c6f391bd2af187c487333b6b</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetAdminToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>admin_token_1</con:targetType><con:targetStep>Properties - Admin token</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="DELETE userRole"><con:settings/><con:config service="idm-api" methodName="DELETE - deleteUserRole" resourcePath="/v1.0/customers/{customerId}/users/{username}/roles/{roleName}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE userRole" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="XPath Match" name="Check for existance of [forbidden]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:forbidden)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>def response = context.testCase.testSteps["DELETE userRole"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 403 Forbidden")</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="mkovacs"/>
  <con:entry key="customerId" value="RACKSPACE"/>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token#admin_token_1}"/>
  <con:entry key="roleName" value="Idm Admin"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DeleteUserRoleByBillingAppShouldNotBeAuthorized" searchProperties="true" id="6c4df64d-20a7-43f1-8dcc-e843aa84c726"><con:settings/><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="restrequest" name="POST GetAdminToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetAdminToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="GHIJKL" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="properties" name="Properties - Admin token"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>admin_token_1</con:name><con:value>DFW-c7533ecf64a72fca558ba58120efc16368e611d6</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetAdminToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>admin_token_1</con:targetType><con:targetStep>Properties - Admin token</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="DELETE userRole"><con:settings/><con:config service="idm-api" methodName="DELETE - deleteUserRole" resourcePath="/v1.0/customers/{customerId}/users/{username}/roles/{roleName}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE userRole" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>def response = context.testCase.testSteps["DELETE userRole"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 403 Forbidden")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [forbidden]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:forbidden)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="mkovacs"/>
  <con:entry key="customerId" value="RACKSPACE"/>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token#admin_token_1}"/>
  <con:entry key="roleName" value="Idm Admin"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DeleteUserRoleBySignupServiceShouldNotBeAuthorized" searchProperties="true" id="e350bda3-470b-4c05-bb82-3fb86a983a97"><con:settings/><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="restrequest" name="POST GetAdminToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetAdminToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="MNOPQR" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="properties" name="Properties - Admin token"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>admin_token_1</con:name><con:value>DFW-b7347454ccf6cbc5ed9a14d41d79e127965a2b93</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetAdminToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>admin_token_1</con:targetType><con:targetStep>Properties - Admin token</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="DELETE userRole"><con:settings/><con:config service="idm-api" methodName="DELETE - deleteUserRole" resourcePath="/v1.0/customers/{customerId}/users/{username}/roles/{roleName}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE userRole" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>def response = context.testCase.testSteps["DELETE userRole"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 403 Forbidden")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [forbidden]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:forbidden)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="mkovacs"/>
  <con:entry key="customerId" value="RACKSPACE"/>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token#admin_token_1}"/>
  <con:entry key="roleName" value="Idm Admin"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DeleteUserRoleByUserShouldNotBeAuthorized" searchProperties="true" id="1cc669a2-b907-4ff2-9f61-a72a9bb06540"><con:settings/><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="restrequest" name="POST GetAdminToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetAdminToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="mkovacs" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="properties" name="Properties - Admin token"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>admin_token_1</con:name><con:value>DFW-98e6c8238844fff4edec9c9109acd294cbd6b73c</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetAdminToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>admin_token_1</con:targetType><con:targetStep>Properties - Admin token</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addUser - success"><con:settings/><con:config service="idm-api" methodName="POST - addUser" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addUser - success" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user customerId="RACKSPACE" displayName="TestUserDisplayName" email="${DataGen - user#gen-email}" firstName="${DataGen - user#gen-user-name}" lastName="testUserLyName" middleName="testuserMiddleName" personId="${DataGen - user#gen-person-id}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="secret answer" secretQuestion="secret question"/>&lt;v1:password password="P@ssw0rd"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token#admin_token_1}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST GetUserToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetUserToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="P@ssw0rd" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetUserToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>user_token_1</con:targetType><con:targetStep>Properties - User token</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties - User token"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>user_token_1</con:name><con:value>DFW-00dd76d1ca42a426b1820cf1adadf8a7faaa6543</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="DELETE userRole"><con:settings/><con:config service="idm-api" methodName="DELETE - deleteUserRole" resourcePath="/v1.0/customers/{customerId}/users/{username}/roles/{roleName}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE userRole" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>def response = context.testCase.testSteps["DELETE userRole"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 403 Forbidden")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [forbidden]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:forbidden)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="mkovacs"/>
  <con:entry key="Authorization" value="OAuth ${Properties - User token#user_token_1}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
  <con:entry key="roleName" value="Idm Admin"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SetUserSecretByUser" searchProperties="true" id="5d5e28b7-4438-42f5-ba08-3363b1a2be7e"><con:settings/><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="restrequest" name="POST GetAdminToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetAdminToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="mkovacs" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="properties" name="Properties - Admin token"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>admin_token_1</con:name><con:value>DFW-98e6c8238844fff4edec9c9109acd294cbd6b73c</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="properties" name="Properties - User token"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>user_token_2</con:name><con:value>DFW-b09b7b01d85039328c248e90d667d52a8e7c3cd9</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetAdminToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>admin_token_1</con:targetType><con:targetStep>Properties - Admin token</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addUser - success"><con:settings/><con:config service="idm-api" methodName="POST - addUser" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addUser - success" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user customerId="RACKSPACE" displayName="TestUserDisplayName" email="${DataGen - user#gen-email}" firstName="${DataGen - user#gen-user-name}" lastName="testUserLyName" middleName="testuserMiddleName" personId="${DataGen - user#gen-person-id}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="secret answer" secretQuestion="secret question"/>&lt;v1:password password="P@ssw0rd"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token#admin_token_1}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getUserToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getUserToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="P@ssw0rd" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getUserToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>user_token_2</con:targetType><con:targetStep>Properties - User token</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="PUT user secret"><con:settings/><con:config service="idm-api" methodName="PUT - setUserSecret" resourcePath="/v1.0/customers/{customerId}/users/{username}/secret" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT user secret" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:userSecret secretAnswer="sdfdsdf" secretQuestion="asdfsdf" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:assertion type="XPath Match" name="Check for existance of [@secretAnswer]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:userSecret/@secretAnswer)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [@secretQuestion]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:userSecret/@secretQuestion)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - User token#user_token_2}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT user secret - blank secret question"><con:settings/><con:config service="idm-api" methodName="PUT - setUserSecret" resourcePath="/v1.0/customers/{customerId}/users/{username}/secret" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT user secret - blank secret question" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:userSecret secretAnswer="sdfdsdf" secretQuestion="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:assertion type="XPath Match" name="Match content of [@code]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:badRequest[1]/@code</path><content>400</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - User token#user_token_2}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT user secret - secret question and secret answer both blank"><con:settings/><con:config service="idm-api" methodName="PUT - setUserSecret" resourcePath="/v1.0/customers/{customerId}/users/{username}/secret" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT user secret - secret question and secret answer both blank" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:userSecret secretAnswer="" secretQuestion="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>def response = context.testCase.testSteps["PUT user secret - secret question and secret answer both blank"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 400 Bad Request")</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - User token#user_token_2}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SetUserSecretByAdminShouldNotBeAllowed" searchProperties="true" id="d853f480-22c3-4870-a12a-b11be82891e3"><con:settings/><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="restrequest" name="POST GetAdminToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetAdminToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="mkovacs" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="properties" name="Properties - Admin token"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>admin_token_1</con:name><con:value>DFW-98e6c8238844fff4edec9c9109acd294cbd6b73c</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="properties" name="Properties - User token"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>user_token_2</con:name><con:value>DFW-de5691eb24f97f973003937d3338f4d8d59e3d80</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetAdminToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>admin_token_1</con:targetType><con:targetStep>Properties - Admin token</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addUser - success"><con:settings/><con:config service="idm-api" methodName="POST - addUser" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addUser - success" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user customerId="RACKSPACE" displayName="TestUserDisplayName" email="${DataGen - user#gen-email}" firstName="${DataGen - user#gen-user-name}" lastName="testUserLyName" middleName="testuserMiddleName" personId="${DataGen - user#gen-person-id}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="secret answer" secretQuestion="secret question"/>&lt;v1:password password="P@ssw0rd"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token#admin_token_1}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getUserToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getUserToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="P@ssw0rd" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getUserToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>user_token_2</con:targetType><con:targetStep>Properties - User token</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="PUT user secret"><con:settings/><con:config service="idm-api" methodName="PUT - setUserSecret" resourcePath="/v1.0/customers/{customerId}/users/{username}/secret" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT user secret" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:userSecret secretAnswer="sdfdsdf" secretQuestion="asdfsdf" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:assertion type="XPath Match" name="Match content of [@code]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:forbidden[1]/@code</path><content>403</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token#admin_token_1}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SetUserSecretByRackerAppShouldNotBeAllowed" searchProperties="true" id="1992848d-1074-4ec2-ab0d-2f1fa7932113"><con:settings/><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="restrequest" name="POST GetAdminToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetAdminToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="properties" name="Properties - Admin token"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>admin_token_1</con:name><con:value>DFW-aaf0009f0520b724c6f391bd2af187c487333b6b</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="properties" name="Properties - User token"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>user_token_2</con:name><con:value>DFW-037b057d1aad7cc8a675a8a96bcfe9a6ff67d1c1</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetAdminToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>admin_token_1</con:targetType><con:targetStep>Properties - Admin token</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addUser - success"><con:settings/><con:config service="idm-api" methodName="POST - addUser" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addUser - success" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user customerId="RACKSPACE" displayName="TestUserDisplayName" email="${DataGen - user#gen-email}" firstName="${DataGen - user#gen-user-name}" lastName="testUserLyName" middleName="testuserMiddleName" personId="${DataGen - user#gen-person-id}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="secret answer" secretQuestion="secret question"/>&lt;v1:password password="P@ssw0rd"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token#admin_token_1}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getUserToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getUserToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="P@ssw0rd" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getUserToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>user_token_2</con:targetType><con:targetStep>Properties - User token</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="PUT user secret"><con:settings/><con:config service="idm-api" methodName="PUT - setUserSecret" resourcePath="/v1.0/customers/{customerId}/users/{username}/secret" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT user secret" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:userSecret secretAnswer="sdfdsdf" secretQuestion="asdfsdf" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:assertion type="XPath Match" name="Match content of [@code]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:forbidden[1]/@code</path><content>403</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token#admin_token_1}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SetUserSecretByBillingAppShouldNotBeAllowed" searchProperties="true" id="58c20231-3ba9-4acd-a7a4-a918b940f5a6"><con:settings/><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="restrequest" name="POST GetAdminToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetAdminToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="GHIJKL" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="properties" name="Properties - Admin token"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>admin_token_1</con:name><con:value>DFW-c7533ecf64a72fca558ba58120efc16368e611d6</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="properties" name="Properties - User token"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>user_token_2</con:name><con:value>DFW-2799d10784e2c6fc9e33254dbb3210e9968b1b15</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetAdminToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>admin_token_1</con:targetType><con:targetStep>Properties - Admin token</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addUser - success"><con:settings/><con:config service="idm-api" methodName="POST - addUser" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addUser - success" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user customerId="RACKSPACE" displayName="TestUserDisplayName" email="${DataGen - user#gen-email}" firstName="${DataGen - user#gen-user-name}" lastName="testUserLyName" middleName="testuserMiddleName" personId="${DataGen - user#gen-person-id}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="secret answer" secretQuestion="secret question"/>&lt;v1:password password="P@ssw0rd"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token#admin_token_1}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getUserToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getUserToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="P@ssw0rd" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getUserToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>user_token_2</con:targetType><con:targetStep>Properties - User token</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="PUT user secret"><con:settings/><con:config service="idm-api" methodName="PUT - setUserSecret" resourcePath="/v1.0/customers/{customerId}/users/{username}/secret" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT user secret" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:userSecret secretAnswer="sdfdsdf" secretQuestion="asdfsdf" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:assertion type="XPath Match" name="Match content of [@code]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:forbidden[1]/@code</path><content>403</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token#admin_token_1}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SetUserSecretBySignupServiceShouldNotBeAllowed" searchProperties="true" id="53db46cd-e3ec-445f-ab94-448c62f54682"><con:settings/><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="restrequest" name="POST GetAdminToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetAdminToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="MNOPQR" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="properties" name="Properties - Admin token"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>admin_token_1</con:name><con:value>DFW-b7347454ccf6cbc5ed9a14d41d79e127965a2b93</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="properties" name="Properties - User token"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>user_token_2</con:name><con:value>DFW-cf59edd426a062e9dbdc006dc56050347be429c0</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetAdminToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>admin_token_1</con:targetType><con:targetStep>Properties - Admin token</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addUser - success"><con:settings/><con:config service="idm-api" methodName="POST - addUser" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addUser - success" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user customerId="RACKSPACE" displayName="TestUserDisplayName" email="${DataGen - user#gen-email}" firstName="${DataGen - user#gen-user-name}" lastName="testUserLyName" middleName="testuserMiddleName" personId="${DataGen - user#gen-person-id}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="secret answer" secretQuestion="secret question"/>&lt;v1:password password="P@ssw0rd"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token#admin_token_1}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getUserToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getUserToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="P@ssw0rd" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getUserToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>user_token_2</con:targetType><con:targetStep>Properties - User token</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="PUT user secret"><con:settings/><con:config service="idm-api" methodName="PUT - setUserSecret" resourcePath="/v1.0/customers/{customerId}/users/{username}/secret" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT user secret" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:userSecret secretAnswer="sdfdsdf" secretQuestion="asdfsdf" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:assertion type="XPath Match" name="Match content of [@code]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:forbidden[1]/@code</path><content>403</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token#admin_token_1}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SetUserSoftDeleteByAdmin" searchProperties="true" id="d5e56b18-aba4-4e0d-a326-b308e77b245f"><con:settings/><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="restrequest" name="POST GetAdminToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetAdminToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="mkovacs" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="properties" name="Properties - Admin token"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>admin_token_1</con:name><con:value>DFW-98e6c8238844fff4edec9c9109acd294cbd6b73c</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="properties" name="Properties - User token"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>user_token_2</con:name><con:value>DFW-3f680a17d86204e2f8f855fe968e7816902c645e</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetAdminToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>admin_token_1</con:targetType><con:targetStep>Properties - Admin token</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addUser - success"><con:settings/><con:config service="idm-api" methodName="POST - addUser" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addUser - success" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user customerId="RACKSPACE" displayName="TestUserDisplayName" email="${DataGen - user#gen-email}" firstName="${DataGen - user#gen-user-name}" lastName="testUserLyName" middleName="testuserMiddleName" personId="${DataGen - user#gen-person-id}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="secret answer" secretQuestion="secret question"/>&lt;v1:password password="P@ssw0rd"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token#admin_token_1}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getUserToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getUserToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="P@ssw0rd" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getUserToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>user_token_2</con:targetType><con:targetStep>Properties - User token</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="PUT softDelete - true"><con:settings/><con:config service="idm-api" methodName="PUT - setUserSoftDelete" resourcePath="/v1.0/customers/{customerId}/users/{username}/softdelete" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT softDelete - true" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user softDeleted="true" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:assertion type="XPath Match" name="Match content of [@softDeleted]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:user[1]/@softDeleted</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token#admin_token_1}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT softDelete - false"><con:settings/><con:config service="idm-api" methodName="PUT - setUserSoftDelete" resourcePath="/v1.0/customers/{customerId}/users/{username}/softdelete" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT softDelete - false" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user softDeleted="false" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:assertion type="XPath Match" name="Match content of [@softDeleted]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:user[1]/@softDeleted</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token#admin_token_1}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT softDelete - missing delete flag"><con:settings/><con:config service="idm-api" methodName="PUT - setUserSoftDelete" resourcePath="/v1.0/customers/{customerId}/users/{username}/softdelete" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT softDelete - missing delete flag" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user softDeleted="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>def response = context.testCase.testSteps["PUT softDelete - missing delete flag"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 400 Bad Request")</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token#admin_token_1}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SetUserSoftDeleteByBillingAppShouldNotBeAllowed" searchProperties="true" id="79e4e3eb-4160-4966-84fe-7e6e9c2ececf"><con:settings/><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="restrequest" name="POST GetAdminToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetAdminToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="GHIJKL" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="properties" name="Properties - Admin token"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>admin_token_1</con:name><con:value>DFW-c7533ecf64a72fca558ba58120efc16368e611d6</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="properties" name="Properties - User token"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>user_token_2</con:name><con:value>DFW-822896cdb47cf2e32392c4a8d3f271f256302391</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetAdminToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>admin_token_1</con:targetType><con:targetStep>Properties - Admin token</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addUser - success"><con:settings/><con:config service="idm-api" methodName="POST - addUser" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addUser - success" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user customerId="RACKSPACE" displayName="TestUserDisplayName" email="${DataGen - user#gen-email}" firstName="${DataGen - user#gen-user-name}" lastName="testUserLyName" middleName="testuserMiddleName" personId="${DataGen - user#gen-person-id}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="secret answer" secretQuestion="secret question"/>&lt;v1:password password="P@ssw0rd"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token#admin_token_1}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getUserToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getUserToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="P@ssw0rd" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getUserToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>user_token_2</con:targetType><con:targetStep>Properties - User token</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="PUT softDelete - true"><con:settings/><con:config service="idm-api" methodName="PUT - setUserSoftDelete" resourcePath="/v1.0/customers/{customerId}/users/{username}/softdelete" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT softDelete - true" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user softDeleted="true" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:assertion type="XPath Match" name="Match content of [@code]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:forbidden[1]/@code</path><content>403</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token#admin_token_1}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SetUserSoftDeleteByRackerAppShouldNotBeAllowed" searchProperties="true" id="20047d8c-74e8-4003-b527-a85e0f7ee897"><con:settings/><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="restrequest" name="POST GetAdminToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetAdminToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="properties" name="Properties - Admin token"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>admin_token_1</con:name><con:value>DFW-aaf0009f0520b724c6f391bd2af187c487333b6b</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="properties" name="Properties - User token"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>user_token_2</con:name><con:value>DFW-f2417d09a05fd669275e2c6e816a1e9fa7ad4df4</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetAdminToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>admin_token_1</con:targetType><con:targetStep>Properties - Admin token</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addUser - success"><con:settings/><con:config service="idm-api" methodName="POST - addUser" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addUser - success" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user customerId="RACKSPACE" displayName="TestUserDisplayName" email="${DataGen - user#gen-email}" firstName="${DataGen - user#gen-user-name}" lastName="testUserLyName" middleName="testuserMiddleName" personId="${DataGen - user#gen-person-id}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="secret answer" secretQuestion="secret question"/>&lt;v1:password password="P@ssw0rd"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token#admin_token_1}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getUserToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getUserToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="P@ssw0rd" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getUserToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>user_token_2</con:targetType><con:targetStep>Properties - User token</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="PUT softDelete - true"><con:settings/><con:config service="idm-api" methodName="PUT - setUserSoftDelete" resourcePath="/v1.0/customers/{customerId}/users/{username}/softdelete" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT softDelete - true" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user softDeleted="true" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:assertion type="XPath Match" name="Match content of [@code]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:forbidden[1]/@code</path><content>403</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - User token#user_token_2}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SetUserSoftDeleteByUserShouldNotBeAllowed" searchProperties="true" id="6ff88f8a-eb89-4ac4-87e4-45fb21ee60fe"><con:settings/><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="restrequest" name="POST GetAdminToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetAdminToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="mkovacs" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="properties" name="Properties - Admin token"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>admin_token_1</con:name><con:value>DFW-98e6c8238844fff4edec9c9109acd294cbd6b73c</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="properties" name="Properties - User token"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>user_token_2</con:name><con:value>DFW-4f536d324072a6191a09e487bf4531c448df21a1</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetAdminToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>admin_token_1</con:targetType><con:targetStep>Properties - Admin token</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addUser - success"><con:settings/><con:config service="idm-api" methodName="POST - addUser" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addUser - success" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user customerId="RACKSPACE" displayName="TestUserDisplayName" email="${DataGen - user#gen-email}" firstName="${DataGen - user#gen-user-name}" lastName="testUserLyName" middleName="testuserMiddleName" personId="${DataGen - user#gen-person-id}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="secret answer" secretQuestion="secret question"/>&lt;v1:password password="P@ssw0rd"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token#admin_token_1}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getUserToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getUserToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="P@ssw0rd" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getUserToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>user_token_2</con:targetType><con:targetStep>Properties - User token</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="PUT softDelete - true"><con:settings/><con:config service="idm-api" methodName="PUT - setUserSoftDelete" resourcePath="/v1.0/customers/{customerId}/users/{username}/softdelete" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT softDelete - true" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user softDeleted="true" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:assertion type="XPath Match" name="Match content of [@code]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:forbidden[1]/@code</path><content>403</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - User token#user_token_2}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SetUserSoftDeleteBySignupServiceShouldNotBeAllowed" searchProperties="true" id="fe7523b7-e30e-45b6-802a-849c8db73d20"><con:settings/><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="properties" name="Properties - Admin token"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>admin_token_1</con:name><con:value>DFW-b7347454ccf6cbc5ed9a14d41d79e127965a2b93</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST GetAdminToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetAdminToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="MNOPQR" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="properties" name="Properties - User token"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>user_token_2</con:name><con:value>DFW-1314c8109ccc26c4ac02a3e1f0252800ddb976e9</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetAdminToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>admin_token_1</con:targetType><con:targetStep>Properties - Admin token</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addUser - success"><con:settings/><con:config service="idm-api" methodName="POST - addUser" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addUser - success" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user customerId="RACKSPACE" displayName="TestUserDisplayName" email="${DataGen - user#gen-email}" firstName="${DataGen - user#gen-user-name}" lastName="testUserLyName" middleName="testuserMiddleName" personId="${DataGen - user#gen-person-id}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="secret answer" secretQuestion="secret question"/>&lt;v1:password password="P@ssw0rd"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token#admin_token_1}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getUserToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getUserToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="P@ssw0rd" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getUserToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>user_token_2</con:targetType><con:targetStep>Properties - User token</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="PUT softDelete - true"><con:settings/><con:config service="idm-api" methodName="PUT - setUserSoftDelete" resourcePath="/v1.0/customers/{customerId}/users/{username}/softdelete" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT softDelete - true" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user softDeleted="true" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:assertion type="XPath Match" name="Match content of [@code]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:forbidden[1]/@code</path><content>403</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token#admin_token_1}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SetUserStatusByAdmin" searchProperties="true" id="a72ed887-1135-4ef7-9811-eea6a825bb7b"><con:settings/><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="restrequest" name="POST GetAdminToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetAdminToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="mkovacs" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="properties" name="Properties - Admin token"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>admin_token_1</con:name><con:value>DFW-98e6c8238844fff4edec9c9109acd294cbd6b73c</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="properties" name="Properties - User token"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>user_token_2</con:name><con:value>DFW-d53b3aa1861125d661ce49c0b749570c7310b54b</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetAdminToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>admin_token_1</con:targetType><con:targetStep>Properties - Admin token</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addUser - success"><con:settings/><con:config service="idm-api" methodName="POST - addUser" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addUser - success" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user customerId="RACKSPACE" displayName="TestUserDisplayName" email="${DataGen - user#gen-email}" firstName="${DataGen - user#gen-user-name}" lastName="testUserLyName" middleName="testuserMiddleName" personId="${DataGen - user#gen-person-id}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="secret answer" secretQuestion="secret question"/>&lt;v1:password password="P@ssw0rd"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token#admin_token_1}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getUserToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getUserToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="P@ssw0rd" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getUserToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>user_token_2</con:targetType><con:targetStep>Properties - User token</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="PUT userStatus - blank status field"><con:settings/><con:config service="idm-api" methodName="PUT - setUserStatus" resourcePath="/v1.0/customers/{customerId}/users/{username}/status" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT userStatus - blank status field" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user status="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>def response = context.testCase.testSteps["PUT userStatus - blank status field"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 400 Bad Request")</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token#admin_token_1}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT userStatus - ACTIVE"><con:settings/><con:config service="idm-api" methodName="PUT - setUserStatus" resourcePath="/v1.0/customers/{customerId}/users/{username}/status" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT userStatus - ACTIVE" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user status="ACTIVE" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>def response = context.testCase.testSteps["PUT userStatus - ACTIVE"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 200 OK")</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token#admin_token_1}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT userStatus - INACTIVE"><con:settings/><con:config service="idm-api" methodName="PUT - setUserStatus" resourcePath="/v1.0/customers/{customerId}/users/{username}/status" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT userStatus - INACTIVE" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user status="INACTIVE" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>def response = context.testCase.testSteps["PUT userStatus - INACTIVE"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 200 OK")</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token#admin_token_1}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SetUserStatusByUserShouldNotBeAllowed" searchProperties="true" id="652e5abe-57b5-47a1-85ac-7e582927dba8"><con:settings/><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="restrequest" name="POST GetAdminToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetAdminToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="mkovacs" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="properties" name="Properties - Admin token"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>admin_token_1</con:name><con:value>DFW-98e6c8238844fff4edec9c9109acd294cbd6b73c</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="properties" name="Properties - User token"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>user_token_2</con:name><con:value>DFW-b1c58c6fbd8dbf32d42dc83dc334d91d24be1b26</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetAdminToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>admin_token_1</con:targetType><con:targetStep>Properties - Admin token</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addUser - success"><con:settings/><con:config service="idm-api" methodName="POST - addUser" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addUser - success" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user customerId="RACKSPACE" displayName="TestUserDisplayName" email="${DataGen - user#gen-email}" firstName="${DataGen - user#gen-user-name}" lastName="testUserLyName" middleName="testuserMiddleName" personId="${DataGen - user#gen-person-id}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="secret answer" secretQuestion="secret question"/>&lt;v1:password password="P@ssw0rd"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token#admin_token_1}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getUserToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getUserToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="P@ssw0rd" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getUserToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>user_token_2</con:targetType><con:targetStep>Properties - User token</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="PUT userStatus - ACTIVE"><con:settings/><con:config service="idm-api" methodName="PUT - setUserStatus" resourcePath="/v1.0/customers/{customerId}/users/{username}/status" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT userStatus - ACTIVE" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user status="ACTIVE" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>def response = context.testCase.testSteps["PUT userStatus - ACTIVE"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 403 Forbidden")</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - User token#user_token_2}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SetUserStatusByRackerAppShouldNotBeAllowed" searchProperties="true" id="cd77b62b-42e8-4635-8f04-42f2ed633998"><con:settings/><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="restrequest" name="POST GetAdminToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetAdminToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="properties" name="Properties - Admin token"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>admin_token_1</con:name><con:value>DFW-aaf0009f0520b724c6f391bd2af187c487333b6b</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetAdminToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>admin_token_1</con:targetType><con:targetStep>Properties - Admin token</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="PUT userStatus - ACTIVE"><con:settings/><con:config service="idm-api" methodName="PUT - setUserStatus" resourcePath="/v1.0/customers/{customerId}/users/{username}/status" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT userStatus - ACTIVE" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user status="ACTIVE" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>def response = context.testCase.testSteps["PUT userStatus - ACTIVE"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 403 Forbidden")</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token#admin_token_1}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SetUserStatusByBillingAppShouldNotBeAllowed" searchProperties="true" id="5b260efd-2867-4c41-a1d5-fe0d5a27f941"><con:settings/><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="restrequest" name="POST GetAdminToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetAdminToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="GHIJKL" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="properties" name="Properties - Admin token"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>admin_token_1</con:name><con:value>DFW-c7533ecf64a72fca558ba58120efc16368e611d6</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetAdminToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>admin_token_1</con:targetType><con:targetStep>Properties - Admin token</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="PUT userStatus - ACTIVE"><con:settings/><con:config service="idm-api" methodName="PUT - setUserStatus" resourcePath="/v1.0/customers/{customerId}/users/{username}/status" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT userStatus - ACTIVE" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user status="ACTIVE" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>def response = context.testCase.testSteps["PUT userStatus - ACTIVE"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 403 Forbidden")</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token#admin_token_1}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SetUserStatusBySignupServiceShouldNotBeAllowed" searchProperties="true" id="331f2152-0ffc-49d2-8cfe-fa61b376b4d4"><con:settings/><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="restrequest" name="POST GetAdminToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetAdminToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="MNOPQR" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="properties" name="Properties - Admin token"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>admin_token_1</con:name><con:value>DFW-b7347454ccf6cbc5ed9a14d41d79e127965a2b93</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetAdminToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>admin_token_1</con:targetType><con:targetStep>Properties - Admin token</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="PUT userStatus - ACTIVE"><con:settings/><con:config service="idm-api" methodName="PUT - setUserStatus" resourcePath="/v1.0/customers/{customerId}/users/{username}/status" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT userStatus - ACTIVE" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user status="ACTIVE" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>def response = context.testCase.testSteps["PUT userStatus - ACTIVE"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 403 Forbidden")</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token#admin_token_1}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SetUserLockByRackerApp" searchProperties="true" id="8f7e5a4a-0b21-45bb-82f1-1058bda00c22"><con:settings/><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="restrequest" name="POST GetAdminToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetAdminToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="NONE" password="password" username="mkovacs" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="properties" name="Properties - Admin token"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>admin_token_1</con:name><con:value>DFW-aaf0009f0520b724c6f391bd2af187c487333b6b</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetAdminToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>admin_token_1</con:targetType><con:targetStep>Properties - Admin token</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="PUT setUserLock - true"><con:settings/><con:config service="idm-api" methodName="PUT - setUserLock" resourcePath="/v1.0/customers/{customerId}/users/{username}/lock" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT setUserLock - true" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user locked="true" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:assertion type="XPath Match" name="Match content of [@locked]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:user[1]/@locked</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="mkovacs"/>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token#admin_token_1}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetUserPasswordByAdmin" searchProperties="true" id="cf77351e-8b7c-4923-b128-edf1441f1e5e"><con:settings/><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="properties" name="Properties - Admin token 1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>admin_token_3</con:name><con:value>DFW-98e6c8238844fff4edec9c9109acd294cbd6b73c</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST GetAdminToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetAdminToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="mkovacs" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetAdminToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>admin_token_3</con:targetType><con:targetStep>Properties - Admin token 1</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addUser - success"><con:settings/><con:config service="idm-api" methodName="POST - addUser" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addUser - success" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user customerId="RACKSPACE" displayName="TestUserDisplayName" email="${DataGen - user#gen-email}" firstName="${DataGen - user#gen-user-name}" lastName="testUserLyName" middleName="testuserMiddleName" personId="${DataGen - user#gen-person-id}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="secret answer" secretQuestion="secret question"/>&lt;v1:password password="P@ssw0rd"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token 1#admin_token_3}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getUserToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getUserToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="P@ssw0rd" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getUserToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>user_token_4</con:targetType><con:targetStep>Properties - User token 1</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties - User token 1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>user_token_4</con:name><con:value>DFW-4b5ee2affd90cb09d6a94953c8c8db25f75feb32</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="GET GetUserPassword"><con:settings/><con:config service="idm-api" methodName="GET - getUserPassword" resourcePath="/v1.0/customers/{customerId}/users/{username}/password" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET GetUserPassword" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="XPath Match" name="Match content of [@password]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:userPassword[1]/@password</path><content>P@ssw0rd</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token 1#admin_token_3}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetUserPasswordByRackerApp" searchProperties="true" id="c3a8642b-3619-4015-9370-6d40613c222d"><con:settings/><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="properties" name="Properties - Admin token 1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>admin_token_3</con:name><con:value>DFW-aaf0009f0520b724c6f391bd2af187c487333b6b</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST GetAdminToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetAdminToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetAdminToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>admin_token_3</con:targetType><con:targetStep>Properties - Admin token 1</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addUser - success"><con:settings/><con:config service="idm-api" methodName="POST - addUser" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addUser - success" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user customerId="RACKSPACE" displayName="TestUserDisplayName" email="${DataGen - user#gen-email}" firstName="${DataGen - user#gen-user-name}" lastName="testUserLyName" middleName="testuserMiddleName" personId="${DataGen - user#gen-person-id}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="secret answer" secretQuestion="secret question"/>&lt;v1:password password="P@ssw0rd"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token 1#admin_token_3}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getUserToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getUserToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="P@ssw0rd" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getUserToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>user_token_4</con:targetType><con:targetStep>Properties - User token 1</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties - User token 1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>user_token_4</con:name><con:value>DFW-76d0ebc556bb3b5fb0667c5c6e0066fca5624ba9</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="GET GetUserPassword"><con:settings/><con:config service="idm-api" methodName="GET - getUserPassword" resourcePath="/v1.0/customers/{customerId}/users/{username}/password" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET GetUserPassword" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="XPath Match" name="Match content of [@password]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:userPassword[1]/@password</path><content>P@ssw0rd</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token 1#admin_token_3}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetUserPasswordByBillingApp" searchProperties="true" id="9e815388-7984-4298-a914-05ed1a58d95e"><con:settings/><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="properties" name="Properties - Admin token 1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>admin_token_3</con:name><con:value>DFW-c7533ecf64a72fca558ba58120efc16368e611d6</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST GetAdminToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetAdminToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="GHIJKL" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetAdminToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>admin_token_3</con:targetType><con:targetStep>Properties - Admin token 1</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addUser - success"><con:settings/><con:config service="idm-api" methodName="POST - addUser" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addUser - success" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user customerId="RACKSPACE" displayName="TestUserDisplayName" email="${DataGen - user#gen-email}" firstName="${DataGen - user#gen-user-name}" lastName="testUserLyName" middleName="testuserMiddleName" personId="${DataGen - user#gen-person-id}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="secret answer" secretQuestion="secret question"/>&lt;v1:password password="P@ssw0rd"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token 1#admin_token_3}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getUserToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getUserToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="P@ssw0rd" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getUserToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>user_token_4</con:targetType><con:targetStep>Properties - User token 1</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties - User token 1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>user_token_4</con:name><con:value>DFW-63994223cac6a50850025695ad50dc87356fc438</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="GET GetUserPassword"><con:settings/><con:config service="idm-api" methodName="GET - getUserPassword" resourcePath="/v1.0/customers/{customerId}/users/{username}/password" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET GetUserPassword" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="XPath Match" name="Match content of [@password]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:userPassword[1]/@password</path><content>P@ssw0rd</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token 1#admin_token_3}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetUserPasswordBySignupService" searchProperties="true" id="7cfc8003-69e8-4faf-a98e-c16bf9de6d67"><con:settings/><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="properties" name="Properties - Admin token 1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>admin_token_3</con:name><con:value>DFW-b7347454ccf6cbc5ed9a14d41d79e127965a2b93</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST GetAdminToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetAdminToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="MNOPQR" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetAdminToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>admin_token_3</con:targetType><con:targetStep>Properties - Admin token 1</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addUser - success"><con:settings/><con:config service="idm-api" methodName="POST - addUser" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addUser - success" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user customerId="RACKSPACE" displayName="TestUserDisplayName" email="${DataGen - user#gen-email}" firstName="${DataGen - user#gen-user-name}" lastName="testUserLyName" middleName="testuserMiddleName" personId="${DataGen - user#gen-person-id}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="secret answer" secretQuestion="secret question"/>&lt;v1:password password="P@ssw0rd"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token 1#admin_token_3}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getUserToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getUserToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="P@ssw0rd" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getUserToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>user_token_4</con:targetType><con:targetStep>Properties - User token 1</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties - User token 1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>user_token_4</con:name><con:value>DFW-a6c35cf840715fa9b471432262971ea64f338d05</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="GET GetUserPassword"><con:settings/><con:config service="idm-api" methodName="GET - getUserPassword" resourcePath="/v1.0/customers/{customerId}/users/{username}/password" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET GetUserPassword" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="XPath Match" name="Match content of [@password]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:userPassword[1]/@password</path><content>P@ssw0rd</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token 1#admin_token_3}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetUserPasswordByUserShouldNotBeAllowed" searchProperties="true" id="5b476fc4-8900-427e-9d8d-d085533252b7"><con:settings/><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="properties" name="Properties - Admin token 1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>admin_token_3</con:name><con:value>DFW-98e6c8238844fff4edec9c9109acd294cbd6b73c</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST GetAdminToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetAdminToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="mkovacs" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetAdminToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>admin_token_3</con:targetType><con:targetStep>Properties - Admin token 1</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addUser - success"><con:settings/><con:config service="idm-api" methodName="POST - addUser" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addUser - success" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user customerId="RACKSPACE" displayName="TestUserDisplayName" email="${DataGen - user#gen-email}" firstName="${DataGen - user#gen-user-name}" lastName="testUserLyName" middleName="testuserMiddleName" personId="${DataGen - user#gen-person-id}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="secret answer" secretQuestion="secret question"/>&lt;v1:password password="P@ssw0rd"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token 1#admin_token_3}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getUserToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getUserToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="P@ssw0rd" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getUserToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>user_token_4</con:targetType><con:targetStep>Properties - User token 1</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties - User token 1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>user_token_4</con:name><con:value>DFW-6dc31ee51ca09286845fbdc00b685b846c22f7e7</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="GET GetUserPassword"><con:settings/><con:config service="idm-api" methodName="GET - getUserPassword" resourcePath="/v1.0/customers/{customerId}/users/{username}/password" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET GetUserPassword" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="XPath Match" name="Match content of [@code]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:forbidden[1]/@code</path><content>403</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - User token 1#user_token_4}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SetUserPasswordByUser" searchProperties="true" id="333ab54a-0f99-4612-b424-49992e306860"><con:settings/><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="properties" name="Properties - Admin token 1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>admin_token_3</con:name><con:value>DFW-98e6c8238844fff4edec9c9109acd294cbd6b73c</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST GetAdminToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetAdminToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="mkovacs" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetAdminToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>admin_token_3</con:targetType><con:targetStep>Properties - Admin token 1</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addUser - success"><con:settings/><con:config service="idm-api" methodName="POST - addUser" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addUser - success" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user customerId="RACKSPACE" displayName="TestUserDisplayName" email="${DataGen - user#gen-email}" firstName="${DataGen - user#gen-user-name}" lastName="testUserLyName" middleName="testuserMiddleName" personId="${DataGen - user#gen-person-id}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="secret answer" secretQuestion="secret question"/>&lt;v1:password password="P@ssw0rd"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token 1#admin_token_3}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getUserToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getUserToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="P@ssw0rd" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getUserToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>user_token_4</con:targetType><con:targetStep>Properties - User token 1</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties - User token 1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>user_token_4</con:name><con:value>DFW-bc6856b0d9200add6c800eb0499d154f35110a3f</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="PUT setUserPassword"><con:settings/><con:config service="idm-api" methodName="PUT - setUserPassword" resourcePath="/v1.0/customers/{customerId}/users/{username}/password" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT setUserPassword" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:userCredentials xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:newPassword password="P@ssw0rd"/>&lt;v1:currentPassword password="P@ssw0rd"/>&lt;/v1:userCredentials></con:request><con:assertion type="XPath Match" name="Match content of [@password]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:userCredentials[1]/ns1:newPassword[1]/@password</path><content>P@ssw0rd</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@password]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:userCredentials[1]/ns1:currentPassword[1]/@password</path><content>P@ssw0rd</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - User token 1#user_token_4}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT setUserPassword - password without capital letter"><con:settings/><con:config service="idm-api" methodName="PUT - setUserPassword" resourcePath="/v1.0/customers/{customerId}/users/{username}/password" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT setUserPassword - password without capital letter" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:userCredentials xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:newPassword password="p@ssw0rd"/>&lt;v1:currentPassword password="P@ssw0rd"/>&lt;/v1:userCredentials></con:request><con:assertion type="XPath Match" name="Status - 400 Bad Request"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:badRequest[1]/@code</path><content>400</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@code]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:badRequest[1]/@code</path><content>400</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - User token 1#user_token_4}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT setUserPassword - no new password specified"><con:settings/><con:config service="idm-api" methodName="PUT - setUserPassword" resourcePath="/v1.0/customers/{customerId}/users/{username}/password" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT setUserPassword - no new password specified" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:userCredentials xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:newPassword password=""/>&lt;v1:currentPassword password="P@ssw0rd"/>&lt;/v1:userCredentials></con:request><con:assertion type="XPath Match" name="Status - 400 Bad Request"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:badRequest[1]/@code</path><content>400</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - User token 1#user_token_4}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT setUserPassword - password without special character"><con:settings/><con:config service="idm-api" methodName="PUT - setUserPassword" resourcePath="/v1.0/customers/{customerId}/users/{username}/password" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT setUserPassword - password without special character" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:userCredentials xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:newPassword password="Passw0rd"/>&lt;v1:currentPassword password="P@ssw0rd"/>&lt;/v1:userCredentials></con:request><con:assertion type="XPath Match" name="Status - 400 Bad Request"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:badRequest[1]/@code</path><content>400</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@code]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:badRequest[1]/@code</path><content>400</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - User token 1#user_token_4}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT setUserPassword - password without digit"><con:settings/><con:config service="idm-api" methodName="PUT - setUserPassword" resourcePath="/v1.0/customers/{customerId}/users/{username}/password" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT setUserPassword - password without digit" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:userCredentials xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:newPassword password="P@ssword"/>&lt;v1:currentPassword password="P@ssw0rd"/>&lt;/v1:userCredentials></con:request><con:assertion type="XPath Match" name="Status - 400 Bad Request"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:badRequest[1]/@code</path><content>400</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@code]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:badRequest[1]/@code</path><content>400</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - User token 1#user_token_4}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT setUserPassword - password with less than 7 digits"><con:settings/><con:config service="idm-api" methodName="PUT - setUserPassword" resourcePath="/v1.0/customers/{customerId}/users/{username}/password" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT setUserPassword - password with less than 7 digits" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:userCredentials xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:newPassword password="P@swrd"/>&lt;v1:currentPassword password="P@ssw0rd"/>&lt;/v1:userCredentials></con:request><con:assertion type="XPath Match" name="Status - 400 Bad Request"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:badRequest[1]/@code</path><content>400</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@code]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:badRequest[1]/@code</path><content>400</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - User token 1#user_token_4}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT setUserPassword - no old password specified"><con:settings/><con:config service="idm-api" methodName="PUT - setUserPassword" resourcePath="/v1.0/customers/{customerId}/users/{username}/password" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT setUserPassword - no old password specified" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:userCredentials xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:newPassword password="P@ssw0rd"/>&lt;v1:currentPassword password=""/>&lt;/v1:userCredentials></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>def response = context.testCase.testSteps["PUT setUserPassword - no old password specified"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 400 Bad Request")</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - User token 1#user_token_4}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SetUserPasswordByAdminShouldNotBeAllowed" searchProperties="true" id="46f9bc40-d2ca-4a02-9155-16ce3682f54c"><con:settings/><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="properties" name="Properties - Admin token 1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>admin_token_3</con:name><con:value>DFW-98e6c8238844fff4edec9c9109acd294cbd6b73c</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST GetAdminToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetAdminToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="mkovacs" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetAdminToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>admin_token_3</con:targetType><con:targetStep>Properties - Admin token 1</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addUser - success"><con:settings/><con:config service="idm-api" methodName="POST - addUser" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addUser - success" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user customerId="RACKSPACE" displayName="TestUserDisplayName" email="${DataGen - user#gen-email}" firstName="${DataGen - user#gen-user-name}" lastName="testUserLyName" middleName="testuserMiddleName" personId="${DataGen - user#gen-person-id}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="secret answer" secretQuestion="secret question"/>&lt;v1:password password="P@ssw0rd"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token 1#admin_token_3}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getUserToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getUserToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="P@ssw0rd" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getUserToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>user_token_4</con:targetType><con:targetStep>Properties - User token 1</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties - User token 1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>user_token_4</con:name><con:value>DFW-434252d94cb5230186b69167c2cbdbe33fdba819</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="PUT setUserPassword"><con:settings/><con:config service="idm-api" methodName="PUT - setUserPassword" resourcePath="/v1.0/customers/{customerId}/users/{username}/password" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT setUserPassword" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:userCredentials xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:newPassword password="P@ssw0rd"/>&lt;v1:currentPassword password="P@ssw0rd"/>&lt;/v1:userCredentials></con:request><con:assertion type="XPath Match" name="Match content of [@code]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:forbidden[1]/@code</path><content>403</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token 1#admin_token_3}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SetUserPasswordByRackerAppShouldNotBeAllowed" searchProperties="true" id="1a3eb4a9-0c24-4983-88e4-d29c0b005d83"><con:settings/><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="properties" name="Properties - Admin token 1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>admin_token_3</con:name><con:value>DFW-aaf0009f0520b724c6f391bd2af187c487333b6b</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST GetAdminToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetAdminToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetAdminToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>admin_token_3</con:targetType><con:targetStep>Properties - Admin token 1</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addUser - success"><con:settings/><con:config service="idm-api" methodName="POST - addUser" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addUser - success" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user customerId="RACKSPACE" displayName="TestUserDisplayName" email="${DataGen - user#gen-email}" firstName="${DataGen - user#gen-user-name}" lastName="testUserLyName" middleName="testuserMiddleName" personId="${DataGen - user#gen-person-id}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="secret answer" secretQuestion="secret question"/>&lt;v1:password password="P@ssw0rd"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token 1#admin_token_3}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getUserToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getUserToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="P@ssw0rd" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getUserToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>user_token_4</con:targetType><con:targetStep>Properties - User token 1</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties - User token 1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>user_token_4</con:name><con:value>DFW-3cfde9bf2b873df97a6ad1bb4e66e29a6e969099</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="PUT setUserPassword"><con:settings/><con:config service="idm-api" methodName="PUT - setUserPassword" resourcePath="/v1.0/customers/{customerId}/users/{username}/password" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT setUserPassword" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:userCredentials xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:newPassword password="P@ssw0rd"/>&lt;v1:currentPassword password="P@ssw0rd"/>&lt;/v1:userCredentials></con:request><con:assertion type="XPath Match" name="Match content of [@code]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:forbidden[1]/@code</path><content>403</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token 1#admin_token_3}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SetUserPasswordByBillingAppShouldNotBeAllowed" searchProperties="true" id="be7bb190-5154-428f-9a47-8e29190afd3e"><con:settings/><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="properties" name="Properties - Admin token 1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>admin_token_3</con:name><con:value>DFW-c7533ecf64a72fca558ba58120efc16368e611d6</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST GetAdminToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetAdminToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="GHIJKL" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetAdminToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>admin_token_3</con:targetType><con:targetStep>Properties - Admin token 1</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addUser - success"><con:settings/><con:config service="idm-api" methodName="POST - addUser" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addUser - success" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user customerId="RACKSPACE" displayName="TestUserDisplayName" email="${DataGen - user#gen-email}" firstName="${DataGen - user#gen-user-name}" lastName="testUserLyName" middleName="testuserMiddleName" personId="${DataGen - user#gen-person-id}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="secret answer" secretQuestion="secret question"/>&lt;v1:password password="P@ssw0rd"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token 1#admin_token_3}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getUserToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getUserToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="P@ssw0rd" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getUserToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>user_token_4</con:targetType><con:targetStep>Properties - User token 1</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties - User token 1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>user_token_4</con:name><con:value>DFW-3f5a1ae20a95658e86162aec328a6a96684c6251</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="PUT setUserPassword"><con:settings/><con:config service="idm-api" methodName="PUT - setUserPassword" resourcePath="/v1.0/customers/{customerId}/users/{username}/password" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT setUserPassword" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:userCredentials xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:newPassword password="P@ssw0rd"/>&lt;v1:currentPassword password="P@ssw0rd"/>&lt;/v1:userCredentials></con:request><con:assertion type="XPath Match" name="Match content of [@code]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:forbidden[1]/@code</path><content>403</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token 1#admin_token_3}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SetUserPasswordBySignupServiceShouldNotBeAllowed" searchProperties="true" id="c04737ef-25cc-4b0c-b88b-ff2d45d68330"><con:settings/><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="properties" name="Properties - Admin token 1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>admin_token_3</con:name><con:value>DFW-b7347454ccf6cbc5ed9a14d41d79e127965a2b93</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST GetAdminToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetAdminToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="MNOPQR" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetAdminToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>admin_token_3</con:targetType><con:targetStep>Properties - Admin token 1</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addUser - success"><con:settings/><con:config service="idm-api" methodName="POST - addUser" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addUser - success" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user customerId="RACKSPACE" displayName="TestUserDisplayName" email="${DataGen - user#gen-email}" firstName="${DataGen - user#gen-user-name}" lastName="testUserLyName" middleName="testuserMiddleName" personId="${DataGen - user#gen-person-id}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="secret answer" secretQuestion="secret question"/>&lt;v1:password password="P@ssw0rd"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token 1#admin_token_3}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getUserToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getUserToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="P@ssw0rd" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getUserToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>user_token_4</con:targetType><con:targetStep>Properties - User token 1</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties - User token 1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>user_token_4</con:name><con:value>DFW-da3778170f94bde73fc7831284609d042517db96</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="PUT setUserPassword"><con:settings/><con:config service="idm-api" methodName="PUT - setUserPassword" resourcePath="/v1.0/customers/{customerId}/users/{username}/password" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT setUserPassword" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:userCredentials xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:newPassword password="P@ssw0rd"/>&lt;v1:currentPassword password="P@ssw0rd"/>&lt;/v1:userCredentials></con:request><con:assertion type="XPath Match" name="Match content of [@code]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:forbidden[1]/@code</path><content>403</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token 1#admin_token_3}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ResetUserPasswordByUser" searchProperties="true" id="a2280b94-1102-4c0f-8871-50bc61726898"><con:settings/><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="properties" name="Properties - Admin token 1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>admin_token_3</con:name><con:value>DFW-98e6c8238844fff4edec9c9109acd294cbd6b73c</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST GetAdminToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetAdminToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="mkovacs" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetAdminToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>admin_token_3</con:targetType><con:targetStep>Properties - Admin token 1</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addUser - success"><con:settings/><con:config service="idm-api" methodName="POST - addUser" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addUser - success" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user customerId="RACKSPACE" displayName="TestUserDisplayName" email="${DataGen - user#gen-email}" firstName="${DataGen - user#gen-user-name}" lastName="testUserLyName" middleName="testuserMiddleName" personId="${DataGen - user#gen-person-id}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="secret answer" secretQuestion="secret question"/>&lt;v1:password password="P@ssw0rd"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token 1#admin_token_3}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getUserToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getUserToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="P@ssw0rd" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getUserToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>user_token_4</con:targetType><con:targetStep>Properties - User token 1</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties - User token 1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>user_token_4</con:name><con:value>DFW-fbd3d3dc0b0164dd80d1c0e9dd1ad14efe22cd3d</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST resetUserPassword"><con:settings/><con:config service="idm-api" methodName="POST - resetUserPassword" resourcePath="/v1.0/customers/{customerId}/users/{username}/password" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST resetUserPassword" mediaType="application/xml" postQueryString="false" accept="appliation/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>def response = context.testCase.testSteps["POST resetUserPassword"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 200 OK")</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - User token 1#user_token_4}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ResetUserPasswordByAdmin" searchProperties="true" id="30984583-2324-464f-a6fe-d9ae9cbb7fd4"><con:settings/><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="properties" name="Properties - Admin token 1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>admin_token_3</con:name><con:value>DFW-98e6c8238844fff4edec9c9109acd294cbd6b73c</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST GetAdminToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetAdminToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="mkovacs" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetAdminToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>admin_token_3</con:targetType><con:targetStep>Properties - Admin token 1</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addUser - success"><con:settings/><con:config service="idm-api" methodName="POST - addUser" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addUser - success" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user customerId="RACKSPACE" displayName="TestUserDisplayName" email="${DataGen - user#gen-email}" firstName="${DataGen - user#gen-user-name}" lastName="testUserLyName" middleName="testuserMiddleName" personId="${DataGen - user#gen-person-id}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="secret answer" secretQuestion="secret question"/>&lt;v1:password password="P@ssw0rd"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token 1#admin_token_3}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getUserToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getUserToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="P@ssw0rd" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getUserToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>user_token_4</con:targetType><con:targetStep>Properties - User token 1</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties - User token 1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>user_token_4</con:name><con:value>DFW-bca266549a904ac64dcd3df2fe6585867c770ba4</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST resetUserPassword"><con:settings/><con:config service="idm-api" methodName="POST - resetUserPassword" resourcePath="/v1.0/customers/{customerId}/users/{username}/password" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST resetUserPassword" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="XPath Match" name="Check for existance of [userPassword]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:userPassword)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>def response = context.testCase.testSteps["POST resetUserPassword"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 200 OK")</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token 1#admin_token_3}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ResetUserPasswordByRackerAppShouldNotBeAllowed" searchProperties="true" id="54f8d141-d06d-4679-89c8-0b1189c63444"><con:settings/><con:testStep type="properties" name="Properties - Admin token 1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>admin_token_3</con:name><con:value>DFW-aaf0009f0520b724c6f391bd2af187c487333b6b</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST GetAdminToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetAdminToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetAdminToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>admin_token_3</con:targetType><con:targetStep>Properties - Admin token 1</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST resetUserPassword"><con:settings/><con:config service="idm-api" methodName="POST - resetUserPassword" resourcePath="/v1.0/customers/{customerId}/users/{username}/password" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST resetUserPassword" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="XPath Match" name="Check for existance of [forbidden]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:forbidden)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>def response = context.testCase.testSteps["POST resetUserPassword"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 403 Forbidden")</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="mkovacs"/>
  <con:entry key="customerId" value="RACKSPACE"/>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token 1#admin_token_3}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ResetUserPasswordByBillingAppShouldNotBeAllowed" searchProperties="true" id="b9257512-df79-47e6-a324-86a7a0658fcb"><con:settings/><con:testStep type="properties" name="Properties - Admin token 1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>admin_token_3</con:name><con:value>DFW-c7533ecf64a72fca558ba58120efc16368e611d6</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST GetAdminToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetAdminToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="GHIJKL" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetAdminToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>admin_token_3</con:targetType><con:targetStep>Properties - Admin token 1</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST resetUserPassword"><con:settings/><con:config service="idm-api" methodName="POST - resetUserPassword" resourcePath="/v1.0/customers/{customerId}/users/{username}/password" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST resetUserPassword" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>def response = context.testCase.testSteps["POST resetUserPassword"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 403 Forbidden")</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="mkovacs"/>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token 1#admin_token_3}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ResetUserPasswordBySignupServiceShouldNotBeAllowed" searchProperties="true" id="8f6f89d8-1c4f-4e9c-bd4b-b97220602276"><con:settings/><con:testStep type="properties" name="Properties - Admin token 1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>admin_token_3</con:name><con:value>DFW-b7347454ccf6cbc5ed9a14d41d79e127965a2b93</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST GetAdminToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetAdminToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="MNOPQR" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetAdminToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>admin_token_3</con:targetType><con:targetStep>Properties - Admin token 1</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST resetUserPassword"><con:settings/><con:config service="idm-api" methodName="POST - resetUserPassword" resourcePath="/v1.0/customers/{customerId}/users/{username}/password" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST resetUserPassword" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>def response = context.testCase.testSteps["POST resetUserPassword"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 403 Forbidden")</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="mkovacs"/>
  <con:entry key="customerId" value="RACKSPACE"/>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token 1#admin_token_3}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SendRecoveryEmailByUserShouldNotBeAllowed" searchProperties="true" id="b1744876-0e66-41b8-841e-7a7a7b58311b"><con:settings/><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="properties" name="Properties - Admin token 1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>admin_token_3</con:name><con:value>DFW-98e6c8238844fff4edec9c9109acd294cbd6b73c</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST GetAdminToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetAdminToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="mkovacs" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetAdminToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>admin_token_3</con:targetType><con:targetStep>Properties - Admin token 1</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addUser - success"><con:settings/><con:config service="idm-api" methodName="POST - addUser" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addUser - success" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user customerId="RACKSPACE" displayName="TestUserDisplayName" email="${DataGen - user#gen-email}" firstName="${DataGen - user#gen-user-name}" lastName="testUserLyName" middleName="testuserMiddleName" personId="${DataGen - user#gen-person-id}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="secret answer" secretQuestion="secret question"/>&lt;v1:password password="P@ssw0rd"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token 1#admin_token_3}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getUserToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getUserToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="P@ssw0rd" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getUserToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>user_token_4</con:targetType><con:targetStep>Properties - User token 1</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties - User token 1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>user_token_4</con:name><con:value>DFW-216e6260476307769e939c7b66929dd6df2bd244</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST sendRecoveryEmail"><con:settings/><con:config service="idm-api" methodName="POST - sendRecoveryEmail" resourcePath="/v1.0/customers/{customerId}/users/{username}/password/recoveryemail" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST sendRecoveryEmail" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:passwordRecovery callbackUrl="http://www.rackspace.com" from="asdfsdfds" replyTo="a@b.com" subject="adfsfsfd" templateUrl="http://www.rackspace.com" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>def response = context.testCase.testSteps["POST sendRecoveryEmail"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 403 Forbidden")</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - User token 1#user_token_4}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SendRecoveryEmailByAdminShouldNotBeAllowed" searchProperties="true" id="c6b6032b-2558-4e71-a0b0-d0731da9e5ee"><con:settings/><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="properties" name="Properties - Admin token 1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>admin_token_3</con:name><con:value>DFW-98e6c8238844fff4edec9c9109acd294cbd6b73c</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST GetAdminToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetAdminToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="mkovacs" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetAdminToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>admin_token_3</con:targetType><con:targetStep>Properties - Admin token 1</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addUser - success"><con:settings/><con:config service="idm-api" methodName="POST - addUser" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addUser - success" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user customerId="RACKSPACE" displayName="TestUserDisplayName" email="devdatta.kulkarni@rackspace.com" firstName="${DataGen - user#gen-user-name}" lastName="testUserLyName" middleName="testuserMiddleName" personId="${DataGen - user#gen-person-id}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="secret answer" secretQuestion="secret question"/>&lt;v1:password password="P@ssw0rd"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token 1#admin_token_3}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getUserToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getUserToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="P@ssw0rd" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getUserToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>user_token_4</con:targetType><con:targetStep>Properties - User token 1</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties - User token 1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>user_token_4</con:name><con:value>DFW-10d7c6ef7be848ff083bf4fad6777fb3196e063f</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST sendRecoveryEmail"><con:settings/><con:config service="idm-api" methodName="POST - sendRecoveryEmail" resourcePath="/v1.0/customers/{customerId}/users/{username}/password/recoveryemail" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST sendRecoveryEmail" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:passwordRecovery callbackUrl="http://www.rackspace.com" from="devdatta.kulkarni@rackspace.com" replyTo="a@b.com" subject="adfsfsfd" templateUrl="http://www.rackspace.com" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>def response = context.testCase.testSteps["POST sendRecoveryEmail"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 403 Forbidden")</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="mkovacs"/>
  <con:entry key="customerId" value="RACKSPACE"/>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token 1#admin_token_3}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SendRecoveryEmailByRackerApp" searchProperties="true" id="8b61a3ff-09d5-4875-93a0-854914408b24"><con:settings/><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="properties" name="Properties - Admin token 1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>admin_token_3</con:name><con:value>DFW-aaf0009f0520b724c6f391bd2af187c487333b6b</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST GetAdminToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetAdminToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetAdminToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>admin_token_3</con:targetType><con:targetStep>Properties - Admin token 1</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addUser - success"><con:settings/><con:config service="idm-api" methodName="POST - addUser" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addUser - success" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user customerId="RACKSPACE" displayName="TestUserDisplayName" email="${DataGen - user#gen-email}" firstName="${DataGen - user#gen-user-name}" lastName="testUserLyName" middleName="testuserMiddleName" personId="${DataGen - user#gen-person-id}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="secret answer" secretQuestion="secret question"/>&lt;v1:password password="P@ssw0rd"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token 1#admin_token_3}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getUserToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getUserToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="P@ssw0rd" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getUserToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>user_token_4</con:targetType><con:targetStep>Properties - User token 1</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties - User token 1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>user_token_4</con:name><con:value>DFW-66b08271028c28dbb4cebb72e364421e8c6e0380</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST sendRecoveryEmail"><con:settings/><con:config service="idm-api" methodName="POST - sendRecoveryEmail" resourcePath="/v1.0/customers/{customerId}/users/{username}/password/recoveryemail" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST sendRecoveryEmail" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:passwordRecovery callbackUrl="http://www.rackspace.com" from="asdfsdfds" replyTo="a@b.com" subject="adfsfsfd" templateUrl="http://www.rackspace.com" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>def response = context.testCase.testSteps["POST sendRecoveryEmail"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 403 Forbidden")</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token 1#admin_token_3}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SendRecoveryEmailByBillingApp" searchProperties="true" id="fa49957d-4875-42c1-97c0-d318eb59351d"><con:settings/><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="properties" name="Properties - Admin token 1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>admin_token_3</con:name><con:value>DFW-c7533ecf64a72fca558ba58120efc16368e611d6</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST GetAdminToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetAdminToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="GHIJKL" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetAdminToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>admin_token_3</con:targetType><con:targetStep>Properties - Admin token 1</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addUser - success"><con:settings/><con:config service="idm-api" methodName="POST - addUser" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addUser - success" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user customerId="RACKSPACE" displayName="TestUserDisplayName" email="${DataGen - user#gen-email}" firstName="${DataGen - user#gen-user-name}" lastName="testUserLyName" middleName="testuserMiddleName" personId="${DataGen - user#gen-person-id}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="secret answer" secretQuestion="secret question"/>&lt;v1:password password="P@ssw0rd"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token 1#admin_token_3}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getUserToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getUserToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="P@ssw0rd" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getUserToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>user_token_4</con:targetType><con:targetStep>Properties - User token 1</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties - User token 1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>user_token_4</con:name><con:value>DFW-27581d4bcf3823cd9db5c24f87ab3875e03dd23d</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST sendRecoveryEmail"><con:settings/><con:config service="idm-api" methodName="POST - sendRecoveryEmail" resourcePath="/v1.0/customers/{customerId}/users/{username}/password/recoveryemail" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST sendRecoveryEmail" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:passwordRecovery callbackUrl="http://www.rackspace.com" from="asdfsdfds" replyTo="a@b.com" subject="adfsfsfd" templateUrl="http://www.rackspace.com" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>def response = context.testCase.testSteps["POST sendRecoveryEmail"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 403 Forbidden")</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token 1#admin_token_3}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SendRecoveryEmailBySignupService" searchProperties="true" id="2dcfd2cb-fce4-443a-9dc7-d735deff6189"><con:settings/><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="properties" name="Properties - Admin token 1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>admin_token_3</con:name><con:value>DFW-b7347454ccf6cbc5ed9a14d41d79e127965a2b93</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST GetAdminToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetAdminToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="MNOPQR" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetAdminToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>admin_token_3</con:targetType><con:targetStep>Properties - Admin token 1</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addUser - success"><con:settings/><con:config service="idm-api" methodName="POST - addUser" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addUser - success" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user customerId="RACKSPACE" displayName="TestUserDisplayName" email="${DataGen - user#gen-email}" firstName="${DataGen - user#gen-user-name}" lastName="testUserLyName" middleName="testuserMiddleName" personId="${DataGen - user#gen-person-id}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="secret answer" secretQuestion="secret question"/>&lt;v1:password password="P@ssw0rd"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token 1#admin_token_3}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getUserToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getUserToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="P@ssw0rd" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getUserToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>user_token_4</con:targetType><con:targetStep>Properties - User token 1</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties - User token 1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>user_token_4</con:name><con:value>DFW-cd2068aae81212e51e11c348c45b539029ecb525</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST sendRecoveryEmail"><con:settings/><con:config service="idm-api" methodName="POST - sendRecoveryEmail" resourcePath="/v1.0/customers/{customerId}/users/{username}/password/recoveryemail" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST sendRecoveryEmail" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:passwordRecovery callbackUrl="http://www.rackspace.com" from="asdfsdfds" replyTo="a@b.com" subject="adfsfsfd" templateUrl="http://www.rackspace.com" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>def response = context.testCase.testSteps["POST sendRecoveryEmail"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 403 Forbidden")</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token 1#admin_token_3}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetRecoveryTokenBySignupService" searchProperties="true" id="660f33b7-8d8f-4774-a1cc-29062f9d1ae2"><con:settings/><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="properties" name="Properties - Admin token 1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>admin_token_3</con:name><con:value>DFW-b7347454ccf6cbc5ed9a14d41d79e127965a2b93</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST GetAdminToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetAdminToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="MNOPQR" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetAdminToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>admin_token_3</con:targetType><con:targetStep>Properties - Admin token 1</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addUser - success"><con:settings/><con:config service="idm-api" methodName="POST - addUser" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addUser - success" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user customerId="RACKSPACE" displayName="TestUserDisplayName" email="${DataGen - user#gen-email}" firstName="${DataGen - user#gen-user-name}" lastName="testUserLyName" middleName="testuserMiddleName" personId="${DataGen - user#gen-person-id}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="secret answer" secretQuestion="secret question"/>&lt;v1:password password="P@ssw0rd"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token 1#admin_token_3}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getUserToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getUserToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="P@ssw0rd" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getUserToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>user_token_4</con:targetType><con:targetStep>Properties - User token 1</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties - User token 1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>user_token_4</con:name><con:value>DFW-b58b4835b26f2afbac521dfa4cec6d9fd48901b3</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="GET recoveryToken"><con:settings/><con:config service="idm-api" methodName="POST - getRecoveryToken" resourcePath="/v1.0/customers/{customerId}/users/{username}/password/recoverytoken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET recoveryToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="XPath Match" name="Check for existance of [token]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:token)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token 1#admin_token_3}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetRecoveryTokenByUserShouldNotBeAllowed" searchProperties="true" id="50a07c3a-c3d2-4fda-8eb8-a2b3ad5eba4d"><con:settings/><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="properties" name="Properties - Admin token 1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>admin_token_3</con:name><con:value>DFW-98e6c8238844fff4edec9c9109acd294cbd6b73c</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST GetAdminToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetAdminToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="mkovacs" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetAdminToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>admin_token_3</con:targetType><con:targetStep>Properties - Admin token 1</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addUser - success"><con:settings/><con:config service="idm-api" methodName="POST - addUser" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addUser - success" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user customerId="RACKSPACE" displayName="TestUserDisplayName" email="${DataGen - user#gen-email}" firstName="${DataGen - user#gen-user-name}" lastName="testUserLyName" middleName="testuserMiddleName" personId="${DataGen - user#gen-person-id}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="secret answer" secretQuestion="secret question"/>&lt;v1:password password="P@ssw0rd"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token 1#admin_token_3}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getUserToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getUserToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="P@ssw0rd" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getUserToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>user_token_4</con:targetType><con:targetStep>Properties - User token 1</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties - User token 1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>user_token_4</con:name><con:value>DFW-5d44f095805847c34e4917b358542345b9387792</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="GET recoveryToken"><con:settings/><con:config service="idm-api" methodName="POST - getRecoveryToken" resourcePath="/v1.0/customers/{customerId}/users/{username}/password/recoverytoken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET recoveryToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="XPath Match" name="Match content of [@code]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:forbidden[1]/@code</path><content>403</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - User token 1#user_token_4}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetRecoveryTokenByAdminShouldNotBeAllowed" searchProperties="true" id="c89435d8-d957-481e-91a9-7060e2515d8d"><con:settings/><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="properties" name="Properties - Admin token 1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>admin_token_3</con:name><con:value>DFW-aaf0009f0520b724c6f391bd2af187c487333b6b</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST GetAdminToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetAdminToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetAdminToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>admin_token_3</con:targetType><con:targetStep>Properties - Admin token 1</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addUser - success"><con:settings/><con:config service="idm-api" methodName="POST - addUser" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addUser - success" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user customerId="RACKSPACE" displayName="TestUserDisplayName" email="${DataGen - user#gen-email}" firstName="${DataGen - user#gen-user-name}" lastName="testUserLyName" middleName="testuserMiddleName" personId="${DataGen - user#gen-person-id}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="secret answer" secretQuestion="secret question"/>&lt;v1:password password="P@ssw0rd"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token 1#admin_token_3}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getUserToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getUserToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="P@ssw0rd" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getUserToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>user_token_4</con:targetType><con:targetStep>Properties - User token 1</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties - User token 1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>user_token_4</con:name><con:value>DFW-053da9cf2d1e07b02ac8289a0d321c5933ded266</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="GET recoveryToken"><con:settings/><con:config service="idm-api" methodName="POST - getRecoveryToken" resourcePath="/v1.0/customers/{customerId}/users/{username}/password/recoverytoken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET recoveryToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="XPath Match" name="Match content of [@code]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:forbidden[1]/@code</path><content>403</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token 1#admin_token_3}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetRecoveryTokenByRackerAppShouldNotBeAllowed" searchProperties="true" id="0a27db66-ff89-4d95-b053-f9e4e661ed04"><con:settings/><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="properties" name="Properties - Admin token 1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>admin_token_3</con:name><con:value>DFW-aaf0009f0520b724c6f391bd2af187c487333b6b</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST GetAdminToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetAdminToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetAdminToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>admin_token_3</con:targetType><con:targetStep>Properties - Admin token 1</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addUser - success"><con:settings/><con:config service="idm-api" methodName="POST - addUser" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addUser - success" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user customerId="RACKSPACE" displayName="TestUserDisplayName" email="${DataGen - user#gen-email}" firstName="${DataGen - user#gen-user-name}" lastName="testUserLyName" middleName="testuserMiddleName" personId="${DataGen - user#gen-person-id}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="secret answer" secretQuestion="secret question"/>&lt;v1:password password="P@ssw0rd"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token 1#admin_token_3}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getUserToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getUserToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="P@ssw0rd" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getUserToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>user_token_4</con:targetType><con:targetStep>Properties - User token 1</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties - User token 1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>user_token_4</con:name><con:value>DFW-6aadc9581e3677dface3d545f41609baf437cfaa</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="GET recoveryToken"><con:settings/><con:config service="idm-api" methodName="POST - getRecoveryToken" resourcePath="/v1.0/customers/{customerId}/users/{username}/password/recoverytoken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET recoveryToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="XPath Match" name="Match content of [@code]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:forbidden[1]/@code</path><content>403</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token 1#admin_token_3}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetRecoveryTokenByBillingAppShouldNotBeAllowed" searchProperties="true" id="7cdbc072-e96f-42ea-8e83-a8350ba3ee1b"><con:settings/><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="properties" name="Properties - Admin token 1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>admin_token_3</con:name><con:value>DFW-c7533ecf64a72fca558ba58120efc16368e611d6</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST GetAdminToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetAdminToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="GHIJKL" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetAdminToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>admin_token_3</con:targetType><con:targetStep>Properties - Admin token 1</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addUser - success"><con:settings/><con:config service="idm-api" methodName="POST - addUser" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addUser - success" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user customerId="RACKSPACE" displayName="TestUserDisplayName" email="${DataGen - user#gen-email}" firstName="${DataGen - user#gen-user-name}" lastName="testUserLyName" middleName="testuserMiddleName" personId="${DataGen - user#gen-person-id}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="secret answer" secretQuestion="secret question"/>&lt;v1:password password="P@ssw0rd"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token 1#admin_token_3}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getUserToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getUserToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="P@ssw0rd" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getUserToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>user_token_4</con:targetType><con:targetStep>Properties - User token 1</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties - User token 1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>user_token_4</con:name><con:value>DFW-e16acbd1ede50f4c79e5ea9cba8a1197ac14f33d</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="GET recoveryToken"><con:settings/><con:config service="idm-api" methodName="POST - getRecoveryToken" resourcePath="/v1.0/customers/{customerId}/users/{username}/password/recoverytoken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET recoveryToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="XPath Match" name="Match content of [@code]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:forbidden[1]/@code</path><content>403</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token 1#admin_token_3}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ResetAPiKeyByUser" searchProperties="true" id="e6ff252a-8460-4307-99cb-f9c0975af792"><con:settings/><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="properties" name="Properties - Admin token 1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>admin_token_3</con:name><con:value>DFW-98e6c8238844fff4edec9c9109acd294cbd6b73c</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST GetAdminToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetAdminToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="mkovacs" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetAdminToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>admin_token_3</con:targetType><con:targetStep>Properties - Admin token 1</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addUser - success"><con:settings/><con:config service="idm-api" methodName="POST - addUser" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addUser - success" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user customerId="RACKSPACE" displayName="TestUserDisplayName" email="${DataGen - user#gen-email}" firstName="${DataGen - user#gen-user-name}" lastName="testUserLyName" middleName="testuserMiddleName" personId="${DataGen - user#gen-person-id}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="secret answer" secretQuestion="secret question"/>&lt;v1:password password="P@ssw0rd"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token 1#admin_token_3}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getUserToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getUserToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="P@ssw0rd" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getUserToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>user_token_4</con:targetType><con:targetStep>Properties - User token 1</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties - User token 1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>user_token_4</con:name><con:value>DFW-ae665bc8d7a152eef37c36d6c1752548e0721f66</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST resetApiKey"><con:settings/><con:config service="idm-api" methodName="POST - resetApiKey" resourcePath="/v1.0/customers/{customerId}/users/{username}/key" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST resetApiKey" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="XPath Match" name="Check for existance of [userApiKey]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:userApiKey)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - User token 1#user_token_4}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ResetAPiKeyByAdmin" searchProperties="true" id="1bef986d-acb9-4ba1-ab52-18ea4b03c2d9"><con:settings/><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="properties" name="Properties - Admin token 1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>admin_token_3</con:name><con:value>DFW-98e6c8238844fff4edec9c9109acd294cbd6b73c</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST GetAdminToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetAdminToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="mkovacs" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetAdminToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>admin_token_3</con:targetType><con:targetStep>Properties - Admin token 1</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addUser - success"><con:settings/><con:config service="idm-api" methodName="POST - addUser" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addUser - success" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user customerId="RACKSPACE" displayName="TestUserDisplayName" email="${DataGen - user#gen-email}" firstName="${DataGen - user#gen-user-name}" lastName="testUserLyName" middleName="testuserMiddleName" personId="${DataGen - user#gen-person-id}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="secret answer" secretQuestion="secret question"/>&lt;v1:password password="P@ssw0rd"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token 1#admin_token_3}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getUserToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getUserToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="P@ssw0rd" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getUserToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>user_token_4</con:targetType><con:targetStep>Properties - User token 1</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties - User token 1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>user_token_4</con:name><con:value>DFW-93cb81d3e93714703c2cdb271ca1e57a4111b29c</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST resetApiKey"><con:settings/><con:config service="idm-api" methodName="POST - resetApiKey" resourcePath="/v1.0/customers/{customerId}/users/{username}/key" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST resetApiKey" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="XPath Match" name="Check for existance of [userApiKey]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:userApiKey)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token 1#admin_token_3}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ResetAPiKeyByRackerAppShouldNotBeAllowed" searchProperties="true" id="f9a4bd89-d6ba-4920-882b-78e0d6beaaa8"><con:settings/><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="properties" name="Properties - Admin token 1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>admin_token_3</con:name><con:value>DFW-aaf0009f0520b724c6f391bd2af187c487333b6b</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST GetAdminToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetAdminToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetAdminToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>admin_token_3</con:targetType><con:targetStep>Properties - Admin token 1</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addUser - success"><con:settings/><con:config service="idm-api" methodName="POST - addUser" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addUser - success" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user customerId="RACKSPACE" displayName="TestUserDisplayName" email="${DataGen - user#gen-email}" firstName="${DataGen - user#gen-user-name}" lastName="testUserLyName" middleName="testuserMiddleName" personId="${DataGen - user#gen-person-id}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="secret answer" secretQuestion="secret question"/>&lt;v1:password password="P@ssw0rd"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token 1#admin_token_3}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getUserToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getUserToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="P@ssw0rd" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getUserToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>user_token_4</con:targetType><con:targetStep>Properties - User token 1</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties - User token 1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>user_token_4</con:name><con:value>DFW-31c49e4c29c343671fe162606968f93ab984b229</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST resetApiKey"><con:settings/><con:config service="idm-api" methodName="POST - resetApiKey" resourcePath="/v1.0/customers/{customerId}/users/{username}/key" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST resetApiKey" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="XPath Match" name="Match content of [@code]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:forbidden[1]/@code</path><content>403</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token 1#admin_token_3}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ResetAPiKeyByBillingAppShouldNotBeAllowed" searchProperties="true" id="6e7c2df8-4b99-4b61-b9fd-354b77346ffe"><con:settings/><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="properties" name="Properties - Admin token 1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>admin_token_3</con:name><con:value>DFW-c7533ecf64a72fca558ba58120efc16368e611d6</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST GetAdminToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetAdminToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="GHIJKL" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetAdminToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>admin_token_3</con:targetType><con:targetStep>Properties - Admin token 1</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addUser - success"><con:settings/><con:config service="idm-api" methodName="POST - addUser" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addUser - success" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user customerId="RACKSPACE" displayName="TestUserDisplayName" email="${DataGen - user#gen-email}" firstName="${DataGen - user#gen-user-name}" lastName="testUserLyName" middleName="testuserMiddleName" personId="${DataGen - user#gen-person-id}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="secret answer" secretQuestion="secret question"/>&lt;v1:password password="P@ssw0rd"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token 1#admin_token_3}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getUserToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getUserToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="P@ssw0rd" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getUserToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>user_token_4</con:targetType><con:targetStep>Properties - User token 1</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties - User token 1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>user_token_4</con:name><con:value>DFW-b10b674527ec4e2d163d02d2e1f908e793c346c2</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST resetApiKey"><con:settings/><con:config service="idm-api" methodName="POST - resetApiKey" resourcePath="/v1.0/customers/{customerId}/users/{username}/key" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST resetApiKey" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="XPath Match" name="Match content of [@code]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:forbidden[1]/@code</path><content>403</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token 1#admin_token_3}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ResetAPiKeyBySignupServiceShouldNotBeAllowed" searchProperties="true" id="3ab500e7-500a-43b1-9251-72771c393883"><con:settings/><con:testStep type="datagen" name="DataGen - user"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>1</start><end>9999999</end><step/><pattern>soapuitestuser-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-user-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999999</end><step/><pattern>RCN-SOAPUI-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-cust-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99999</start><end>9999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-person-id</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999999</start><end>99999999</end><step/><pattern/><random>true</random><persist>false</persist></con:configuration><con:name>gen-u-api-key</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>999999</end><step/><pattern>SoapUI-TestClient-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-client-name</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>999</start><end>9999999</end><step/><pattern>soapuitestuser0@example.com</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-email</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="properties" name="Properties - Admin token 1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>admin_token_3</con:name><con:value>DFW-b7347454ccf6cbc5ed9a14d41d79e127965a2b93</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST GetAdminToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST GetAdminToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="MNOPQR" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST GetAdminToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>admin_token_3</con:targetType><con:targetStep>Properties - Admin token 1</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addUser - success"><con:settings/><con:config service="idm-api" methodName="POST - addUser" resourcePath="/v1.0/customers/{customerId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addUser - success" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:user customerId="RACKSPACE" displayName="TestUserDisplayName" email="${DataGen - user#gen-email}" firstName="${DataGen - user#gen-user-name}" lastName="testUserLyName" middleName="testuserMiddleName" personId="${DataGen - user#gen-person-id}" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:secret secretAnswer="secret answer" secretQuestion="secret question"/>&lt;v1:password password="P@ssw0rd"/>&lt;v1:apiKey apiKey="${DataGen - user#gen-u-api-key}"/>&lt;/v1:user></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token 1#admin_token_3}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getUserToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getUserToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="P@ssw0rd" username="${DataGen - user#gen-user-name}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getUserToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>user_token_4</con:targetType><con:targetStep>Properties - User token 1</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties - User token 1"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>user_token_4</con:name><con:value>DFW-2daac75c1332efb866de6734c7a7983056485a19</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST resetApiKey"><con:settings/><con:config service="idm-api" methodName="POST - resetApiKey" resourcePath="/v1.0/customers/{customerId}/users/{username}/key" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST resetApiKey" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="XPath Match" name="Match content of [@code]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:forbidden[1]/@code</path><content>403</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${DataGen - user#gen-user-name}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - Admin token 1#admin_token_3}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite name="TestSuite - clients"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="addClient - unauthorized client" searchProperties="true" id="81c5a701-b649-4801-850f-5a6180c1b730"><con:settings/><con:testStep type="properties" name="Properties - stored variables"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-aaf0009f0520b724c6f391bd2af187c487333b6b</con:value></con:property><con:property><con:name>customerId</con:name><con:value>RCN-111-111-111</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="datagen" name="DataGen - client"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>99</start><end>9999999</end><step/><pattern>CID-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-clientId</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99</start><end>9999999</end><step/><pattern>clientName-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-clientName</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - cloud cp"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - cloud cp" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - access_token"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>access_token</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getToken - cloud cp</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addClient - unauthorized"><con:settings/><con:config service="idm-api" methodName="POST - addClient" resourcePath="/v1.0/customers/{customerId}/clients" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addClient - unauthorized" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:client clientId="${DataGen - client#gen-clientId}" customerId="${Properties - stored variables#customerId}" locked="false" name="${DataGen - client#gen-clientName}" softDeleted="false" status="ACTIVE" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:credentials clientSecret=""/>&lt;/v1:client></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 403 Status"><con:configuration><scriptText>def response = context.testCase.testSteps["POST addClient - unauthorized"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 403 Forbidden")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [forbidden]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:forbidden)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="customerId" value="${Properties - stored variables#customerId}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="addClient - user" searchProperties="true" id="bb0205c3-735e-4d2f-8c97-8ffc5189d22f"><con:settings/><con:testStep type="properties" name="Properties - stored variables"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-11feffc8b96136a865d9520fcb22d14ea54caa31</con:value></con:property><con:property><con:name>customerId</con:name><con:value>RCN-111-111-111</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="datagen" name="DataGen - client"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>99</start><end>9999999</end><step/><pattern>CID-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-clientId</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99</start><end>9999999</end><step/><pattern>clientName-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-clientName</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - user"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - user" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="testuser" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - access_token"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>access_token</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getToken - user</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addClient - unauthorized"><con:settings/><con:config service="idm-api" methodName="POST - addClient" resourcePath="/v1.0/customers/{customerId}/clients" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addClient - unauthorized" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:client clientId="${DataGen - client#gen-clientId}" customerId="${Properties - stored variables#customerId}" locked="false" name="${DataGen - client#gen-clientName}" softDeleted="false" status="ACTIVE" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:credentials clientSecret=""/>&lt;/v1:client></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 403 Status"><con:configuration><scriptText>def response = context.testCase.testSteps["POST addClient - unauthorized"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 403 Forbidden")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [forbidden]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:forbidden)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="customerId" value="${Properties - stored variables#customerId}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="addClient - unauthorized admin (different customer)" searchProperties="true" id="b06af8b4-f1b6-41d2-82af-97f82f798d8a"><con:settings/><con:testStep type="properties" name="Properties - stored variables"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-4e28408684964848ee2990c6cac7a9711ff4507c</con:value></con:property><con:property><con:name>customerId</con:name><con:value>RCN-111-111-111</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="datagen" name="DataGen - client"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>99</start><end>9999999</end><step/><pattern>CID-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-clientId</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99</start><end>9999999</end><step/><pattern>clientName-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-clientName</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - admin"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - admin" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="mkovacs" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - access_token"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>access_token</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getToken - admin</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addClient - unauthorized"><con:settings/><con:config service="idm-api" methodName="POST - addClient" resourcePath="/v1.0/customers/{customerId}/clients" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addClient - unauthorized" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:client clientId="${DataGen - client#gen-clientId}" customerId="${Properties - stored variables#customerId}" locked="false" name="${DataGen - client#gen-clientName}" softDeleted="false" status="ACTIVE" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:credentials clientSecret=""/>&lt;/v1:client></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 403 Status"><con:configuration><scriptText>def response = context.testCase.testSteps["POST addClient - unauthorized"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 403 Forbidden")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [forbidden]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:forbidden)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="customerId" value="${Properties - stored variables#customerId}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="addClient - authorized admin" searchProperties="true" id="49a504ac-8f7e-4afd-a3c4-18049f459c38"><con:settings/><con:testStep type="properties" name="Properties - stored variables"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-4e28408684964848ee2990c6cac7a9711ff4507c</con:value></con:property><con:property><con:name>customerId</con:name><con:value>RACKSPACE</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="datagen" name="DataGen - client"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>99</start><end>9999999</end><step/><pattern>CID-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-clientId</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99</start><end>9999999</end><step/><pattern>clientName-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-clientName</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - admin"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - admin" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="mkovacs" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - access_token"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>access_token</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getToken - admin</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addClient - clientName conflict"><con:settings/><con:config service="idm-api" methodName="POST - addClient" resourcePath="/v1.0/customers/{customerId}/clients" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addClient - clientName conflict" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:client clientId="${DataGen - client#gen-clientId}" customerId="${Properties - stored variables#customerId}" locked="false" name="idm" softDeleted="false" status="ACTIVE" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:credentials clientSecret=""/>&lt;/v1:client></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 409 Status"><con:configuration><scriptText>def response = context.testCase.testSteps["POST addClient - clientName conflict"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 409 Conflict")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [clientnameConflict]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:clientnameConflict)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="customerId" value="${Properties - stored variables#customerId}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST addClient - bad token"><con:settings/><con:config service="idm-api" methodName="POST - addClient" resourcePath="/v1.0/customers/{customerId}/clients" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addClient - bad token" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:client clientId="${DataGen - client#gen-clientId}" customerId="${Properties - stored variables#customerId}" locked="false" name="${DataGen - client#gen-clientName}" softDeleted="false" status="ACTIVE" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:credentials clientSecret=""/>&lt;/v1:client></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 401 Status"><con:configuration><scriptText>def response = context.testCase.testSteps["POST addClient - bad token"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 401 Unauthorized")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [unauthorized]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:unauthorized)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth badtoken-xxxxx-asdf1234"/>
  <con:entry key="customerId" value="${Properties - stored variables#customerId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST addClient - success"><con:settings/><con:config service="idm-api" methodName="POST - addClient" resourcePath="/v1.0/customers/{customerId}/clients" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addClient - success" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:client clientId="${DataGen - client#gen-clientId}" customerId="${Properties - stored variables#customerId}" locked="false" name="${DataGen - client#gen-clientName}" softDeleted="false" status="ACTIVE" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:credentials clientSecret=""/>&lt;/v1:client></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>def response = context.testCase.testSteps["POST addClient - success"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 201 Created")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [client]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:client)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="customerId" value="${Properties - stored variables#customerId}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST addClient - customer not found"><con:settings/><con:config service="idm-api" methodName="POST - addClient" resourcePath="/v1.0/customers/{customerId}/clients" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addClient - customer not found" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:client clientId="${DataGen - client#gen-clientId}" customerId="RCN-idontexist-asdf1234" locked="false" name="${DataGen - client#gen-clientName}" softDeleted="false" status="ACTIVE" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0">&lt;v1:credentials clientSecret=""/>&lt;/v1:client></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion - Status"><con:configuration><scriptText>def response = context.testCase.testSteps["POST addClient - customer not found"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 403 Forbidden")</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="customerId" value="RCN-idontexist-asdf1234"/>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getClients - client" searchProperties="true" id="73843625-1245-4faf-bda3-ea0f6deafd70"><con:settings/><con:testStep type="properties" name="Properties - stored variables"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-aaf0009f0520b724c6f391bd2af187c487333b6b</con:value></con:property><con:property><con:name>refresh_token</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - application"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - application" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - access_token"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>access_token</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getToken - application</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GET getClients - success"><con:settings/><con:config service="idm-api" methodName="GET - getClients" resourcePath="/v1.0/customers/{customerId}/clients" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getClients - success" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 403 status"><con:configuration><scriptText>def response = context.testCase.testSteps["GET getClients - success"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 200 OK")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [clients]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:clients)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getClients - user" searchProperties="true" id="1288c487-c366-4534-a490-6eabef088e7d"><con:settings/><con:testStep type="properties" name="Properties - stored variables"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-11feffc8b96136a865d9520fcb22d14ea54caa31</con:value></con:property><con:property><con:name>refresh_token</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - user"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - user" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="testuser" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - access_token"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>access_token</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getToken - user</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GET getClients - unauthorized"><con:settings/><con:config service="idm-api" methodName="GET - getClients" resourcePath="/v1.0/customers/{customerId}/clients" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getClients - unauthorized" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 403 status"><con:configuration><scriptText>def response = context.testCase.testSteps["GET getClients - unauthorized"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 403 Forbidden")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [forbidden]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:forbidden)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="customerId" value="RCN-111-111-111"/>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getClients - unauthorized admin (different customer)" searchProperties="true" id="b6ca5c98-b78d-4163-a738-98887861cdc8"><con:settings/><con:testStep type="properties" name="Properties - stored variables"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-4e28408684964848ee2990c6cac7a9711ff4507c</con:value></con:property><con:property><con:name>refresh_token</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - admin"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - admin" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="mkovacs" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - access_token"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>access_token</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getToken - admin</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GET getClients - unauthorized"><con:settings/><con:config service="idm-api" methodName="GET - getClients" resourcePath="/v1.0/customers/{customerId}/clients" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getClients - unauthorized" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 403 status"><con:configuration><scriptText>def response = context.testCase.testSteps["GET getClients - unauthorized"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 403 Forbidden")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [forbidden]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:forbidden)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="customerId" value="RCN-111-111-111"/>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getClients - authorized admin" searchProperties="true" id="033b9541-5fe6-4b41-b084-623dea36f118"><con:settings/><con:testStep type="properties" name="Properties - stored variables"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-4e28408684964848ee2990c6cac7a9711ff4507c</con:value></con:property><con:property><con:name>refresh_token</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - admin"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - admin" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="mkovacs" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - access_token"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>access_token</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getToken - admin</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GET getClients - success"><con:settings/><con:config service="idm-api" methodName="GET - getClients" resourcePath="/v1.0/customers/{customerId}/clients" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getClients - success" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 200 OK"><con:configuration><scriptText>def response = context.testCase.testSteps["GET getClients - success"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 200 OK")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [clients]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:clients)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getClients - bad token"><con:settings/><con:config service="idm-api" methodName="GET - getClients" resourcePath="/v1.0/customers/{customerId}/clients" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getClients - bad token" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 401 Status"><con:configuration><scriptText>def response = context.testCase.testSteps["GET getClients - bad token"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 401 Unauthorized")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [unauthorized]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:unauthorized)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth xxxxxxasdf1234"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getClients - customer not found"><con:settings/><con:config service="idm-api" methodName="GET - getClients" resourcePath="/v1.0/customers/{customerId}/clients" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getClients - customer not found" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 404 Status"><con:configuration><scriptText>def response = context.testCase.testSteps["GET getClients - customer not found"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 404 Not Found")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [itemNotFound]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:itemNotFound)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="customerId" value="RCN-idontexist-asdf1234"/>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getClient - authorized admin" searchProperties="true" id="0ef44b9b-af2f-47c2-bb47-99d7baf00ef9"><con:settings/><con:testStep type="properties" name="Properties - stored variables"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-4e28408684964848ee2990c6cac7a9711ff4507c</con:value></con:property><con:property><con:name>customerId</con:name><con:value>RACKSPACE</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - admin"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - admin" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="mkovacs" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - access_token"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>access_token</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getToken - admin</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GET getClient - success"><con:settings/><con:config service="idm-api" methodName="GET - getClient" resourcePath="/v1.0/customers/{customerId}/clients/{clientId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getClient - success" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 200 Status"><con:configuration><scriptText>def response = context.testCase.testSteps["GET getClient - success"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 200 OK")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [client]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:client)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
  <con:entry key="clientId" value="ABCDEF"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getClient - client not found"><con:settings/><con:config service="idm-api" methodName="GET - getClient" resourcePath="/v1.0/customers/{customerId}/clients/{clientId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getClient - client not found" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 404 Status"><con:configuration><scriptText>def response = context.testCase.testSteps["GET getClient - client not found"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 404 Not Found")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [itemNotFound]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:itemNotFound)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="customerId" value="RACKSPACE"/>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
  <con:entry key="clientId" value="clientId-idontexist-asdf1234"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getClient - customer not found"><con:settings/><con:config service="idm-api" methodName="GET - getClient" resourcePath="/v1.0/customers/{customerId}/clients/{clientId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getClient - customer not found" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 404 Status"><con:configuration><scriptText>def response = context.testCase.testSteps["GET getClient - customer not found"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 404 Not Found")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [itemNotFound]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:itemNotFound)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
  <con:entry key="customerId" value="RCN-idontexist-asdf1234"/>
  <con:entry key="clientId" value="ABCDEF"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getClient - bad token"><con:settings/><con:config service="idm-api" methodName="GET - getClient" resourcePath="/v1.0/customers/{customerId}/clients/{clientId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getClient - bad token" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 200 Status"><con:configuration><scriptText>def response = context.testCase.testSteps["GET getClient - bad token"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 401 Unauthorized")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [unauthorized]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:unauthorized)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="customerId" value="RACKSPACE"/>
  <con:entry key="Authorization" value="OAuth badtokenx-xxxx-asdf1234"/>
  <con:entry key="clientId" value="ABCDEF"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getClient - user" searchProperties="true" id="f02e4106-187c-4dfc-9dc2-f6ec1fe23104"><con:settings/><con:testStep type="properties" name="Properties - stored variables"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-11feffc8b96136a865d9520fcb22d14ea54caa31</con:value></con:property><con:property><con:name>customerId</con:name><con:value>RACKSPACE</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - user"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - user" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="testuser" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - access_token"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>access_token</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getToken - user</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GET getClient - unauthorized"><con:settings/><con:config service="idm-api" methodName="GET - getClient" resourcePath="/v1.0/customers/{customerId}/clients/{clientId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getClient - unauthorized" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 403 status"><con:configuration><scriptText>def response = context.testCase.testSteps["GET getClient - unauthorized"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 403 Forbidden")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [forbidden]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:forbidden)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
  <con:entry key="clientId" value="ABCDEF"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getClient - authorized client" searchProperties="true" id="b7e0050c-7d3c-414c-b94b-1ed6f01d55d3"><con:settings/><con:testStep type="properties" name="Properties - stored variables"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-aaf0009f0520b724c6f391bd2af187c487333b6b</con:value></con:property><con:property><con:name>customerId</con:name><con:value>RACKSPACE</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - cloud cp"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - cloud cp" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - access_token"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>access_token</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getToken - cloud cp</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GET getClient - success"><con:settings/><con:config service="idm-api" methodName="GET - getClient" resourcePath="/v1.0/customers/{customerId}/clients/{clientId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getClient - success" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 200 status"><con:configuration><scriptText>def response = context.testCase.testSteps["GET getClient - success"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 200 OK")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [client]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:client)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
  <con:entry key="clientId" value="ABCDEF"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="deleteClient - admin" searchProperties="true" id="25828ca0-92be-4d2d-82e8-2346450e6b83"><con:settings/><con:testStep type="properties" name="Properties - stored variables"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-4e28408684964848ee2990c6cac7a9711ff4507c</con:value></con:property><con:property><con:name>customerId</con:name><con:value>RACKSPACE</con:value></con:property><con:property><con:name>clientId</con:name><con:value xsi:nil="true"/></con:property></con:properties></con:config></con:testStep><con:testStep type="datagen" name="DataGen - client"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>99</start><end>9999999</end><step/><pattern>CID-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-clientId</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99</start><end>9999999</end><step/><pattern>clientName-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-clientName</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - admin"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - admin" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="mkovacs" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - access_token"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>access_token</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getToken - admin</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addClient"><con:settings/><con:config service="idm-api" methodName="POST - addClient" resourcePath="/v1.0/customers/{customerId}/clients" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addClient" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:client clientId="${DataGen - client#gen-clientId}" customerId="${Properties - stored variables#customerId}" name="${DataGen - client#gen-clientName}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
  <con:entry key="customerId" value="${Properties - stored variables#customerId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - clientId"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>clientId</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST addClient</con:sourceStep><con:sourcePath>declare namespace ns1='http://localhost/v1.0/customers/RACKSPACE/clients';
//ns1:Response[1]/ns1:clientId[1]</con:sourcePath><con:targetType>clientId</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="DELETE deleteClient - bad token"><con:settings/><con:config service="idm-api" methodName="DELETE - deleteClient" resourcePath="/v1.0/customers/{customerId}/clients/{clientId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE deleteClient - bad token" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 401 status"><con:configuration><scriptText>def response = context.testCase.testSteps["DELETE deleteClient - bad token"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 401 Unauthorized")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [unauthorized]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:unauthorized)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="customerId" value="${Properties - stored variables#customerId}"/>
  <con:entry key="Authorization" value="OAuth badtoken-xxxx-asdf1234"/>
  <con:entry key="clientId" value="${Properties - stored variables#clientId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE deleteClient - unauthorized"><con:settings/><con:config service="idm-api" methodName="DELETE - deleteClient" resourcePath="/v1.0/customers/{customerId}/clients/{clientId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE deleteClient - unauthorized" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 204 status"><con:configuration><scriptText>def response = context.testCase.testSteps["DELETE deleteClient - unauthorized"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 403 Forbidden")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [forbidden]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:forbidden)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
  <con:entry key="customerId" value="${Properties - stored variables#customerId}"/>
  <con:entry key="clientId" value="${Properties - stored variables#clientId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE deleteClient - client not found"><con:settings/><con:config service="idm-api" methodName="DELETE - deleteClient" resourcePath="/v1.0/customers/{customerId}/clients/{clientId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE deleteClient - client not found" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 404 status"><con:configuration><scriptText>def response = context.testCase.testSteps["DELETE deleteClient - client not found"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 404 Not Found")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [itemNotFound]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:itemNotFound)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="customerId" value="${Properties - stored variables#customerId}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
  <con:entry key="clientId" value="clientId-idontexist-1234asdf"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE deleteClient - customer not found"><con:settings/><con:config service="idm-api" methodName="DELETE - deleteClient" resourcePath="/v1.0/customers/{customerId}/clients/{clientId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE deleteClient - customer not found" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 404 status"><con:configuration><scriptText>def response = context.testCase.testSteps["DELETE deleteClient - client not found"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 404 Not Found")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [itemNotFound]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:itemNotFound)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="customerId" value="RCN-idontexist-asdf1234"/>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
  <con:entry key="clientId" value="${Properties - stored variables#clientId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="deleteClient - user" searchProperties="true" id="c5fd5c1e-7c7a-4d6c-9194-efb3c6fa858d"><con:settings/><con:testStep type="properties" name="Properties - stored variables"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-4e28408684964848ee2990c6cac7a9711ff4507c</con:value></con:property><con:property><con:name>customerId</con:name><con:value>RACKSPACE</con:value></con:property><con:property><con:name>clientId</con:name><con:value xsi:nil="true"/></con:property><con:property><con:name>user_token</con:name><con:value>DFW-11feffc8b96136a865d9520fcb22d14ea54caa31</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="datagen" name="DataGen - client"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>99</start><end>9999999</end><step/><pattern>CID-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-clientId</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99</start><end>9999999</end><step/><pattern>clientName-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-clientName</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - admin"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - admin" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="mkovacs" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - access_token"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>access_token</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getToken - admin</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addClient"><con:settings/><con:config service="idm-api" methodName="POST - addClient" resourcePath="/v1.0/customers/{customerId}/clients" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addClient" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:client clientId="${DataGen - client#gen-clientId}" customerId="${Properties - stored variables#customerId}" name="${DataGen - client#gen-clientName}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
  <con:entry key="customerId" value="${Properties - stored variables#customerId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - clientId"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>clientId</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST addClient</con:sourceStep><con:sourcePath>declare namespace ns1='http://localhost/v1.0/customers/RACKSPACE/clients';
//ns1:Response[1]/ns1:clientId[1]</con:sourcePath><con:targetType>clientId</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - user"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - user" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="testuser" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - user_token"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getToken - user</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>user_token</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="DELETE deleteClient - unauthorized"><con:settings/><con:config service="idm-api" methodName="DELETE - deleteClient" resourcePath="/v1.0/customers/{customerId}/clients/{clientId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE deleteClient - unauthorized" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 403 status"><con:configuration><scriptText>def response = context.testCase.testSteps["DELETE deleteClient - unauthorized"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 403 Forbidden")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [forbidden]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:forbidden)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="customerId" value="${Properties - stored variables#customerId}"/>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#user_token}"/>
  <con:entry key="clientId" value="${Properties - stored variables#clientId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="deleteClient - client" searchProperties="true" id="2c90c40d-b326-4221-ac87-d299adf47017"><con:settings/><con:testStep type="properties" name="Properties - stored variables"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-4e28408684964848ee2990c6cac7a9711ff4507c</con:value></con:property><con:property><con:name>customerId</con:name><con:value>RACKSPACE</con:value></con:property><con:property><con:name>clientId</con:name><con:value>1ad26f117da9a9eae60cb5407740114fcbace48a</con:value></con:property><con:property><con:name>requestor_token</con:name><con:value>DFW-aaf0009f0520b724c6f391bd2af187c487333b6b</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="datagen" name="DataGen - client"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>99</start><end>9999999</end><step/><pattern>CID-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-clientId</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99</start><end>9999999</end><step/><pattern>clientName-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-clientName</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - admin"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - admin" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="mkovacs" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - access_token"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>access_token</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getToken - admin</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addClient"><con:settings/><con:config service="idm-api" methodName="POST - addClient" resourcePath="/v1.0/customers/{customerId}/clients" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addClient" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:client clientId="${DataGen - client#gen-clientId}" customerId="${Properties - stored variables#customerId}" name="${DataGen - client#gen-clientName}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
  <con:entry key="customerId" value="${Properties - stored variables#customerId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - clientId"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>clientId</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST addClient</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:client[1]/@clientId</con:sourcePath><con:targetType>clientId</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - cloud cp"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - cloud cp" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - requestor_token"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getToken - cloud cp</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>requestor_token</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="DELETE deleteClient - unauthorized"><con:settings/><con:config service="idm-api" methodName="DELETE - deleteClient" resourcePath="/v1.0/customers/{customerId}/clients/{clientId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE deleteClient - unauthorized" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 403 status"><con:configuration><scriptText>def response = context.testCase.testSteps["DELETE deleteClient - unauthorized"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 403 Forbidden")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [forbidden]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:forbidden)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#requestor_token}"/>
  <con:entry key="customerId" value="${Properties - stored variables#customerId}"/>
  <con:entry key="clientId" value="${Properties - stored variables#clientId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="setClientSoftDelete - admin" searchProperties="true" id="210d94cf-b634-4b4c-b643-9cbe4feeaa11"><con:settings/><con:testStep type="properties" name="Properties - stored variables"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-4e28408684964848ee2990c6cac7a9711ff4507c</con:value></con:property><con:property><con:name>customerId</con:name><con:value>RACKSPACE</con:value></con:property><con:property><con:name>clientId</con:name><con:value>23f80cce81245faba52e8323c11435c32f41c450</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="datagen" name="DataGen - client"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>99</start><end>9999999</end><step/><pattern>CID-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-clientId</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99</start><end>9999999</end><step/><pattern>clientName-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-clientName</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - admin"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - admin" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="mkovacs" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - access_token"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>access_token</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getToken - admin</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addClient"><con:settings/><con:config service="idm-api" methodName="POST - addClient" resourcePath="/v1.0/customers/{customerId}/clients" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addClient" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:client clientId="${DataGen - client#gen-clientId}" customerId="${Properties - stored variables#customerId}" name="${DataGen - client#gen-clientName}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
  <con:entry key="customerId" value="${Properties - stored variables#customerId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - clientId"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>clientId</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST addClient</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:client[1]/@clientId</con:sourcePath><con:targetType>clientId</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="PUT setClientSoftDelete - unauthorized"><con:settings/><con:config service="idm-api" methodName="PUT - setClientSoftDelete" resourcePath="/v1.0/customers/{customerId}/clients/{clientId}/softdelete" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT setClientSoftDelete - unauthorized" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:client clientId="${Properties - stored variables#clientId}" customerId="${Properties - stored variables#customerId}" locked="false" name="" softDeleted="true" status="ACTIVE" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 403 status"><con:configuration><scriptText>def response = context.testCase.testSteps["PUT setClientSoftDelete - unauthorized"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 403 Forbidden")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [forbidden]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:forbidden)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
  <con:entry key="customerId" value="${Properties - stored variables#customerId}"/>
  <con:entry key="clientId" value="${Properties - stored variables#clientId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="setClientSoftDelete - user" searchProperties="true" id="785e3944-4eb6-440b-be1d-48d1f8438d28"><con:settings/><con:testStep type="properties" name="Properties - stored variables"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-4e28408684964848ee2990c6cac7a9711ff4507c</con:value></con:property><con:property><con:name>customerId</con:name><con:value>RACKSPACE</con:value></con:property><con:property><con:name>clientId</con:name><con:value>64a2a755a9b1341ddb36a0784f83c44f3215cfec</con:value></con:property><con:property><con:name>user_token</con:name><con:value>DFW-11feffc8b96136a865d9520fcb22d14ea54caa31</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="datagen" name="DataGen - client"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>99</start><end>9999999</end><step/><pattern>CID-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-clientId</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99</start><end>9999999</end><step/><pattern>clientName-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-clientName</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - admin"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - admin" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="mkovacs" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - access_token"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>access_token</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getToken - admin</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addClient"><con:settings/><con:config service="idm-api" methodName="POST - addClient" resourcePath="/v1.0/customers/{customerId}/clients" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addClient" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:client clientId="${DataGen - client#gen-clientId}" customerId="${Properties - stored variables#customerId}" name="${DataGen - client#gen-clientName}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
  <con:entry key="customerId" value="${Properties - stored variables#customerId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - clientId"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>clientId</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST addClient</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:client[1]/@clientId</con:sourcePath><con:targetType>clientId</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="getToken - user"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getToken - user" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="testuser" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - user_token"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>getToken - user</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>user_token</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="PUT setClientSoftDelete - unauthorized"><con:settings/><con:config service="idm-api" methodName="PUT - setClientSoftDelete" resourcePath="/v1.0/customers/{customerId}/clients/{clientId}/softdelete" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT setClientSoftDelete - unauthorized" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:client clientId="${Properties - stored variables#clientId}" customerId="${Properties - stored variables#customerId}" locked="false" name="" softDeleted="true" status="ACTIVE" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 403 status"><con:configuration><scriptText>def response = context.testCase.testSteps["PUT setClientSoftDelete - unauthorized"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 403 Forbidden")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [forbidden]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:forbidden)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#user_token}"/>
  <con:entry key="customerId" value="${Properties - stored variables#customerId}"/>
  <con:entry key="clientId" value="${Properties - stored variables#clientId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="setClientSoftDelete - client" searchProperties="true" id="0065c07e-02f5-4076-a94a-860b64fd13f2"><con:settings/><con:testStep type="properties" name="Properties - stored variables"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-4e28408684964848ee2990c6cac7a9711ff4507c</con:value></con:property><con:property><con:name>customerId</con:name><con:value>RACKSPACE</con:value></con:property><con:property><con:name>clientId</con:name><con:value>d5333820ee43c8f0d57e4eb3eacb9a0f1c034757</con:value></con:property><con:property><con:name>requestor_token</con:name><con:value>DFW-aaf0009f0520b724c6f391bd2af187c487333b6b</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="datagen" name="DataGen - client"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Number"><con:configuration><start>99</start><end>9999999</end><step/><pattern>CID-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-clientId</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property><con:property type="Number"><con:configuration><start>99</start><end>9999999</end><step/><pattern>clientName-</pattern><random>true</random><persist>false</persist></con:configuration><con:name>gen-clientName</con:name><con:mode>STEP</con:mode><con:shared>false</con:shared></con:property></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - admin"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - admin" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="mkovacs" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - access_token"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>access_token</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getToken - admin</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST addClient"><con:settings/><con:config service="idm-api" methodName="POST - addClient" resourcePath="/v1.0/customers/{customerId}/clients" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST addClient" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:client clientId="${DataGen - client#gen-clientId}" customerId="${Properties - stored variables#customerId}" name="${DataGen - client#gen-clientName}" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
  <con:entry key="customerId" value="${Properties - stored variables#customerId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - clientId"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>clientId</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST addClient</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:client[1]/@clientId</con:sourcePath><con:targetType>clientId</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="getToken - Cloud CP"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getToken - Cloud CP" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - requestor_token"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>getToken - Cloud CP</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>requestor_token</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="PUT setClientSoftDelete - unauthorized"><con:settings/><con:config service="idm-api" methodName="PUT - setClientSoftDelete" resourcePath="/v1.0/customers/{customerId}/clients/{clientId}/softdelete" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT setClientSoftDelete - unauthorized" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:client clientId="${Properties - stored variables#clientId}" customerId="${Properties - stored variables#customerId}" locked="false" name="" softDeleted="true" status="ACTIVE" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 403 status"><con:configuration><scriptText>def response = context.testCase.testSteps["PUT setClientSoftDelete - unauthorized"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 403 Forbidden")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [forbidden]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:forbidden)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#requestor_token}"/>
  <con:entry key="customerId" value="${Properties - stored variables#customerId}"/>
  <con:entry key="clientId" value="${Properties - stored variables#clientId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite name="TestSuite - customers"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="setCustomerLockStatus - authorized client" searchProperties="true" id="7c3d9d76-887b-452a-904b-b32520658439"><con:settings/><con:testStep type="properties" name="Properties - stored variables"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-c7533ecf64a72fca558ba58120efc16368e611d6</con:value></con:property><con:property><con:name>refresh_token</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - billing service"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - billing service" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="GHIJKL" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - access_token"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>access_token</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getToken - billing service</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="PUT setCustomerLockStatus - true"><con:settings/><con:config service="idm-api" methodName="PUT - setCustomerLockStatus" resourcePath="/v1.0/customers/{customerId}/actions/lock" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT setCustomerLockStatus - true" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:customer customerId="RACKSPACE" locked="true" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 200 OK"><con:configuration><scriptText>def response = context.testCase.testSteps["PUT setCustomerLockStatus - true"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 200 OK")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@locked]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:customer[1]/@locked</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT setCustomerLockStatus - false"><con:settings/><con:config service="idm-api" methodName="PUT - setCustomerLockStatus" resourcePath="/v1.0/customers/{customerId}/actions/lock" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT setCustomerLockStatus - false" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:customer customerId="RACKSPACE" locked="false" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 200 OK"><con:configuration><scriptText>def response = context.testCase.testSteps["PUT setCustomerLockStatus - false"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 200 OK")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@locked]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:customer[1]/@locked</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="setCustomerLockStatus - unauthorized client" searchProperties="true" id="aa3054a0-01f0-4cbe-97e1-0af5de6ab3a6"><con:settings/><con:testStep type="properties" name="Properties - stored variables"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-b7347454ccf6cbc5ed9a14d41d79e127965a2b93</con:value></con:property><con:property><con:name>refresh_token</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - signup service"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - signup service" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="MNOPQR" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - access_token"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>access_token</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getToken - signup service</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="PUT setCustomerLockStatus - true"><con:settings/><con:config service="idm-api" methodName="PUT - setCustomerLockStatus" resourcePath="/v1.0/customers/{customerId}/actions/lock" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT setCustomerLockStatus - true" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:customer customerId="RACKSPACE" locked="true" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 403 Status"><con:configuration><scriptText>def response = context.testCase.testSteps["PUT setCustomerLockStatus - true"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 403 Forbidden")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [forbidden]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:forbidden)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT setCustomerLockStatus - false"><con:settings/><con:config service="idm-api" methodName="PUT - setCustomerLockStatus" resourcePath="/v1.0/customers/{customerId}/actions/lock" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT setCustomerLockStatus - false" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:customer customerId="RACKSPACE" locked="false" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 403 Status"><con:configuration><scriptText>def response = context.testCase.testSteps["PUT setCustomerLockStatus - false"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 403 Forbidden")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [forbidden]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:forbidden)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="setCustomerLockStatus - user" searchProperties="true" id="51c3d5ec-bb74-4ce7-9fd4-6970f5bb95bd"><con:settings/><con:testStep type="properties" name="Properties - stored variables"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-bfb7dbe351a25959c02618adc948fbed63c4d3db</con:value></con:property><con:property><con:name>refresh_token</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - user"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - user" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="testuser" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - access_token"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>access_token</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getToken - user</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="PUT setCustomerLockStatus - true"><con:settings/><con:config service="idm-api" methodName="PUT - setCustomerLockStatus" resourcePath="/v1.0/customers/{customerId}/actions/lock" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT setCustomerLockStatus - true" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:customer customerId="RACKSPACE" locked="true" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 403 Status"><con:configuration><scriptText>def response = context.testCase.testSteps["PUT setCustomerLockStatus - true"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 403 Forbidden")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [forbidden]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:forbidden)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="customerId" value="RCN-111-111-111"/>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT setCustomerLockStatus - false"><con:settings/><con:config service="idm-api" methodName="PUT - setCustomerLockStatus" resourcePath="/v1.0/customers/{customerId}/actions/lock" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT setCustomerLockStatus - false" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:customer customerId="RACKSPACE" locked="false" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 403 Status"><con:configuration><scriptText>def response = context.testCase.testSteps["PUT setCustomerLockStatus - false"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 403 Forbidden")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [forbidden]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:forbidden)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="customerId" value="RCN-111-111-111"/>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="setCustomerLockStatus - admin" searchProperties="true" id="09682db5-f1f7-4403-a45a-77743035b17f"><con:settings/><con:testStep type="properties" name="Properties - stored variables"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-151bf1dfe92d87e0d1597a63324c95c947aa3e90</con:value></con:property><con:property><con:name>refresh_token</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - admin"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - admin" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="mkovacs" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - access_token"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>access_token</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getToken - admin</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties - stored variables</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="PUT setCustomerLockStatus - true"><con:settings/><con:config service="idm-api" methodName="PUT - setCustomerLockStatus" resourcePath="/v1.0/customers/{customerId}/actions/lock" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT setCustomerLockStatus - true" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:customer customerId="RACKSPACE" locked="true" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 403 Status"><con:configuration><scriptText>def response = context.testCase.testSteps["PUT setCustomerLockStatus - true"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 403 Forbidden")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [forbidden]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:forbidden)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT setCustomerLockStatus - false"><con:settings/><con:config service="idm-api" methodName="PUT - setCustomerLockStatus" resourcePath="/v1.0/customers/{customerId}/actions/lock" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT setCustomerLockStatus - false" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:customer customerId="RACKSPACE" locked="false" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 403 Status"><con:configuration><scriptText>def response = context.testCase.testSteps["PUT setCustomerLockStatus - false"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 403 Forbidden")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [forbidden]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:forbidden)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - stored variables#access_token}"/>
  <con:entry key="customerId" value="RACKSPACE"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite name="TestSuite - Tokens"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetTokenAsUser" searchProperties="true" id="09275dd9-1103-47bf-a7f9-8eaa7a7bc4c6"><con:settings/><con:testStep type="restrequest" name="POST getToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="testuser" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:assertion type="XPath Match" name="Check for existence of [@id]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:auth/ns1:access_token/@id)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetTokenAsClient" searchProperties="true" id="5bdf863f-d5b7-44a4-852f-31ee0c365d34"><con:settings/><con:testStep type="restrequest" name="POST getToken Racker App - success"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken Racker App - success" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:assertion type="XPath Match" name="Check for existence of [auth]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:auth)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 200 status"><con:configuration><scriptText>def response = context.testCase.testSteps["POST getToken Racker App - success"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 200 OK")</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken Signup service - success"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken Signup service - success" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="MNOPQR" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:assertion type="XPath Match" name="Check for existence of [auth]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:auth)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 200 status"><con:configuration><scriptText>def response = context.testCase.testSteps["POST getToken Signup service - success"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 200 OK")</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken Billing App - success"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken Billing App - success" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="GHIJKL" client_secret="password" grant_type="NONE" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:assertion type="XPath Match" name="Check for existence of [auth]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:auth)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 200 status"><con:configuration><scriptText>def response = context.testCase.testSteps["POST getToken Billing App - success"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 200 OK")</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - bad client secret"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - bad client secret" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="passwordxxx" grant_type="NONE" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 401 status"><con:configuration><scriptText>def response = context.testCase.testSteps["POST getToken - bad client secret"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 401 Unauthorized")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [unauthorized]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:unauthorized)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - bad client name"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - bad client name" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ajkfsdlsdjlfj" client_secret="adfdsds" grant_type="NONE" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 401 status"><con:configuration><scriptText>def response = context.testCase.testSteps["POST getToken - bad client secret"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 401 Unauthorized")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existence of [unauthorized]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:unauthorized)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetTokenAsAdmin" searchProperties="true" id="fb7055bb-1fa2-4e10-8884-c0b6d53f2d92"><con:settings/><con:testStep type="restrequest" name="POST getToken - success"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - success" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="mkovacs" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 200 OK status"><con:configuration><scriptText>def response = context.testCase.testSteps["POST getToken - success"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 200 OK")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [auth]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:auth)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - Bad Request"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - Bad Request" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="" client_secret="" grant_type="PASSWORD" password="" username="" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 400 status"><con:configuration><scriptText>def response = context.testCase.testSteps["POST getToken - Bad Request"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 400 Bad Request")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [badRequest]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:badRequest)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - Bad Client Credentials"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - Bad Client Credentials" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="bad_password" grant_type="PASSWORD" password="password" username="mkovacs" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 500 status"><con:configuration><scriptText>def response = context.testCase.testSteps["POST getToken - Bad Client Credentials"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 401 Unauthorized")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [unauthorized]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:unauthorized)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - Bad User Credentials"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - Bad User Credentials" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="bad_password" username="mkovacs" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 401 status"><con:configuration><scriptText>def response = context.testCase.testSteps["POST getToken - Bad User Credentials"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 401 Unauthorized")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [unauthorized]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:unauthorized)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ValidateTokenForRackerApp" searchProperties="true" id="614b203a-daec-43e6-8135-7bbfdcb63a0b"><con:settings/><con:testStep type="properties" name="Properties - token"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-aaf0009f0520b724c6f391bd2af187c487333b6b</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST - getToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - getToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="NONE" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" ignoreEmpty="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST - getToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties - token</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GET - validateToken"><con:settings/><con:config service="idm-api" resourcePath="/v1.0/token/{tokenId}" methodName="GET - validateToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - validateToken" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="XPath Match" name="Check for existence of [@id]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:auth/ns1:access_token/@id)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 200 OK"><con:configuration><scriptText>def response = context.testCase.testSteps["GET - validateToken"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 200 OK")</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - token#access_token}"/>
  <con:entry key="tokenId" value="${Properties - token#access_token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ValidateTokenForUser" searchProperties="true" id="e3f939df-2bbc-4a0d-9769-d6e7b239bbc5"><con:settings/><con:testStep type="properties" name="Properties - token"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-bfb7dbe351a25959c02618adc948fbed63c4d3db</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST - getToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - getToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="testuser" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" ignoreEmpty="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST - getToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties - token</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GET - validateToken"><con:settings/><con:config service="idm-api" resourcePath="/v1.0/token/{tokenId}" methodName="GET - validateToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - validateToken" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="XPath Match" name="Check for existence of [@id]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:auth/ns1:access_token/@id)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 200 OK"><con:configuration><scriptText>def response = context.testCase.testSteps["GET - validateToken"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 200 OK")</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - token#access_token}"/>
  <con:entry key="tokenId" value="${Properties - token#access_token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ValidateTokenForAdmin" searchProperties="true" id="7ac284eb-bd9f-4def-b493-80ef83a95685"><con:settings/><con:testStep type="properties" name="Properties - token"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-151bf1dfe92d87e0d1597a63324c95c947aa3e90</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST - getToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - getToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="mkovacs" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" ignoreEmpty="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST - getToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties - token</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GET - validateToken"><con:settings/><con:config service="idm-api" resourcePath="/v1.0/token/{tokenId}" methodName="GET - validateToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - validateToken" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="XPath Match" name="Check for existence of [@id]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:auth/ns1:access_token/@id)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 200 OK"><con:configuration><scriptText>def response = context.testCase.testSteps["GET - validateToken"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 200 OK")</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - token#access_token}"/>
  <con:entry key="tokenId" value="${Properties - token#access_token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ValidateTokenForSignupService" searchProperties="true" id="9ed9c22a-db78-4aa4-a71f-c63c5a6e5ac0"><con:settings/><con:testStep type="properties" name="Properties - token"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-b7347454ccf6cbc5ed9a14d41d79e127965a2b93</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST - getToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - getToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="MNOPQR" client_secret="password" grant_type="NONE" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" ignoreEmpty="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST - getToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties - token</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GET - validateToken"><con:settings/><con:config service="idm-api" resourcePath="/v1.0/token/{tokenId}" methodName="GET - validateToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - validateToken" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="XPath Match" name="Check for existence of [@id]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:auth/ns1:access_token/@id)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 200 OK"><con:configuration><scriptText>def response = context.testCase.testSteps["GET - validateToken"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 200 OK")</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - token#access_token}"/>
  <con:entry key="tokenId" value="${Properties - token#access_token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ValidateTokenForBillingApp" searchProperties="true" id="b310e917-33a9-4e7c-8820-fd5feec832fb"><con:settings/><con:testStep type="properties" name="Properties - token"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-c7533ecf64a72fca558ba58120efc16368e611d6</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST - getToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - getToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="GHIJKL" client_secret="password" grant_type="NONE" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" ignoreEmpty="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST - getToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties - token</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GET - validateToken"><con:settings/><con:config service="idm-api" resourcePath="/v1.0/token/{tokenId}" methodName="GET - validateToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - validateToken" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="XPath Match" name="Check for existence of [@id]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:auth/ns1:access_token/@id)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 200 OK"><con:configuration><scriptText>def response = context.testCase.testSteps["GET - validateToken"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 200 OK")</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties - token#access_token}"/>
  <con:entry key="tokenId" value="${Properties - token#access_token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RevokeTokenAsUser" searchProperties="true" id="6a428ef0-15bd-4761-b2cc-7833d8a9fc93"><con:settings/><con:testStep type="properties" name="Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-bfb7dbe351a25959c02618adc948fbed63c4d3db</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken - success"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken - success" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="testuser" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - access_token"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getToken - success</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="DELETE Token"><con:settings/><con:config service="idm-api" resourcePath="/v1.0/token/{tokenId}" methodName="DELETE - revokeToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE Token" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 204 Status"><con:configuration><scriptText>def response = context.testCase.testSteps["DELETE Token"].testRequest.response
def status = response.responseHeaders["#status#"]

assert(status.contains("HTTP/1.1 204 No Content"))</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties#access_token}"/>
  <con:entry key="tokenId" value="${Properties#access_token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RevokeTokenAsRackerApp" searchProperties="true" id="22fc7fe9-b9a0-42a6-92cb-d8f44e90f3a0"><con:settings/><con:testStep type="properties" name="Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>clientToken</con:name><con:value>DFW-aaf0009f0520b724c6f391bd2af187c487333b6b</con:value></con:property><con:property><con:name>userToken</con:name><con:value>DFW-151bf1dfe92d87e0d1597a63324c95c947aa3e90</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST getTokenAsClient"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getTokenAsClient" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="NONE" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransferClientToken"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" ignoreEmpty="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getTokenAsClient</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>clientToken</con:targetType><con:targetStep>Properties</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST getTokenAsUser"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getTokenAsUser" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="mkovacs" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransferUserToken"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" ignoreEmpty="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getTokenAsUser</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>userToken</con:targetType><con:targetStep>Properties</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="DELETE Token"><con:settings/><con:config service="idm-api" resourcePath="/v1.0/token/{tokenId}" methodName="DELETE - revokeToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE Token" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 204 status"><con:configuration><scriptText>def response = context.testCase.testSteps["DELETE Token"].testRequest.response
def status = response.responseHeaders["#status#"]

assert(status.contains("HTTP/1.1 204 No Content"))</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${Properties#userToken}"/>
  <con:entry key="Authorization" value="OAuth ${Properties#clientToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RevokeTokenAsBillingApp" searchProperties="true" id="6333b455-8c2c-49e6-a43a-1437c4abc44a"><con:settings/><con:testStep type="properties" name="Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>clientToken</con:name><con:value>DFW-c7533ecf64a72fca558ba58120efc16368e611d6</con:value></con:property><con:property><con:name>userToken</con:name><con:value>DFW-222aed4e1383e35712d1b8d8400a9677270f5ff4</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST getTokenAsClient"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getTokenAsClient" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="GHIJKL" client_secret="password" grant_type="NONE" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransferClientToken"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" ignoreEmpty="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getTokenAsClient</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>clientToken</con:targetType><con:targetStep>Properties</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST getTokenAsUser"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getTokenAsUser" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="mkovacs" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransferUserToken"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" ignoreEmpty="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getTokenAsUser</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>userToken</con:targetType><con:targetStep>Properties</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="DELETE Token"><con:settings/><con:config service="idm-api" resourcePath="/v1.0/token/{tokenId}" methodName="DELETE - revokeToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE Token" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 204 status"><con:configuration><scriptText>def response = context.testCase.testSteps["DELETE Token"].testRequest.response
def status = response.responseHeaders["#status#"]

assert(status.contains("HTTP/1.1 204 No Content"))</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${Properties#userToken}"/>
  <con:entry key="Authorization" value="OAuth ${Properties#clientToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RevokeTokenAsSignupService" searchProperties="true" id="836d2606-bcff-48bc-925f-8233badedcc1"><con:settings/><con:testStep type="properties" name="Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>clientToken</con:name><con:value>DFW-b7347454ccf6cbc5ed9a14d41d79e127965a2b93</con:value></con:property><con:property><con:name>userToken</con:name><con:value>DFW-133227c8a7d73bae3b7601cf286d909b99e9497e</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST getTokenAsClient"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getTokenAsClient" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="MNOPQR" client_secret="password" grant_type="NONE" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransferClientToken"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" ignoreEmpty="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getTokenAsClient</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>clientToken</con:targetType><con:targetStep>Properties</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST getTokenAsUser"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getTokenAsUser" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="mkovacs" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransferUserToken"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" ignoreEmpty="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST getTokenAsUser</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>userToken</con:targetType><con:targetStep>Properties</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="DELETE Token"><con:settings/><con:config service="idm-api" resourcePath="/v1.0/token/{tokenId}" methodName="DELETE - revokeToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE Token" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 204 status"><con:configuration><scriptText>def response = context.testCase.testSteps["DELETE Token"].testRequest.response
def status = response.responseHeaders["#status#"]

assert(status.contains("HTTP/1.1 204 No Content"))</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${Properties#userToken}"/>
  <con:entry key="Authorization" value="OAuth ${Properties#clientToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AdminShouldNotBeAbleToRevokeUserToken" searchProperties="true" id="af7b47fb-5769-467d-a76b-67e98771f448"><con:settings/><con:testStep type="properties" name="Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>adminToken</con:name><con:value>DFW-4e28408684964848ee2990c6cac7a9711ff4507c</con:value></con:property><con:property><con:name>userToken</con:name><con:value>DFW-11feffc8b96136a865d9520fcb22d14ea54caa31</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="GetAdminToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetAdminToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="mkovacs" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - admin_token"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" ignoreEmpty="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>GetAdminToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>adminToken</con:targetType><con:targetStep>Properties</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GetUserToken"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GetUserToken" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="testuser" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransfer - user_token"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" ignoreEmpty="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>GetUserToken</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>userToken</con:targetType><con:targetStep>Properties</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="DELETE Token"><con:settings/><con:config service="idm-api" methodName="DELETE - revokeToken" resourcePath="/v1.0/token/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE Token" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="XPath Match" name="Check for existence of [forbidden]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:forbidden)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion - 403 status"><con:configuration><scriptText>def response = context.testCase.testSteps["DELETE Token"].testRequest.response
def status = response.responseHeaders["#status#"]

assert status.contains("HTTP/1.1 403 Forbidden")</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties#adminToken}"/>
  <con:entry key="tokenId" value="${Properties#userToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite name="TestSuite - Passwords"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetPasswordRules" searchProperties="true" id="bfe4827a-abe7-4577-8635-c3b92ebd24a2"><con:settings/><con:testStep type="properties" name="Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-11feffc8b96136a865d9520fcb22d14ea54caa31</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST user token"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST user token" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="testuser" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransferUserAccessToken"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST user token</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GET - passwordRules"><con:settings/><con:config service="idm-api" resourcePath="/v1.0/passwordrules" methodName="GET - getPasswordRules" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - passwordRules" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="XPath Match" name="Check for existence of [passwordRules]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
exists( //ns1:passwordRules)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Authorization" value="OAuth ${Properties#access_token}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ValidatePassword" searchProperties="true" id="3b2348dc-f59a-4957-b76b-a0846bb40aad"><con:settings/><con:testStep type="properties" name="Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-11feffc8b96136a865d9520fcb22d14ea54caa31</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST user token"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST user token" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="testuser" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransferUserAccessToken"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST user token</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GET - validatePassword"><con:settings/><con:config service="idm-api" methodName="GET - validatePassword" resourcePath="/v1.0/passwordrules/validation/{password}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - validatePassword" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="XPath Match" name="Match content of [@validPassword]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:passwordValidation[1]/@validPassword</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties#access_token}"/>
  <con:entry key="password" value="P@ssw0rd"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="InvalidPasswordMinimumLengthNotMet" searchProperties="true" id="09fa61f8-9d78-4127-8419-c4062ffac609"><con:settings/><con:testStep type="properties" name="Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-11feffc8b96136a865d9520fcb22d14ea54caa31</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST user token"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST user token" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="testuser" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransferUserAccessToken"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST user token</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GET - validatePassword"><con:settings/><con:config service="idm-api" methodName="GET - validatePassword" resourcePath="/v1.0/passwordrules/validation/{password}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - validatePassword" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="XPath Match" name="Match content of [@validPassword]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:passwordValidation[1]/@validPassword</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@ruleMessage] - Minimum Length not met"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:passwordValidation[1]/ns1:passwordRuleResults[1]/ns1:passwordRuleResults[1]/@ruleMessage</path><content>The password must be at least 7 characters long</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties#access_token}"/>
  <con:entry key="password" value="@ssw0R"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="InvalidPasswordNoUpperCase" searchProperties="true" id="e84b9355-cf12-4655-b8f9-cbec276ce902"><con:settings/><con:testStep type="properties" name="Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-11feffc8b96136a865d9520fcb22d14ea54caa31</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST user token"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST user token" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="testuser" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransferUserAccessToken"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST user token</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GET - validatePassword"><con:settings/><con:config service="idm-api" methodName="GET - validatePassword" resourcePath="/v1.0/passwordrules/validation/{password}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - validatePassword" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="XPath Match" name="Match content of [@validPassword]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:passwordValidation[1]/@validPassword</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@passed] - Uppercase rule violated"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:passwordValidation[1]/ns1:passwordRuleResults[1]/ns1:passwordRuleResults[2]/@passed</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties#access_token}"/>
  <con:entry key="password" value="p@ssw0rd"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="InvalidPasswordNoLowerCase" searchProperties="true" id="d3345c55-123d-469b-a3da-57107b3eb2dd"><con:settings/><con:testStep type="properties" name="Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-11feffc8b96136a865d9520fcb22d14ea54caa31</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST user token"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST user token" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="testuser" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransferUserAccessToken"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST user token</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GET - validatePassword"><con:settings/><con:config service="idm-api" methodName="GET - validatePassword" resourcePath="/v1.0/passwordrules/validation/{password}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - validatePassword" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="XPath Match" name="Match content of [@validPassword]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:passwordValidation[1]/@validPassword</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@passed]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:passwordValidation[1]/ns1:passwordRuleResults[1]/ns1:passwordRuleResults[3]/@passed</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties#access_token}"/>
  <con:entry key="password" value="P@SSW0RD"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="InvalidPasswordNoSpecialCharacter" searchProperties="true" id="795b2170-39b7-41aa-a99b-967f3d4c3ca4"><con:settings/><con:testStep type="properties" name="Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-11feffc8b96136a865d9520fcb22d14ea54caa31</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST user token"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST user token" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="testuser" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransferUserAccessToken"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST user token</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GET - validatePassword"><con:settings/><con:config service="idm-api" methodName="GET - validatePassword" resourcePath="/v1.0/passwordrules/validation/{password}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - validatePassword" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="XPath Match" name="Match content of [@validPassword]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:passwordValidation[1]/@validPassword</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@passed] - Special character rule failed"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:passwordValidation[1]/ns1:passwordRuleResults[1]/ns1:passwordRuleResults[4]/@passed</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties#access_token}"/>
  <con:entry key="password" value="Pssw0rd"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="InvalidPasswordNoNumber" searchProperties="true" id="4db9d596-b931-42a3-864d-2d833dbfa433"><con:settings/><con:testStep type="properties" name="Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>access_token</con:name><con:value>DFW-11feffc8b96136a865d9520fcb22d14ea54caa31</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST user token"><con:settings/><con:config service="idm-api" methodName="POST - getToken" resourcePath="/v1.0/token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST user token" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request>&lt;v1:authCredentials client_id="ABCDEF" client_secret="password" grant_type="PASSWORD" password="password" username="testuser" xmlns:v1="http://docs.rackspacecloud.com/idm/api/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransferUserAccessToken"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>POST user token</con:sourceStep><con:sourcePath>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:auth[1]/ns1:access_token[1]/@id</con:sourcePath><con:targetType>access_token</con:targetType><con:targetStep>Properties</con:targetStep><con:targetPath/></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GET - validatePassword"><con:settings/><con:config service="idm-api" methodName="GET - validatePassword" resourcePath="/v1.0/passwordrules/validation/{password}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - validatePassword" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#env-apiUrl}</con:endpoint><con:request/><con:assertion type="XPath Match" name="Match content of [@validPassword]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:passwordValidation[1]/@validPassword</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@passed]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/idm/api/v1.0';
//ns1:passwordValidation[1]/ns1:passwordRuleResults[1]/ns1:passwordRuleResults[5]/@passed</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Authorization" value="OAuth ${Properties#access_token}"/>
  <con:entry key="password" value="P@ssword"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:requirements/><con:properties><con:property><con:name>env-ip</con:name><con:value>172.17.16.85</con:value></con:property><con:property><con:name>env-apiUrl</con:name><con:value>http://172.17.16.83:8080</con:value></con:property></con:properties><con:wssContainer/><con:databaseConnectionContainer/><con:reporting><con:reportTemplates/><con:xmlTemplates/><con:parameters/></con:reporting></con:soapui-project>