<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project name="Auth2.2 Keystone - RAX - US - staging" resourceRoot="" soapui-version="3.6.1" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.TestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Global Properties" value=""/>
  <con:entry key="TestSuite" value="Functional - new"/>
  <con:entry key="Report to Generate" value=""/>
  <con:entry key="Password" value=""/>
  <con:entry key="soapui-setings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Save Project" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Export JUnit Results" value="false"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Export All" value="false"/>
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="TestCase" value="&lt;all>"/>
  <con:entry key="Print Report" value="false"/>
  <con:entry key="Username" value=""/>
  <con:entry key="Root Folder" value="C:\Users\mant0623\Desktop\Report_release 1.0.8\V2.2-Cloud1\Internal\Functional - new"/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="Endpoint" value=""/>
</xml-fragment>]]></con:setting></con:settings><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="identity-admin" type="rest" basePath="" definitionUrl="/home/jenny/keystone/keystone/content/admin/normalized/identity-admin.wadl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/home/jenny/keystone/keystone/content/admin/normalized/identity-admin.wadl"><con:part><con:url>file:/home/jenny/keystone/keystone/content/admin/normalized/identity-admin.wadl</con:url><con:content><![CDATA[<application xsi:schemaLocation="http://docs.openstack.org/identity/api/v2.0 ../common/xsd/api.xsd   http://docs.openstack.org/common/api/v1.0 ../common/xsd/api-common.xsd   http://wadl.dev.java.net/2009/02 http://www.w3.org/Submission/wadl/wadl.xsd   " xmlns="http://wadl.dev.java.net/2009/02" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0">
  <wadl:grammars xmlns:wadl="http://wadl.dev.java.net/2009/02">
    <!--Original xsd: file:/home/jenny/keystone/keystone/content/admin/../common/xsd/api.xsd-->
    <wadl:include href="identity-admin-xsd-1.xsd"/>
    <!--Original xsd: file:/home/jenny/keystone/keystone/content/admin/../common/xsd/api-common.xsd-->
    <wadl:include href="identity-admin-xsd-2.xsd"/>
  </wadl:grammars>
  <!--*******************************************************-->
  <!--All Resources-->
  <!--*******************************************************-->
  <!--We should use SSL in production-->
  <resources base="http://localhost:35357">
    <resource path="v2.0">
      <method name="GET" rax:id="getVersionInfo" xmlns:rax="http://docs.rackspace.com/api">
        <doc xml:lang="EN" title="Version Details">
          <p xmlns="http://www.w3.org/1999/xhtml">Returns detailed information about this specific version of the API.</p>
        </doc>
        <response status="200 203">
          <representation mediaType="application/xml" element="capi:version">
            <param name="location" style="plain" type="xsd:anyURI" required="true" path="/capi:version/atom:link[@rel='self']/@href" rax:id="">
              <link resource_type="#VersionDetails" rel="self"/>
            </param>
          </representation>
          <representation mediaType="application/json"/>
        </response>
        <response>
          <representation mediaType="application/xml" element="identity:identityFault"/>
          <representation mediaType="application/json"/>
        </response>
        <response status="400">
          <representation mediaType="application/xml" element="identity:badRequest"/>
          <representation mediaType="application/json"/>
        </response>
        <response status="401">
          <representation mediaType="application/xml" element="identity:unauthorized"/>
          <representation mediaType="application/json"/>
        </response>
        <response status="403">
          <representation mediaType="application/xml" element="identity:forbidden"/>
          <representation mediaType="application/json"/>
        </response>
        <response status="405">
          <representation mediaType="application/xml" element="identity:badMethod"/>
          <representation mediaType="application/json"/>
        </response>
        <response status="413">
          <representation mediaType="application/xml" element="identity:overLimit"/>
          <representation mediaType="application/json"/>
        </response>
        <response status="503">
          <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
          <representation mediaType="application/json"/>
        </response>
        <response status="404">
          <representation mediaType="application/xml" element="identity:itemNotFound"/>
          <representation mediaType="application/json"/>
        </response>
      </method>
      <resource path="extensions">
        <method name="GET" rax:id="listExtensions" xmlns:rax="http://docs.rackspace.com/api">
          <doc xml:lang="EN" title="List Extensions">
            <p xmlns="http://www.w3.org/1999/xhtml">Lists supported extensions.</p>
          </doc>
          <response status="200 203">
            <representation mediaType="application/xml" element="capi:extensions">
              <param name="next" style="plain" type="xsd:anyURI" path="/capi:extensions/atom:link[@rel='next']/@href" rax:id="">
                <link resource_type="#ExtensionList" rel="next"/>
              </param>
              <param name="previous" style="plain" type="xsd:anyURI" path="/capi:extensions/atom:link[@rel='previous']/@href" rax:id="">
                <link resource_type="#ExtensionList" rel="previous"/>
              </param>
            </representation>
            <representation mediaType="application/json"/>
          </response>
          <response>
            <representation mediaType="application/xml" element="identity:identityFault"/>
            <representation mediaType="application/json"/>
          </response>
          <response status="400">
            <representation mediaType="application/xml" element="identity:badRequest"/>
            <representation mediaType="application/json"/>
          </response>
          <response status="401">
            <representation mediaType="application/xml" element="identity:unauthorized"/>
            <representation mediaType="application/json"/>
          </response>
          <response status="403">
            <representation mediaType="application/xml" element="identity:forbidden"/>
            <representation mediaType="application/json"/>
          </response>
          <response status="405">
            <representation mediaType="application/xml" element="identity:badMethod"/>
            <representation mediaType="application/json"/>
          </response>
          <response status="413">
            <representation mediaType="application/xml" element="identity:overLimit"/>
            <representation mediaType="application/json"/>
          </response>
          <response status="503">
            <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
            <representation mediaType="application/json"/>
          </response>
        </method>
        <resource path="{alias}">
          <param name="alias" style="template" type="xsd:string" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
          <method name="GET" rax:id="getExtension" xmlns:rax="http://docs.rackspace.com/api">
            <doc xml:lang="EN" title="Get Extension Details">
              <p xmlns="http://www.w3.org/1999/xhtml">Gets details about a specific extension.</p>
            </doc>
            <response status="200 203">
              <representation mediaType="application/xml" element="capi:extension"/>
              <representation mediaType="application/json"/>
            </response>
            <response>
              <representation mediaType="application/xml" element="identity:identityFault"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="400">
              <representation mediaType="application/xml" element="identity:badRequest"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="401">
              <representation mediaType="application/xml" element="identity:unauthorized"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="403">
              <representation mediaType="application/xml" element="identity:forbidden"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="405">
              <representation mediaType="application/xml" element="identity:badMethod"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="413">
              <representation mediaType="application/xml" element="identity:overLimit"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="503">
              <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="404">
              <representation mediaType="application/xml" element="identity:itemNotFound"/>
              <representation mediaType="application/json"/>
            </response>
          </method>
        </resource>
      </resource>
      <resource path="tokens">
        <method name="POST" rax:id="authenticate" xmlns:rax="http://docs.rackspace.com/api">
          <doc xml:lang="EN" title="Authenticate for Service API">
            <p class="shortdesc" xmlns="http://www.w3.org/1999/xhtml">Authenticate to generate a token.</p>
            <p xmlns="http://www.w3.org/1999/xhtml">This call will return a token if successful. Each ReST request against other services (or other
	      calls on Keystone such as the GET /tenants call)
	      requires the inclusion of a specific authorization token HTTP x-header, defined as X-Auth-Token.
	      Clients obtain
	      this token, along with the URL to other service APIs, by first authenticating against the
	      Keystone Service and supplying valid credentials.</p>
            <p xmlns="http://www.w3.org/1999/xhtml">Client authentication is provided via a ReST interface using the POST method,
	      with v2.0/tokens supplied as the path. A payload of credentials must be included
	      in the body.</p>
            <p xmlns="http://www.w3.org/1999/xhtml">The Keystone Service is a ReSTful web service. It is the entry point to all service APIs.
	      To access the Keystone Service, you must know URL of the Keystone service.</p>
          </doc>
          <request>
            <representation mediaType="application/xml" element="identity:auth">
              <doc>
                <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                  <title>Authenticate for Service API Request: XML</title>
                  <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;auth xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xmlns="http://docs.openstack.org/identity/api/v2.0"
 tenantName="customer-x">
  &lt;passwordCredentials username="test_user" password="test"/>
&lt;/auth></programlisting>
                </example>
                <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                  <title>Authenticate for Service API Request: XML</title>
                  <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;auth xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xmlns="http://docs.openstack.org/identity/api/v2.0"
 tenantName="customer-x">
  &lt;token id="abcdefghijk" />
&lt;/auth></programlisting>
                </example>
              </doc>
            </representation>
            <representation mediaType="application/json">
              <doc>
                <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                  <title>Authenticate for Service API Request: JSON</title>
                  <programlisting language="javascript">{
    "auth":{
        "passwordCredentials":{
            "username":"test_user",
            "password":"mypass"
        },
        "tenantName":"customer-x"
    }
}</programlisting>
                </example>
                <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                  <title>Authenticate for Service API Request: JSON</title>
                  <programlisting language="javascript">{
    "auth": {
        "tenantName": "customer-x",
        "token": {
            "id": "abcdefghijk"
        }
    }
}</programlisting>
                </example>
              </doc>
            </representation>
          </request>
          <response status="200 203">
            <representation mediaType="application/xml" element="identity:access">
              <doc>
                <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                  <title>Authenticate for Service API Response: XML</title>
                  <programlisting language="xml"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<access xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://docs.openstack.org/identity/api/v2.0">
	<token id="ab48a9efdfedb23ty3494" expires="2010-11-01T03:32:15-05:00">
		<tenant id="t1000" name="My Project" />
	</token>
	<user id="u123" name="jqsmith">
		<roles>
			<role id="100" name="compute:admin"/>
			<role id="101" name="object-store:admin" tenantId="t1000"/>
		</roles>
	</user>
	<serviceCatalog>
		<service type="compute" name="Cloud Servers">
			<endpoint
        tenantId="t1000"
				region="North"
				publicURL="https://compute.north.host.com/v1/t1000"
				internalURL="https://compute.north.host.internal/v1/t1000">
				<version
				id="1"
				info="https://compute.north.host.com/v1/"
				list="https://compute.north.host.com/"
				/>
			</endpoint>
			<endpoint
        tenantId="t1000"
				region="North"
				publicURL="https://compute.north.host.com/v1.1/t1000"
				internalURL="https://compute.north.host.internal/v1.1/t1000">
				<version
				id="1.1"
				info="https://compute.north.host.com/v1.1/"
				list="https://compute.north.host.com/" />
			</endpoint>
		</service>
		<service type="object-store" name="Cloud Files">
			<endpoint
        tenantId="t1000"
				region="North"
				publicURL="https://storage.north.host.com/v1/t1000"
				internalURL="https://storage.north.host.internal/v1/t1000">
				<version
				id="1"
				info="https://storage.north.host.com/v1/"
				list="https://storage.north.host.com/" />
			</endpoint>
			<endpoint
        tenantId="t1000"
				region="South"
				publicURL="https://storage.south.host.com/v1/t1000"
				internalURL="https://storage.south.host.internal/v1/t1000">
				<version
				id="1"
				info="https://storage.south.host.com/v1/"
				list="https://storage.south.host.com/" />
			</endpoint>
		</service>
		<service type="dnsextension:dns" name="DNS-as-a-Service">
			<endpoint
        tenantId="t1000"
				publicURL="https://dns.host.com/v2.0/t1000">
				<version
				id="2.0"
				info="https://dns.host.com/v2.0/"
				list="https://dns.host.com/" />
			</endpoint>
		</service>
	</serviceCatalog>
</access>]]]]>><![CDATA[</programlisting>
                </example>
              </doc>
            </representation>
            <representation mediaType="application/json">
              <doc>
                <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                  <title>Authenticate for Service API Response: JSON</title>
                  <programlisting language="javascript">{
    "access":{
        "token":{
            "id":"ab48a9efdfedb23ty3494",
            "expires":"2010-11-01T03:32:15-05:00",
            "tenant":{
                "id": "t1000",
                "name": "My Project"
            }
        },
        "user":{
            "id":"u123",
            "name":"jqsmith",
            "roles":[{
                    "id":"100",
                    "name":"compute:admin"
                },
				{
                    "id":"101",
                    "name":"object-store:admin",
                    "tenantId":"t1000"
                }                       
            ],
            "roles_links":[]
        },
        "serviceCatalog":[{
                "name":"Cloud Servers",
                "type":"compute",
                "endpoints":[{
                        "tenantId":"t1000",
                        "publicURL":"https://compute.north.host.com/v1/t1000",
                        "internalURL":"https://compute.north.internal/v1/t1000",
                        "region":"North",
                        "versionId":"1",
                        "versionInfo":"https://compute.north.host.com/v1/",
                        "versionList":"https://compute.north.host.com/"
                    },
                    {
                        "tenantId":"t1000",
                        "publicURL":"https://compute.north.host.com/v1.1/t1000",
                        "internalURL":"https://compute.north.internal/v1.1/t1000",
                        "region":"North",
                        "versionId":"1.1",
                        "versionInfo":"https://compute.north.host.com/v1.1/",
                        "versionList":"https://compute.north.host.com/"
                    }
                ],
                "endpoints_links":[]
            },
            {
                "name":"Cloud Files",
                "type":"object-store",
                "endpoints":[{
                        "tenantId":"t1000",
                        "publicURL":"https://storage.north.host.com/v1/t1000",
                        "internalURL":"https://storage.north.internal/v1/t1000",
                        "region":"North",
                        "versionId":"1",
                        "versionInfo":"https://storage.north.host.com/v1/",
                        "versionList":"https://storage.north.host.com/"
                    },
                    {
                        "tenantId":"t1000",
                        "publicURL":"https://storage.south.host.com/v1/t1000",
                        "internalURL":"https://storage.south.internal/v1/t1000",
                        "region":"South",
                        "versionId":"1",
                        "versionInfo":"https://storage.south.host.com/v1/",
                        "versionList":"https://storage.south.host.com/"
                    }
                ]
            },
            {
                "name":"DNS-as-a-Service",
                "type":"dnsextension:dns",
                "endpoints":[{
                        "tenantId":"t1000",
                        "publicURL":"https://dns.host.com/v2.0/t1000",
                        "versionId":"2.0",
                        "versionInfo":"https://dns.host.com/v2.0/",
                        "versionList":"https://dns.host.com/"
                    }
                ]
            }
        ]
    }
}</programlisting>
                </example>
              </doc>
            </representation>
          </response>
          <response status="403">
            <representation mediaType="application/xml" element="identity:userDisabled"/>
            <representation mediaType="application/json"/>
          </response>
          <response>
            <representation mediaType="application/xml" element="identity:identityFault"/>
            <representation mediaType="application/json"/>
          </response>
          <response status="400">
            <representation mediaType="application/xml" element="identity:badRequest"/>
            <representation mediaType="application/json"/>
          </response>
          <response status="401">
            <representation mediaType="application/xml" element="identity:unauthorized"/>
            <representation mediaType="application/json"/>
          </response>
          <response status="403">
            <representation mediaType="application/xml" element="identity:forbidden"/>
            <representation mediaType="application/json"/>
          </response>
          <response status="405">
            <representation mediaType="application/xml" element="identity:badMethod"/>
            <representation mediaType="application/json"/>
          </response>
          <response status="413">
            <representation mediaType="application/xml" element="identity:overLimit"/>
            <representation mediaType="application/json"/>
          </response>
          <response status="503">
            <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
            <representation mediaType="application/json"/>
          </response>
          <response status="404">
            <representation mediaType="application/xml" element="identity:itemNotFound"/>
            <representation mediaType="application/json"/>
          </response>
        </method>
        <resource path="{tokenId}">
          <param name="X-Auth-Token" style="header" type="xsd:string" required="true" rax:id="" xmlns:rax="http://docs.rackspace.com/api">
            <doc>You need a valid admin token for access.</doc>
          </param>
          <param name="tokenId" style="template" type="xsd:string" required="true" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
          <param name="belongsTo" style="query" type="xsd:string" required="false" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
          <method name="GET" rax:id="validateToken" xmlns:rax="http://docs.rackspace.com/api">
            <doc xml:lang="EN" title="Validate Token">
              <p class="shortdesc" xmlns="http://www.w3.org/1999/xhtml">Check that a token is valid and that it belongs to a supplied tenant
                and return the permissions relevant to a particular client.</p>
              <p xmlns="http://www.w3.org/1999/xhtml">
                Valid tokens will exist in the
                <code>/tokens/{tokenId}</code>
                path and invalid
                tokens will not.  In other words, a user should expect an
                itemNotFound (
                <code>404</code>
                ) fault for an
                invalid token.
              </p>
            </doc>
            <request>
              <param name="belongsTo" style="query" required="false" type="xsd:string" rax:id="">
                <doc xml:lang="EN">
                  <p xmlns="http://www.w3.org/1999/xhtml">Validates a token has the supplied tenant in scope.</p>
                </doc>
              </param>
            </request>
            <response status="200 203">
              <representation mediaType="application/xml" element="identity:access">
                <doc>
                  <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                    <title>Validate Token Response: XML</title>
                    <programlisting language="xml"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<access xmlns="http://docs.openstack.org/identity/api/v2.0">
	<token id="ab48a9efdfedb23ty3494" expires="2010-11-01T03:32:15-05:00">
		<tenant id="456" name="My Project" />
	</token>
	<user id="123" username="jqsmith">
		<roles xmlns="http://docs.openstack.org/identity/api/v2.0">
			<role id="123" name="Admin" tenantId="one"/>
			<role id="234" name="object-store:admin" tenantId="1"/>
		</roles>
	</user>
</access>]]]]>><![CDATA[</programlisting>
                  </example>
                </doc>
              </representation>
              <representation mediaType="application/json">
                <doc>
                  <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                    <title>Validate Token Response: JSON</title>
                    <programlisting language="javascript">{
    "access":{
        "token":{
            "id":"ab48a9efdfedb23ty3494",
            "expires":"2010-11-01T03:32:15-05:00",
            "tenant":{
                "id": "345",
                "name": "My Project"
            }
        },
        "user":{
            "id":"123",
            "name":"jqsmith",
            "roles":[{
                    "id":"234",
                    "name":"compute:admin"
                },
				{
                    "id":"234",
                    "name":"object-store:admin",
                    "tenantId":"1"
                }                
            ],
            "roles_links":[]
        }
    }
}</programlisting>
                  </example>
                </doc>
              </representation>
            </response>
            <response>
              <representation mediaType="application/xml" element="identity:identityFault"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="400">
              <representation mediaType="application/xml" element="identity:badRequest"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="401">
              <representation mediaType="application/xml" element="identity:unauthorized"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="403">
              <representation mediaType="application/xml" element="identity:forbidden"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="405">
              <representation mediaType="application/xml" element="identity:badMethod"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="413">
              <representation mediaType="application/xml" element="identity:overLimit"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="503">
              <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="404">
              <representation mediaType="application/xml" element="identity:itemNotFound"/>
              <representation mediaType="application/json"/>
            </response>
          </method>
          <method name="HEAD" rax:id="checkToken" xmlns:rax="http://docs.rackspace.com/api">
            <doc xml:lang="EN" title="Check Token">
              <p class="shortdesc" xmlns="http://www.w3.org/1999/xhtml">Check that a token is valid and that it belongs to a particular tenant
                (For performance).</p>
            </doc>
            <request>
              <param name="belongsTo" style="query" required="false" type="xsd:string" rax:id="">
                <doc xml:lang="EN">
                  <p xmlns="http://www.w3.org/1999/xhtml">Validates a token has the supplied tenant in scope. (for performance).</p>
                  <p xmlns="http://www.w3.org/1999/xhtml">
                    Valid tokens will exist in the
                    <code>/tokens/{tokenId}</code>
                    path and invalid
                        tokens will not.  In other words, a user should expect an
                        itemNotFound (
                    <code>404</code>
                    ) fault for an
                        invalid token.
                  </p>
                  <p xmlns="http://www.w3.org/1999/xhtml">If `belongsTo` is provided, validates that a token has a specific tenant in scope.</p>
                  <p xmlns="http://www.w3.org/1999/xhtml">No response body is returned for this method.</p>
                </doc>
              </param>
            </request>
            <response status="200 203"/>
            <response>
              <representation mediaType="application/xml" element="identity:identityFault"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="400">
              <representation mediaType="application/xml" element="identity:badRequest"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="401">
              <representation mediaType="application/xml" element="identity:unauthorized"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="403">
              <representation mediaType="application/xml" element="identity:forbidden"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="405">
              <representation mediaType="application/xml" element="identity:badMethod"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="413">
              <representation mediaType="application/xml" element="identity:overLimit"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="503">
              <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="404">
              <representation mediaType="application/xml" element="identity:itemNotFound"/>
              <representation mediaType="application/json"/>
            </response>
          </method>
          <resource path="endpoints">
            <method name="GET" rax:id="listEndpointsForToken" xmlns:rax="http://docs.rackspace.com/api">
              <doc xml:lang="EN" title="List Endoints for a Token">
                <p xmlns="http://www.w3.org/1999/xhtml">Returns a list of endpoints associated with a specific token.</p>
              </doc>
              <response status="200 203">
                <representation mediaType="application/xml" element="identity:endpoints">
                  <doc>
                    <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                      <title>List Endoints for a Token Response: XML</title>
                      <programlisting language="xml"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>

<endpoints
    xmlns="http://docs.openstack.org/identity/api/v2.0">
  <endpoint
      id="1" 
      tenantId="1"
      type="compute"
      name="Compute"
      region="North"
      publicURL="https://compute.north.public.com/v1"
      internalURL="https://compute.north.internal.com/v1"
      adminURL="https://compute.north.internal.com/v1">
      <version
          id="1"
          info="https://compute.north.public.com/v1/"
          list="https://compute.north.public.com/"
      />
  </endpoint>
  <endpoint
      id="2" 
      tenantId="2"
      type="compute"
      name="Compute"
      region="South"
      publicURL="https://compute.north.public.com/v1"
      internalURL="https://compute.north.internal.com/v1"
      adminURL="https://compute.north.internal.com/v1">
      <version
          id="1"
          info="https://compute.north.public.com/v1/"
          list="https://compute.north.public.com/"
      />
  </endpoint>
  <endpoint
      id="3" 
      tenantId="1"
      type="compute"
      name="Compute"
      region="East"
      publicURL="https://compute.north.public.com/v1"
      internalURL="https://compute.north.internal.com/v1"
      adminURL="https://compute.north.internal.com/v1"
      tenantId="1"
  />
  <endpoint
      id="4" 
      tenantId="1"
      type="compute"
      name="Compute"
      region="West"
      publicURL="https://compute.north.public.com/v1"
      internalURL="https://compute.north.internal.com/v1"
      adminURL="https://compute.north.internal.com/v1">
      <version
          id="1"
          info="https://compute.north.public.com/v1/"
          list="https://compute.north.public.com/"
      />
  </endpoint>
  <endpoint
      id="5" 
      tenantId="1"
      type="compute"
      name="Compute"
      region="Global"
      publicURL="https://compute.north.public.com/v1"
      internalURL="https://compute.north.internal.com/v1"
      adminURL="https://compute.north.internal.com/v1">
      <version
          id="1"
          info="https://compute.north.public.com/v1/"
          list="https://compute.north.public.com/"
      />
  </endpoint>
</endpoints>]]]]>><![CDATA[</programlisting>
                    </example>
                  </doc>
                </representation>
                <representation mediaType="application/json">
                  <doc>
                    <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                      <title>List Endoints for a Token Response: JSON</title>
                      <programlisting language="javascript">{
    "endpoints":[{
                "id":1,
                "tenantId":"1",
                "region":"North",
                "type":"compute",
                "publicURL":"https://compute.north.public.com/v1",
                "internalURL":"https://compute.north.internal.com/v1",
                "adminURL" : "https://compute.north.internal.com/v1",
                "versionId":"1",
                "versionInfo":"https://compute.north.public.com/v1/",
                "versionList":"https://compute.north.public.com/"
            },
            {
                "id":2,
                "tenantId":"1",
                "region":"South",
                "type":"compute",
                "publicURL":"https://compute.north.public.com/v1",
                "internalURL":"https://compute.north.internal.com/v1",
                "adminURL" : "https://compute.north.internal.com/v1",
                "versionId":"1",
                "versionInfo":"https://compute.north.public.com/v1/",
                "versionList":"https://compute.north.public.com/"
            },
            {
                "id":3,
                "tenantId":"1",
                "region":"East",
                "type":"compute",
                "publicURL":"https://compute.north.public.com/v1",
                "internalURL":"https://compute.north.internal.com/v1",
                "adminURL" : "https://compute.north.internal.com/v1",
                "versionId":"1",
                "versionInfo":"https://compute.north.public.com/v1/",
                "versionList":"https://compute.north.public.com/"
            },
            {
                "id":4,
                "tenantId":"1",
                "region":"West",
                "type":"compute",
                "publicURL":"https://compute.north.public.com/v1",
                "internalURL":"https://compute.north.internal.com/v1",
                "adminURL" : "https://compute.north.internal.com/v1",
                "versionId":"1",
                "versionInfo":"https://compute.north.public.com/v1/",
                "versionList":"https://compute.north.public.com/"
            },
            {
                "id":5,
                "tenantId":"1",
                "region":"Global",
                "type":"compute",
                "publicURL":"https://compute.north.public.com/v1",
                "internalURL":"https://compute.north.internal.com/v1",
                "adminURL" : "https://compute.north.internal.com/v1",
                "versionId":"1",
                "versionInfo":"https://compute.north.public.com/v1/",
                "versionList":"https://compute.north.public.com/"
            }
        ],
    "endpoints_links":[]
}</programlisting>
                    </example>
                  </doc>
                </representation>
              </response>
              <response>
                <representation mediaType="application/xml" element="identity:identityFault"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="400">
                <representation mediaType="application/xml" element="identity:badRequest"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="401">
                <representation mediaType="application/xml" element="identity:unauthorized"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="403">
                <representation mediaType="application/xml" element="identity:forbidden"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="405">
                <representation mediaType="application/xml" element="identity:badMethod"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="413">
                <representation mediaType="application/xml" element="identity:overLimit"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="503">
                <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="404">
                <representation mediaType="application/xml" element="identity:itemNotFound"/>
                <representation mediaType="application/json"/>
              </response>
            </method>
          </resource>
        </resource>
      </resource>
      <resource path="users">
        <param name="X-Auth-Token" style="header" type="xsd:string" required="true" rax:id="" xmlns:rax="http://docs.rackspace.com/api">
          <doc>You need a valid admin token for access.</doc>
        </param>
        <method name="GET" rax:id="getUserByName" xmlns:rax="http://docs.rackspace.com/api">
          <doc xml:lang="EN" title="Get a User by Name">
            <p xmlns="http://www.w3.org/1999/xhtml">Returns detailed information about a specific user, by user name.</p>
          </doc>
          <request>
            <param name="name" style="query" type="xsd:string" required="true" rax:id=""/>
          </request>
          <response status="200 203">
            <representation mediaType="application/xml" element="identity:user">
              <doc>
                <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                  <title>Get a User by Name Response: XML</title>
                  <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;user xmlns="http://docs.openstack.org/identity/api/v2.0"
      enabled="true" email="john.smith@example.org"
      username="jqsmith" id="u1000"/></programlisting>
                </example>
              </doc>
            </representation>
            <representation mediaType="application/json">
              <doc>
                <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                  <title>Get a User by Name Response: JSON</title>
                  <programlisting language="javascript">{
  "user": {
    "id": "u1000",
    "username": "jqsmith",
    "email": "john.smith@example.org",
    "enabled": true
  }
}</programlisting>
                </example>
              </doc>
            </representation>
          </response>
          <response>
            <representation mediaType="application/xml" element="identity:identityFault"/>
            <representation mediaType="application/json"/>
          </response>
          <response status="400">
            <representation mediaType="application/xml" element="identity:badRequest"/>
            <representation mediaType="application/json"/>
          </response>
          <response status="401">
            <representation mediaType="application/xml" element="identity:unauthorized"/>
            <representation mediaType="application/json"/>
          </response>
          <response status="403">
            <representation mediaType="application/xml" element="identity:forbidden"/>
            <representation mediaType="application/json"/>
          </response>
          <response status="405">
            <representation mediaType="application/xml" element="identity:badMethod"/>
            <representation mediaType="application/json"/>
          </response>
          <response status="413">
            <representation mediaType="application/xml" element="identity:overLimit"/>
            <representation mediaType="application/json"/>
          </response>
          <response status="503">
            <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
            <representation mediaType="application/json"/>
          </response>
          <response status="404">
            <representation mediaType="application/xml" element="identity:itemNotFound"/>
            <representation mediaType="application/json"/>
          </response>
        </method>
        <resource path="{user_id}">
          <param name="user_id" style="template" type="xsd:string" required="true" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
          <method name="GET" rax:id="getUserById" xmlns:rax="http://docs.rackspace.com/api">
            <doc xml:lang="EN" title="Get a User by ID">
              <p xmlns="http://www.w3.org/1999/xhtml">Returns detailed information about a specific user, by user id.</p>
            </doc>
            <response status="200 203">
              <representation mediaType="application/xml" element="identity:user">
                <doc>
                  <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                    <title>Get a User by ID Response: XML</title>
                    <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;user xmlns="http://docs.openstack.org/identity/api/v2.0"
      enabled="true" email="john.smith@example.org"
      username="jqsmith" id="u1000"/></programlisting>
                  </example>
                </doc>
              </representation>
              <representation mediaType="application/json">
                <doc>
                  <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                    <title>Get a User by ID Response: JSON</title>
                    <programlisting language="javascript">{
  "user": {
    "id": "u1000",
    "username": "jqsmith",
    "email": "john.smith@example.org",
    "enabled": true
  }
}</programlisting>
                  </example>
                </doc>
              </representation>
            </response>
            <response>
              <representation mediaType="application/xml" element="identity:identityFault"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="400">
              <representation mediaType="application/xml" element="identity:badRequest"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="401">
              <representation mediaType="application/xml" element="identity:unauthorized"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="403">
              <representation mediaType="application/xml" element="identity:forbidden"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="405">
              <representation mediaType="application/xml" element="identity:badMethod"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="413">
              <representation mediaType="application/xml" element="identity:overLimit"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="503">
              <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="404">
              <representation mediaType="application/xml" element="identity:itemNotFound"/>
              <representation mediaType="application/json"/>
            </response>
          </method>
          <resource path="roles">
            <method name="GET" rax:id="listUserGlobalRoles" xmlns:rax="http://docs.rackspace.com/api">
              <doc xml:lang="EN" title="List User Global Roles">
                <p class="shortdesc" xmlns="http://www.w3.org/1999/xhtml">Returns global roles for a specific user (excludes tenant roles).</p>
                <p xmlns="http://www.w3.org/1999/xhtml">Returns a list of global roles associated with a specific
            	    user (excludes tenant roles).</p>
              </doc>
              <response status="200 203">
                <representation mediaType="application/xml" element="identity:roles">
                  <doc>
                    <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                      <title>List User Global Roles Response: XML</title>
                      <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>

&lt;roles xmlns="http://docs.openstack.org/identity/api/v2.0">
  &lt;role id="123" name="Admin" description="All Access" />
  &lt;role id="234" name="Guest" description="Guest Access" />
&lt;/roles></programlisting>
                    </example>
                  </doc>
                </representation>
                <representation mediaType="application/json">
                  <doc>
                    <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                      <title>List User Global Roles Response: JSON</title>
                      <programlisting language="javascript">{
    "roles":[{
            "id":"123",
            "name":"compute:admin",
            "description":"Nova Administrator",
        }
    ],
    "roles_links":[]
}</programlisting>
                    </example>
                  </doc>
                </representation>
              </response>
              <response>
                <representation mediaType="application/xml" element="identity:identityFault"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="400">
                <representation mediaType="application/xml" element="identity:badRequest"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="401">
                <representation mediaType="application/xml" element="identity:unauthorized"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="403">
                <representation mediaType="application/xml" element="identity:forbidden"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="405">
                <representation mediaType="application/xml" element="identity:badMethod"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="413">
                <representation mediaType="application/xml" element="identity:overLimit"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="503">
                <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="404">
                <representation mediaType="application/xml" element="identity:itemNotFound"/>
                <representation mediaType="application/json"/>
              </response>
            </method>
          </resource>
        </resource>
      </resource>
      <resource path="tenants">
        <param name="X-Auth-Token" style="header" type="xsd:string" required="true" rax:id="" xmlns:rax="http://docs.rackspace.com/api">
          <doc>
            <p xmlns="http://www.w3.org/1999/xhtml">You need a valid admin token for access.</p>
          </doc>
        </param>
        <method name="GET" rax:id="listTenants" xmlns:rax="http://docs.rackspace.com/api">
          <doc xml:lang="EN" title="Get Tenants">
            <p class="shortdesc" xmlns="http://www.w3.org/1999/xhtml">Get a list of tenants.</p>
            <p xmlns="http://www.w3.org/1999/xhtml">The operation returns a list of tenants which the supplied token provides
	      access to. This call must be authenticated, so a valid token must
	      be passed in as a header.</p>
            <example role="wadl" xmlns="http://docbook.org/ns/docbook">
              <title>Tenants Request with Auth Token</title>
              <programlisting language="xml">GET /v2.0/tenants HTTP/1.1
Host: identity.api.openstack.org
Content-Type: application/json
X-Auth-Token: fa8426a0-8eaf-4d22-8e13-7c1b16a9370c
Accept: application/json</programlisting>
            </example>
          </doc>
          <request>
            <param name="marker" style="query" required="false" type="xsd:string" rax:id=""/>
            <param name="limit" style="query" required="false" type="xsd:int" rax:id=""/>
          </request>
          <response status="200 203">
            <representation mediaType="application/xml" element="identity:tenants">
              <doc>
                <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                  <title>Get Tenants Response: XML</title>
                  <programlisting language="xml"><![CDATA[HTTP/1.1 200 OK
Content-Type: application/xml; charset=UTF-8
Content-Length: 200
Date: Sun, 1 Jan 2011 9:00:00 GMT

<?xml version="1.0" encoding="UTF-8"?>
<tenants xmlns="http://docs.openstack.org/identity/api/v2.0">
    <tenant enabled="true" id="1234" name="ACME Corp">
        <description>A description...</description>
    </tenant>
    <tenant enabled="true" id="3645" name="Iron Works">
        <description>A description...</description>
    </tenant>
</tenants>]]]]>><![CDATA[</programlisting>
                </example>
              </doc>
            </representation>
            <representation mediaType="application/json">
              <doc>
                <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                  <title>Get Tenants Response: JSON</title>
                  <programlisting language="javascript">{
    "tenants":[{
            "id":"1234",
            "name":"ACME Corp",
            "description":"A description ...",
            "enabled":true
        },
        {
            "id":"3456",
            "name":"Iron Works",
            "description":"A description ...",
            "enabled":true
        }
    ],
    "tenants_links":[]
}</programlisting>
                </example>
              </doc>
            </representation>
          </response>
          <response>
            <representation mediaType="application/xml" element="identity:identityFault"/>
            <representation mediaType="application/json"/>
          </response>
          <response status="400">
            <representation mediaType="application/xml" element="identity:badRequest"/>
            <representation mediaType="application/json"/>
          </response>
          <response status="401">
            <representation mediaType="application/xml" element="identity:unauthorized"/>
            <representation mediaType="application/json"/>
          </response>
          <response status="403">
            <representation mediaType="application/xml" element="identity:forbidden"/>
            <representation mediaType="application/json"/>
          </response>
          <response status="405">
            <representation mediaType="application/xml" element="identity:badMethod"/>
            <representation mediaType="application/json"/>
          </response>
          <response status="413">
            <representation mediaType="application/xml" element="identity:overLimit"/>
            <representation mediaType="application/json"/>
          </response>
          <response status="503">
            <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
            <representation mediaType="application/json"/>
          </response>
          <response status="404">
            <representation mediaType="application/xml" element="identity:itemNotFound"/>
            <representation mediaType="application/json"/>
          </response>
        </method>
        <method name="GET" rax:id="getTenantByName" xmlns:rax="http://docs.rackspace.com/api">
          <doc xml:lang="EN" title="Get tenants by name">
            <p class="shortdesc" xmlns="http://www.w3.org/1999/xhtml">Returns detailed information about a tenant, by name.</p>
          </doc>
          <request>
            <param name="name" style="query" type="xsd:string" required="true" rax:id=""/>
          </request>
          <response status="200 203">
            <representation mediaType="application/xml" element="identity:tenant">
              <doc>
                <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                  <title>Get tenants by name Response: XML</title>
                  <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;tenant xmlns="http://docs.openstack.org/identity/api/v2.0"
        enabled="true" id="1234" name="ACME Corp">
    &lt;description>A description...&lt;/description>
&lt;/tenant></programlisting>
                </example>
              </doc>
            </representation>
            <representation mediaType="application/json">
              <doc>
                <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                  <title>Get tenants by name Response: JSON</title>
                  <programlisting language="javascript">{
  "tenant": {
    "id": "1234",
    "name": "ACME corp",
    "description": "A description ...",
    "enabled": true
  }
}</programlisting>
                </example>
              </doc>
            </representation>
          </response>
          <response>
            <representation mediaType="application/xml" element="identity:identityFault"/>
            <representation mediaType="application/json"/>
          </response>
          <response status="400">
            <representation mediaType="application/xml" element="identity:badRequest"/>
            <representation mediaType="application/json"/>
          </response>
          <response status="401">
            <representation mediaType="application/xml" element="identity:unauthorized"/>
            <representation mediaType="application/json"/>
          </response>
          <response status="403">
            <representation mediaType="application/xml" element="identity:forbidden"/>
            <representation mediaType="application/json"/>
          </response>
          <response status="405">
            <representation mediaType="application/xml" element="identity:badMethod"/>
            <representation mediaType="application/json"/>
          </response>
          <response status="413">
            <representation mediaType="application/xml" element="identity:overLimit"/>
            <representation mediaType="application/json"/>
          </response>
          <response status="503">
            <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
            <representation mediaType="application/json"/>
          </response>
          <response status="404">
            <representation mediaType="application/xml" element="identity:itemNotFound"/>
            <representation mediaType="application/json"/>
          </response>
        </method>
        <resource path="{tenantId}">
          <param name="tenantId" style="template" type="xsd:string" required="true" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
          <method name="GET" rax:id="getTenantById" xmlns:rax="http://docs.rackspace.com/api">
            <doc xml:lang="EN" title="Get Tenants by ID">
              <p class="shortdesc" xmlns="http://www.w3.org/1999/xhtml">Returns detailed information about a tenant, by id.</p>
            </doc>
            <response status="200 203">
              <representation mediaType="application/xml" element="identity:tenant">
                <doc>
                  <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                    <title>Get Tenants by ID Response: XML</title>
                    <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;tenant xmlns="http://docs.openstack.org/identity/api/v2.0"
        enabled="true" id="1234" name="ACME Corp">
    &lt;description>A description...&lt;/description>
&lt;/tenant></programlisting>
                  </example>
                </doc>
              </representation>
              <representation mediaType="application/json">
                <doc>
                  <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                    <title>Get Tenants by ID Response: JSON</title>
                    <programlisting language="javascript">{
  "tenant": {
    "id": "1234",
    "name": "ACME corp",
    "description": "A description ...",
    "enabled": true
  }
}</programlisting>
                  </example>
                </doc>
              </representation>
            </response>
            <response>
              <representation mediaType="application/xml" element="identity:identityFault"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="400">
              <representation mediaType="application/xml" element="identity:badRequest"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="401">
              <representation mediaType="application/xml" element="identity:unauthorized"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="403">
              <representation mediaType="application/xml" element="identity:forbidden"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="405">
              <representation mediaType="application/xml" element="identity:badMethod"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="413">
              <representation mediaType="application/xml" element="identity:overLimit"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="503">
              <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="404">
              <representation mediaType="application/xml" element="identity:itemNotFound"/>
              <representation mediaType="application/json"/>
            </response>
          </method>
          <resource path="users">
            <resource path="{user_id}">
              <param name="user_id" style="template" type="xsd:string" required="true" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
              <resource path="roles">
                <method name="GET" rax:id="listRolesForUserOnTenant" xmlns:rax="http://docs.rackspace.com/api">
                  <doc xml:lang="EN" title="List Roles for User on Tenant">
                    <p xmlns="http://www.w3.org/1999/xhtml">Returns roles for a specific user on a specific tenant (excludes global roles).</p>
                  </doc>
                  <response status="200 203">
                    <representation mediaType="application/xml" element="identity:roles">
                      <doc>
                        <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                          <title>List Roles for User on Tenant Response: XML</title>
                          <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>

&lt;roles xmlns="http://docs.openstack.org/identity/api/v2.0">
  &lt;role id="123" name="Admin" description="All Access" />
  &lt;role id="234" name="Guest" description="Guest Access" />
&lt;/roles></programlisting>
                        </example>
                      </doc>
                    </representation>
                    <representation mediaType="application/json">
                      <doc>
                        <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                          <title>List Roles for User on Tenant Response: JSON</title>
                          <programlisting language="javascript">{
    "roles":[{
            "id":"123",
            "name":"compute:admin",
            "description":"Nova Administrator",
        }
    ],
    "roles_links":[]
}</programlisting>
                        </example>
                      </doc>
                    </representation>
                  </response>
                  <response>
                    <representation mediaType="application/xml" element="identity:identityFault"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="400">
                    <representation mediaType="application/xml" element="identity:badRequest"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="401">
                    <representation mediaType="application/xml" element="identity:unauthorized"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="403">
                    <representation mediaType="application/xml" element="identity:forbidden"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="405">
                    <representation mediaType="application/xml" element="identity:badMethod"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="413">
                    <representation mediaType="application/xml" element="identity:overLimit"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="503">
                    <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="404">
                    <representation mediaType="application/xml" element="identity:itemNotFound"/>
                    <representation mediaType="application/json"/>
                  </response>
                </method>
              </resource>
            </resource>
          </resource>
        </resource>
      </resource>
    </resource>
  </resources>
  <!--*******************************************************-->
  <!--Resource Types-->
  <!--*******************************************************-->
  <resource_type id="VersionDetails">
    <method name="GET" rax:id="getVersionInfo" xmlns:rax="http://docs.rackspace.com/api">
      <doc xml:lang="EN" title="Version Details">
        <p xmlns="http://www.w3.org/1999/xhtml">Returns detailed information about this specific version of the API.</p>
      </doc>
      <response status="200 203">
        <representation mediaType="application/xml" element="capi:version">
          <param name="location" style="plain" type="xsd:anyURI" required="true" path="/capi:version/atom:link[@rel='self']/@href" rax:id="">
            <link resource_type="#VersionDetails" rel="self"/>
          </param>
        </representation>
        <representation mediaType="application/json"/>
      </response>
      <response>
        <representation mediaType="application/xml" element="identity:identityFault"/>
        <representation mediaType="application/json"/>
      </response>
      <response status="400">
        <representation mediaType="application/xml" element="identity:badRequest"/>
        <representation mediaType="application/json"/>
      </response>
      <response status="401">
        <representation mediaType="application/xml" element="identity:unauthorized"/>
        <representation mediaType="application/json"/>
      </response>
      <response status="403">
        <representation mediaType="application/xml" element="identity:forbidden"/>
        <representation mediaType="application/json"/>
      </response>
      <response status="405">
        <representation mediaType="application/xml" element="identity:badMethod"/>
        <representation mediaType="application/json"/>
      </response>
      <response status="413">
        <representation mediaType="application/xml" element="identity:overLimit"/>
        <representation mediaType="application/json"/>
      </response>
      <response status="503">
        <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
        <representation mediaType="application/json"/>
      </response>
      <response status="404">
        <representation mediaType="application/xml" element="identity:itemNotFound"/>
        <representation mediaType="application/json"/>
      </response>
    </method>
  </resource_type>
  <resource_type id="ExtensionList">
    <doc xml:lang="EN" title="Extension List">
      <p xmlns="http://www.w3.org/1999/xhtml">A list of supported extensions.</p>
    </doc>
    <method name="GET" rax:id="listExtensions" xmlns:rax="http://docs.rackspace.com/api">
      <doc xml:lang="EN" title="List Extensions">
        <p xmlns="http://www.w3.org/1999/xhtml">Lists supported extensions.</p>
      </doc>
      <response status="200 203">
        <representation mediaType="application/xml" element="capi:extensions">
          <param name="next" style="plain" type="xsd:anyURI" path="/capi:extensions/atom:link[@rel='next']/@href" rax:id="">
            <link resource_type="#ExtensionList" rel="next"/>
          </param>
          <param name="previous" style="plain" type="xsd:anyURI" path="/capi:extensions/atom:link[@rel='previous']/@href" rax:id="">
            <link resource_type="#ExtensionList" rel="previous"/>
          </param>
        </representation>
        <representation mediaType="application/json"/>
      </response>
      <response>
        <representation mediaType="application/xml" element="identity:identityFault"/>
        <representation mediaType="application/json"/>
      </response>
      <response status="400">
        <representation mediaType="application/xml" element="identity:badRequest"/>
        <representation mediaType="application/json"/>
      </response>
      <response status="401">
        <representation mediaType="application/xml" element="identity:unauthorized"/>
        <representation mediaType="application/json"/>
      </response>
      <response status="403">
        <representation mediaType="application/xml" element="identity:forbidden"/>
        <representation mediaType="application/json"/>
      </response>
      <response status="405">
        <representation mediaType="application/xml" element="identity:badMethod"/>
        <representation mediaType="application/json"/>
      </response>
      <response status="413">
        <representation mediaType="application/xml" element="identity:overLimit"/>
        <representation mediaType="application/json"/>
      </response>
      <response status="503">
        <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
        <representation mediaType="application/json"/>
      </response>
    </method>
  </resource_type>
  <!--*******************************************************-->
  <!--All Methods-->
  <!--*******************************************************-->
  <!--Version-->
  <method name="GET" id="getVersionInfo">
    <doc xml:lang="EN" title="Version Details">
      <p xmlns="http://www.w3.org/1999/xhtml">Returns detailed information about this specific version of the API.</p>
    </doc>
    <response status="200 203">
      <representation mediaType="application/xml" element="capi:version">
        <param name="location" style="plain" type="xsd:anyURI" required="true" path="/capi:version/atom:link[@rel='self']/@href" rax:id="" xmlns:rax="http://docs.rackspace.com/api">
          <link resource_type="#VersionDetails" rel="self"/>
        </param>
      </representation>
      <representation mediaType="application/json"/>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <!--Extensions-->
  <method name="GET" id="listExtensions">
    <doc xml:lang="EN" title="List Extensions">
      <p xmlns="http://www.w3.org/1999/xhtml">Lists supported extensions.</p>
    </doc>
    <response status="200 203">
      <representation mediaType="application/xml" element="capi:extensions">
        <param name="next" style="plain" type="xsd:anyURI" path="/capi:extensions/atom:link[@rel='next']/@href" rax:id="" xmlns:rax="http://docs.rackspace.com/api">
          <link resource_type="#ExtensionList" rel="next"/>
        </param>
        <param name="previous" style="plain" type="xsd:anyURI" path="/capi:extensions/atom:link[@rel='previous']/@href" rax:id="" xmlns:rax="http://docs.rackspace.com/api">
          <link resource_type="#ExtensionList" rel="previous"/>
        </param>
      </representation>
      <representation mediaType="application/json"/>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getExtension">
    <doc xml:lang="EN" title="Get Extension Details">
      <p xmlns="http://www.w3.org/1999/xhtml">Gets details about a specific extension.</p>
    </doc>
    <response status="200 203">
      <representation mediaType="application/xml" element="capi:extension"/>
      <representation mediaType="application/json"/>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <!--Token Operations-->
  <method name="POST" id="authenticate">
    <doc xml:lang="EN" title="Authenticate for Service API">
      <p class="shortdesc" xmlns="http://www.w3.org/1999/xhtml">Authenticate to generate a token.</p>
      <p xmlns="http://www.w3.org/1999/xhtml">This call will return a token if successful. Each ReST request against other services (or other
	      calls on Keystone such as the GET /tenants call)
	      requires the inclusion of a specific authorization token HTTP x-header, defined as X-Auth-Token.
	      Clients obtain
	      this token, along with the URL to other service APIs, by first authenticating against the
	      Keystone Service and supplying valid credentials.</p>
      <p xmlns="http://www.w3.org/1999/xhtml">Client authentication is provided via a ReST interface using the POST method,
	      with v2.0/tokens supplied as the path. A payload of credentials must be included
	      in the body.</p>
      <p xmlns="http://www.w3.org/1999/xhtml">The Keystone Service is a ReSTful web service. It is the entry point to all service APIs.
	      To access the Keystone Service, you must know URL of the Keystone service.</p>
    </doc>
    <request>
      <representation mediaType="application/xml" element="identity:auth">
        <doc>
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Authenticate for Service API Request: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;auth xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xmlns="http://docs.openstack.org/identity/api/v2.0"
 tenantName="customer-x">
  &lt;passwordCredentials username="test_user" password="test"/>
&lt;/auth></programlisting>
          </example>
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Authenticate for Service API Request: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;auth xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xmlns="http://docs.openstack.org/identity/api/v2.0"
 tenantName="customer-x">
  &lt;token id="abcdefghijk" />
&lt;/auth></programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc>
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Authenticate for Service API Request: JSON</title>
            <programlisting language="javascript">{
    "auth":{
        "passwordCredentials":{
            "username":"test_user",
            "password":"mypass"
        },
        "tenantName":"customer-x"
    }
}</programlisting>
          </example>
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Authenticate for Service API Request: JSON</title>
            <programlisting language="javascript">{
    "auth": {
        "tenantName": "customer-x",
        "token": {
            "id": "abcdefghijk"
        }
    }
}</programlisting>
          </example>
        </doc>
      </representation>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:access">
        <doc>
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Authenticate for Service API Response: XML</title>
            <programlisting language="xml"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<access xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://docs.openstack.org/identity/api/v2.0">
	<token id="ab48a9efdfedb23ty3494" expires="2010-11-01T03:32:15-05:00">
		<tenant id="t1000" name="My Project" />
	</token>
	<user id="u123" name="jqsmith">
		<roles>
			<role id="100" name="compute:admin"/>
			<role id="101" name="object-store:admin" tenantId="t1000"/>
		</roles>
	</user>
	<serviceCatalog>
		<service type="compute" name="Cloud Servers">
			<endpoint
        tenantId="t1000"
				region="North"
				publicURL="https://compute.north.host.com/v1/t1000"
				internalURL="https://compute.north.host.internal/v1/t1000">
				<version
				id="1"
				info="https://compute.north.host.com/v1/"
				list="https://compute.north.host.com/"
				/>
			</endpoint>
			<endpoint
        tenantId="t1000"
				region="North"
				publicURL="https://compute.north.host.com/v1.1/t1000"
				internalURL="https://compute.north.host.internal/v1.1/t1000">
				<version
				id="1.1"
				info="https://compute.north.host.com/v1.1/"
				list="https://compute.north.host.com/" />
			</endpoint>
		</service>
		<service type="object-store" name="Cloud Files">
			<endpoint
        tenantId="t1000"
				region="North"
				publicURL="https://storage.north.host.com/v1/t1000"
				internalURL="https://storage.north.host.internal/v1/t1000">
				<version
				id="1"
				info="https://storage.north.host.com/v1/"
				list="https://storage.north.host.com/" />
			</endpoint>
			<endpoint
        tenantId="t1000"
				region="South"
				publicURL="https://storage.south.host.com/v1/t1000"
				internalURL="https://storage.south.host.internal/v1/t1000">
				<version
				id="1"
				info="https://storage.south.host.com/v1/"
				list="https://storage.south.host.com/" />
			</endpoint>
		</service>
		<service type="dnsextension:dns" name="DNS-as-a-Service">
			<endpoint
        tenantId="t1000"
				publicURL="https://dns.host.com/v2.0/t1000">
				<version
				id="2.0"
				info="https://dns.host.com/v2.0/"
				list="https://dns.host.com/" />
			</endpoint>
		</service>
	</serviceCatalog>
</access>]]]]>><![CDATA[</programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc>
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Authenticate for Service API Response: JSON</title>
            <programlisting language="javascript">{
    "access":{
        "token":{
            "id":"ab48a9efdfedb23ty3494",
            "expires":"2010-11-01T03:32:15-05:00",
            "tenant":{
                "id": "t1000",
                "name": "My Project"
            }
        },
        "user":{
            "id":"u123",
            "name":"jqsmith",
            "roles":[{
                    "id":"100",
                    "name":"compute:admin"
                },
				{
                    "id":"101",
                    "name":"object-store:admin",
                    "tenantId":"t1000"
                }                       
            ],
            "roles_links":[]
        },
        "serviceCatalog":[{
                "name":"Cloud Servers",
                "type":"compute",
                "endpoints":[{
                        "tenantId":"t1000",
                        "publicURL":"https://compute.north.host.com/v1/t1000",
                        "internalURL":"https://compute.north.internal/v1/t1000",
                        "region":"North",
                        "versionId":"1",
                        "versionInfo":"https://compute.north.host.com/v1/",
                        "versionList":"https://compute.north.host.com/"
                    },
                    {
                        "tenantId":"t1000",
                        "publicURL":"https://compute.north.host.com/v1.1/t1000",
                        "internalURL":"https://compute.north.internal/v1.1/t1000",
                        "region":"North",
                        "versionId":"1.1",
                        "versionInfo":"https://compute.north.host.com/v1.1/",
                        "versionList":"https://compute.north.host.com/"
                    }
                ],
                "endpoints_links":[]
            },
            {
                "name":"Cloud Files",
                "type":"object-store",
                "endpoints":[{
                        "tenantId":"t1000",
                        "publicURL":"https://storage.north.host.com/v1/t1000",
                        "internalURL":"https://storage.north.internal/v1/t1000",
                        "region":"North",
                        "versionId":"1",
                        "versionInfo":"https://storage.north.host.com/v1/",
                        "versionList":"https://storage.north.host.com/"
                    },
                    {
                        "tenantId":"t1000",
                        "publicURL":"https://storage.south.host.com/v1/t1000",
                        "internalURL":"https://storage.south.internal/v1/t1000",
                        "region":"South",
                        "versionId":"1",
                        "versionInfo":"https://storage.south.host.com/v1/",
                        "versionList":"https://storage.south.host.com/"
                    }
                ]
            },
            {
                "name":"DNS-as-a-Service",
                "type":"dnsextension:dns",
                "endpoints":[{
                        "tenantId":"t1000",
                        "publicURL":"https://dns.host.com/v2.0/t1000",
                        "versionId":"2.0",
                        "versionInfo":"https://dns.host.com/v2.0/",
                        "versionList":"https://dns.host.com/"
                    }
                ]
            }
        ]
    }
}</programlisting>
          </example>
        </doc>
      </representation>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:userDisabled"/>
      <representation mediaType="application/json"/>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="validateToken">
    <doc xml:lang="EN" title="Validate Token">
      <p class="shortdesc" xmlns="http://www.w3.org/1999/xhtml">Check that a token is valid and that it belongs to a supplied tenant
                and return the permissions relevant to a particular client.</p>
      <p xmlns="http://www.w3.org/1999/xhtml">
        Valid tokens will exist in the
        <code>/tokens/{tokenId}</code>
        path and invalid
                tokens will not.  In other words, a user should expect an
                itemNotFound (
        <code>404</code>
        ) fault for an
                invalid token.
      </p>
    </doc>
    <request>
      <param name="belongsTo" style="query" required="false" type="xsd:string" rax:id="" xmlns:rax="http://docs.rackspace.com/api">
        <doc xml:lang="EN">
          <p xmlns="http://www.w3.org/1999/xhtml">Validates a token has the supplied tenant in scope.</p>
        </doc>
      </param>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:access">
        <doc>
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Validate Token Response: XML</title>
            <programlisting language="xml"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<access xmlns="http://docs.openstack.org/identity/api/v2.0">
	<token id="ab48a9efdfedb23ty3494" expires="2010-11-01T03:32:15-05:00">
		<tenant id="456" name="My Project" />
	</token>
	<user id="123" username="jqsmith">
		<roles xmlns="http://docs.openstack.org/identity/api/v2.0">
			<role id="123" name="Admin" tenantId="one"/>
			<role id="234" name="object-store:admin" tenantId="1"/>
		</roles>
	</user>
</access>]]]]>><![CDATA[</programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc>
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Validate Token Response: JSON</title>
            <programlisting language="javascript">{
    "access":{
        "token":{
            "id":"ab48a9efdfedb23ty3494",
            "expires":"2010-11-01T03:32:15-05:00",
            "tenant":{
                "id": "345",
                "name": "My Project"
            }
        },
        "user":{
            "id":"123",
            "name":"jqsmith",
            "roles":[{
                    "id":"234",
                    "name":"compute:admin"
                },
				{
                    "id":"234",
                    "name":"object-store:admin",
                    "tenantId":"1"
                }                
            ],
            "roles_links":[]
        }
    }
}</programlisting>
          </example>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="HEAD" id="checkToken">
    <doc xml:lang="EN" title="Check Token">
      <p class="shortdesc" xmlns="http://www.w3.org/1999/xhtml">Check that a token is valid and that it belongs to a particular tenant
                (For performance).</p>
    </doc>
    <request>
      <param name="belongsTo" style="query" required="false" type="xsd:string" rax:id="" xmlns:rax="http://docs.rackspace.com/api">
        <doc xml:lang="EN">
          <p xmlns="http://www.w3.org/1999/xhtml">Validates a token has the supplied tenant in scope. (for performance).</p>
          <p xmlns="http://www.w3.org/1999/xhtml">
            Valid tokens will exist in the
            <code>/tokens/{tokenId}</code>
            path and invalid
                        tokens will not.  In other words, a user should expect an
                        itemNotFound (
            <code>404</code>
            ) fault for an
                        invalid token.
          </p>
          <p xmlns="http://www.w3.org/1999/xhtml">If `belongsTo` is provided, validates that a token has a specific tenant in scope.</p>
          <p xmlns="http://www.w3.org/1999/xhtml">No response body is returned for this method.</p>
        </doc>
      </param>
    </request>
    <response status="200 203"/>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <!--User Operations-->
  <method name="GET" id="getUserByName">
    <doc xml:lang="EN" title="Get a User by Name">
      <p xmlns="http://www.w3.org/1999/xhtml">Returns detailed information about a specific user, by user name.</p>
    </doc>
    <request>
      <param name="name" style="query" type="xsd:string" required="true" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:user">
        <doc>
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Get a User by Name Response: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;user xmlns="http://docs.openstack.org/identity/api/v2.0"
      enabled="true" email="john.smith@example.org"
      username="jqsmith" id="u1000"/></programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc>
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Get a User by Name Response: JSON</title>
            <programlisting language="javascript">{
  "user": {
    "id": "u1000",
    "username": "jqsmith",
    "email": "john.smith@example.org",
    "enabled": true
  }
}</programlisting>
          </example>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getUserById">
    <doc xml:lang="EN" title="Get a User by ID">
      <p xmlns="http://www.w3.org/1999/xhtml">Returns detailed information about a specific user, by user id.</p>
    </doc>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:user">
        <doc>
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Get a User by ID Response: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;user xmlns="http://docs.openstack.org/identity/api/v2.0"
      enabled="true" email="john.smith@example.org"
      username="jqsmith" id="u1000"/></programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc>
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Get a User by ID Response: JSON</title>
            <programlisting language="javascript">{
  "user": {
    "id": "u1000",
    "username": "jqsmith",
    "email": "john.smith@example.org",
    "enabled": true
  }
}</programlisting>
          </example>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="listUserGlobalRoles">
    <doc xml:lang="EN" title="List User Global Roles">
      <p class="shortdesc" xmlns="http://www.w3.org/1999/xhtml">Returns global roles for a specific user (excludes tenant roles).</p>
      <p xmlns="http://www.w3.org/1999/xhtml">Returns a list of global roles associated with a specific
            	    user (excludes tenant roles).</p>
    </doc>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:roles">
        <doc>
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>List User Global Roles Response: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>

&lt;roles xmlns="http://docs.openstack.org/identity/api/v2.0">
  &lt;role id="123" name="Admin" description="All Access" />
  &lt;role id="234" name="Guest" description="Guest Access" />
&lt;/roles></programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc>
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>List User Global Roles Response: JSON</title>
            <programlisting language="javascript">{
    "roles":[{
            "id":"123",
            "name":"compute:admin",
            "description":"Nova Administrator",
        }
    ],
    "roles_links":[]
}</programlisting>
          </example>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <!--Tenant Operations-->
  <method name="GET" id="listTenants">
    <doc xml:lang="EN" title="Get Tenants">
      <p class="shortdesc" xmlns="http://www.w3.org/1999/xhtml">Get a list of tenants.</p>
      <p xmlns="http://www.w3.org/1999/xhtml">The operation returns a list of tenants which the supplied token provides
	      access to. This call must be authenticated, so a valid token must
	      be passed in as a header.</p>
      <example role="wadl" xmlns="http://docbook.org/ns/docbook">
        <title>Tenants Request with Auth Token</title>
        <programlisting language="xml">GET /v2.0/tenants HTTP/1.1
Host: identity.api.openstack.org
Content-Type: application/json
X-Auth-Token: fa8426a0-8eaf-4d22-8e13-7c1b16a9370c
Accept: application/json</programlisting>
      </example>
    </doc>
    <request>
      <param name="marker" style="query" required="false" type="xsd:string" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
      <param name="limit" style="query" required="false" type="xsd:int" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:tenants">
        <doc>
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Get Tenants Response: XML</title>
            <programlisting language="xml"><![CDATA[HTTP/1.1 200 OK
Content-Type: application/xml; charset=UTF-8
Content-Length: 200
Date: Sun, 1 Jan 2011 9:00:00 GMT

<?xml version="1.0" encoding="UTF-8"?>
<tenants xmlns="http://docs.openstack.org/identity/api/v2.0">
    <tenant enabled="true" id="1234" name="ACME Corp">
        <description>A description...</description>
    </tenant>
    <tenant enabled="true" id="3645" name="Iron Works">
        <description>A description...</description>
    </tenant>
</tenants>]]]]>><![CDATA[</programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc>
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Get Tenants Response: JSON</title>
            <programlisting language="javascript">{
    "tenants":[{
            "id":"1234",
            "name":"ACME Corp",
            "description":"A description ...",
            "enabled":true
        },
        {
            "id":"3456",
            "name":"Iron Works",
            "description":"A description ...",
            "enabled":true
        }
    ],
    "tenants_links":[]
}</programlisting>
          </example>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getTenantByName">
    <doc xml:lang="EN" title="Get tenants by name">
      <p class="shortdesc" xmlns="http://www.w3.org/1999/xhtml">Returns detailed information about a tenant, by name.</p>
    </doc>
    <request>
      <param name="name" style="query" type="xsd:string" required="true" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:tenant">
        <doc>
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Get tenants by name Response: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;tenant xmlns="http://docs.openstack.org/identity/api/v2.0"
        enabled="true" id="1234" name="ACME Corp">
    &lt;description>A description...&lt;/description>
&lt;/tenant></programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc>
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Get tenants by name Response: JSON</title>
            <programlisting language="javascript">{
  "tenant": {
    "id": "1234",
    "name": "ACME corp",
    "description": "A description ...",
    "enabled": true
  }
}</programlisting>
          </example>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getTenantById">
    <doc xml:lang="EN" title="Get Tenants by ID">
      <p class="shortdesc" xmlns="http://www.w3.org/1999/xhtml">Returns detailed information about a tenant, by id.</p>
    </doc>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:tenant">
        <doc>
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Get Tenants by ID Response: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;tenant xmlns="http://docs.openstack.org/identity/api/v2.0"
        enabled="true" id="1234" name="ACME Corp">
    &lt;description>A description...&lt;/description>
&lt;/tenant></programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc>
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Get Tenants by ID Response: JSON</title>
            <programlisting language="javascript">{
  "tenant": {
    "id": "1234",
    "name": "ACME corp",
    "description": "A description ...",
    "enabled": true
  }
}</programlisting>
          </example>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="listEndpointsForToken">
    <doc xml:lang="EN" title="List Endoints for a Token">
      <p xmlns="http://www.w3.org/1999/xhtml">Returns a list of endpoints associated with a specific token.</p>
    </doc>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:endpoints">
        <doc>
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>List Endoints for a Token Response: XML</title>
            <programlisting language="xml"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>

<endpoints
    xmlns="http://docs.openstack.org/identity/api/v2.0">
  <endpoint
      id="1" 
      tenantId="1"
      type="compute"
      name="Compute"
      region="North"
      publicURL="https://compute.north.public.com/v1"
      internalURL="https://compute.north.internal.com/v1"
      adminURL="https://compute.north.internal.com/v1">
      <version
          id="1"
          info="https://compute.north.public.com/v1/"
          list="https://compute.north.public.com/"
      />
  </endpoint>
  <endpoint
      id="2" 
      tenantId="2"
      type="compute"
      name="Compute"
      region="South"
      publicURL="https://compute.north.public.com/v1"
      internalURL="https://compute.north.internal.com/v1"
      adminURL="https://compute.north.internal.com/v1">
      <version
          id="1"
          info="https://compute.north.public.com/v1/"
          list="https://compute.north.public.com/"
      />
  </endpoint>
  <endpoint
      id="3" 
      tenantId="1"
      type="compute"
      name="Compute"
      region="East"
      publicURL="https://compute.north.public.com/v1"
      internalURL="https://compute.north.internal.com/v1"
      adminURL="https://compute.north.internal.com/v1"
      tenantId="1"
  />
  <endpoint
      id="4" 
      tenantId="1"
      type="compute"
      name="Compute"
      region="West"
      publicURL="https://compute.north.public.com/v1"
      internalURL="https://compute.north.internal.com/v1"
      adminURL="https://compute.north.internal.com/v1">
      <version
          id="1"
          info="https://compute.north.public.com/v1/"
          list="https://compute.north.public.com/"
      />
  </endpoint>
  <endpoint
      id="5" 
      tenantId="1"
      type="compute"
      name="Compute"
      region="Global"
      publicURL="https://compute.north.public.com/v1"
      internalURL="https://compute.north.internal.com/v1"
      adminURL="https://compute.north.internal.com/v1">
      <version
          id="1"
          info="https://compute.north.public.com/v1/"
          list="https://compute.north.public.com/"
      />
  </endpoint>
</endpoints>]]]]>><![CDATA[</programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc>
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>List Endoints for a Token Response: JSON</title>
            <programlisting language="javascript">{
    "endpoints":[{
                "id":1,
                "tenantId":"1",
                "region":"North",
                "type":"compute",
                "publicURL":"https://compute.north.public.com/v1",
                "internalURL":"https://compute.north.internal.com/v1",
                "adminURL" : "https://compute.north.internal.com/v1",
                "versionId":"1",
                "versionInfo":"https://compute.north.public.com/v1/",
                "versionList":"https://compute.north.public.com/"
            },
            {
                "id":2,
                "tenantId":"1",
                "region":"South",
                "type":"compute",
                "publicURL":"https://compute.north.public.com/v1",
                "internalURL":"https://compute.north.internal.com/v1",
                "adminURL" : "https://compute.north.internal.com/v1",
                "versionId":"1",
                "versionInfo":"https://compute.north.public.com/v1/",
                "versionList":"https://compute.north.public.com/"
            },
            {
                "id":3,
                "tenantId":"1",
                "region":"East",
                "type":"compute",
                "publicURL":"https://compute.north.public.com/v1",
                "internalURL":"https://compute.north.internal.com/v1",
                "adminURL" : "https://compute.north.internal.com/v1",
                "versionId":"1",
                "versionInfo":"https://compute.north.public.com/v1/",
                "versionList":"https://compute.north.public.com/"
            },
            {
                "id":4,
                "tenantId":"1",
                "region":"West",
                "type":"compute",
                "publicURL":"https://compute.north.public.com/v1",
                "internalURL":"https://compute.north.internal.com/v1",
                "adminURL" : "https://compute.north.internal.com/v1",
                "versionId":"1",
                "versionInfo":"https://compute.north.public.com/v1/",
                "versionList":"https://compute.north.public.com/"
            },
            {
                "id":5,
                "tenantId":"1",
                "region":"Global",
                "type":"compute",
                "publicURL":"https://compute.north.public.com/v1",
                "internalURL":"https://compute.north.internal.com/v1",
                "adminURL" : "https://compute.north.internal.com/v1",
                "versionId":"1",
                "versionInfo":"https://compute.north.public.com/v1/",
                "versionList":"https://compute.north.public.com/"
            }
        ],
    "endpoints_links":[]
}</programlisting>
          </example>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="listRolesForUserOnTenant">
    <doc xml:lang="EN" title="List Roles for User on Tenant">
      <p xmlns="http://www.w3.org/1999/xhtml">Returns roles for a specific user on a specific tenant (excludes global roles).</p>
    </doc>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:roles">
        <doc>
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>List Roles for User on Tenant Response: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>

&lt;roles xmlns="http://docs.openstack.org/identity/api/v2.0">
  &lt;role id="123" name="Admin" description="All Access" />
  &lt;role id="234" name="Guest" description="Guest Access" />
&lt;/roles></programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc>
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>List Roles for User on Tenant Response: JSON</title>
            <programlisting language="javascript">{
    "roles":[{
            "id":"123",
            "name":"compute:admin",
            "description":"Nova Administrator",
        }
    ],
    "roles_links":[]
}</programlisting>
          </example>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
</application>]]></con:content><con:type>http://wadl.dev.java.net/2009/02</con:type></con:part><con:part><con:url>file:/home/jenny/keystone/keystone/content/admin/normalized/identity-admin-xsd-1.xsd</con:url><con:content><![CDATA[<!--Flattened from: file:/home/jenny/keystone/keystone/content/admin/../common/xsd/api.xsd-->
<xsd:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:rax="http://docs.rackspace.com/api" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:html="http://www.w3.org/1999/xhtml">
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="identity-admin-xsd-3.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <!--Elements-->
  <!--Complex Types-->
  <!--EndpointForService-->
  <!--VersionForService-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="identity-admin-xsd-3.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Elements-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="identity-admin-xsd-3.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Simple Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <!--Elements-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Fault Elements-->
  <!--Fault Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="identity-admin-xsd-3.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Elements-->
  <!--Complex Types-->
  <!--EndpointForService-->
  <!--VersionForService-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="identity-admin-xsd-3.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Elements-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Fault Elements-->
  <!--Fault Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="identity-admin-xsd-3.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="identity-admin-xsd-3.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Elements-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="identity-admin-xsd-3.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Elements-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <!--Elements-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <!--Elements-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <!--Elements-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <!--Simple Types-->
  <element name="access" type="identity:AuthenticateResponse" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="roles" type="identity:RoleList" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A list of roles.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="role" type="identity:Role" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A role.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="tenant" type="identity:Tenant" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A container used to group or isolate resources and/or identity
                  objects. Depending on the service operator, a tenant may map to a customer,
                  account, organization, or project.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/xml" href="../samples/tenant.xml"/>
                     
          </xsdxt:sample>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/json" href="../samples/tenant.json"/>
                     
          </xsdxt:sample>
                 
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="tenants" type="identity:Tenants" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A list of tenants.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="identityFault" type="identity:IdentityFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="serviceUnavailable" type="identity:ServiceUnavailableFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="badRequest" type="identity:BadRequestFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="unauthorized" type="identity:UnauthorizedFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="overLimit" type="identity:OverLimitFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="userDisabled" type="identity:UserDisabledFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="forbidden" type="identity:ForbiddenFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="itemNotFound" type="identity:ItemNotFoundFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="tenantConflict" type="identity:TenantConflictFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="endpoint" type="identity:Endpoint" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>An Endpoint.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="endpoints" type="identity:EndpointList" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A list of Endpoints.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="users" type="identity:UserList" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN">
        <p>A list of Users.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="user" type="identity:User" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN">
        <p>A Keystone User.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="auth" type="identity:AuthenticationRequest" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="credential" type="identity:CredentialType" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="credentials" type="identity:CredentialListType" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="passwordCredentials" type="identity:PasswordCredentialsRequiredUsername" substitutionGroup="identity:credential" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <simpleType name="ExtensibleServiceType" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>
          An extensible service type allows all of the
                    strings defined in
          <a href="#type_ServiceType" title="See definition of                         ServiceType">ServiceType</a>
          or an
                    alias prefixed status.
        </p>
      </xsd:documentation>
    </annotation>
    <union memberTypes="identity:ServiceType identity:ExtendedService"/>
  </simpleType>
  <simpleType name="ServiceType" xmlns="http://www.w3.org/2001/XMLSchema">
    <restriction base="xsd:string">
      <enumeration value="compute">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for an OpenStack Compute API 1.1 compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="object-store">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for a Swift-compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="image-service">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for a Glance-compatible service</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="identity">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for a Keystone-compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
    </restriction>
  </simpleType>
  <simpleType name="ExtendedService" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A non-core service type which must contain an extension prefix.</p>
      </xsd:documentation>
    </annotation>
    <restriction base="xsd:string">
      <pattern value="(\w|-)+:\w+"/>
    </restriction>
  </simpleType>
  <simpleType name="ExtensibleServiceType" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>
          An extensible service type allows all of the
                    strings defined in
          <a href="#type_ServiceType" title="See definition of                         ServiceType">ServiceType</a>
          or an
                    alias prefixed status.
        </p>
      </xsd:documentation>
    </annotation>
    <union memberTypes="identity:ServiceType identity:ExtendedService"/>
  </simpleType>
  <simpleType name="ServiceType" xmlns="http://www.w3.org/2001/XMLSchema">
    <restriction base="xsd:string">
      <enumeration value="compute">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for an OpenStack Compute API 1.1 compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="object-store">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for a Swift-compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="image-service">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for a Glance-compatible service</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="identity">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for a Keystone-compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
    </restriction>
  </simpleType>
  <simpleType name="ExtendedService" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A non-core service type which must contain an extension prefix.</p>
      </xsd:documentation>
    </annotation>
    <restriction base="xsd:string">
      <pattern value="(\w|-)+:\w+"/>
    </restriction>
  </simpleType>
  <complexType name="Token" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A token is an arbitrary bit of text that is used to access
                    resources. Each token has a scope which describes which
                    resources are accessible with it. A token may be
                    revoked at anytime and is valid for a finite duration.</p>
        <p>While Keystone supports token-based authentication in this release,
                    the intention is for it to support additional protocols in the
                    future. The desire is for it to be an integration service, and not
                    a full-fledged identity store and management solution.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/token.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/token.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
    <sequence>
      <element name="tenant" type="identity:TenantForAuthenticateResponse"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:string" use="required"/>
    <attribute name="expires" type="xsd:dateTime" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="AuthenticateResponse" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="token" type="identity:Token"/>
      <element name="user" type="identity:UserForAuthenticateResponse"/>
      <element name="serviceCatalog" type="identity:ServiceCatalog" minOccurs="0"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="UserForAuthenticateResponse" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="roles" type="identity:RoleList"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:string"/>
    <attribute name="name" type="xsd:string"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="TenantForAuthenticateResponse" xmlns="http://www.w3.org/2001/XMLSchema">
    <attribute name="id" type="xsd:string"/>
    <attribute name="name" type="xsd:string"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="ServiceCatalog" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>The service catalog lists the services you have access to</p>
        <div class="design">
          <p>We optimized for future flexibility around the hierarchy. So we
                    left the design as a flat list of endpoints with attributes and the
                    consumer can categorize as they need.
                    This results in potential duplication (such as with the version/@list)
                    but we acceopt that normalization cost in order to not force an
                    artificial hierarchy (suchas on region, which can be optional).</p>
        </div>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/xml" href="../samples/services.xml"/>
                     
          </xsdxt:sample>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/json" href="../samples/services.json"/>
                     
          </xsdxt:sample>
                 
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
    <sequence>
      <element name="service" type="identity:ServiceForCatalog" minOccurs="1" maxOccurs="unbounded">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>A list of services.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="ServiceForCatalog" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="endpoint" type="identity:EndpointForService" minOccurs="1" maxOccurs="unbounded">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>A list of endpoints.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="type" type="identity:ExtensibleServiceType" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The OpenStack-registered type (e.g. 'compute', 'object-store', etc).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The commercial service name (e.g. 'My Nova Cloud Servers').</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="EndpointForService" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="version" type="identity:VersionForService" maxOccurs="1" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>Version details.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="region" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The name of the region where the endpoint
                        lives. Example: airport codes; LHR (UK),
                        STL (Saint Louis)</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="tenantId" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>Tenant id to which the endpoints belong.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="publicURL" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>Public accessible service URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="internalURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A service URL, accessible only locally within that
                        cloud (generally over a high bandwidth, low latency,
                        free of charge link).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="adminURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>An Admin URL (used for administration using privileged
                        calls). This may expose
                        additional functionality not found in the public and
                        internal URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="VersionForService" xmlns="http://www.w3.org/2001/XMLSchema">
    <attribute name="id" type="xsd:string" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>Id of the version.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="info" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>URI to get the information specific to this version.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="list" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>URI to get the information about all versions.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="Role" xmlns="http://www.w3.org/2001/XMLSchema">
    <attribute name="id" type="xsd:string" use="optional"/>
    <attribute name="name" type="xsd:string" use="required"/>
    <attribute name="description" type="xsd:string" use="optional"/>
    <attribute name="serviceId" type="xsd:string" use="optional"/>
    <attribute name="tenantId" type="xsd:string" use="optional"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="RoleList" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="role" type="identity:Role" minOccurs="0" maxOccurs="unbounded"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="Tenants" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="tenant" type="identity:Tenant" maxOccurs="100"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="Tenant" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="description" type="xsd:string">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>An free text description of the tenant.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:ID" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>An ID uniquely identifying the tenant. This usually comes from the back-end store.
                        This value is guaranteed to be unique and immutable (it will never change).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="name" type="xsd:string" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The name of the tenant. This is guaranteed to be unique, but may change.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="enabled" type="xsd:boolean" use="optional" default="true">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>An boolean signifying if a tenant is enabled or not. A disabled tenant
                        cannot be authenticated against.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="display-name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A human-readable, friendly name for use in user interfaces.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute type="xsd:dateTime" name="updated" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A time-stamp identifying the modification time of the
                        tenant.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute type="xsd:dateTime" name="created" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A creation time-stamp for the tenant.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="IdentityFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="message" type="xsd:string">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>A human readable message that is appropriate for display
                            to the end user.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element name="details" type="xsd:string" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The optional &lt;details> element may contain useful
                            information for tracking down errors (e.g a stack
                            trace).  This information may or may not be appropriate
                            for display to an end user.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="code" type="xsd:int" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The HTTP status code associated with the current fault.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="ServiceUnavailableFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:IdentityFault"/>
    </complexContent>
  </complexType>
  <complexType name="BadRequestFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:IdentityFault"/>
    </complexContent>
  </complexType>
  <complexType name="UnauthorizedFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:IdentityFault"/>
    </complexContent>
  </complexType>
  <complexType name="UserDisabledFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:IdentityFault"/>
    </complexContent>
  </complexType>
  <complexType name="ForbiddenFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:IdentityFault"/>
    </complexContent>
  </complexType>
  <complexType name="ItemNotFoundFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:IdentityFault"/>
    </complexContent>
  </complexType>
  <complexType name="TenantConflictFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:IdentityFault"/>
    </complexContent>
  </complexType>
  <complexType name="OverLimitFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:IdentityFault">
        <attribute name="retryAt" type="xsd:dateTime" use="optional">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
              <p>An optional dateTime denoting when an operation should
                                be retried.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="Endpoint" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="version" type="identity:VersionForService" maxOccurs="1" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>Version details.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:int" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>An ID uniquely identifying the Endpoint.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="type" type="identity:ExtensibleServiceType" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The OpenStack-registered type (e.g. 'compute', 'object-store', etc).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The commercial service name (e.g. 'My Nova Cloud Servers').</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="region" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The region of Endpoint Template.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="publicURL" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The public URL to access represented service.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="internalURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The internal version of the public URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="adminURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The admin URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="tenantId" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>Tenant id to which the endpoints belong.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="EndpointList" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="endpoint" type="identity:Endpoint" minOccurs="0" maxOccurs="unbounded"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="User" xmlns="http://www.w3.org/2001/XMLSchema">
    <attribute name="id" type="xsd:ID" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>An automatically generated, unique, immutable (it will never change) identifier
                        for the user. This is generated by the backend this user is stored in.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="username" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A unique, mutable (it can change) user name that may be used by the user
                        an identifier when presenting credentials.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="email" type="xsd:string" use="optional"/>
    <attribute name="enabled" type="xsd:boolean" default="true" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A true/false value that determines if the user may authenticate or not.
                        If enabled is false, the user will not be able to authenticate.
                        How this value is stored or generated is dependent on the backend in use.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="display-name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A human-readable, friendly name for use in user interfaces.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="updated" type="xsd:dateTime" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A time-stamp identifying the modification time of the
                        user.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="created" type="xsd:dateTime" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A creation time-stamp for the user.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="UserList" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="user" type="identity:User" minOccurs="0" maxOccurs="unbounded"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="CredentialType" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Base type for credential in Keystone.</p>
      </xsd:documentation>
    </annotation>
    <sequence>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="AuthenticationRequest" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Both the tenantId and tenantName are optional, but should not be specified together. If both attributes are specified, the server SHOULD respond with a 400 Bad Request.</p>
      </xsd:documentation>
    </annotation>
    <sequence>
      <choice>
        <element ref="identity:credential" minOccurs="1"/>
        <element name="token" type="identity:TokenForAuthenticationRequest"/>
      </choice>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="tenantId" type="xsd:string" use="optional"/>
    <attribute name="tenantName" type="xsd:string" use="optional"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="TokenForAuthenticationRequest" xmlns="http://www.w3.org/2001/XMLSchema">
    <attribute name="id" type="xsd:string" use="required"/>
  </complexType>
  <complexType name="PasswordCredentialsBase" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:CredentialType">
        <attribute name="username" type="xsd:string" use="optional"/>
        <attribute name="password" type="xsd:string" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="PasswordCredentialsWithoutUsername" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <restriction base="identity:PasswordCredentialsBase">
        <attribute name="username" type="xsd:string" use="prohibited"/>
        <attribute name="password" type="xsd:string" use="required"/>
      </restriction>
    </complexContent>
  </complexType>
  <complexType name="PasswordCredentialsRequiredUsername" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <restriction base="identity:PasswordCredentialsBase">
        <attribute name="username" type="xsd:string" use="required"/>
        <attribute name="password" type="xsd:string" use="required"/>
      </restriction>
    </complexContent>
  </complexType>
  <complexType name="CredentialListType" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element ref="identity:credential" minOccurs="1" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jenny/keystone/keystone/content/admin/normalized/identity-admin-xsd-3.xsd</con:url><con:content><![CDATA[<!--Flattened from: file:/home/jenny/keystone/keystone/content/common/xsd/atom/atom.xsd-->
<xsd:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://www.w3.org/2005/Atom" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:rax="http://docs.rackspace.com/api" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:html="http://www.w3.org/1999/xhtml">
  <xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="identity-admin-xsd-4.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
  <xs:element name="link" type="atom:link" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
  <xs:simpleType name="relation" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:restriction base="xs:string">
      <xs:enumeration value="alternate"/>
      <xs:enumeration value="appendix"/>
      <xs:enumeration value="archives"/>
      <xs:enumeration value="author"/>
      <xs:enumeration value="bookmark"/>
      <xs:enumeration value="chapter"/>
      <xs:enumeration value="contents"/>
      <xs:enumeration value="copyright"/>
      <xs:enumeration value="current"/>
      <xs:enumeration value="describedby"/>
      <xs:enumeration value="edit"/>
      <xs:enumeration value="edit-media"/>
      <xs:enumeration value="first"/>
      <xs:enumeration value="glossary"/>
      <xs:enumeration value="help"/>
      <xs:enumeration value="hub"/>
      <xs:enumeration value="icon"/>
      <xs:enumeration value="index"/>
      <xs:enumeration value="last"/>
      <xs:enumeration value="latest-version"/>
      <xs:enumeration value="license"/>
      <xs:enumeration value="monitor"/>
      <xs:enumeration value="monitor-group"/>
      <xs:enumeration value="next"/>
      <xs:enumeration value="next-arvhice"/>
      <xs:enumeration value="nofollow"/>
      <xs:enumeration value="payment"/>
      <xs:enumeration value="predecessor-version"/>
      <xs:enumeration value="prefetch"/>
      <xs:enumeration value="prev"/>
      <xs:enumeration value="previous"/>
      <xs:enumeration value="prev-archive"/>
      <xs:enumeration value="replies"/>
      <xs:enumeration value="search"/>
      <xs:enumeration value="section"/>
      <xs:enumeration value="self"/>
      <xs:enumeration value="service"/>
      <xs:enumeration value="start"/>
      <xs:enumeration value="stylesheet"/>
      <xs:enumeration value="subsection"/>
      <xs:enumeration value="successor-version"/>
      <xs:enumeration value="up"/>
      <xs:enumeration value="version-history"/>
      <xs:enumeration value="via"/>
      <xs:enumeration value="working-copy"/>
      <xs:enumeration value="working-copy-of"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="link" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation>
        <html:p>
          See section 3.4 of the ATOM RFC
          <html:a href="http://tools.ietf.org/html/rfc4287">RFC4287</html:a>
        </html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="rel" use="required" type="atom:relation">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="type" use="optional" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="href" use="required" type="xs:anyURI">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="hreflang" use="optional" type="xs:NMTOKEN">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="title" use="optional" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
  </xs:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jenny/keystone/keystone/content/admin/normalized/identity-admin-xsd-4.xsd</con:url><con:content><![CDATA[<!--Flattened from: file:/home/jenny/keystone/keystone/content/common/xsd/atom/xml.xsd-->
<xsd:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:rax="http://docs.rackspace.com/api" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:html="http://www.w3.org/1999/xhtml">
  <xs:annotation xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:documentation>
      <div>
        <h1>About the XML namespace</h1>
        <div class="bodytext">
          <p>This schema document describes the XML namespace, in a form
      suitable for import by other schema documents.</p>
          <p>
            See
            <a href="http://www.w3.org/XML/1998/namespace.html">http://www.w3.org/XML/1998/namespace.html</a>
            and
            <a href="http://www.w3.org/TR/REC-xml">http://www.w3.org/TR/REC-xml</a>
            for information 
      about this namespace.
          </p>
          <p>Note that local names in this namespace are intended to be
      defined only by the World Wide Web Consortium or its subgroups.
      The names currently defined in this namespace are listed below.
      They should not be used with conflicting semantics by any Working
      Group, specification, or document instance.</p>
          <p>
            See further below in this document for more information about
            <a href="#usage">how to refer to this schema document from your own
      XSD schema documents</a>
            and about
            <a href="#nsversioning">the
      namespace-versioning policy governing this schema document</a>
            .
          </p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>lang (as an attribute name)</h3>
          <p>denotes an attribute whose value
       is a language code for the natural language of the content of
       any element; its value is inherited.  This name is reserved
       by virtue of its definition in the XML specification.</p>
        </div>
        <div>
          <h4>Notes</h4>
          <p>Attempting to install the relevant ISO 2- and 3-letter
      codes as the enumerated possible values is probably never
      going to be a realistic possibility.</p>
          <p>
            See BCP 47 at
            <a href="http://www.rfc-editor.org/rfc/bcp/bcp47.txt">http://www.rfc-editor.org/rfc/bcp/bcp47.txt</a>
            and the IANA language subtag registry at
            <a href="http://www.iana.org/assignments/language-subtag-registry">http://www.iana.org/assignments/language-subtag-registry</a>
            for further information.
          </p>
          <p>The union allows for the 'un-declaration' of xml:lang with
      the empty string.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:union memberTypes="xs:language">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value=""/>
          </xs:restriction>
        </xs:simpleType>
      </xs:union>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="space" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>space (as an attribute name)</h3>
          <p>denotes an attribute whose
       value is a keyword indicating what whitespace processing
       discipline is intended for the content of the element; its
       value is inherited.  This name is reserved by virtue of its
       definition in the XML specification.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>base (as an attribute name)</h3>
          <p>denotes an attribute whose value
       provides a URI to be used as the base for interpreting any
       relative URIs in the scope of the element on which it
       appears; its value is inherited.  This name is reserved
       by virtue of its definition in the XML Base specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xmlbase/">http://www.w3.org/TR/xmlbase/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="id" type="xs:ID" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>id (as an attribute name)</h3>
          <p>denotes an attribute whose value
       should be interpreted as if declared to be of type ID.
       This name is reserved by virtue of its definition in the
       xml:id specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xml-id/">http://www.w3.org/TR/xml-id/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
    <xs:attribute ref="xml:id"/>
  </xs:attributeGroup>
  <xs:annotation xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:documentation>
      <div>
        <h3>Father (in any context at all)</h3>
        <div class="bodytext">
          <p>denotes Jon Bosak, the chair of 
      the original XML Working Group.  This name is reserved by 
      the following decision of the W3C XML Plenary and 
      XML Coordination groups:</p>
          <blockquote>
            <p>In appreciation for his vision, leadership and
	dedication the W3C XML Plenary on this 10th day of
	February, 2000, reserves for Jon Bosak in perpetuity
	the XML name "xml:Father".</p>
          </blockquote>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:documentation>
      <div xml:id="usage" id="usage">
        <h2>
          <a name="usage">About this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            This schema defines attributes and an attribute group suitable
      for use by schemas wishing to allow
            <code>xml:base</code>
            ,
            <code>xml:lang</code>
            ,
            <code>xml:space</code>
            or
            <code>xml:id</code>
            attributes on elements they define.
          </p>
          <p>To enable this, such a schema must import this schema for
      the XML namespace, e.g. as follows:</p>
          <pre>&lt;schema . . .>
           . . .
           &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2001/xml.xsd"/></pre>
          <p>or</p>
          <pre>&lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2009/01/xml.xsd"/></pre>
          <p>Subsequently, qualified reference to any of the attributes or the
      group defined below will have the desired effect, e.g.</p>
          <pre>&lt;type . . .>
           . . .
           &lt;attributeGroup ref="xml:specialAttrs"/></pre>
          <p>will define a type which will schema-validate an instance element
      with any of those attributes.</p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:documentation>
      <div id="nsversioning" xml:id="nsversioning">
        <h2>
          <a name="nsversioning">Versioning policy for this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            In keeping with the XML Schema WG's standard versioning
      policy, this schema document will persist at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            .
          </p>
          <p>
            At the date of issue it can also be found at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            .
          </p>
          <p>
            The schema document at that URI may however change in the future,
      in order to remain compatible with the latest version of XML
      Schema itself, or with the XML namespace itself.  In other words,
      if the XML Schema or XML namespaces change, the version of this
      document at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            will change accordingly; the version at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            will not change.
          </p>
          <p>Previous dated (and unchanging) versions of this schema 
      document are at:</p>
          <ul>
            <li>
              <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2007/08/xml.xsd">http://www.w3.org/2007/08/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2004/10/xml.xsd">http://www.w3.org/2004/10/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2001/03/xml.xsd">http://www.w3.org/2001/03/xml.xsd</a>
            </li>
          </ul>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jenny/keystone/keystone/content/admin/normalized/identity-admin-xsd-2.xsd</con:url><con:content><![CDATA[<!--Flattened from: file:/home/jenny/keystone/keystone/content/admin/../common/xsd/api-common.xsd-->
<xsd:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/common/api/v1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:rax="http://docs.rackspace.com/api" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:html="http://www.w3.org/1999/xhtml">
  <annotation xmlns="http://www.w3.org/2001/XMLSchema">
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Open Stack Common API Schema Types 1.0</xsdxt:title>
      <xsdxt:link rev="index" href="extensions.xsd"/>
      <xsdxt:link rev="index" href="limits.xsd"/>
      <xsdxt:link rev="index" href="version.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>This is the main index XML Schema document
                for Common API Schema Types Version 1.0.</p>
    </xsd:documentation>
  </annotation>
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <xs:annotation xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Version Types</xsdxt:title>
      <xsdxt:link rel="index" href="api-common.xsd"/>
    </xs:appinfo>
    <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>This schema file defines all types related to versioning.</p>
    </xs:documentation>
  </xs:annotation>
  <!--Import ATOM specific schema definitions-->
  <!--Multiple choices-->
  <!--Versioning-->
  <!--Types-->
  <xsd:element name="extensions" type="ext:Extensions" xmlns:ext="http://docs.openstack.org/common/api/v1.0"/>
  <xsd:element name="extension" type="ext:Extension" xmlns:ext="http://docs.openstack.org/common/api/v1.0"/>
  <xs:element name="choices" type="vers:VersionChoiceList" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>This element is returned when the version of the
                    resource cannot be determined. The element
                    provides a list of choices for the resource.</p>
      </xs:documentation>
      <xs:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/choices.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/choices.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <xs:element name="versions" type="vers:VersionChoiceList" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Provides a list of supported versions.</p>
      </xs:documentation>
      <xs:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/versions.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/versions.json"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/atom+xml" href="../samples/versions-atom.xml"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <xs:element name="version2" type="vers:VersionChoiceRoot" vc:minVersion="1.1" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>This element provides detailed meta information
                    regarding the status of the current API
                    version. The description should include a pointer
                    to both a human readable and a machine processable
                    description of the API service.</p>
      </xs:documentation>
      <xs:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/version.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/version.json"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/atom+xml" href="../samples/version-atom.xml"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <xsd:simpleType name="Alias" xmlns:ext="http://docs.openstack.org/common/api/v1.0">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="\w+\-\w+"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xs:simpleType name="VersionStatus" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation>
        <html:p>The VersionStatus type describes a service's operational status.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="ALPHA">
        <xs:annotation>
          <xs:documentation>
            <html:p>This is a new service the API. Thi API
                            contract may be set, but the implementaiton
                            may not be 100% complient with it. Developers
                            are encouraged to begin testing aganst an
                            ALPHA version to provide feedback.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BETA">
        <xs:annotation>
          <xs:documentation>
            <html:p>A status of BETA indicates that this
                            version is a candidate for the next major
                            release and may feature functionality not
                            available in the current
                            version. Developers are encouraged to test
                            and begin the migration processes to a
                            BETA version. Note that a BETA version is
                            undergoing testing, it has not been
                            officially released, and my not be stable.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CURRENT">
        <xs:annotation>
          <xs:documentation>
            <html:p>The API version is stable and has been
                            tested. Developers are encouraged to
                            develop against this API version. The
                            current released version of the API will
                            always be marked as CURRENT.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="DEPRECATED">
        <xs:annotation>
          <xs:documentation>
            <html:p>A status of DEPRECATED indicates that a
                            newer version of the API is
                            available. Application developers are
                            discouraged from using this version and
                            should instead develop against the latest
                            current version of the API.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xsd:complexType name="Extensions" xmlns:ext="http://docs.openstack.org/common/api/v1.0">
    <xsd:sequence>
      <xsd:element name="extension" type="ext:Extension" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
  </xsd:complexType>
  <xsd:complexType name="Extension" xmlns:ext="http://docs.openstack.org/common/api/v1.0">
    <xsd:sequence>
      <xsd:element name="description" type="xsd:string" minOccurs="1"/>
      <!--<xsd:element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded" />-->
      <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="name" type="xsd:string" use="required"/>
    <xsd:attribute name="namespace" type="xsd:anyURI" use="required"/>
    <xsd:attribute name="alias" type="ext:Alias" use="required"/>
    <xsd:attribute name="updated" type="xsd:dateTime" use="optional"/>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
    <!--TODO(Ziad)resolve asser issue
            <xsd:assert vc:minVersion="1.1" test="atom:link[@rel='describedby']">
            <xsd:annotation>
                <xsd:documentation
                    xml:lang="EN"
                    xmlns="http://www.w3.org/1999/xhtml">
                    <p>
                        There should be at least one atom link
                        with a describedby relation.
                    </p>
                </xsd:documentation>
            </xsd:annotation>
        </xsd:assert>-->
  </xsd:complexType>
  <xs:complexType name="VersionChoiceList" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation>
        <html:p>A version choice list outlines a collection of
                    resources at various versions.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="version" type="vers:VersionChoice" minOccurs="1" maxOccurs="unbounded"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
    <!--TODO(Ziad)resolve assert issue
            <xs:assert vc:minVersion="1.1" test="every $v in vers:version satisfies $v/atom:link[@rel='self']">
            <xs:annotation>
                <xs:documentation>
                    <html:p>
                        In version lists, every single version must
                        contain at least one self link.
                    </html:p>
                </xs:documentation>
            </xs:annotation>
        </xs:assert>-->
  </xs:complexType>
  <xs:complexType name="VersionChoiceRoot" vc:minVersion="1.1" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:complexContent>
      <xs:extension base="vers:VersionChoice">
        <!--TODO(Ziad)resolve asser issue
                    <xs:assert test="atom:link[@rel='describedby']">
                    <xs:annotation>
                        <xs:documentation>
                            <html:p>
                                When used as a root element, a version choice
                                must contain at least one describedby link.
                            </html:p>
                        </xs:documentation>
                    </xs:annotation>
                </xs:assert>-->
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="VersionChoice" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation>
        <html:p>A version choice contains relevant information
                    about an available service that a user can then
                    use to target a specific version of the service.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="media-types" type="vers:MediaTypeList" minOccurs="0" maxOccurs="1"/>
      <!--<xs:element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded" />-->
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>
          <html:p>The ID of a version choice represents the service version's unique 
                        identifier. This ID is guaranteed to be unique only among the
                        service version choices outlined in the VersionChoiceList.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="status" type="vers:VersionStatus" use="required">
      <xs:annotation>
        <xs:documentation>
          <html:p>A version choice's status describes the current operational state of
                        the given service version. The operational status is captured in a
                        simple type enumeration called VersionStatus.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="updated" type="xs:dateTime" use="optional">
      <xs:annotation>
        <xs:documentation>
          <html:p>
            A version choice's updated attribute describes
                        the time when the version was updated. The
                        time should be updated anytime
            <html:strong>anything</html:strong>
            in the
                        version has changed: documentation,
                        extensions, bug fixes.
          </html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:complexType name="MediaTypeList" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation>
        <html:p>A MediaTypeList outlines a collection of valid media types for a given 
                    service version.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="media-type" type="vers:MediaType" minOccurs="1" maxOccurs="unbounded"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:complexType name="MediaType" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation>
        <html:p>A MediaType describes what content types the service version understands.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="base" type="xs:string" use="optional" default="">
      <xs:annotation>
        <xs:documentation>
          <html:p>The base of a given media type describes the
                        simple MIME type that then a more complicated
                        media type can be derived from. These types
                        are basic and provide no namespace or version
                        specific data are are only provided as a
                        convenience.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="type" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>
          <html:p>The type attribute of a MediaType describes
                        the MIME specific identifier of the media type
                        in question.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>${#Project#Endpoint}</con:endpoint><con:endpoint>http://auth-n02.dev.us.ccp.rackspace.net</con:endpoint></con:endpoints><con:resource name="v2.0" path="${#Project#path}"><con:settings/><con:parameters/><con:resource name="extensions" path="extensions"><con:settings/><con:parameters/><con:resource name="{alias}" path="{alias}"><con:settings/><con:parameters><con:parameter><con:name>alias</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Get Extension Details" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/common/api/v1.0">v1:extension</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="List Extensions" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/common/api/v1.0">v1:extensions</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="tokens" path="tokens"><con:settings/><con:parameters/><con:resource name="{tokenId}" path="{tokenId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter required="true"><con:name>tokenId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>belongsTo</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="endpoints" path="endpoints"><con:settings/><con:parameters/><con:method name="List Endoints for a Token" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:endpoints</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Validate Token" method="GET"><con:settings/><con:parameters><con:parameter><con:name>belongsTo</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:access</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Check Token" method="HEAD"><con:settings/><con:parameters><con:parameter><con:name>belongsTo</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Authenticate for Service API" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:auth</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:access</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:userDisabled</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="users" path="users"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="{user_id}" path="{user_id}"><con:settings/><con:parameters><con:parameter required="true"><con:name>user_id</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="roles" path="roles"><con:settings/><con:parameters/><con:method name="List User Global Roles" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:roles</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get a User by ID" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get a User by Name" method="GET"><con:settings/><con:parameters><con:parameter required="true"><con:name>name</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="tenants" path="tenants"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="{tenantId}" path="{tenantId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>tenantId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="users" path="users"><con:settings/><con:parameters/><con:resource name="{user_id}" path="{user_id}"><con:settings/><con:parameters><con:parameter required="true"><con:name>user_id</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="roles" path="roles"><con:settings/><con:parameters/><con:method name="List Roles for User on Tenant" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:roles</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource><con:method name="Get Tenants by ID" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:tenant</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get Tenants" method="GET"><con:settings/><con:parameters><con:parameter><con:name>marker</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:tenants</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="Get tenants by name" method="GET"><con:settings/><con:parameters><con:parameter required="true"><con:name>name</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:tenant</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Version Details" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/common/api/v1.0">v1:version</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="OS-KSADM-admin" type="rest" basePath="" definitionUrl="/home/jenny/keystone/keystone/content/admin/normalized/OS-KSADM-admin.wadl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/home/jenny/keystone/keystone/content/admin/normalized/OS-KSADM-admin.wadl"><con:part><con:url>file:/home/jenny/keystone/keystone/content/admin/normalized/OS-KSADM-admin.wadl</con:url><con:content><![CDATA[<application xsi:schemaLocation="http://docs.openstack.org/identity/api/v2.0 ../common/xsd/api.xsd   http://docs.openstack.org/common/api/v1.0 ../common/xsd/api-common.xsd   http://wadl.dev.java.net/2009/02 http://www.w3.org/Submission/wadl/wadl.xsd   http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0 ../common/xsd/OS-KSADM.xsd   " xmlns="http://wadl.dev.java.net/2009/02" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:OS-KSADM="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0">
  <wadl:grammars xmlns:wadl="http://wadl.dev.java.net/2009/02">
    <!--Original xsd: file:/home/jenny/keystone/keystone/content/admin/../common/xsd/api.xsd-->
    <wadl:include href="OS-KSADM-admin-xsd-1.xsd"/>
    <!--Original xsd: file:/home/jenny/keystone/keystone/content/admin/../common/xsd/api-common.xsd-->
    <wadl:include href="OS-KSADM-admin-xsd-2.xsd"/>
    <!--Original xsd: file:/home/jenny/keystone/keystone/content/admin/../common/xsd/OS-KSADM.xsd-->
    <wadl:include href="OS-KSADM-admin-xsd-3.xsd"/>
  </wadl:grammars>
  <!--*******************************************************-->
  <!--All Resources-->
  <!--*******************************************************-->
  <!--We should use SSL in production-->
  <resources base="http://localhost:35357">
    <resource path="v2.0">
      <param name="X-Auth-Token" style="header" type="xsd:string" required="true" rax:id="" xmlns:rax="http://docs.rackspace.com/api">
        <doc>You need a valid admin token for access.</doc>
      </param>
      <resource path="users">
        <method name="GET" rax:id="listUsers" xmlns:rax="http://docs.rackspace.com/api">
          <doc xml:lang="EN" title="List users">
            <p xmlns="http://www.w3.org/1999/xhtml">List users.</p>
          </doc>
          <response status="200 203">
            <representation mediaType="application/xml" element="identity:userss">
              <doc xml:lang="EN">
                <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                  <title>List users Response: XML</title>
                  <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;users xmlns="http://docs.openstack.org/identity/api/v2.0">
    &lt;user xmlns="http://docs.openstack.org/identity/api/v2.0"
          enabled="true" email="john.smith@example.org"
          username="jqsmith" id="u1000"/>
    &lt;user xmlns="http://docs.openstack.org/identity/api/v2.0"
          enabled="true" email="john.smith@example.org"
          username="jqsmith" id="u1001"/>
&lt;/users></programlisting>
                </example>
              </doc>
            </representation>
            <representation mediaType="application/json">
              <doc xml:lang="EN">
                <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                  <title>List users Response: JSON</title>
                  <programlisting language="javascript">{
    "users":[{
            "id":"u1000",
            "username":"jqsmith",
            "email":"john.smith@example.org",
            "enabled":true
        },
        {
            "id":"u1001",
            "username":"jqsmith",
            "email":"john.smith@example.org",
            "enabled":true
        }
    ],
    "users_links":[]
}</programlisting>
                </example>
              </doc>
            </representation>
          </response>
          <response>
            <representation mediaType="application/xml" element="identity:identityFault"/>
            <representation mediaType="application/json"/>
          </response>
          <response status="400">
            <representation mediaType="application/xml" element="identity:badRequest"/>
            <representation mediaType="application/json"/>
          </response>
          <response status="401">
            <representation mediaType="application/xml" element="identity:unauthorized"/>
            <representation mediaType="application/json"/>
          </response>
          <response status="403">
            <representation mediaType="application/xml" element="identity:forbidden"/>
            <representation mediaType="application/json"/>
          </response>
          <response status="405">
            <representation mediaType="application/xml" element="identity:badMethod"/>
            <representation mediaType="application/json"/>
          </response>
          <response status="413">
            <representation mediaType="application/xml" element="identity:overLimit"/>
            <representation mediaType="application/json"/>
          </response>
          <response status="503">
            <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
            <representation mediaType="application/json"/>
          </response>
          <response status="404">
            <representation mediaType="application/xml" element="identity:itemNotFound"/>
            <representation mediaType="application/json"/>
          </response>
        </method>
        <method name="POST" rax:id="addUser" xmlns:rax="http://docs.rackspace.com/api">
          <doc xml:lang="EN" title="Add user">
            <p xmlns="http://www.w3.org/1999/xhtml">Adds a user.</p>
          </doc>
          <request>
            <representation mediaType="application/xml" element="identity:user">
              <doc xml:lang="EN">
                <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                  <title>Add user Request: XML</title>
                  <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;user xmlns="http://docs.openstack.org/identity/api/v2.0"
      enabled="true" email="john.smith@example.org"
      username="jqsmith"/></programlisting>
                </example>
              </doc>
            </representation>
            <representation mediaType="application/json">
              <doc xml:lang="EN">
                <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                  <title>Add user Request: JSON</title>
                  <programlisting language="javascript">{
  "user": {
    "username": "jqsmith",
    "email": "john.smith@example.org",
    "enabled": true
	}
}</programlisting>
                </example>
              </doc>
            </representation>
          </request>
          <response status="201">
            <representation mediaType="application/xml" element="identity:user">
              <doc xml:lang="EN">
                <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                  <title>Add user Response: XML</title>
                  <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;user xmlns="http://docs.openstack.org/identity/api/v2.0"
      enabled="true" email="john.smith@example.org"
      username="jqsmith" id="u1000"/></programlisting>
                </example>
              </doc>
            </representation>
            <representation mediaType="application/json">
              <doc xml:lang="EN">
                <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                  <title>Add user Response: JSON</title>
                  <programlisting language="javascript">{
  "user": {
    "id": "u1000",
    "username": "jqsmith",
    "email": "john.smith@example.org",
    "enabled": true
  }
}</programlisting>
                </example>
              </doc>
            </representation>
          </response>
          <response>
            <representation mediaType="application/xml" element="identity:identityFault"/>
            <representation mediaType="application/json"/>
          </response>
          <response status="400">
            <representation mediaType="application/xml" element="identity:badRequest"/>
            <representation mediaType="application/json"/>
          </response>
          <response status="401">
            <representation mediaType="application/xml" element="identity:unauthorized"/>
            <representation mediaType="application/json"/>
          </response>
          <response status="403">
            <representation mediaType="application/xml" element="identity:forbidden"/>
            <representation mediaType="application/json"/>
          </response>
          <response status="405">
            <representation mediaType="application/xml" element="identity:badMethod"/>
            <representation mediaType="application/json"/>
          </response>
          <response status="413">
            <representation mediaType="application/xml" element="identity:overLimit"/>
            <representation mediaType="application/json"/>
          </response>
          <response status="503">
            <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
            <representation mediaType="application/json"/>
          </response>
          <response status="404">
            <representation mediaType="application/xml" element="identity:itemNotFound"/>
            <representation mediaType="application/json"/>
          </response>
          <response status="415">
            <representation mediaType="application/xml" element="identity:badMediaType"/>
            <representation mediaType="application/json"/>
          </response>
        </method>
        <resource path="{userId}">
          <param name="userId" style="template" required="true" type="xsd:string" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
          <method name="POST" rax:id="updateUser" xmlns:rax="http://docs.rackspace.com/api">
            <doc xml:lang="EN" title="Update user">
              <p xmlns="http://www.w3.org/1999/xhtml">Update a user.</p>
            </doc>
            <request>
              <representation mediaType="application/xml" element="identity:user">
                <doc xml:lang="EN">
                  <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                    <title>Update user Request: XML</title>
                    <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;user xmlns="http://docs.openstack.org/identity/api/v2.0"
      enabled="true" email="john.smith@example.org"
      username="jqsmith" id="u1000"/></programlisting>
                  </example>
                </doc>
              </representation>
              <representation mediaType="application/json">
                <doc xml:lang="EN">
                  <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                    <title>Update user Request: JSON</title>
                    <programlisting language="javascript">{
  "user": {
    "id": "u1000",
    "username": "jqsmith",
    "email": "john.smith@example.org",
    "enabled": true
  }
}</programlisting>
                  </example>
                </doc>
              </representation>
            </request>
            <response status="200">
              <representation mediaType="application/xml" element="identity:user">
                <doc xml:lang="EN">
                  <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                    <title>Update user Response: XML</title>
                    <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;user xmlns="http://docs.openstack.org/identity/api/v2.0"
      enabled="true" email="john.smith@example.org"
      username="jqsmith" id="u1000"/></programlisting>
                  </example>
                </doc>
              </representation>
              <representation mediaType="application/json">
                <doc xml:lang="EN">
                  <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                    <title>Update user Response: JSON</title>
                    <programlisting language="javascript">{
  "user": {
    "id": "u1000",
    "username": "jqsmith",
    "email": "john.smith@example.org",
    "enabled": true
  }
}</programlisting>
                  </example>
                </doc>
              </representation>
            </response>
            <response>
              <representation mediaType="application/xml" element="identity:identityFault"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="400">
              <representation mediaType="application/xml" element="identity:badRequest"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="401">
              <representation mediaType="application/xml" element="identity:unauthorized"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="403">
              <representation mediaType="application/xml" element="identity:forbidden"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="405">
              <representation mediaType="application/xml" element="identity:badMethod"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="413">
              <representation mediaType="application/xml" element="identity:overLimit"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="503">
              <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="415">
              <representation mediaType="application/xml" element="identity:badMediaType"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="404">
              <representation mediaType="application/xml" element="identity:itemNotFound"/>
              <representation mediaType="application/json"/>
            </response>
          </method>
          <method name="DELETE" rax:id="deleteUser" xmlns:rax="http://docs.rackspace.com/api">
            <doc xml:lang="EN" title="Delete user">
              <p xmlns="http://www.w3.org/1999/xhtml">Delete a user.</p>
            </doc>
            <response status="204"/>
            <response>
              <representation mediaType="application/xml" element="identity:identityFault"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="400">
              <representation mediaType="application/xml" element="identity:badRequest"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="401">
              <representation mediaType="application/xml" element="identity:unauthorized"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="403">
              <representation mediaType="application/xml" element="identity:forbidden"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="405">
              <representation mediaType="application/xml" element="identity:badMethod"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="413">
              <representation mediaType="application/xml" element="identity:overLimit"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="503">
              <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="404">
              <representation mediaType="application/xml" element="identity:itemNotFound"/>
              <representation mediaType="application/json"/>
            </response>
          </method>
          <resource path="roles">
            <resource path="OS-KSADM">
              <resource path="{roleId}">
                <param name="roleId" style="template" type="xsd:string" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
                <method name="PUT" rax:id="addUserRole" xmlns:rax="http://docs.rackspace.com/api">
                  <doc xml:lang="EN" title="Add Global roles to a user.">
                    <p xmlns="http://www.w3.org/1999/xhtml">Adds a specific global role to a user.</p>
                  </doc>
                  <response status="201"/>
                  <response>
                    <representation mediaType="application/xml" element="identity:identityFault"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="400">
                    <representation mediaType="application/xml" element="identity:badRequest"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="401">
                    <representation mediaType="application/xml" element="identity:unauthorized"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="403">
                    <representation mediaType="application/xml" element="identity:forbidden"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="405">
                    <representation mediaType="application/xml" element="identity:badMethod"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="413">
                    <representation mediaType="application/xml" element="identity:overLimit"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="503">
                    <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="415">
                    <representation mediaType="application/xml" element="identity:badMediaType"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="404">
                    <representation mediaType="application/xml" element="identity:itemNotFound"/>
                    <representation mediaType="application/json"/>
                  </response>
                </method>
                <method name="DELETE" rax:id="deleteUserRole" xmlns:rax="http://docs.rackspace.com/api">
                  <doc xml:lang="EN" title="Delete Global Roles on User.">
                    <p xmlns="http://www.w3.org/1999/xhtml">Deletes a specific global role from a user.</p>
                  </doc>
                  <response status="204"/>
                  <response>
                    <representation mediaType="application/xml" element="identity:identityFault"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="400">
                    <representation mediaType="application/xml" element="identity:badRequest"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="401">
                    <representation mediaType="application/xml" element="identity:unauthorized"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="403">
                    <representation mediaType="application/xml" element="identity:forbidden"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="405">
                    <representation mediaType="application/xml" element="identity:badMethod"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="413">
                    <representation mediaType="application/xml" element="identity:overLimit"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="503">
                    <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="404">
                    <representation mediaType="application/xml" element="identity:itemNotFound"/>
                    <representation mediaType="application/json"/>
                  </response>
                </method>
              </resource>
            </resource>
          </resource>
          <resource path="OS-KSADM">
            <resource path="enabled">
              <method name="PUT" rax:id="setUserEnabled" xmlns:rax="http://docs.rackspace.com/api">
                <doc xml:lang="EN" title="Set user enabled.">
                  <p xmlns="http://www.w3.org/1999/xhtml">Enable user.</p>
                </doc>
                <request>
                  <representation mediaType="application/xml" element="identity:user">
                    <doc xml:lang="EN">
                      <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                        <title>Set user enabled. Request: XML</title>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;user xmlns="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xsi:type="UserWithOnlyEnabled" 
 enabled="true"/></programlisting>
                      </example>
                    </doc>
                    <param name="user" style="plain" path="/" type="OS-KSADM:UserWithOnlyEnabled" rax:id=""/>
                  </representation>
                  <representation mediaType="application/json">
                    <doc xml:lang="EN">
                      <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                        <title>Set user enabled. Request: JSON</title>
                        <programlisting language="javascript">{
  "user": {
    "enabled": true
	}
}</programlisting>
                      </example>
                    </doc>
                  </representation>
                </request>
                <response status="200">
                  <representation mediaType="application/xml" element="identity:user">
                    <doc xml:lang="EN">
                      <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                        <title>Set user enabled. Response: XML</title>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;user xmlns="http://docs.openstack.org/identity/api/v2.0"
      enabled="true" email="john.smith@example.org"
      username="jqsmith" id="u1000"/></programlisting>
                      </example>
                    </doc>
                  </representation>
                  <representation mediaType="application/json">
                    <doc xml:lang="EN">
                      <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                        <title>Set user enabled. Response: JSON</title>
                        <programlisting language="javascript">{
  "user": {
    "id": "u1000",
    "username": "jqsmith",
    "email": "john.smith@example.org",
    "enabled": true
  }
}</programlisting>
                      </example>
                    </doc>
                  </representation>
                </response>
                <response>
                  <representation mediaType="application/xml" element="identity:identityFault"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="400">
                  <representation mediaType="application/xml" element="identity:badRequest"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="401">
                  <representation mediaType="application/xml" element="identity:unauthorized"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="403">
                  <representation mediaType="application/xml" element="identity:forbidden"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="405">
                  <representation mediaType="application/xml" element="identity:badMethod"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="413">
                  <representation mediaType="application/xml" element="identity:overLimit"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="503">
                  <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="415">
                  <representation mediaType="application/xml" element="identity:badMediaType"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="404">
                  <representation mediaType="application/xml" element="identity:itemNotFound"/>
                  <representation mediaType="application/json"/>
                </response>
              </method>
            </resource>
            <resource path="credentials">
              <method name="POST" rax:id="addUserCredential" xmlns:rax="http://docs.rackspace.com/api">
                <doc xml:lang="EN" title="Add user Credential.">
                  <p xmlns="http://www.w3.org/1999/xhtml">Adds a credential to a user.</p>
                </doc>
                <request>
                  <representation mediaType="application/xml" element="identity:credential">
                    <doc xml:lang="EN">
                      <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                        <title>Add user Credential. Request: XML</title>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
 &lt;passwordCredentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://docs.openstack.org/identity/api/v2.0" username="test_user" password="test"/></programlisting>
                      </example>
                    </doc>
                  </representation>
                  <representation mediaType="application/json">
                    <doc xml:lang="EN">
                      <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                        <title>Add user Credential. Request: JSON</title>
                        <programlisting language="javascript">{
    "passwordCredentials": {
        "username": "test_user",
        "password": "mypass"
    }
}</programlisting>
                      </example>
                    </doc>
                  </representation>
                </request>
                <response status="201">
                  <representation mediaType="application/xml" element="identity:credential">
                    <doc xml:lang="EN">
                      <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                        <title>Add user Credential. Response: XML</title>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
 &lt;passwordCredentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://docs.openstack.org/identity/api/v2.0" username="test_user" password="test"/></programlisting>
                      </example>
                    </doc>
                  </representation>
                  <representation mediaType="application/json">
                    <doc xml:lang="EN">
                      <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                        <title>Add user Credential. Response: JSON</title>
                        <programlisting language="javascript">{
    "passwordCredentials": {
        "username": "test_user",
        "password": "mypass"
    }
}</programlisting>
                      </example>
                    </doc>
                  </representation>
                </response>
                <response>
                  <representation mediaType="application/xml" element="identity:identityFault"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="400">
                  <representation mediaType="application/xml" element="identity:badRequest"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="401">
                  <representation mediaType="application/xml" element="identity:unauthorized"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="403">
                  <representation mediaType="application/xml" element="identity:forbidden"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="405">
                  <representation mediaType="application/xml" element="identity:badMethod"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="413">
                  <representation mediaType="application/xml" element="identity:overLimit"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="503">
                  <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="415">
                  <representation mediaType="application/xml" element="identity:badMediaType"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="404">
                  <representation mediaType="application/xml" element="identity:itemNotFound"/>
                  <representation mediaType="application/json"/>
                </response>
              </method>
              <method name="GET" rax:id="listCredentials" xmlns:rax="http://docs.rackspace.com/api">
                <doc xml:lang="EN" title="List Credentials">
                  <p xmlns="http://www.w3.org/1999/xhtml">List credentials.</p>
                </doc>
                <request>
                  <param name="marker" style="query" required="false" type="xsd:string" rax:id=""/>
                  <param name="limit" style="query" required="false" type="xsd:int" rax:id=""/>
                </request>
                <response status="200 203">
                  <representation mediaType="application/xml" element="identity:credentials">
                    <doc xml:lang="EN">
                      <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                        <title>List Credentials Response: XML</title>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;credentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://docs.openstack.org/identity/api/v2.0">
    &lt;passwordCredentials username="test_user" password="test"/>
&lt;/credentials></programlisting>
                      </example>
                    </doc>
                  </representation>
                  <representation mediaType="application/json">
                    <doc xml:lang="EN">
                      <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                        <title>List Credentials Response: JSON</title>
                        <programlisting language="javascript">{
    "credentials":[{
            "passwordCredentials":{
                "username":"test_user",
                "password":"mypass"
            }
        }
    ],
    "credentials_links":[]
}</programlisting>
                      </example>
                    </doc>
                  </representation>
                </response>
                <response>
                  <representation mediaType="application/xml" element="identity:identityFault"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="400">
                  <representation mediaType="application/xml" element="identity:badRequest"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="401">
                  <representation mediaType="application/xml" element="identity:unauthorized"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="403">
                  <representation mediaType="application/xml" element="identity:forbidden"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="405">
                  <representation mediaType="application/xml" element="identity:badMethod"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="413">
                  <representation mediaType="application/xml" element="identity:overLimit"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="503">
                  <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="404">
                  <representation mediaType="application/xml" element="identity:itemNotFound"/>
                  <representation mediaType="application/json"/>
                </response>
              </method>
              <resource path="{credential-type}">
                <param name="credentialType" style="template" type="OS-KSADM:extensibleCredentialsType" required="true" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
                <method name="POST" rax:id="updateUserCredential" xmlns:rax="http://docs.rackspace.com/api">
                  <doc xml:lang="EN" title="Update user credential">
                    <p xmlns="http://www.w3.org/1999/xhtml">Update credentials.</p>
                  </doc>
                  <request>
                    <representation mediaType="application/xml" element="identity:credential">
                      <doc xml:lang="EN">
                        <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                          <title>Update user credential Request: XML</title>
                          <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
 &lt;passwordCredentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://docs.openstack.org/identity/api/v2.0" username="test_user" password="test"/></programlisting>
                        </example>
                      </doc>
                    </representation>
                    <representation mediaType="application/json">
                      <doc xml:lang="EN">
                        <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                          <title>Update user credential Request: JSON</title>
                          <programlisting language="javascript">{
    "passwordCredentials": {
        "username": "test_user",
        "password": "mypass"
    }
}</programlisting>
                        </example>
                      </doc>
                    </representation>
                  </request>
                  <response status="200">
                    <representation mediaType="application/xml" element="identity:credential">
                      <doc xml:lang="EN">
                        <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                          <title>Update user credential Response: XML</title>
                          <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
 &lt;passwordCredentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://docs.openstack.org/identity/api/v2.0" username="test_user" password="test"/></programlisting>
                        </example>
                      </doc>
                    </representation>
                    <representation mediaType="application/json">
                      <doc xml:lang="EN">
                        <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                          <title>Update user credential Response: JSON</title>
                          <programlisting language="javascript">{
    "passwordCredentials": {
        "username": "test_user",
        "password": "mypass"
    }
}</programlisting>
                        </example>
                      </doc>
                    </representation>
                  </response>
                  <response>
                    <representation mediaType="application/xml" element="identity:identityFault"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="400">
                    <representation mediaType="application/xml" element="identity:badRequest"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="401">
                    <representation mediaType="application/xml" element="identity:unauthorized"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="403">
                    <representation mediaType="application/xml" element="identity:forbidden"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="405">
                    <representation mediaType="application/xml" element="identity:badMethod"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="413">
                    <representation mediaType="application/xml" element="identity:overLimit"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="503">
                    <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="415">
                    <representation mediaType="application/xml" element="identity:badMediaType"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="404">
                    <representation mediaType="application/xml" element="identity:itemNotFound"/>
                    <representation mediaType="application/json"/>
                  </response>
                </method>
                <method name="DELETE" rax:id="deleteUserCredential" xmlns:rax="http://docs.rackspace.com/api">
                  <doc xml:lang="EN" title="Delete user credential">
                    <p xmlns="http://www.w3.org/1999/xhtml">Delete User credentials.</p>
                  </doc>
                  <response status="204"/>
                  <response>
                    <representation mediaType="application/xml" element="identity:identityFault"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="400">
                    <representation mediaType="application/xml" element="identity:badRequest"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="401">
                    <representation mediaType="application/xml" element="identity:unauthorized"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="403">
                    <representation mediaType="application/xml" element="identity:forbidden"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="405">
                    <representation mediaType="application/xml" element="identity:badMethod"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="413">
                    <representation mediaType="application/xml" element="identity:overLimit"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="503">
                    <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="415">
                    <representation mediaType="application/xml" element="identity:badMediaType"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="404">
                    <representation mediaType="application/xml" element="identity:itemNotFound"/>
                    <representation mediaType="application/json"/>
                  </response>
                </method>
                <method name="GET" rax:id="getUserCredential" xmlns:rax="http://docs.rackspace.com/api">
                  <doc xml:lang="EN" title="Get user Credentials">
                    <p xmlns="http://www.w3.org/1999/xhtml">Get user credentials.</p>
                  </doc>
                  <response status="200 203">
                    <representation mediaType="application/xml" element="identity:credential">
                      <doc xml:lang="EN">
                        <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                          <title>Get user Credentials Response: XML</title>
                          <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
 &lt;passwordCredentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://docs.openstack.org/identity/api/v2.0" username="test_user" password="test"/></programlisting>
                        </example>
                      </doc>
                    </representation>
                    <representation mediaType="application/json">
                      <doc xml:lang="EN">
                        <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                          <title>Get user Credentials Response: JSON</title>
                          <programlisting language="javascript">{
    "passwordCredentials": {
        "username": "test_user",
        "password": "mypass"
    }
}</programlisting>
                        </example>
                      </doc>
                    </representation>
                  </response>
                  <response>
                    <representation mediaType="application/xml" element="identity:identityFault"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="400">
                    <representation mediaType="application/xml" element="identity:badRequest"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="401">
                    <representation mediaType="application/xml" element="identity:unauthorized"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="403">
                    <representation mediaType="application/xml" element="identity:forbidden"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="405">
                    <representation mediaType="application/xml" element="identity:badMethod"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="413">
                    <representation mediaType="application/xml" element="identity:overLimit"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="503">
                    <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="404">
                    <representation mediaType="application/xml" element="identity:itemNotFound"/>
                    <representation mediaType="application/json"/>
                  </response>
                </method>
              </resource>
            </resource>
          </resource>
        </resource>
      </resource>
      <resource path="tenants">
        <method name="POST" rax:id="addTenant" xmlns:rax="http://docs.rackspace.com/api">
          <doc xml:lang="EN" title="Add Tenant">
            <p class="shortdesc" xmlns="http://www.w3.org/1999/xhtml">Creates a tenant.</p>
            <p xmlns="http://www.w3.org/1999/xhtml">This call creates a tenant.</p>
          </doc>
          <request>
            <representation mediaType="application/xml" element="identity:tenant">
              <doc xml:lang="EN">
                <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                  <title>Add Tenant Request: XML</title>
                  <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;tenant xmlns="http://docs.openstack.org/identity/api/v2.0"
        enabled="true" name="ACME Corp">
    &lt;description>A description...&lt;/description>
&lt;/tenant></programlisting>
                </example>
              </doc>
            </representation>
            <representation mediaType="application/json">
              <doc xml:lang="EN">
                <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                  <title>Add Tenant Request: JSON</title>
                  <programlisting language="javascript">{
  "tenant": {
    "name": "ACME corp",
    "description": "A description ...",
    "enabled": true
  }
}</programlisting>
                </example>
              </doc>
            </representation>
          </request>
          <response status="201">
            <representation mediaType="application/xml" element="identity:tenant">
              <doc xml:lang="EN">
                <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                  <title>Add Tenant Response: XML</title>
                  <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;tenant xmlns="http://docs.openstack.org/identity/api/v2.0"
        enabled="true" id="1234" name="ACME Corp">
    &lt;description>A description...&lt;/description>
&lt;/tenant></programlisting>
                </example>
              </doc>
            </representation>
            <representation mediaType="application/json">
              <doc xml:lang="EN">
                <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                  <title>Add Tenant Response: JSON</title>
                  <programlisting language="javascript">{
  "tenant": {
    "id": "1234",
    "name": "ACME corp",
    "description": "A description ...",
    "enabled": true
  }
}</programlisting>
                </example>
              </doc>
            </representation>
          </response>
          <response>
            <representation mediaType="application/xml" element="identity:identityFault"/>
            <representation mediaType="application/json"/>
          </response>
          <response status="400">
            <representation mediaType="application/xml" element="identity:badRequest"/>
            <representation mediaType="application/json"/>
          </response>
          <response status="401">
            <representation mediaType="application/xml" element="identity:unauthorized"/>
            <representation mediaType="application/json"/>
          </response>
          <response status="403">
            <representation mediaType="application/xml" element="identity:forbidden"/>
            <representation mediaType="application/json"/>
          </response>
          <response status="405">
            <representation mediaType="application/xml" element="identity:badMethod"/>
            <representation mediaType="application/json"/>
          </response>
          <response status="413">
            <representation mediaType="application/xml" element="identity:overLimit"/>
            <representation mediaType="application/json"/>
          </response>
          <response status="503">
            <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
            <representation mediaType="application/json"/>
          </response>
          <response status="415">
            <representation mediaType="application/xml" element="identity:badMediaType"/>
            <representation mediaType="application/json"/>
          </response>
        </method>
        <resource path="{tenantId}">
          <param name="tenantId" style="template" type="xsd:string" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
          <method name="POST" rax:id="updateTenant" xmlns:rax="http://docs.rackspace.com/api">
            <doc xml:lang="EN" title="Update Tenant">
              <p class="shortdesc" xmlns="http://www.w3.org/1999/xhtml">Updates a tenant.</p>
              <p xmlns="http://www.w3.org/1999/xhtml">This call updates a tenant.</p>
            </doc>
            <request>
              <representation mediaType="application/xml" element="identity:tenant">
                <doc xml:lang="EN">
                  <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                    <title>Update Tenant Request: XML</title>
                    <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;tenant xmlns="http://docs.openstack.org/identity/api/v2.0"
        enabled="true" id="1234" name="ACME Corp">
    &lt;description>A description...&lt;/description>
&lt;/tenant></programlisting>
                  </example>
                </doc>
              </representation>
              <representation mediaType="application/json">
                <doc xml:lang="EN">
                  <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                    <title>Update Tenant Request: JSON</title>
                    <programlisting language="javascript">{
  "tenant": {
    "id": "1234",
    "name": "ACME corp",
    "description": "A description ...",
    "enabled": true
  }
}</programlisting>
                  </example>
                </doc>
              </representation>
            </request>
            <response status="200">
              <representation mediaType="application/xml" element="identity:tenant">
                <doc xml:lang="EN">
                  <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                    <title>Update Tenant Response: XML</title>
                    <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;tenant xmlns="http://docs.openstack.org/identity/api/v2.0"
        enabled="true" id="1234" name="ACME Corp">
    &lt;description>A description...&lt;/description>
&lt;/tenant></programlisting>
                  </example>
                </doc>
              </representation>
              <representation mediaType="application/json">
                <doc xml:lang="EN">
                  <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                    <title>Update Tenant Response: JSON</title>
                    <programlisting language="javascript">{
  "tenant": {
    "id": "1234",
    "name": "ACME corp",
    "description": "A description ...",
    "enabled": true
  }
}</programlisting>
                  </example>
                </doc>
              </representation>
            </response>
            <response>
              <representation mediaType="application/xml" element="identity:identityFault"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="400">
              <representation mediaType="application/xml" element="identity:badRequest"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="401">
              <representation mediaType="application/xml" element="identity:unauthorized"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="403">
              <representation mediaType="application/xml" element="identity:forbidden"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="405">
              <representation mediaType="application/xml" element="identity:badMethod"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="413">
              <representation mediaType="application/xml" element="identity:overLimit"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="503">
              <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="404">
              <representation mediaType="application/xml" element="identity:itemNotFound"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="415">
              <representation mediaType="application/xml" element="identity:badMediaType"/>
              <representation mediaType="application/json"/>
            </response>
          </method>
          <method name="DELETE" rax:id="deleteTenant" xmlns:rax="http://docs.rackspace.com/api">
            <doc xml:lang="EN" title="Delete a Tenant">
              <p class="shortdesc" xmlns="http://www.w3.org/1999/xhtml">Deletes a tenant.</p>
              <p xmlns="http://www.w3.org/1999/xhtml">This call deletes a tenant.</p>
            </doc>
            <response status="204"/>
            <response>
              <representation mediaType="application/xml" element="identity:identityFault"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="400">
              <representation mediaType="application/xml" element="identity:badRequest"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="401">
              <representation mediaType="application/xml" element="identity:unauthorized"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="403">
              <representation mediaType="application/xml" element="identity:forbidden"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="405">
              <representation mediaType="application/xml" element="identity:badMethod"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="413">
              <representation mediaType="application/xml" element="identity:overLimit"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="503">
              <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="404">
              <representation mediaType="application/xml" element="identity:itemNotFound"/>
              <representation mediaType="application/json"/>
            </response>
          </method>
          <resource path="users">
            <method name="GET" rax:id="listUsersForTenant" xmlns:rax="http://docs.rackspace.com/api">
              <doc xml:lang="EN" title="List users for a Tenant.">
                <p class="shortdesc" xmlns="http://www.w3.org/1999/xhtml">Lists all the users for a tenant.</p>
                <p xmlns="http://www.w3.org/1999/xhtml">Lists all the users for a tenant.</p>
              </doc>
              <request>
                <param name="marker" style="query" required="false" type="xsd:string" rax:id=""/>
                <param name="limit" style="query" required="false" type="xsd:int" rax:id=""/>
              </request>
              <response status="200 203">
                <representation mediaType="application/xml" element="identity:users">
                  <doc xml:lang="EN">
                    <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                      <title>List users for a Tenant. Response: XML</title>
                      <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;users xmlns="http://docs.openstack.org/identity/api/v2.0">
    &lt;user xmlns="http://docs.openstack.org/identity/api/v2.0"
          enabled="true" email="john.smith@example.org"
          username="jqsmith" id="u1000"/>
    &lt;user xmlns="http://docs.openstack.org/identity/api/v2.0"
          enabled="true" email="john.smith@example.org"
          username="jqsmith" id="u1001"/>
&lt;/users></programlisting>
                    </example>
                  </doc>
                </representation>
                <representation mediaType="application/json">
                  <doc xml:lang="EN">
                    <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                      <title>List users for a Tenant. Response: JSON</title>
                      <programlisting language="javascript">{
    "users":[{
            "id":"u1000",
            "username":"jqsmith",
            "email":"john.smith@example.org",
            "enabled":true
        },
        {
            "id":"u1001",
            "username":"jqsmith",
            "email":"john.smith@example.org",
            "enabled":true
        }
    ],
    "users_links":[]
}</programlisting>
                    </example>
                  </doc>
                </representation>
              </response>
              <response>
                <representation mediaType="application/xml" element="identity:identityFault"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="400">
                <representation mediaType="application/xml" element="identity:badRequest"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="401">
                <representation mediaType="application/xml" element="identity:unauthorized"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="403">
                <representation mediaType="application/xml" element="identity:forbidden"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="405">
                <representation mediaType="application/xml" element="identity:badMethod"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="413">
                <representation mediaType="application/xml" element="identity:overLimit"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="503">
                <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="404">
                <representation mediaType="application/xml" element="identity:itemNotFound"/>
                <representation mediaType="application/json"/>
              </response>
            </method>
            <resource path="{userId}">
              <param name="userId" style="template" type="xsd:string" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
              <resource path="roles">
                <resource path="OS-KSADM">
                  <resource path="{roleId}">
                    <param name="roleId" style="template" type="xsd:string" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
                    <method name="PUT" rax:id="addRolesToUserOnTenant" xmlns:rax="http://docs.rackspace.com/api">
                      <doc xml:lang="EN" title="Add roles to a user on a tenant.">
                        <p xmlns="http://www.w3.org/1999/xhtml">Adds a specific role to a user for a tenant.</p>
                      </doc>
                      <response status="201"/>
                      <response>
                        <representation mediaType="application/xml" element="identity:identityFault"/>
                        <representation mediaType="application/json"/>
                      </response>
                      <response status="400">
                        <representation mediaType="application/xml" element="identity:badRequest"/>
                        <representation mediaType="application/json"/>
                      </response>
                      <response status="401">
                        <representation mediaType="application/xml" element="identity:unauthorized"/>
                        <representation mediaType="application/json"/>
                      </response>
                      <response status="403">
                        <representation mediaType="application/xml" element="identity:forbidden"/>
                        <representation mediaType="application/json"/>
                      </response>
                      <response status="405">
                        <representation mediaType="application/xml" element="identity:badMethod"/>
                        <representation mediaType="application/json"/>
                      </response>
                      <response status="413">
                        <representation mediaType="application/xml" element="identity:overLimit"/>
                        <representation mediaType="application/json"/>
                      </response>
                      <response status="503">
                        <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
                        <representation mediaType="application/json"/>
                      </response>
                      <response status="415">
                        <representation mediaType="application/xml" element="identity:badMediaType"/>
                        <representation mediaType="application/json"/>
                      </response>
                      <response status="404">
                        <representation mediaType="application/xml" element="identity:itemNotFound"/>
                        <representation mediaType="application/json"/>
                      </response>
                    </method>
                    <method name="DELETE" rax:id="deleteRoleFromUserOnTenant" xmlns:rax="http://docs.rackspace.com/api">
                      <doc xml:lang="EN" title="Delete roles from a user on tenant.">
                        <p xmlns="http://www.w3.org/1999/xhtml">Deletes a specific role from a user for a tenant.</p>
                      </doc>
                      <response status="204"/>
                      <response>
                        <representation mediaType="application/xml" element="identity:identityFault"/>
                        <representation mediaType="application/json"/>
                      </response>
                      <response status="400">
                        <representation mediaType="application/xml" element="identity:badRequest"/>
                        <representation mediaType="application/json"/>
                      </response>
                      <response status="401">
                        <representation mediaType="application/xml" element="identity:unauthorized"/>
                        <representation mediaType="application/json"/>
                      </response>
                      <response status="403">
                        <representation mediaType="application/xml" element="identity:forbidden"/>
                        <representation mediaType="application/json"/>
                      </response>
                      <response status="405">
                        <representation mediaType="application/xml" element="identity:badMethod"/>
                        <representation mediaType="application/json"/>
                      </response>
                      <response status="413">
                        <representation mediaType="application/xml" element="identity:overLimit"/>
                        <representation mediaType="application/json"/>
                      </response>
                      <response status="503">
                        <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
                        <representation mediaType="application/json"/>
                      </response>
                      <response status="404">
                        <representation mediaType="application/xml" element="identity:itemNotFound"/>
                        <representation mediaType="application/json"/>
                      </response>
                    </method>
                  </resource>
                </resource>
              </resource>
            </resource>
          </resource>
        </resource>
      </resource>
      <resource path="OS-KSADM">
        <resource path="roles">
          <method name="GET" rax:id="getRoleByName" xmlns:rax="http://docs.rackspace.com/api">
            <doc xml:lang="EN" title="Get Role By Name">
              <p xmlns="http://www.w3.org/1999/xhtml">Get a role by Name.</p>
            </doc>
            <request>
              <param name="name" style="query" type="xsd:string" required="true" rax:id=""/>
            </request>
            <response status="200 203">
              <representation mediaType="application/xml" element="identity:role">
                <doc xml:lang="EN">
                  <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                    <title>Get Role By Name Response: XML</title>
                    <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>

&lt;role xmlns="http://docs.openstack.org/identity/api/v2.0"
  id="123" name="Admin" description="All Access" /></programlisting>
                  </example>
                </doc>
                <param name="Location" type="xsd:anyURI" style="header" rax:id=""/>
              </representation>
              <representation mediaType="application/json">
                <doc xml:lang="EN">
                  <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                    <title>Get Role By Name Response: JSON</title>
                    <programlisting language="javascript">{
  "role": {
    "id": "123",
    "name": "Guest",
    "description": "Guest Access"
  }
}</programlisting>
                  </example>
                </doc>
                <param name="Location" type="xsd:anyURI" style="header" rax:id=""/>
              </representation>
            </response>
            <response>
              <representation mediaType="application/xml" element="identity:identityFault"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="400">
              <representation mediaType="application/xml" element="identity:badRequest"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="401">
              <representation mediaType="application/xml" element="identity:unauthorized"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="403">
              <representation mediaType="application/xml" element="identity:forbidden"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="405">
              <representation mediaType="application/xml" element="identity:badMethod"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="413">
              <representation mediaType="application/xml" element="identity:overLimit"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="503">
              <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="415">
              <representation mediaType="application/xml" element="identity:badMediaType"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="404">
              <representation mediaType="application/xml" element="identity:itemNotFound"/>
              <representation mediaType="application/json"/>
            </response>
          </method>
          <method name="GET" rax:id="listRoles" xmlns:rax="http://docs.rackspace.com/api">
            <doc xml:lang="EN" title="List Roles">
              <p xmlns="http://www.w3.org/1999/xhtml">List roles.</p>
            </doc>
            <request>
              <param name="serviceId" style="query" required="false" type="xsd:string" rax:id=""/>
              <param name="marker" style="query" required="false" type="xsd:string" rax:id=""/>
              <param name="limit" style="query" required="false" type="xsd:int" rax:id=""/>
            </request>
            <response status="200 203">
              <representation mediaType="application/xml" element="identity:roles">
                <doc xml:lang="EN">
                  <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                    <title>List Roles Response: XML</title>
                    <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>

&lt;roles xmlns="http://docs.openstack.org/identity/api/v2.0">
  &lt;role id="123" name="Admin" description="All Access" />
  &lt;role id="234" name="Guest" description="Guest Access" />
&lt;/roles></programlisting>
                  </example>
                </doc>
              </representation>
              <representation mediaType="application/json">
                <doc xml:lang="EN">
                  <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                    <title>List Roles Response: JSON</title>
                    <programlisting language="javascript">{
    "roles":[{
            "id":"123",
            "name":"compute:admin",
            "description":"Nova Administrator",
        }
    ],
    "roles_links":[]
}</programlisting>
                  </example>
                </doc>
              </representation>
            </response>
            <response>
              <representation mediaType="application/xml" element="identity:identityFault"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="400">
              <representation mediaType="application/xml" element="identity:badRequest"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="401">
              <representation mediaType="application/xml" element="identity:unauthorized"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="403">
              <representation mediaType="application/xml" element="identity:forbidden"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="405">
              <representation mediaType="application/xml" element="identity:badMethod"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="413">
              <representation mediaType="application/xml" element="identity:overLimit"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="503">
              <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="404">
              <representation mediaType="application/xml" element="identity:itemNotFound"/>
              <representation mediaType="application/json"/>
            </response>
          </method>
          <method name="POST" rax:id="addRole" xmlns:rax="http://docs.rackspace.com/api">
            <doc xml:lang="EN" title="Add Role">
              <p xmlns="http://www.w3.org/1999/xhtml">Add a Role.</p>
            </doc>
            <request>
              <representation mediaType="application/xml" element="identity:role">
                <doc xml:lang="EN">
                  <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                    <title>Add Role Request: XML</title>
                    <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>

&lt;role xmlns="http://docs.openstack.org/identity/api/v2.0"
  id="123" name="Admin" description="All Access" /></programlisting>
                  </example>
                </doc>
              </representation>
              <representation mediaType="application/json">
                <doc xml:lang="EN">
                  <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                    <title>Add Role Request: JSON</title>
                    <programlisting language="javascript">{
  "role": {
    "id": "123",
    "name": "Guest",
    "description": "Guest Access"
  }
}</programlisting>
                  </example>
                </doc>
              </representation>
            </request>
            <response status="201">
              <representation mediaType="application/xml" element="identity:role">
                <doc xml:lang="EN">
                  <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                    <title>Add Role Response: XML</title>
                    <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>

&lt;role xmlns="http://docs.openstack.org/identity/api/v2.0"
  id="123" name="Admin" description="All Access" /></programlisting>
                  </example>
                </doc>
                <param name="Location" type="xsd:anyURI" style="header" rax:id=""/>
              </representation>
              <representation mediaType="application/json">
                <doc xml:lang="EN">
                  <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                    <title>Add Role Response: JSON</title>
                    <programlisting language="javascript">{
  "role": {
    "id": "123",
    "name": "Guest",
    "description": "Guest Access"
  }
}</programlisting>
                  </example>
                </doc>
                <param name="Location" type="xsd:anyURI" style="header" rax:id=""/>
              </representation>
            </response>
            <response>
              <representation mediaType="application/xml" element="identity:identityFault"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="400">
              <representation mediaType="application/xml" element="identity:badRequest"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="401">
              <representation mediaType="application/xml" element="identity:unauthorized"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="403">
              <representation mediaType="application/xml" element="identity:forbidden"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="405">
              <representation mediaType="application/xml" element="identity:badMethod"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="413">
              <representation mediaType="application/xml" element="identity:overLimit"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="503">
              <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="415">
              <representation mediaType="application/xml" element="identity:badMediaType"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="404">
              <representation mediaType="application/xml" element="identity:itemNotFound"/>
              <representation mediaType="application/json"/>
            </response>
          </method>
          <resource path="{roleId}">
            <param name="roleId" style="template" type="xsd:string" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
            <method name="GET" rax:id="getRole" xmlns:rax="http://docs.rackspace.com/api">
              <doc xml:lang="EN" title="Get Role">
                <p xmlns="http://www.w3.org/1999/xhtml">Get a role.</p>
              </doc>
              <response status="200 203">
                <representation mediaType="application/xml" element="identity:role">
                  <doc xml:lang="EN">
                    <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                      <title>Get Role Response: XML</title>
                      <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>

&lt;role xmlns="http://docs.openstack.org/identity/api/v2.0"
  id="123" name="Admin" description="All Access" /></programlisting>
                    </example>
                  </doc>
                  <param name="Location" type="xsd:anyURI" style="header" rax:id=""/>
                </representation>
                <representation mediaType="application/json">
                  <doc xml:lang="EN">
                    <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                      <title>Get Role Response: JSON</title>
                      <programlisting language="javascript">{
  "role": {
    "id": "123",
    "name": "Guest",
    "description": "Guest Access"
  }
}</programlisting>
                    </example>
                  </doc>
                  <param name="Location" type="xsd:anyURI" style="header" rax:id=""/>
                </representation>
              </response>
              <response>
                <representation mediaType="application/xml" element="identity:identityFault"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="400">
                <representation mediaType="application/xml" element="identity:badRequest"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="401">
                <representation mediaType="application/xml" element="identity:unauthorized"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="403">
                <representation mediaType="application/xml" element="identity:forbidden"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="405">
                <representation mediaType="application/xml" element="identity:badMethod"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="413">
                <representation mediaType="application/xml" element="identity:overLimit"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="503">
                <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="415">
                <representation mediaType="application/xml" element="identity:badMediaType"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="404">
                <representation mediaType="application/xml" element="identity:itemNotFound"/>
                <representation mediaType="application/json"/>
              </response>
            </method>
            <method name="DELETE" rax:id="deleteRole" xmlns:rax="http://docs.rackspace.com/api">
              <doc xml:lang="EN" title="Delete Role">
                <p xmlns="http://www.w3.org/1999/xhtml">Delete a role.</p>
              </doc>
              <response status="204"/>
              <response>
                <representation mediaType="application/xml" element="identity:identityFault"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="400">
                <representation mediaType="application/xml" element="identity:badRequest"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="401">
                <representation mediaType="application/xml" element="identity:unauthorized"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="403">
                <representation mediaType="application/xml" element="identity:forbidden"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="405">
                <representation mediaType="application/xml" element="identity:badMethod"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="413">
                <representation mediaType="application/xml" element="identity:overLimit"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="503">
                <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="404">
                <representation mediaType="application/xml" element="identity:itemNotFound"/>
                <representation mediaType="application/json"/>
              </response>
            </method>
          </resource>
        </resource>
        <resource path="services">
          <method name="GET" rax:id="listServices" xmlns:rax="http://docs.rackspace.com/api">
            <doc xml:lang="EN" title="List Services">
              <p xmlns="http://www.w3.org/1999/xhtml">List services.</p>
            </doc>
            <request>
              <param name="marker" style="query" required="false" type="xsd:string" rax:id=""/>
              <param name="limit" style="query" required="false" type="xsd:int" rax:id=""/>
            </request>
            <response status="200 203">
              <representation mediaType="application/xml" element="OS-KSADM:services">
                <doc xml:lang="EN">
                  <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                    <title>List Services Response: XML</title>
                    <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>

&lt;services xmlns="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0">
  &lt;service id="123" name="nova" type="compute" description="Openstack Compute Service" />
  &lt;service id="234" name="glance" type="image" description="Openstack Image Service" />
&lt;/services></programlisting>
                  </example>
                </doc>
              </representation>
              <representation mediaType="application/json">
                <doc xml:lang="EN">
                  <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                    <title>List Services Response: JSON</title>
                    <programlisting language="javascript">{
    "OS-KSADM:services":[{
            "id":"123",
            "name":"nova",
            "type":"compute",
            "description":"OpenStack Compute Service"
        },
        {
            "id":"234",
            "name":"glance",
            "type":"image",
            "description":"OpenStack Image Service"
        }
    ],
    "OS-KSADM:services_links":[]
}</programlisting>
                  </example>
                </doc>
              </representation>
            </response>
            <response>
              <representation mediaType="application/xml" element="identity:identityFault"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="400">
              <representation mediaType="application/xml" element="identity:badRequest"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="401">
              <representation mediaType="application/xml" element="identity:unauthorized"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="403">
              <representation mediaType="application/xml" element="identity:forbidden"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="405">
              <representation mediaType="application/xml" element="identity:badMethod"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="413">
              <representation mediaType="application/xml" element="identity:overLimit"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="503">
              <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="404">
              <representation mediaType="application/xml" element="identity:itemNotFound"/>
              <representation mediaType="application/json"/>
            </response>
          </method>
          <method name="POST" rax:id="addService" xmlns:rax="http://docs.rackspace.com/api">
            <doc xml:lang="EN" title="Add Service">
              <p xmlns="http://www.w3.org/1999/xhtml">Add a service.</p>
            </doc>
            <request>
              <representation mediaType="application/xml" element="OS-KSADM:service">
                <doc xml:lang="EN">
                  <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                    <title>Add Service Request: XML</title>
                    <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>

&lt;service xmlns="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0"
	id="123" name="nova" type="compute" description="OpenStack Compute Service" /></programlisting>
                  </example>
                </doc>
              </representation>
              <representation mediaType="application/json">
                <doc xml:lang="EN">
                  <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                    <title>Add Service Request: JSON</title>
                    <programlisting language="javascript">{
    "OS-KSADM:service":{
        "id":"123",
        "name":"nova",
        "type":"compute",
        "description":"OpenStack Compute Service"
    }
}</programlisting>
                  </example>
                </doc>
              </representation>
            </request>
            <response status="201">
              <representation mediaType="application/xml" element="OS-KSADM:service">
                <doc xml:lang="EN">
                  <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                    <title>Add Service Response: XML</title>
                    <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>

&lt;service xmlns="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0"
	id="123" name="nova" type="compute" description="OpenStack Compute Service" /></programlisting>
                  </example>
                </doc>
                <param name="Location" type="xsd:anyURI" style="header" rax:id=""/>
              </representation>
              <representation mediaType="application/json">
                <doc xml:lang="EN">
                  <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                    <title>Add Service Response: JSON</title>
                    <programlisting language="javascript">{
    "OS-KSADM:service":{
        "id":"123",
        "name":"nova",
        "type":"compute",
        "description":"OpenStack Compute Service"
    }
}</programlisting>
                  </example>
                </doc>
                <param name="Location" type="xsd:anyURI" style="header" rax:id=""/>
              </representation>
            </response>
            <response>
              <representation mediaType="application/xml" element="identity:identityFault"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="400">
              <representation mediaType="application/xml" element="identity:badRequest"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="401">
              <representation mediaType="application/xml" element="identity:unauthorized"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="403">
              <representation mediaType="application/xml" element="identity:forbidden"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="405">
              <representation mediaType="application/xml" element="identity:badMethod"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="413">
              <representation mediaType="application/xml" element="identity:overLimit"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="503">
              <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="415">
              <representation mediaType="application/xml" element="identity:badMediaType"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="404">
              <representation mediaType="application/xml" element="identity:itemNotFound"/>
              <representation mediaType="application/json"/>
            </response>
          </method>
          <method name="GET" rax:id="getServiceByName" xmlns:rax="http://docs.rackspace.com/api">
            <doc xml:lang="EN" title="Get Service">
              <p xmlns="http://www.w3.org/1999/xhtml">Get a service by name.</p>
            </doc>
            <request>
              <param name="name" style="query" type="xsd:string" required="true" rax:id=""/>
            </request>
            <response status="200 203">
              <representation mediaType="application/xml" element="OS-KSADM:service">
                <doc xml:lang="EN">
                  <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                    <title>Get Service Response: XML</title>
                    <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>

&lt;service xmlns="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0"
	id="123" name="nova" type="compute" description="OpenStack Compute Service" /></programlisting>
                  </example>
                </doc>
              </representation>
              <representation mediaType="application/json">
                <doc xml:lang="EN">
                  <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                    <title>Get Service Response: JSON</title>
                    <programlisting language="javascript">{
    "OS-KSADM:service":{
        "id":"123",
        "name":"nova",
        "type":"compute",
        "description":"OpenStack Compute Service"
    }
}</programlisting>
                  </example>
                </doc>
              </representation>
            </response>
            <response>
              <representation mediaType="application/xml" element="identity:identityFault"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="400">
              <representation mediaType="application/xml" element="identity:badRequest"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="401">
              <representation mediaType="application/xml" element="identity:unauthorized"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="403">
              <representation mediaType="application/xml" element="identity:forbidden"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="405">
              <representation mediaType="application/xml" element="identity:badMethod"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="413">
              <representation mediaType="application/xml" element="identity:overLimit"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="503">
              <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="404">
              <representation mediaType="application/xml" element="identity:itemNotFound"/>
              <representation mediaType="application/json"/>
            </response>
          </method>
          <resource path="{serviceId}">
            <param name="serviceId" style="template" type="xsd:int" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
            <method name="GET" rax:id="getService" xmlns:rax="http://docs.rackspace.com/api">
              <doc xml:lang="EN" title="Get Service">
                <p xmlns="http://www.w3.org/1999/xhtml">Get a service.</p>
              </doc>
              <response status="200 203">
                <representation mediaType="application/xml" element="OS-KSADM:service">
                  <doc xml:lang="EN">
                    <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                      <title>Get Service Response: XML</title>
                      <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>

&lt;service xmlns="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0"
	id="123" name="nova" type="compute" description="OpenStack Compute Service" /></programlisting>
                    </example>
                  </doc>
                </representation>
                <representation mediaType="application/json">
                  <doc xml:lang="EN">
                    <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                      <title>Get Service Response: JSON</title>
                      <programlisting language="javascript">{
    "OS-KSADM:service":{
        "id":"123",
        "name":"nova",
        "type":"compute",
        "description":"OpenStack Compute Service"
    }
}</programlisting>
                    </example>
                  </doc>
                </representation>
              </response>
              <response>
                <representation mediaType="application/xml" element="identity:identityFault"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="400">
                <representation mediaType="application/xml" element="identity:badRequest"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="401">
                <representation mediaType="application/xml" element="identity:unauthorized"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="403">
                <representation mediaType="application/xml" element="identity:forbidden"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="405">
                <representation mediaType="application/xml" element="identity:badMethod"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="413">
                <representation mediaType="application/xml" element="identity:overLimit"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="503">
                <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="404">
                <representation mediaType="application/xml" element="identity:itemNotFound"/>
                <representation mediaType="application/json"/>
              </response>
            </method>
            <method name="DELETE" rax:id="deleteService" xmlns:rax="http://docs.rackspace.com/api">
              <doc xml:lang="EN" title="Delete Service">
                <p xmlns="http://www.w3.org/1999/xhtml">Delete a service.</p>
              </doc>
              <response status="204"/>
              <response>
                <representation mediaType="application/xml" element="identity:identityFault"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="400">
                <representation mediaType="application/xml" element="identity:badRequest"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="401">
                <representation mediaType="application/xml" element="identity:unauthorized"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="403">
                <representation mediaType="application/xml" element="identity:forbidden"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="405">
                <representation mediaType="application/xml" element="identity:badMethod"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="413">
                <representation mediaType="application/xml" element="identity:overLimit"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="503">
                <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="404">
                <representation mediaType="application/xml" element="identity:itemNotFound"/>
                <representation mediaType="application/json"/>
              </response>
            </method>
          </resource>
        </resource>
      </resource>
    </resource>
  </resources>
  <!--*******************************************************-->
  <!--All Methods-->
  <!--*******************************************************-->
  <!--Tenant Operations-->
  <method name="POST" id="addTenant">
    <doc xml:lang="EN" title="Add Tenant">
      <p class="shortdesc" xmlns="http://www.w3.org/1999/xhtml">Creates a tenant.</p>
      <p xmlns="http://www.w3.org/1999/xhtml">This call creates a tenant.</p>
    </doc>
    <request>
      <representation mediaType="application/xml" element="identity:tenant">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Add Tenant Request: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;tenant xmlns="http://docs.openstack.org/identity/api/v2.0"
        enabled="true" name="ACME Corp">
    &lt;description>A description...&lt;/description>
&lt;/tenant></programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Add Tenant Request: JSON</title>
            <programlisting language="javascript">{
  "tenant": {
    "name": "ACME corp",
    "description": "A description ...",
    "enabled": true
  }
}</programlisting>
          </example>
        </doc>
      </representation>
    </request>
    <response status="201">
      <representation mediaType="application/xml" element="identity:tenant">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Add Tenant Response: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;tenant xmlns="http://docs.openstack.org/identity/api/v2.0"
        enabled="true" id="1234" name="ACME Corp">
    &lt;description>A description...&lt;/description>
&lt;/tenant></programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Add Tenant Response: JSON</title>
            <programlisting language="javascript">{
  "tenant": {
    "id": "1234",
    "name": "ACME corp",
    "description": "A description ...",
    "enabled": true
  }
}</programlisting>
          </example>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="POST" id="updateTenant">
    <doc xml:lang="EN" title="Update Tenant">
      <p class="shortdesc" xmlns="http://www.w3.org/1999/xhtml">Updates a tenant.</p>
      <p xmlns="http://www.w3.org/1999/xhtml">This call updates a tenant.</p>
    </doc>
    <request>
      <representation mediaType="application/xml" element="identity:tenant">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Update Tenant Request: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;tenant xmlns="http://docs.openstack.org/identity/api/v2.0"
        enabled="true" id="1234" name="ACME Corp">
    &lt;description>A description...&lt;/description>
&lt;/tenant></programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Update Tenant Request: JSON</title>
            <programlisting language="javascript">{
  "tenant": {
    "id": "1234",
    "name": "ACME corp",
    "description": "A description ...",
    "enabled": true
  }
}</programlisting>
          </example>
        </doc>
      </representation>
    </request>
    <response status="200">
      <representation mediaType="application/xml" element="identity:tenant">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Update Tenant Response: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;tenant xmlns="http://docs.openstack.org/identity/api/v2.0"
        enabled="true" id="1234" name="ACME Corp">
    &lt;description>A description...&lt;/description>
&lt;/tenant></programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Update Tenant Response: JSON</title>
            <programlisting language="javascript">{
  "tenant": {
    "id": "1234",
    "name": "ACME corp",
    "description": "A description ...",
    "enabled": true
  }
}</programlisting>
          </example>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="DELETE" id="deleteTenant">
    <doc xml:lang="EN" title="Delete a Tenant">
      <p class="shortdesc" xmlns="http://www.w3.org/1999/xhtml">Deletes a tenant.</p>
      <p xmlns="http://www.w3.org/1999/xhtml">This call deletes a tenant.</p>
    </doc>
    <response status="204"/>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="listUsersForTenant">
    <doc xml:lang="EN" title="List users for a Tenant.">
      <p class="shortdesc" xmlns="http://www.w3.org/1999/xhtml">Lists all the users for a tenant.</p>
      <p xmlns="http://www.w3.org/1999/xhtml">Lists all the users for a tenant.</p>
    </doc>
    <request>
      <param name="marker" style="query" required="false" type="xsd:string" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
      <param name="limit" style="query" required="false" type="xsd:int" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:users">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>List users for a Tenant. Response: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;users xmlns="http://docs.openstack.org/identity/api/v2.0">
    &lt;user xmlns="http://docs.openstack.org/identity/api/v2.0"
          enabled="true" email="john.smith@example.org"
          username="jqsmith" id="u1000"/>
    &lt;user xmlns="http://docs.openstack.org/identity/api/v2.0"
          enabled="true" email="john.smith@example.org"
          username="jqsmith" id="u1001"/>
&lt;/users></programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>List users for a Tenant. Response: JSON</title>
            <programlisting language="javascript">{
    "users":[{
            "id":"u1000",
            "username":"jqsmith",
            "email":"john.smith@example.org",
            "enabled":true
        },
        {
            "id":"u1001",
            "username":"jqsmith",
            "email":"john.smith@example.org",
            "enabled":true
        }
    ],
    "users_links":[]
}</programlisting>
          </example>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="PUT" id="addRolesToUserOnTenant">
    <doc xml:lang="EN" title="Add roles to a user on a tenant.">
      <p xmlns="http://www.w3.org/1999/xhtml">Adds a specific role to a user for a tenant.</p>
    </doc>
    <response status="201"/>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="DELETE" id="deleteRoleFromUserOnTenant">
    <doc xml:lang="EN" title="Delete roles from a user on tenant.">
      <p xmlns="http://www.w3.org/1999/xhtml">Deletes a specific role from a user for a tenant.</p>
    </doc>
    <response status="204"/>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <!--User Operations-->
  <method name="GET" id="listUsers">
    <doc xml:lang="EN" title="List users">
      <p xmlns="http://www.w3.org/1999/xhtml">List users.</p>
    </doc>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:userss">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>List users Response: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;users xmlns="http://docs.openstack.org/identity/api/v2.0">
    &lt;user xmlns="http://docs.openstack.org/identity/api/v2.0"
          enabled="true" email="john.smith@example.org"
          username="jqsmith" id="u1000"/>
    &lt;user xmlns="http://docs.openstack.org/identity/api/v2.0"
          enabled="true" email="john.smith@example.org"
          username="jqsmith" id="u1001"/>
&lt;/users></programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>List users Response: JSON</title>
            <programlisting language="javascript">{
    "users":[{
            "id":"u1000",
            "username":"jqsmith",
            "email":"john.smith@example.org",
            "enabled":true
        },
        {
            "id":"u1001",
            "username":"jqsmith",
            "email":"john.smith@example.org",
            "enabled":true
        }
    ],
    "users_links":[]
}</programlisting>
          </example>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="POST" id="addUser">
    <doc xml:lang="EN" title="Add user">
      <p xmlns="http://www.w3.org/1999/xhtml">Adds a user.</p>
    </doc>
    <request>
      <representation mediaType="application/xml" element="identity:user">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Add user Request: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;user xmlns="http://docs.openstack.org/identity/api/v2.0"
      enabled="true" email="john.smith@example.org"
      username="jqsmith"/></programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Add user Request: JSON</title>
            <programlisting language="javascript">{
  "user": {
    "username": "jqsmith",
    "email": "john.smith@example.org",
    "enabled": true
	}
}</programlisting>
          </example>
        </doc>
      </representation>
    </request>
    <response status="201">
      <representation mediaType="application/xml" element="identity:user">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Add user Response: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;user xmlns="http://docs.openstack.org/identity/api/v2.0"
      enabled="true" email="john.smith@example.org"
      username="jqsmith" id="u1000"/></programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Add user Response: JSON</title>
            <programlisting language="javascript">{
  "user": {
    "id": "u1000",
    "username": "jqsmith",
    "email": "john.smith@example.org",
    "enabled": true
  }
}</programlisting>
          </example>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="POST" id="updateUser">
    <doc xml:lang="EN" title="Update user">
      <p xmlns="http://www.w3.org/1999/xhtml">Update a user.</p>
    </doc>
    <request>
      <representation mediaType="application/xml" element="identity:user">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Update user Request: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;user xmlns="http://docs.openstack.org/identity/api/v2.0"
      enabled="true" email="john.smith@example.org"
      username="jqsmith" id="u1000"/></programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Update user Request: JSON</title>
            <programlisting language="javascript">{
  "user": {
    "id": "u1000",
    "username": "jqsmith",
    "email": "john.smith@example.org",
    "enabled": true
  }
}</programlisting>
          </example>
        </doc>
      </representation>
    </request>
    <response status="200">
      <representation mediaType="application/xml" element="identity:user">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Update user Response: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;user xmlns="http://docs.openstack.org/identity/api/v2.0"
      enabled="true" email="john.smith@example.org"
      username="jqsmith" id="u1000"/></programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Update user Response: JSON</title>
            <programlisting language="javascript">{
  "user": {
    "id": "u1000",
    "username": "jqsmith",
    "email": "john.smith@example.org",
    "enabled": true
  }
}</programlisting>
          </example>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="DELETE" id="deleteUser">
    <doc xml:lang="EN" title="Delete user">
      <p xmlns="http://www.w3.org/1999/xhtml">Delete a user.</p>
    </doc>
    <response status="204"/>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="PUT" id="setUserEnabled">
    <doc xml:lang="EN" title="Set user enabled.">
      <p xmlns="http://www.w3.org/1999/xhtml">Enable user.</p>
    </doc>
    <request>
      <representation mediaType="application/xml" element="identity:user">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Set user enabled. Request: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;user xmlns="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xsi:type="UserWithOnlyEnabled" 
 enabled="true"/></programlisting>
          </example>
        </doc>
        <param name="user" style="plain" path="/" type="OS-KSADM:UserWithOnlyEnabled" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Set user enabled. Request: JSON</title>
            <programlisting language="javascript">{
  "user": {
    "enabled": true
	}
}</programlisting>
          </example>
        </doc>
      </representation>
    </request>
    <response status="200">
      <representation mediaType="application/xml" element="identity:user">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Set user enabled. Response: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;user xmlns="http://docs.openstack.org/identity/api/v2.0"
      enabled="true" email="john.smith@example.org"
      username="jqsmith" id="u1000"/></programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Set user enabled. Response: JSON</title>
            <programlisting language="javascript">{
  "user": {
    "id": "u1000",
    "username": "jqsmith",
    "email": "john.smith@example.org",
    "enabled": true
  }
}</programlisting>
          </example>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <!--User Roles-->
  <method name="PUT" id="addUserRole">
    <doc xml:lang="EN" title="Add Global roles to a user.">
      <p xmlns="http://www.w3.org/1999/xhtml">Adds a specific global role to a user.</p>
    </doc>
    <response status="201"/>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="DELETE" id="deleteUserRole">
    <doc xml:lang="EN" title="Delete Global Roles on User.">
      <p xmlns="http://www.w3.org/1999/xhtml">Deletes a specific global role from a user.</p>
    </doc>
    <response status="204"/>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <!--User Credentials-->
  <method name="POST" id="addUserCredential">
    <doc xml:lang="EN" title="Add user Credential.">
      <p xmlns="http://www.w3.org/1999/xhtml">Adds a credential to a user.</p>
    </doc>
    <request>
      <representation mediaType="application/xml" element="identity:credential">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Add user Credential. Request: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
 &lt;passwordCredentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://docs.openstack.org/identity/api/v2.0" username="test_user" password="test"/></programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Add user Credential. Request: JSON</title>
            <programlisting language="javascript">{
    "passwordCredentials": {
        "username": "test_user",
        "password": "mypass"
    }
}</programlisting>
          </example>
        </doc>
      </representation>
    </request>
    <response status="201">
      <representation mediaType="application/xml" element="identity:credential">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Add user Credential. Response: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
 &lt;passwordCredentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://docs.openstack.org/identity/api/v2.0" username="test_user" password="test"/></programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Add user Credential. Response: JSON</title>
            <programlisting language="javascript">{
    "passwordCredentials": {
        "username": "test_user",
        "password": "mypass"
    }
}</programlisting>
          </example>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="listCredentials">
    <doc xml:lang="EN" title="List Credentials">
      <p xmlns="http://www.w3.org/1999/xhtml">List credentials.</p>
    </doc>
    <request>
      <param name="marker" style="query" required="false" type="xsd:string" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
      <param name="limit" style="query" required="false" type="xsd:int" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:credentials">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>List Credentials Response: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;credentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://docs.openstack.org/identity/api/v2.0">
    &lt;passwordCredentials username="test_user" password="test"/>
&lt;/credentials></programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>List Credentials Response: JSON</title>
            <programlisting language="javascript">{
    "credentials":[{
            "passwordCredentials":{
                "username":"test_user",
                "password":"mypass"
            }
        }
    ],
    "credentials_links":[]
}</programlisting>
          </example>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="listCredentialsByType">
    <doc xml:lang="EN" title="List Credentials by type">
      <p xmlns="http://www.w3.org/1999/xhtml">List credentials by type.</p>
    </doc>
    <request>
      <param name="marker" style="query" required="false" type="xsd:string" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
      <param name="limit" style="query" required="false" type="xsd:int" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:credentials">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>List Credentials by type Response: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;credentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://docs.openstack.org/identity/api/v2.0">
    &lt;passwordCredentials username="test_user" password="test"/>
&lt;/credentials></programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>List Credentials by type Response: JSON</title>
            <programlisting language="javascript">{
    "credentials":[{
            "passwordCredentials":{
                "username":"test_user",
                "password":"mypass"
            }
        }
    ],
    "credentials_links":[]
}</programlisting>
          </example>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="POST" id="updateUserCredential">
    <doc xml:lang="EN" title="Update user credential">
      <p xmlns="http://www.w3.org/1999/xhtml">Update credentials.</p>
    </doc>
    <request>
      <representation mediaType="application/xml" element="identity:credential">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Update user credential Request: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
 &lt;passwordCredentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://docs.openstack.org/identity/api/v2.0" username="test_user" password="test"/></programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Update user credential Request: JSON</title>
            <programlisting language="javascript">{
    "passwordCredentials": {
        "username": "test_user",
        "password": "mypass"
    }
}</programlisting>
          </example>
        </doc>
      </representation>
    </request>
    <response status="200">
      <representation mediaType="application/xml" element="identity:credential">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Update user credential Response: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
 &lt;passwordCredentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://docs.openstack.org/identity/api/v2.0" username="test_user" password="test"/></programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Update user credential Response: JSON</title>
            <programlisting language="javascript">{
    "passwordCredentials": {
        "username": "test_user",
        "password": "mypass"
    }
}</programlisting>
          </example>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="DELETE" id="deleteUserCredential">
    <doc xml:lang="EN" title="Delete user credential">
      <p xmlns="http://www.w3.org/1999/xhtml">Delete User credentials.</p>
    </doc>
    <response status="204"/>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getUserCredential">
    <doc xml:lang="EN" title="Get user Credentials">
      <p xmlns="http://www.w3.org/1999/xhtml">Get user credentials.</p>
    </doc>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:credential">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Get user Credentials Response: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
 &lt;passwordCredentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://docs.openstack.org/identity/api/v2.0" username="test_user" password="test"/></programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Get user Credentials Response: JSON</title>
            <programlisting language="javascript">{
    "passwordCredentials": {
        "username": "test_user",
        "password": "mypass"
    }
}</programlisting>
          </example>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <!--Roles-->
  <method name="GET" id="listRoles">
    <doc xml:lang="EN" title="List Roles">
      <p xmlns="http://www.w3.org/1999/xhtml">List roles.</p>
    </doc>
    <request>
      <param name="serviceId" style="query" required="false" type="xsd:string" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
      <param name="marker" style="query" required="false" type="xsd:string" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
      <param name="limit" style="query" required="false" type="xsd:int" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:roles">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>List Roles Response: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>

&lt;roles xmlns="http://docs.openstack.org/identity/api/v2.0">
  &lt;role id="123" name="Admin" description="All Access" />
  &lt;role id="234" name="Guest" description="Guest Access" />
&lt;/roles></programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>List Roles Response: JSON</title>
            <programlisting language="javascript">{
    "roles":[{
            "id":"123",
            "name":"compute:admin",
            "description":"Nova Administrator",
        }
    ],
    "roles_links":[]
}</programlisting>
          </example>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="POST" id="addRole">
    <doc xml:lang="EN" title="Add Role">
      <p xmlns="http://www.w3.org/1999/xhtml">Add a Role.</p>
    </doc>
    <request>
      <representation mediaType="application/xml" element="identity:role">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Add Role Request: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>

&lt;role xmlns="http://docs.openstack.org/identity/api/v2.0"
  id="123" name="Admin" description="All Access" /></programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Add Role Request: JSON</title>
            <programlisting language="javascript">{
  "role": {
    "id": "123",
    "name": "Guest",
    "description": "Guest Access"
  }
}</programlisting>
          </example>
        </doc>
      </representation>
    </request>
    <response status="201">
      <representation mediaType="application/xml" element="identity:role">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Add Role Response: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>

&lt;role xmlns="http://docs.openstack.org/identity/api/v2.0"
  id="123" name="Admin" description="All Access" /></programlisting>
          </example>
        </doc>
        <param name="Location" type="xsd:anyURI" style="header" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Add Role Response: JSON</title>
            <programlisting language="javascript">{
  "role": {
    "id": "123",
    "name": "Guest",
    "description": "Guest Access"
  }
}</programlisting>
          </example>
        </doc>
        <param name="Location" type="xsd:anyURI" style="header" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getRoleByName">
    <doc xml:lang="EN" title="Get Role By Name">
      <p xmlns="http://www.w3.org/1999/xhtml">Get a role by Name.</p>
    </doc>
    <request>
      <param name="name" style="query" type="xsd:string" required="true" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:role">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Get Role By Name Response: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>

&lt;role xmlns="http://docs.openstack.org/identity/api/v2.0"
  id="123" name="Admin" description="All Access" /></programlisting>
          </example>
        </doc>
        <param name="Location" type="xsd:anyURI" style="header" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Get Role By Name Response: JSON</title>
            <programlisting language="javascript">{
  "role": {
    "id": "123",
    "name": "Guest",
    "description": "Guest Access"
  }
}</programlisting>
          </example>
        </doc>
        <param name="Location" type="xsd:anyURI" style="header" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getRole">
    <doc xml:lang="EN" title="Get Role">
      <p xmlns="http://www.w3.org/1999/xhtml">Get a role.</p>
    </doc>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:role">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Get Role Response: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>

&lt;role xmlns="http://docs.openstack.org/identity/api/v2.0"
  id="123" name="Admin" description="All Access" /></programlisting>
          </example>
        </doc>
        <param name="Location" type="xsd:anyURI" style="header" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Get Role Response: JSON</title>
            <programlisting language="javascript">{
  "role": {
    "id": "123",
    "name": "Guest",
    "description": "Guest Access"
  }
}</programlisting>
          </example>
        </doc>
        <param name="Location" type="xsd:anyURI" style="header" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="DELETE" id="deleteRole">
    <doc xml:lang="EN" title="Delete Role">
      <p xmlns="http://www.w3.org/1999/xhtml">Delete a role.</p>
    </doc>
    <response status="204"/>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <!--Service Operations-->
  <method name="GET" id="listServices">
    <doc xml:lang="EN" title="List Services">
      <p xmlns="http://www.w3.org/1999/xhtml">List services.</p>
    </doc>
    <request>
      <param name="marker" style="query" required="false" type="xsd:string" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
      <param name="limit" style="query" required="false" type="xsd:int" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="OS-KSADM:services">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>List Services Response: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>

&lt;services xmlns="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0">
  &lt;service id="123" name="nova" type="compute" description="Openstack Compute Service" />
  &lt;service id="234" name="glance" type="image" description="Openstack Image Service" />
&lt;/services></programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>List Services Response: JSON</title>
            <programlisting language="javascript">{
    "OS-KSADM:services":[{
            "id":"123",
            "name":"nova",
            "type":"compute",
            "description":"OpenStack Compute Service"
        },
        {
            "id":"234",
            "name":"glance",
            "type":"image",
            "description":"OpenStack Image Service"
        }
    ],
    "OS-KSADM:services_links":[]
}</programlisting>
          </example>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getServiceByName">
    <doc xml:lang="EN" title="Get Service">
      <p xmlns="http://www.w3.org/1999/xhtml">Get a service by name.</p>
    </doc>
    <request>
      <param name="name" style="query" type="xsd:string" required="true" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="OS-KSADM:service">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Get Service Response: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>

&lt;service xmlns="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0"
	id="123" name="nova" type="compute" description="OpenStack Compute Service" /></programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Get Service Response: JSON</title>
            <programlisting language="javascript">{
    "OS-KSADM:service":{
        "id":"123",
        "name":"nova",
        "type":"compute",
        "description":"OpenStack Compute Service"
    }
}</programlisting>
          </example>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getService">
    <doc xml:lang="EN" title="Get Service">
      <p xmlns="http://www.w3.org/1999/xhtml">Get a service.</p>
    </doc>
    <response status="200 203">
      <representation mediaType="application/xml" element="OS-KSADM:service">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Get Service Response: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>

&lt;service xmlns="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0"
	id="123" name="nova" type="compute" description="OpenStack Compute Service" /></programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Get Service Response: JSON</title>
            <programlisting language="javascript">{
    "OS-KSADM:service":{
        "id":"123",
        "name":"nova",
        "type":"compute",
        "description":"OpenStack Compute Service"
    }
}</programlisting>
          </example>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="POST" id="addService">
    <doc xml:lang="EN" title="Add Service">
      <p xmlns="http://www.w3.org/1999/xhtml">Add a service.</p>
    </doc>
    <request>
      <representation mediaType="application/xml" element="OS-KSADM:service">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Add Service Request: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>

&lt;service xmlns="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0"
	id="123" name="nova" type="compute" description="OpenStack Compute Service" /></programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Add Service Request: JSON</title>
            <programlisting language="javascript">{
    "OS-KSADM:service":{
        "id":"123",
        "name":"nova",
        "type":"compute",
        "description":"OpenStack Compute Service"
    }
}</programlisting>
          </example>
        </doc>
      </representation>
    </request>
    <response status="201">
      <representation mediaType="application/xml" element="OS-KSADM:service">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Add Service Response: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>

&lt;service xmlns="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0"
	id="123" name="nova" type="compute" description="OpenStack Compute Service" /></programlisting>
          </example>
        </doc>
        <param name="Location" type="xsd:anyURI" style="header" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Add Service Response: JSON</title>
            <programlisting language="javascript">{
    "OS-KSADM:service":{
        "id":"123",
        "name":"nova",
        "type":"compute",
        "description":"OpenStack Compute Service"
    }
}</programlisting>
          </example>
        </doc>
        <param name="Location" type="xsd:anyURI" style="header" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="DELETE" id="deleteService">
    <doc xml:lang="EN" title="Delete Service">
      <p xmlns="http://www.w3.org/1999/xhtml">Delete a service.</p>
    </doc>
    <response status="204"/>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
</application>]]></con:content><con:type>http://wadl.dev.java.net/2009/02</con:type></con:part><con:part><con:url>file:/home/jenny/keystone/keystone/content/admin/normalized/OS-KSADM-admin-xsd-1.xsd</con:url><con:content><![CDATA[<!--Flattened from: file:/home/jenny/keystone/keystone/content/admin/../common/xsd/api.xsd-->
<xsd:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:rax="http://docs.rackspace.com/api" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:OS-KSADM="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0">
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="OS-KSADM-admin-xsd-6.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="OS-KSADM-admin-xsd-4.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="OS-KSADM-admin-xsd-6.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Elements-->
  <!--Complex Types-->
  <!--EndpointForService-->
  <!--VersionForService-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="OS-KSADM-admin-xsd-4.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Elements-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="OS-KSADM-admin-xsd-4.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Simple Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="OS-KSADM-admin-xsd-6.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Elements-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Fault Elements-->
  <!--Fault Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="OS-KSADM-admin-xsd-6.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="OS-KSADM-admin-xsd-4.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Elements-->
  <!--Complex Types-->
  <!--EndpointForService-->
  <!--VersionForService-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="OS-KSADM-admin-xsd-4.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Elements-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Fault Elements-->
  <!--Fault Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="OS-KSADM-admin-xsd-4.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="OS-KSADM-admin-xsd-4.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Elements-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="OS-KSADM-admin-xsd-4.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Elements-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="OS-KSADM-admin-xsd-6.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Elements-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="OS-KSADM-admin-xsd-6.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Elements-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="OS-KSADM-admin-xsd-6.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Elements-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="OS-KSADM-admin-xsd-6.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Simple Types-->
  <element name="access" type="identity:AuthenticateResponse" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="roles" type="identity:RoleList" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A list of roles.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="role" type="identity:Role" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A role.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="tenant" type="identity:Tenant" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A container used to group or isolate resources and/or identity
                  objects. Depending on the service operator, a tenant may map to a customer,
                  account, organization, or project.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/xml" href="../samples/tenant.xml"/>
                     
          </xsdxt:sample>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/json" href="../samples/tenant.json"/>
                     
          </xsdxt:sample>
                 
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="tenants" type="identity:Tenants" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A list of tenants.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="identityFault" type="identity:IdentityFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="serviceUnavailable" type="identity:ServiceUnavailableFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="badRequest" type="identity:BadRequestFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="unauthorized" type="identity:UnauthorizedFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="overLimit" type="identity:OverLimitFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="userDisabled" type="identity:UserDisabledFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="forbidden" type="identity:ForbiddenFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="itemNotFound" type="identity:ItemNotFoundFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="tenantConflict" type="identity:TenantConflictFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="endpoint" type="identity:Endpoint" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>An Endpoint.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="endpoints" type="identity:EndpointList" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A list of Endpoints.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="users" type="identity:UserList" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN">
        <p>A list of Users.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="user" type="identity:User" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN">
        <p>A Keystone User.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="auth" type="identity:AuthenticationRequest" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="credential" type="identity:CredentialType" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="credentials" type="identity:CredentialListType" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="passwordCredentials" type="identity:PasswordCredentialsRequiredUsername" substitutionGroup="identity:credential" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <simpleType name="ExtensibleServiceType" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>
          An extensible service type allows all of the
                    strings defined in
          <a href="#type_ServiceType" title="See definition of                         ServiceType">ServiceType</a>
          or an
                    alias prefixed status.
        </p>
      </xsd:documentation>
    </annotation>
    <union memberTypes="identity:ServiceType identity:ExtendedService"/>
  </simpleType>
  <simpleType name="ServiceType" xmlns="http://www.w3.org/2001/XMLSchema">
    <restriction base="xsd:string">
      <enumeration value="compute">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for an OpenStack Compute API 1.1 compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="object-store">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for a Swift-compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="image-service">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for a Glance-compatible service</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="identity">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for a Keystone-compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
    </restriction>
  </simpleType>
  <simpleType name="ExtendedService" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A non-core service type which must contain an extension prefix.</p>
      </xsd:documentation>
    </annotation>
    <restriction base="xsd:string">
      <pattern value="(\w|-)+:\w+"/>
    </restriction>
  </simpleType>
  <simpleType name="ExtensibleServiceType" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>
          An extensible service type allows all of the
                    strings defined in
          <a href="#type_ServiceType" title="See definition of                         ServiceType">ServiceType</a>
          or an
                    alias prefixed status.
        </p>
      </xsd:documentation>
    </annotation>
    <union memberTypes="identity:ServiceType identity:ExtendedService"/>
  </simpleType>
  <simpleType name="ServiceType" xmlns="http://www.w3.org/2001/XMLSchema">
    <restriction base="xsd:string">
      <enumeration value="compute">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for an OpenStack Compute API 1.1 compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="object-store">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for a Swift-compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="image-service">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for a Glance-compatible service</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="identity">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for a Keystone-compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
    </restriction>
  </simpleType>
  <simpleType name="ExtendedService" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A non-core service type which must contain an extension prefix.</p>
      </xsd:documentation>
    </annotation>
    <restriction base="xsd:string">
      <pattern value="(\w|-)+:\w+"/>
    </restriction>
  </simpleType>
  <complexType name="Token" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A token is an arbitrary bit of text that is used to access
                    resources. Each token has a scope which describes which
                    resources are accessible with it. A token may be
                    revoked at anytime and is valid for a finite duration.</p>
        <p>While Keystone supports token-based authentication in this release,
                    the intention is for it to support additional protocols in the
                    future. The desire is for it to be an integration service, and not
                    a full-fledged identity store and management solution.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/token.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/token.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
    <sequence>
      <element name="tenant" type="identity:TenantForAuthenticateResponse"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:string" use="required"/>
    <attribute name="expires" type="xsd:dateTime" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="AuthenticateResponse" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="token" type="identity:Token"/>
      <element name="user" type="identity:UserForAuthenticateResponse"/>
      <element name="serviceCatalog" type="identity:ServiceCatalog" minOccurs="0"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="UserForAuthenticateResponse" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="roles" type="identity:RoleList"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:string"/>
    <attribute name="name" type="xsd:string"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="TenantForAuthenticateResponse" xmlns="http://www.w3.org/2001/XMLSchema">
    <attribute name="id" type="xsd:string"/>
    <attribute name="name" type="xsd:string"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="ServiceCatalog" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>The service catalog lists the services you have access to</p>
        <div class="design">
          <p>We optimized for future flexibility around the hierarchy. So we
                    left the design as a flat list of endpoints with attributes and the
                    consumer can categorize as they need.
                    This results in potential duplication (such as with the version/@list)
                    but we acceopt that normalization cost in order to not force an
                    artificial hierarchy (suchas on region, which can be optional).</p>
        </div>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/xml" href="../samples/services.xml"/>
                     
          </xsdxt:sample>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/json" href="../samples/services.json"/>
                     
          </xsdxt:sample>
                 
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
    <sequence>
      <element name="service" type="identity:ServiceForCatalog" minOccurs="1" maxOccurs="unbounded">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>A list of services.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="ServiceForCatalog" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="endpoint" type="identity:EndpointForService" minOccurs="1" maxOccurs="unbounded">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>A list of endpoints.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="type" type="identity:ExtensibleServiceType" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The OpenStack-registered type (e.g. 'compute', 'object-store', etc).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The commercial service name (e.g. 'My Nova Cloud Servers').</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="EndpointForService" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="version" type="identity:VersionForService" maxOccurs="1" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>Version details.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="region" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The name of the region where the endpoint
                        lives. Example: airport codes; LHR (UK),
                        STL (Saint Louis)</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="tenantId" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>Tenant id to which the endpoints belong.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="publicURL" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>Public accessible service URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="internalURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A service URL, accessible only locally within that
                        cloud (generally over a high bandwidth, low latency,
                        free of charge link).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="adminURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>An Admin URL (used for administration using privileged
                        calls). This may expose
                        additional functionality not found in the public and
                        internal URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="VersionForService" xmlns="http://www.w3.org/2001/XMLSchema">
    <attribute name="id" type="xsd:string" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>Id of the version.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="info" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>URI to get the information specific to this version.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="list" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>URI to get the information about all versions.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="Role" xmlns="http://www.w3.org/2001/XMLSchema">
    <attribute name="id" type="xsd:string" use="optional"/>
    <attribute name="name" type="xsd:string" use="required"/>
    <attribute name="description" type="xsd:string" use="optional"/>
    <attribute name="serviceId" type="xsd:string" use="optional"/>
    <attribute name="tenantId" type="xsd:string" use="optional"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="RoleList" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="role" type="identity:Role" minOccurs="0" maxOccurs="unbounded"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="Tenants" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="tenant" type="identity:Tenant" maxOccurs="100"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="Tenant" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="description" type="xsd:string">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>An free text description of the tenant.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:ID" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>An ID uniquely identifying the tenant. This usually comes from the back-end store.
                        This value is guaranteed to be unique and immutable (it will never change).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="name" type="xsd:string" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The name of the tenant. This is guaranteed to be unique, but may change.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="enabled" type="xsd:boolean" use="optional" default="true">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>An boolean signifying if a tenant is enabled or not. A disabled tenant
                        cannot be authenticated against.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="display-name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A human-readable, friendly name for use in user interfaces.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute type="xsd:dateTime" name="updated" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A time-stamp identifying the modification time of the
                        tenant.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute type="xsd:dateTime" name="created" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A creation time-stamp for the tenant.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="IdentityFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="message" type="xsd:string">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>A human readable message that is appropriate for display
                            to the end user.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element name="details" type="xsd:string" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The optional &lt;details> element may contain useful
                            information for tracking down errors (e.g a stack
                            trace).  This information may or may not be appropriate
                            for display to an end user.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="code" type="xsd:int" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The HTTP status code associated with the current fault.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="ServiceUnavailableFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:IdentityFault"/>
    </complexContent>
  </complexType>
  <complexType name="BadRequestFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:IdentityFault"/>
    </complexContent>
  </complexType>
  <complexType name="UnauthorizedFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:IdentityFault"/>
    </complexContent>
  </complexType>
  <complexType name="UserDisabledFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:IdentityFault"/>
    </complexContent>
  </complexType>
  <complexType name="ForbiddenFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:IdentityFault"/>
    </complexContent>
  </complexType>
  <complexType name="ItemNotFoundFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:IdentityFault"/>
    </complexContent>
  </complexType>
  <complexType name="TenantConflictFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:IdentityFault"/>
    </complexContent>
  </complexType>
  <complexType name="OverLimitFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:IdentityFault">
        <attribute name="retryAt" type="xsd:dateTime" use="optional">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
              <p>An optional dateTime denoting when an operation should
                                be retried.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="Endpoint" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="version" type="identity:VersionForService" maxOccurs="1" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>Version details.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:int" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>An ID uniquely identifying the Endpoint.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="type" type="identity:ExtensibleServiceType" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The OpenStack-registered type (e.g. 'compute', 'object-store', etc).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The commercial service name (e.g. 'My Nova Cloud Servers').</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="region" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The region of Endpoint Template.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="publicURL" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The public URL to access represented service.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="internalURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The internal version of the public URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="adminURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The admin URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="tenantId" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>Tenant id to which the endpoints belong.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="EndpointList" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="endpoint" type="identity:Endpoint" minOccurs="0" maxOccurs="unbounded"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="User" xmlns="http://www.w3.org/2001/XMLSchema">
    <attribute name="id" type="xsd:ID" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>An automatically generated, unique, immutable (it will never change) identifier
                        for the user. This is generated by the backend this user is stored in.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="username" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A unique, mutable (it can change) user name that may be used by the user
                        an identifier when presenting credentials.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="email" type="xsd:string" use="optional"/>
    <attribute name="enabled" type="xsd:boolean" default="true" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A true/false value that determines if the user may authenticate or not.
                        If enabled is false, the user will not be able to authenticate.
                        How this value is stored or generated is dependent on the backend in use.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="display-name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A human-readable, friendly name for use in user interfaces.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="updated" type="xsd:dateTime" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A time-stamp identifying the modification time of the
                        user.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="created" type="xsd:dateTime" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A creation time-stamp for the user.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="UserList" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="user" type="identity:User" minOccurs="0" maxOccurs="unbounded"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="CredentialType" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Base type for credential in Keystone.</p>
      </xsd:documentation>
    </annotation>
    <sequence>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="AuthenticationRequest" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Both the tenantId and tenantName are optional, but should not be specified together. If both attributes are specified, the server SHOULD respond with a 400 Bad Request.</p>
      </xsd:documentation>
    </annotation>
    <sequence>
      <choice>
        <element ref="identity:credential" minOccurs="1"/>
        <element name="token" type="identity:TokenForAuthenticationRequest"/>
      </choice>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="tenantId" type="xsd:string" use="optional"/>
    <attribute name="tenantName" type="xsd:string" use="optional"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="TokenForAuthenticationRequest" xmlns="http://www.w3.org/2001/XMLSchema">
    <attribute name="id" type="xsd:string" use="required"/>
  </complexType>
  <complexType name="PasswordCredentialsBase" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:CredentialType">
        <attribute name="username" type="xsd:string" use="optional"/>
        <attribute name="password" type="xsd:string" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="PasswordCredentialsWithoutUsername" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <restriction base="identity:PasswordCredentialsBase">
        <attribute name="username" type="xsd:string" use="prohibited"/>
        <attribute name="password" type="xsd:string" use="required"/>
      </restriction>
    </complexContent>
  </complexType>
  <complexType name="PasswordCredentialsRequiredUsername" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <restriction base="identity:PasswordCredentialsBase">
        <attribute name="username" type="xsd:string" use="required"/>
        <attribute name="password" type="xsd:string" use="required"/>
      </restriction>
    </complexContent>
  </complexType>
  <complexType name="CredentialListType" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element ref="identity:credential" minOccurs="1" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jenny/keystone/keystone/content/admin/normalized/OS-KSADM-admin-xsd-6.xsd</con:url><con:content><![CDATA[<!--Flattened from: file:/home/jenny/keystone/keystone/content/admin/../common/xsd/atom/atom.xsd-->
<xsd:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://www.w3.org/2005/Atom" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:rax="http://docs.rackspace.com/api" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:OS-KSADM="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0">
  <xs:element name="link" type="atom:link" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
  <xs:simpleType name="relation" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:restriction base="xs:string">
      <xs:enumeration value="alternate"/>
      <xs:enumeration value="appendix"/>
      <xs:enumeration value="archives"/>
      <xs:enumeration value="author"/>
      <xs:enumeration value="bookmark"/>
      <xs:enumeration value="chapter"/>
      <xs:enumeration value="contents"/>
      <xs:enumeration value="copyright"/>
      <xs:enumeration value="current"/>
      <xs:enumeration value="describedby"/>
      <xs:enumeration value="edit"/>
      <xs:enumeration value="edit-media"/>
      <xs:enumeration value="first"/>
      <xs:enumeration value="glossary"/>
      <xs:enumeration value="help"/>
      <xs:enumeration value="hub"/>
      <xs:enumeration value="icon"/>
      <xs:enumeration value="index"/>
      <xs:enumeration value="last"/>
      <xs:enumeration value="latest-version"/>
      <xs:enumeration value="license"/>
      <xs:enumeration value="monitor"/>
      <xs:enumeration value="monitor-group"/>
      <xs:enumeration value="next"/>
      <xs:enumeration value="next-arvhice"/>
      <xs:enumeration value="nofollow"/>
      <xs:enumeration value="payment"/>
      <xs:enumeration value="predecessor-version"/>
      <xs:enumeration value="prefetch"/>
      <xs:enumeration value="prev"/>
      <xs:enumeration value="previous"/>
      <xs:enumeration value="prev-archive"/>
      <xs:enumeration value="replies"/>
      <xs:enumeration value="search"/>
      <xs:enumeration value="section"/>
      <xs:enumeration value="self"/>
      <xs:enumeration value="service"/>
      <xs:enumeration value="start"/>
      <xs:enumeration value="stylesheet"/>
      <xs:enumeration value="subsection"/>
      <xs:enumeration value="successor-version"/>
      <xs:enumeration value="up"/>
      <xs:enumeration value="version-history"/>
      <xs:enumeration value="via"/>
      <xs:enumeration value="working-copy"/>
      <xs:enumeration value="working-copy-of"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="link" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation>
        <html:p>
          See section 3.4 of the ATOM RFC
          <html:a href="http://tools.ietf.org/html/rfc4287">RFC4287</html:a>
        </html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="rel" use="required" type="atom:relation">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="type" use="optional" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="href" use="required" type="xs:anyURI">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="hreflang" use="optional" type="xs:NMTOKEN">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="title" use="optional" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
  </xs:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jenny/keystone/keystone/content/admin/normalized/OS-KSADM-admin-xsd-4.xsd</con:url><con:content><![CDATA[<!--Flattened from: file:/home/jenny/keystone/keystone/content/common/xsd/atom/atom.xsd-->
<xsd:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://www.w3.org/2005/Atom" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:rax="http://docs.rackspace.com/api" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:OS-KSADM="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0">
  <xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="OS-KSADM-admin-xsd-5.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
  <xs:element name="link" type="atom:link" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
  <xs:simpleType name="relation" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:restriction base="xs:string">
      <xs:enumeration value="alternate"/>
      <xs:enumeration value="appendix"/>
      <xs:enumeration value="archives"/>
      <xs:enumeration value="author"/>
      <xs:enumeration value="bookmark"/>
      <xs:enumeration value="chapter"/>
      <xs:enumeration value="contents"/>
      <xs:enumeration value="copyright"/>
      <xs:enumeration value="current"/>
      <xs:enumeration value="describedby"/>
      <xs:enumeration value="edit"/>
      <xs:enumeration value="edit-media"/>
      <xs:enumeration value="first"/>
      <xs:enumeration value="glossary"/>
      <xs:enumeration value="help"/>
      <xs:enumeration value="hub"/>
      <xs:enumeration value="icon"/>
      <xs:enumeration value="index"/>
      <xs:enumeration value="last"/>
      <xs:enumeration value="latest-version"/>
      <xs:enumeration value="license"/>
      <xs:enumeration value="monitor"/>
      <xs:enumeration value="monitor-group"/>
      <xs:enumeration value="next"/>
      <xs:enumeration value="next-arvhice"/>
      <xs:enumeration value="nofollow"/>
      <xs:enumeration value="payment"/>
      <xs:enumeration value="predecessor-version"/>
      <xs:enumeration value="prefetch"/>
      <xs:enumeration value="prev"/>
      <xs:enumeration value="previous"/>
      <xs:enumeration value="prev-archive"/>
      <xs:enumeration value="replies"/>
      <xs:enumeration value="search"/>
      <xs:enumeration value="section"/>
      <xs:enumeration value="self"/>
      <xs:enumeration value="service"/>
      <xs:enumeration value="start"/>
      <xs:enumeration value="stylesheet"/>
      <xs:enumeration value="subsection"/>
      <xs:enumeration value="successor-version"/>
      <xs:enumeration value="up"/>
      <xs:enumeration value="version-history"/>
      <xs:enumeration value="via"/>
      <xs:enumeration value="working-copy"/>
      <xs:enumeration value="working-copy-of"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="link" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation>
        <html:p>
          See section 3.4 of the ATOM RFC
          <html:a href="http://tools.ietf.org/html/rfc4287">RFC4287</html:a>
        </html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="rel" use="required" type="atom:relation">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="type" use="optional" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="href" use="required" type="xs:anyURI">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="hreflang" use="optional" type="xs:NMTOKEN">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="title" use="optional" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
  </xs:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jenny/keystone/keystone/content/admin/normalized/OS-KSADM-admin-xsd-5.xsd</con:url><con:content><![CDATA[<!--Flattened from: file:/home/jenny/keystone/keystone/content/common/xsd/atom/xml.xsd-->
<xsd:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:rax="http://docs.rackspace.com/api" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:OS-KSADM="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0">
  <xs:annotation xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:documentation>
      <div>
        <h1>About the XML namespace</h1>
        <div class="bodytext">
          <p>This schema document describes the XML namespace, in a form
      suitable for import by other schema documents.</p>
          <p>
            See
            <a href="http://www.w3.org/XML/1998/namespace.html">http://www.w3.org/XML/1998/namespace.html</a>
            and
            <a href="http://www.w3.org/TR/REC-xml">http://www.w3.org/TR/REC-xml</a>
            for information 
      about this namespace.
          </p>
          <p>Note that local names in this namespace are intended to be
      defined only by the World Wide Web Consortium or its subgroups.
      The names currently defined in this namespace are listed below.
      They should not be used with conflicting semantics by any Working
      Group, specification, or document instance.</p>
          <p>
            See further below in this document for more information about
            <a href="#usage">how to refer to this schema document from your own
      XSD schema documents</a>
            and about
            <a href="#nsversioning">the
      namespace-versioning policy governing this schema document</a>
            .
          </p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>lang (as an attribute name)</h3>
          <p>denotes an attribute whose value
       is a language code for the natural language of the content of
       any element; its value is inherited.  This name is reserved
       by virtue of its definition in the XML specification.</p>
        </div>
        <div>
          <h4>Notes</h4>
          <p>Attempting to install the relevant ISO 2- and 3-letter
      codes as the enumerated possible values is probably never
      going to be a realistic possibility.</p>
          <p>
            See BCP 47 at
            <a href="http://www.rfc-editor.org/rfc/bcp/bcp47.txt">http://www.rfc-editor.org/rfc/bcp/bcp47.txt</a>
            and the IANA language subtag registry at
            <a href="http://www.iana.org/assignments/language-subtag-registry">http://www.iana.org/assignments/language-subtag-registry</a>
            for further information.
          </p>
          <p>The union allows for the 'un-declaration' of xml:lang with
      the empty string.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:union memberTypes="xs:language">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value=""/>
          </xs:restriction>
        </xs:simpleType>
      </xs:union>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="space" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>space (as an attribute name)</h3>
          <p>denotes an attribute whose
       value is a keyword indicating what whitespace processing
       discipline is intended for the content of the element; its
       value is inherited.  This name is reserved by virtue of its
       definition in the XML specification.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>base (as an attribute name)</h3>
          <p>denotes an attribute whose value
       provides a URI to be used as the base for interpreting any
       relative URIs in the scope of the element on which it
       appears; its value is inherited.  This name is reserved
       by virtue of its definition in the XML Base specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xmlbase/">http://www.w3.org/TR/xmlbase/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="id" type="xs:ID" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>id (as an attribute name)</h3>
          <p>denotes an attribute whose value
       should be interpreted as if declared to be of type ID.
       This name is reserved by virtue of its definition in the
       xml:id specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xml-id/">http://www.w3.org/TR/xml-id/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
    <xs:attribute ref="xml:id"/>
  </xs:attributeGroup>
  <xs:annotation xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:documentation>
      <div>
        <h3>Father (in any context at all)</h3>
        <div class="bodytext">
          <p>denotes Jon Bosak, the chair of 
      the original XML Working Group.  This name is reserved by 
      the following decision of the W3C XML Plenary and 
      XML Coordination groups:</p>
          <blockquote>
            <p>In appreciation for his vision, leadership and
	dedication the W3C XML Plenary on this 10th day of
	February, 2000, reserves for Jon Bosak in perpetuity
	the XML name "xml:Father".</p>
          </blockquote>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:documentation>
      <div xml:id="usage" id="usage">
        <h2>
          <a name="usage">About this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            This schema defines attributes and an attribute group suitable
      for use by schemas wishing to allow
            <code>xml:base</code>
            ,
            <code>xml:lang</code>
            ,
            <code>xml:space</code>
            or
            <code>xml:id</code>
            attributes on elements they define.
          </p>
          <p>To enable this, such a schema must import this schema for
      the XML namespace, e.g. as follows:</p>
          <pre>&lt;schema . . .>
           . . .
           &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2001/xml.xsd"/></pre>
          <p>or</p>
          <pre>&lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2009/01/xml.xsd"/></pre>
          <p>Subsequently, qualified reference to any of the attributes or the
      group defined below will have the desired effect, e.g.</p>
          <pre>&lt;type . . .>
           . . .
           &lt;attributeGroup ref="xml:specialAttrs"/></pre>
          <p>will define a type which will schema-validate an instance element
      with any of those attributes.</p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:documentation>
      <div id="nsversioning" xml:id="nsversioning">
        <h2>
          <a name="nsversioning">Versioning policy for this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            In keeping with the XML Schema WG's standard versioning
      policy, this schema document will persist at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            .
          </p>
          <p>
            At the date of issue it can also be found at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            .
          </p>
          <p>
            The schema document at that URI may however change in the future,
      in order to remain compatible with the latest version of XML
      Schema itself, or with the XML namespace itself.  In other words,
      if the XML Schema or XML namespaces change, the version of this
      document at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            will change accordingly; the version at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            will not change.
          </p>
          <p>Previous dated (and unchanging) versions of this schema 
      document are at:</p>
          <ul>
            <li>
              <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2007/08/xml.xsd">http://www.w3.org/2007/08/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2004/10/xml.xsd">http://www.w3.org/2004/10/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2001/03/xml.xsd">http://www.w3.org/2001/03/xml.xsd</a>
            </li>
          </ul>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jenny/keystone/keystone/content/admin/normalized/OS-KSADM-admin-xsd-2.xsd</con:url><con:content><![CDATA[<!--Flattened from: file:/home/jenny/keystone/keystone/content/admin/../common/xsd/api-common.xsd-->
<xsd:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/common/api/v1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:rax="http://docs.rackspace.com/api" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:OS-KSADM="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0">
  <annotation xmlns="http://www.w3.org/2001/XMLSchema">
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Open Stack Common API Schema Types 1.0</xsdxt:title>
      <xsdxt:link rev="index" href="extensions.xsd"/>
      <xsdxt:link rev="index" href="limits.xsd"/>
      <xsdxt:link rev="index" href="version.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>This is the main index XML Schema document
                for Common API Schema Types Version 1.0.</p>
    </xsd:documentation>
  </annotation>
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <xs:annotation xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Version Types</xsdxt:title>
      <xsdxt:link rel="index" href="api-common.xsd"/>
    </xs:appinfo>
    <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>This schema file defines all types related to versioning.</p>
    </xs:documentation>
  </xs:annotation>
  <!--Import ATOM specific schema definitions-->
  <!--Multiple choices-->
  <!--Versioning-->
  <!--Types-->
  <xsd:element name="extensions" type="ext:Extensions" xmlns:ext="http://docs.openstack.org/common/api/v1.0"/>
  <xsd:element name="extension" type="ext:Extension" xmlns:ext="http://docs.openstack.org/common/api/v1.0"/>
  <xs:element name="choices" type="vers:VersionChoiceList" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>This element is returned when the version of the
                    resource cannot be determined. The element
                    provides a list of choices for the resource.</p>
      </xs:documentation>
      <xs:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/choices.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/choices.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <xs:element name="versions" type="vers:VersionChoiceList" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Provides a list of supported versions.</p>
      </xs:documentation>
      <xs:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/versions.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/versions.json"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/atom+xml" href="../samples/versions-atom.xml"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <xs:element name="version2" type="vers:VersionChoiceRoot" vc:minVersion="1.1" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>This element provides detailed meta information
                    regarding the status of the current API
                    version. The description should include a pointer
                    to both a human readable and a machine processable
                    description of the API service.</p>
      </xs:documentation>
      <xs:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/version.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/version.json"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/atom+xml" href="../samples/version-atom.xml"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <xsd:simpleType name="Alias" xmlns:ext="http://docs.openstack.org/common/api/v1.0">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="\w+\-\w+"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xs:simpleType name="VersionStatus" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation>
        <html:p>The VersionStatus type describes a service's operational status.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="ALPHA">
        <xs:annotation>
          <xs:documentation>
            <html:p>This is a new service the API. Thi API
                            contract may be set, but the implementaiton
                            may not be 100% complient with it. Developers
                            are encouraged to begin testing aganst an
                            ALPHA version to provide feedback.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BETA">
        <xs:annotation>
          <xs:documentation>
            <html:p>A status of BETA indicates that this
                            version is a candidate for the next major
                            release and may feature functionality not
                            available in the current
                            version. Developers are encouraged to test
                            and begin the migration processes to a
                            BETA version. Note that a BETA version is
                            undergoing testing, it has not been
                            officially released, and my not be stable.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CURRENT">
        <xs:annotation>
          <xs:documentation>
            <html:p>The API version is stable and has been
                            tested. Developers are encouraged to
                            develop against this API version. The
                            current released version of the API will
                            always be marked as CURRENT.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="DEPRECATED">
        <xs:annotation>
          <xs:documentation>
            <html:p>A status of DEPRECATED indicates that a
                            newer version of the API is
                            available. Application developers are
                            discouraged from using this version and
                            should instead develop against the latest
                            current version of the API.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xsd:complexType name="Extensions" xmlns:ext="http://docs.openstack.org/common/api/v1.0">
    <xsd:sequence>
      <xsd:element name="extension" type="ext:Extension" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
  </xsd:complexType>
  <xsd:complexType name="Extension" xmlns:ext="http://docs.openstack.org/common/api/v1.0">
    <xsd:sequence>
      <xsd:element name="description" type="xsd:string" minOccurs="1"/>
      <!--<xsd:element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded" />-->
      <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="name" type="xsd:string" use="required"/>
    <xsd:attribute name="namespace" type="xsd:anyURI" use="required"/>
    <xsd:attribute name="alias" type="ext:Alias" use="required"/>
    <xsd:attribute name="updated" type="xsd:dateTime" use="optional"/>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
    <!--TODO(Ziad)resolve asser issue
            <xsd:assert vc:minVersion="1.1" test="atom:link[@rel='describedby']">
            <xsd:annotation>
                <xsd:documentation
                    xml:lang="EN"
                    xmlns="http://www.w3.org/1999/xhtml">
                    <p>
                        There should be at least one atom link
                        with a describedby relation.
                    </p>
                </xsd:documentation>
            </xsd:annotation>
        </xsd:assert>-->
  </xsd:complexType>
  <xs:complexType name="VersionChoiceList" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation>
        <html:p>A version choice list outlines a collection of
                    resources at various versions.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="version" type="vers:VersionChoice" minOccurs="1" maxOccurs="unbounded"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
    <!--TODO(Ziad)resolve assert issue
            <xs:assert vc:minVersion="1.1" test="every $v in vers:version satisfies $v/atom:link[@rel='self']">
            <xs:annotation>
                <xs:documentation>
                    <html:p>
                        In version lists, every single version must
                        contain at least one self link.
                    </html:p>
                </xs:documentation>
            </xs:annotation>
        </xs:assert>-->
  </xs:complexType>
  <xs:complexType name="VersionChoiceRoot" vc:minVersion="1.1" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:complexContent>
      <xs:extension base="vers:VersionChoice">
        <!--TODO(Ziad)resolve asser issue
                    <xs:assert test="atom:link[@rel='describedby']">
                    <xs:annotation>
                        <xs:documentation>
                            <html:p>
                                When used as a root element, a version choice
                                must contain at least one describedby link.
                            </html:p>
                        </xs:documentation>
                    </xs:annotation>
                </xs:assert>-->
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="VersionChoice" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation>
        <html:p>A version choice contains relevant information
                    about an available service that a user can then
                    use to target a specific version of the service.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="media-types" type="vers:MediaTypeList" minOccurs="0" maxOccurs="1"/>
      <!--<xs:element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded" />-->
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>
          <html:p>The ID of a version choice represents the service version's unique 
                        identifier. This ID is guaranteed to be unique only among the
                        service version choices outlined in the VersionChoiceList.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="status" type="vers:VersionStatus" use="required">
      <xs:annotation>
        <xs:documentation>
          <html:p>A version choice's status describes the current operational state of
                        the given service version. The operational status is captured in a
                        simple type enumeration called VersionStatus.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="updated" type="xs:dateTime" use="optional">
      <xs:annotation>
        <xs:documentation>
          <html:p>
            A version choice's updated attribute describes
                        the time when the version was updated. The
                        time should be updated anytime
            <html:strong>anything</html:strong>
            in the
                        version has changed: documentation,
                        extensions, bug fixes.
          </html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:complexType name="MediaTypeList" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation>
        <html:p>A MediaTypeList outlines a collection of valid media types for a given 
                    service version.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="media-type" type="vers:MediaType" minOccurs="1" maxOccurs="unbounded"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:complexType name="MediaType" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation>
        <html:p>A MediaType describes what content types the service version understands.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="base" type="xs:string" use="optional" default="">
      <xs:annotation>
        <xs:documentation>
          <html:p>The base of a given media type describes the
                        simple MIME type that then a more complicated
                        media type can be derived from. These types
                        are basic and provide no namespace or version
                        specific data are are only provided as a
                        convenience.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="type" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>
          <html:p>The type attribute of a MediaType describes
                        the MIME specific identifier of the media type
                        in question.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jenny/keystone/keystone/content/admin/normalized/OS-KSADM-admin-xsd-3.xsd</con:url><con:content><![CDATA[<!--Flattened from: file:/home/jenny/keystone/keystone/content/admin/../common/xsd/OS-KSADM.xsd-->
<xsd:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:rax="http://docs.rackspace.com/api" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:OS-KSADM="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0">
  <import namespace="http://docs.openstack.org/identity/api/v2.0" schemaLocation="OS-KSADM-admin-xsd-1.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="OS-KSADM-admin-xsd-6.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Elements-->
  <!--Complex Types-->
  <!--Complex Types-->
  <element name="services" type="OS-KSADM:ServiceList" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A list of services.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="service" type="OS-KSADM:Service" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A service.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="extensibleCredentialsType" type="OS-KSADM:ExtensibleCredentialsType" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>An extensible credentials type.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <simpleType name="PasswordCredentialsType" xmlns="http://www.w3.org/2001/XMLSchema">
    <restriction base="xsd:string">
      <enumeration value="password"/>
    </restriction>
  </simpleType>
  <simpleType name="ExtensionCredentialsType" xmlns="http://www.w3.org/2001/XMLSchema">
    <restriction base="xsd:string">
      <pattern value="(\w|-)+-\w+"/>
    </restriction>
  </simpleType>
  <simpleType name="ExtensibleCredentialsType" xmlns="http://www.w3.org/2001/XMLSchema">
    <union memberTypes="OS-KSADM:PasswordCredentialsType OS-KSADM:ExtensionCredentialsType"/>
  </simpleType>
  <complexType name="Service" xmlns="http://www.w3.org/2001/XMLSchema">
    <attribute name="id" type="xsd:string" use="required"/>
    <attribute name="name" type="xsd:string" use="required"/>
    <attribute name="type" type="identity:ExtensibleServiceType" use="required"/>
    <attribute name="description" type="xsd:string" use="optional"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="ServiceList" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="service" type="OS-KSADM:Service" minOccurs="0" maxOccurs="unbounded"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="UserWithOnlyEnabled" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <restriction base="identity:User">
        <attribute name="id" type="xsd:ID" use="prohibited"/>
        <attribute name="email" type="xsd:string" use="prohibited"/>
        <attribute name="username" type="xsd:ID" use="prohibited"/>
        <attribute name="enabled" type="xsd:boolean" use="required"/>
      </restriction>
    </complexContent>
  </complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:35357</con:endpoint><con:endpoint>${#Project#Endpoint}</con:endpoint><con:endpoint>http://auth-n02.dev.us.ccp.rackspace.net</con:endpoint></con:endpoints><con:resource name="v2.0" path="${#Project#path}"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="users" path="users"><con:settings/><con:parameters/><con:resource name="{userId}" path="{userId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>userId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="roles" path="roles"><con:settings/><con:parameters/><con:resource name="OS-KSADM" path="OS-KSADM"><con:settings/><con:parameters/><con:resource name="{roleId}" path="{roleId}"><con:settings/><con:parameters><con:parameter><con:name>roleId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Add Global roles to a user." method="PUT"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete Global Roles on User." method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource><con:resource name="OS-KSADM" path="OS-KSADM"><con:settings/><con:parameters/><con:resource name="enabled" path="enabled"><con:settings/><con:parameters/><con:method name="Set user enabled." method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="credentials" path="credentials"><con:settings/><con:parameters/><con:resource name="{credential-type}" path="/{credential-type}"><con:settings/><con:parameters><con:parameter><con:name>credential-type</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="Update user credential" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:credential</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:credential</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:35357</con:endpoint><con:request>&lt;v2:credential xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="Delete user credential" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Get user Credentials" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:credential</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Add user Credential." method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:credential</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:credential</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:35357</con:endpoint><con:request>&lt;v2:credential xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="List Credentials" method="GET"><con:settings/><con:parameters><con:parameter><con:name>marker</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource><con:method name="Update user" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:35357</con:endpoint><con:request>&lt;v2:user xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="Delete user" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="List users" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:userss</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Add user" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="tenants" path="tenants"><con:settings/><con:parameters/><con:resource name="{tenantId}" path="{tenantId}"><con:settings/><con:parameters><con:parameter><con:name>tenantId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="users" path="users"><con:settings/><con:parameters/><con:resource name="{userId}" path="{userId}"><con:settings/><con:parameters><con:parameter><con:name>userId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="roles" path="roles"><con:settings/><con:parameters/><con:resource name="OS-KSADM" path="OS-KSADM"><con:settings/><con:parameters/><con:resource name="{roleId}" path="{roleId}"><con:settings/><con:parameters><con:parameter><con:name>roleId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Add roles to a user on a tenant." method="PUT"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete roles from a user on tenant." method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource></con:resource><con:method name="List users for a Tenant." method="GET"><con:settings/><con:parameters><con:parameter><con:name>marker</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:users</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Update Tenant" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:tenant</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:tenant</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete a Tenant" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Add Tenant" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:tenant</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:tenant</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="OS-KSADM" path="OS-KSADM"><con:settings/><con:parameters/><con:resource name="roles" path="roles"><con:settings/><con:parameters/><con:resource name="{roleId}" path="{roleId}"><con:settings/><con:parameters><con:parameter><con:name>roleId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Get Role" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:role</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete Role" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get Role By Name" method="GET"><con:settings/><con:parameters><con:parameter required="true"><con:name>name</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:role</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="List Roles" method="GET"><con:settings/><con:parameters><con:parameter><con:name>serviceId</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>marker</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:roles</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Add Role" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:role</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:role</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="services" path="services"><con:settings/><con:parameters/><con:resource name="{serviceId}" path="{serviceId}"><con:settings/><con:parameters><con:parameter><con:name>serviceId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Get Service" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0">v1:service</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete Service" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="List Services" method="GET"><con:settings/><con:parameters><con:parameter><con:name>marker</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0">v1:services</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Add Service" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0">v1:service</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0">v1:service</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Get Service" method="GET"><con:settings/><con:parameters><con:parameter required="true"><con:name>name</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0">v1:service</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="OS-KSCATALOG-admin" type="rest" basePath="" definitionUrl="/home/jenny/keystone/keystone/content/admin/normalized/OS-KSCATALOG-admin.wadl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/home/jenny/keystone/keystone/content/admin/normalized/OS-KSCATALOG-admin.wadl"><con:part><con:url>file:/home/jenny/keystone/keystone/content/admin/normalized/OS-KSCATALOG-admin.wadl</con:url><con:content><![CDATA[<application xsi:schemaLocation="http://docs.openstack.org/identity/api/v2.0 ../common/xsd/api.xsd   http://docs.openstack.org/common/api/v1.0 ../common/xsd/api-common.xsd   http://wadl.dev.java.net/2009/02 http://www.w3.org/Submission/wadl/wadl.xsd   http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0 ../common/xsd/OS-KSCATALOG.xsd   " xmlns="http://wadl.dev.java.net/2009/02" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:OS-KSCATALOG="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0">
  <wadl:grammars xmlns:wadl="http://wadl.dev.java.net/2009/02">
    <!--Original xsd: file:/home/jenny/keystone/keystone/content/admin/../common/xsd/api.xsd-->
    <wadl:include href="OS-KSCATALOG-admin-xsd-1.xsd"/>
    <!--Original xsd: file:/home/jenny/keystone/keystone/content/admin/../common/xsd/api-common.xsd-->
    <wadl:include href="OS-KSCATALOG-admin-xsd-2.xsd"/>
    <!--Original xsd: file:/home/jenny/keystone/keystone/content/admin/../common/xsd/OS-KSCATALOG.xsd-->
    <wadl:include href="OS-KSCATALOG-admin-xsd-3.xsd"/>
  </wadl:grammars>
  <!--*******************************************************-->
  <!--All Resources-->
  <!--*******************************************************-->
  <!--We should use SSL in production-->
  <resources base="http://localhost:35357">
    <resource path="v2.0">
      <resource path="tenants">
        <param name="X-Auth-Token" style="header" type="xsd:string" required="true" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
        <resource path="{tenantId}">
          <param name="tenantId" style="template" type="xsd:string" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
          <resource path="OS-KSCATALOG">
            <resource path="endpoints">
              <method name="GET" rax:id="listEndpoints" xmlns:rax="http://docs.rackspace.com/api">
                <doc xml:lang="EN" title="List Endpoints">
                  <p xmlns="http://www.w3.org/1999/xhtml">List Endpoints of a Tenant.</p>
                </doc>
                <response status="200 203">
                  <representation mediaType="application/xml" element="identity:endpoints">
                    <doc xml:lang="EN">
                      <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                        <title>List Endpoints Response: XML</title>
                        <programlisting language="xml"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>

<endpoints
    xmlns="http://docs.openstack.org/identity/api/v2.0">
  <endpoint
      id="1" 
      tenantId="1"
      type="compute"
      name="Compute"
      region="North"
      publicURL="https://compute.north.public.com/v1"
      internalURL="https://compute.north.internal.com/v1"
      adminURL="https://compute.north.internal.com/v1">
      <version
          id="1"
          info="https://compute.north.public.com/v1/"
          list="https://compute.north.public.com/"
      />
  </endpoint>
  <endpoint
      id="2" 
      tenantId="2"
      type="compute"
      name="Compute"
      region="South"
      publicURL="https://compute.north.public.com/v1"
      internalURL="https://compute.north.internal.com/v1"
      adminURL="https://compute.north.internal.com/v1">
      <version
          id="1"
          info="https://compute.north.public.com/v1/"
          list="https://compute.north.public.com/"
      />
  </endpoint>
  <endpoint
      id="3" 
      tenantId="1"
      type="compute"
      name="Compute"
      region="East"
      publicURL="https://compute.north.public.com/v1"
      internalURL="https://compute.north.internal.com/v1"
      adminURL="https://compute.north.internal.com/v1"
      tenantId="1"
  />
  <endpoint
      id="4" 
      tenantId="1"
      type="compute"
      name="Compute"
      region="West"
      publicURL="https://compute.north.public.com/v1"
      internalURL="https://compute.north.internal.com/v1"
      adminURL="https://compute.north.internal.com/v1">
      <version
          id="1"
          info="https://compute.north.public.com/v1/"
          list="https://compute.north.public.com/"
      />
  </endpoint>
  <endpoint
      id="5" 
      tenantId="1"
      type="compute"
      name="Compute"
      region="Global"
      publicURL="https://compute.north.public.com/v1"
      internalURL="https://compute.north.internal.com/v1"
      adminURL="https://compute.north.internal.com/v1">
      <version
          id="1"
          info="https://compute.north.public.com/v1/"
          list="https://compute.north.public.com/"
      />
  </endpoint>
</endpoints>]]]]>><![CDATA[</programlisting>
                      </example>
                    </doc>
                  </representation>
                  <representation mediaType="application/json">
                    <doc xml:lang="EN">
                      <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                        <title>List Endpoints Response: JSON</title>
                        <programlisting language="javascript">{
    "endpoints":[{
                "id":1,
                "tenantId":"1",
                "region":"North",
                "type":"compute",
                "publicURL":"https://compute.north.public.com/v1",
                "internalURL":"https://compute.north.internal.com/v1",
                "adminURL" : "https://compute.north.internal.com/v1",
                "versionId":"1",
                "versionInfo":"https://compute.north.public.com/v1/",
                "versionList":"https://compute.north.public.com/"
            },
            {
                "id":2,
                "tenantId":"1",
                "region":"South",
                "type":"compute",
                "publicURL":"https://compute.north.public.com/v1",
                "internalURL":"https://compute.north.internal.com/v1",
                "adminURL" : "https://compute.north.internal.com/v1",
                "versionId":"1",
                "versionInfo":"https://compute.north.public.com/v1/",
                "versionList":"https://compute.north.public.com/"
            },
            {
                "id":3,
                "tenantId":"1",
                "region":"East",
                "type":"compute",
                "publicURL":"https://compute.north.public.com/v1",
                "internalURL":"https://compute.north.internal.com/v1",
                "adminURL" : "https://compute.north.internal.com/v1",
                "versionId":"1",
                "versionInfo":"https://compute.north.public.com/v1/",
                "versionList":"https://compute.north.public.com/"
            },
            {
                "id":4,
                "tenantId":"1",
                "region":"West",
                "type":"compute",
                "publicURL":"https://compute.north.public.com/v1",
                "internalURL":"https://compute.north.internal.com/v1",
                "adminURL" : "https://compute.north.internal.com/v1",
                "versionId":"1",
                "versionInfo":"https://compute.north.public.com/v1/",
                "versionList":"https://compute.north.public.com/"
            },
            {
                "id":5,
                "tenantId":"1",
                "region":"Global",
                "type":"compute",
                "publicURL":"https://compute.north.public.com/v1",
                "internalURL":"https://compute.north.internal.com/v1",
                "adminURL" : "https://compute.north.internal.com/v1",
                "versionId":"1",
                "versionInfo":"https://compute.north.public.com/v1/",
                "versionList":"https://compute.north.public.com/"
            }
        ],
    "endpoints_links":[]
}</programlisting>
                      </example>
                    </doc>
                  </representation>
                </response>
                <response>
                  <representation mediaType="application/xml" element="identity:identityFault"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="400">
                  <representation mediaType="application/xml" element="identity:badRequest"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="401">
                  <representation mediaType="application/xml" element="identity:unauthorized"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="403">
                  <representation mediaType="application/xml" element="identity:forbidden"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="405">
                  <representation mediaType="application/xml" element="identity:badMethod"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="413">
                  <representation mediaType="application/xml" element="identity:overLimit"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="503">
                  <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="404">
                  <representation mediaType="application/xml" element="identity:itemNotFound"/>
                  <representation mediaType="application/json"/>
                </response>
              </method>
              <method name="POST" rax:id="addEndpoint" xmlns:rax="http://docs.rackspace.com/api">
                <doc xml:lang="EN" title="Add Endpoint">
                  <p xmlns="http://www.w3.org/1999/xhtml">Add Endpoint to a tenant.</p>
                </doc>
                <request>
                  <representation mediaType="application/xml" element="OS-KSCATALOG:endpointTemplate">
                    <doc xml:lang="EN">
                      <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                        <title>Add Endpoint Request: XML</title>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;endpointTemplate
  xmlns="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:type="EndpointTemplateWithOnlyId"
  id="1"/></programlisting>
                      </example>
                    </doc>
                    <param name="endpoint" style="plain" path="/" type="OS-KSCATALOG:EndpointTemplateWithOnlyId" rax:id=""/>
                  </representation>
                  <representation mediaType="application/json">
                    <doc xml:lang="EN">
                      <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                        <title>Add Endpoint Request: JSON</title>
                        <programlisting language="javascript">{
    "OS-KSCATALOG:endpointTemplate":{
        "id":1,
    }
}</programlisting>
                      </example>
                    </doc>
                  </representation>
                </request>
                <response status="201">
                  <representation mediaType="application/xml" element="identity:endpoint">
                    <doc xml:lang="EN">
                      <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                        <title>Add Endpoint Response: XML</title>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>

&lt;endpoint
            id="1" 
            tenantId="1"
            type="compute"
            name="Compute"
            region="North"
            publicURL="https://compute.north.public.com/v1"
            internalURL="https://compute.north.internal.com/v1"
            adminURL="https://compute.north.internal.com/v1"
            xmlns="http://docs.openstack.org/identity/api/v2.0">
            &lt;version
                        id="1"
                        info="https://compute.north.public.com/v1/"
                        list="https://compute.north.public.com/"
            />
&lt;/endpoint></programlisting>
                      </example>
                    </doc>
                    <param name="Location" type="xsd:anyURI" style="header" rax:id=""/>
                  </representation>
                  <representation mediaType="application/json">
                    <doc xml:lang="EN">
                      <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                        <title>Add Endpoint Response: JSON</title>
                        <programlisting language="javascript">{
  "endpoint": {
  "id": 1,
  "tenantId":1,
  "region": "North",
  "type": "compute",
  "publicURL": "https://compute.north.public.com/v1",
  "internalURL": "https://compute.north.internal.com/v1",
  "adminURL" : "https://compute.north.internal.com/v1",
  "versionId": "1",
  "versionInfo": "https://compute.north.public.com/v1/",
  "versionList": "https://compute.north.public.com/"
  }
}</programlisting>
                      </example>
                    </doc>
                    <param name="Location" type="xsd:anyURI" style="header" rax:id=""/>
                  </representation>
                </response>
                <response>
                  <representation mediaType="application/xml" element="identity:identityFault"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="400">
                  <representation mediaType="application/xml" element="identity:badRequest"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="401">
                  <representation mediaType="application/xml" element="identity:unauthorized"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="403">
                  <representation mediaType="application/xml" element="identity:forbidden"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="405">
                  <representation mediaType="application/xml" element="identity:badMethod"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="413">
                  <representation mediaType="application/xml" element="identity:overLimit"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="503">
                  <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="404">
                  <representation mediaType="application/xml" element="identity:itemNotFound"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="415">
                  <representation mediaType="application/xml" element="identity:badMediaType"/>
                  <representation mediaType="application/json"/>
                </response>
              </method>
              <resource path="{endpointId}">
                <param name="endpointId" style="template" type="xsd:string" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
                <method name="GET" rax:id="getEndpoint" xmlns:rax="http://docs.rackspace.com/api">
                  <doc xml:lang="EN" title="Get Endpoint">
                    <p xmlns="http://www.w3.org/1999/xhtml">Get Endpoint of a Tenant.</p>
                  </doc>
                  <response status="200 203">
                    <representation mediaType="application/xml" element="identity:endpoint">
                      <doc xml:lang="EN">
                        <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                          <title>Get Endpoint Response: XML</title>
                          <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>

&lt;endpoint
            id="1" 
            tenantId="1"
            type="compute"
            name="Compute"
            region="North"
            publicURL="https://compute.north.public.com/v1"
            internalURL="https://compute.north.internal.com/v1"
            adminURL="https://compute.north.internal.com/v1"
            xmlns="http://docs.openstack.org/identity/api/v2.0">
            &lt;version
                        id="1"
                        info="https://compute.north.public.com/v1/"
                        list="https://compute.north.public.com/"
            />
&lt;/endpoint></programlisting>
                        </example>
                      </doc>
                    </representation>
                    <representation mediaType="application/json">
                      <doc xml:lang="EN">
                        <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                          <title>Get Endpoint Response: JSON</title>
                          <programlisting language="javascript">{
  "endpoint": {
  "id": 1,
  "tenantId":1,
  "region": "North",
  "type": "compute",
  "publicURL": "https://compute.north.public.com/v1",
  "internalURL": "https://compute.north.internal.com/v1",
  "adminURL" : "https://compute.north.internal.com/v1",
  "versionId": "1",
  "versionInfo": "https://compute.north.public.com/v1/",
  "versionList": "https://compute.north.public.com/"
  }
}</programlisting>
                        </example>
                      </doc>
                    </representation>
                  </response>
                  <response>
                    <representation mediaType="application/xml" element="identity:identityFault"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="400">
                    <representation mediaType="application/xml" element="identity:badRequest"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="401">
                    <representation mediaType="application/xml" element="identity:unauthorized"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="403">
                    <representation mediaType="application/xml" element="identity:forbidden"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="405">
                    <representation mediaType="application/xml" element="identity:badMethod"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="413">
                    <representation mediaType="application/xml" element="identity:overLimit"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="503">
                    <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="404">
                    <representation mediaType="application/xml" element="identity:itemNotFound"/>
                    <representation mediaType="application/json"/>
                  </response>
                </method>
                <method name="DELETE" rax:id="deleteEndpoint" xmlns:rax="http://docs.rackspace.com/api">
                  <doc xml:lang="EN" title="Delete Endpoint.">
                    <p xmlns="http://www.w3.org/1999/xhtml">Delete a Endpoint from a Tenant.</p>
                  </doc>
                  <response status="204"/>
                  <response>
                    <representation mediaType="application/xml" element="identity:identityFault"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="400">
                    <representation mediaType="application/xml" element="identity:badRequest"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="401">
                    <representation mediaType="application/xml" element="identity:unauthorized"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="403">
                    <representation mediaType="application/xml" element="identity:forbidden"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="405">
                    <representation mediaType="application/xml" element="identity:badMethod"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="413">
                    <representation mediaType="application/xml" element="identity:overLimit"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="503">
                    <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="404">
                    <representation mediaType="application/xml" element="identity:itemNotFound"/>
                    <representation mediaType="application/json"/>
                  </response>
                </method>
              </resource>
            </resource>
          </resource>
        </resource>
      </resource>
      <resource path="OS-KSCATALOG">
        <resource path="endpointTemplates">
          <param name="X-Auth-Token" style="header" type="xsd:string" required="true" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
          <method name="GET" rax:id="listEndpointTemplates" xmlns:rax="http://docs.rackspace.com/api">
            <doc xml:lang="EN" title="List Endpoint Templates">
              <p xmlns="http://www.w3.org/1999/xhtml">List Endpoint Templates.</p>
            </doc>
            <request>
              <param name="serviceId" style="query" required="false" type="xsd:string" rax:id=""/>
            </request>
            <response status="200 203">
              <representation mediaType="application/xml" element="OS-KSCATALOG:endpointTemplates">
                <doc xml:lang="EN">
                  <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                    <title>List Endpoint Templates Response: XML</title>
                    <programlisting language="xml"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>

<endpointTemplates xmlns="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0">
  <endpointTemplate
   id="1"
   region="North"
   global="true"
   type="compute"
   name="Compute"
   publicURL="https://compute.north.public.com/v1"
   internalURL="https://compute.north.internal.com/v1" 
   enabled="true">
   <version
     id="1"
     list="https://compute.north.public.com/"
     info="https://compute.north.public.com/v1"/>
  </endpointTemplate>
  <endpointTemplate
   id="2" 
   region="south"
   type="compute"
   name="Compute"
   publicURL="https://service2.public.com/v1"
   internalURL="https://service2.internal.public.com/v1" 
   enabled="false">
   <version
    id="1"
    list="https://service1.public.com/"
    info="https://service1.public.com/v1"/>
  </endpointTemplate>
  <endpointTemplate
   id="3" 
   region="DFW" 
   global="true"
   type="ext1:service1"
   name="Compute"
   publicURL="https://service1.public.com/v1" 
   enabled="true">
   <version
    id="1"
    list="https://service1.public.com/"
    info="https://service1.public.com/v1"/>
  </endpointTemplate>
  <endpointTemplate
   id="4" 
   region="ORD"
   type="compute"
   name="Compute"
   publicURL="https://service2.public.com/v1" 
   enabled="true">
   <version
    id="1"
    list="https://service1.public.com/"
    info="https://service1.public.com/v1"/>
  </endpointTemplate>
  <endpointTemplate
   id="5" 
   global="true"
   type="compute"
   name="Compute"
   publicURL="https://service3.public.com/v1">
   <version
    id="1"
    list="https://service1.public.com/"
    info="https://service1.public.com/v1"/>
  </endpointTemplate>
</endpointTemplates>]]]]>><![CDATA[</programlisting>
                  </example>
                </doc>
              </representation>
              <representation mediaType="application/json">
                <doc xml:lang="EN">
                  <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                    <title>List Endpoint Templates Response: JSON</title>
                    <programlisting language="javascript">{
    "OS-KSCATALOG:endpointsTemplates": [
            {
                "id": 1,
                "region": "North",
                "global": true,
                "type": "compute",
                "publicURL": "https://compute.north.public.com/v1",
                "internalURL": "https://compute.north.internal.com/v1",
                "versionId": "1",
                "versionInfo": "https://compute.north.public.com/v1/",
                "versionList": "https://compute.north.public.com/",
                "enabled": true
            },
            {
                "id": 2,
                "region": "South",
                "type": "compute",
                "publicURL": "https://compute.south.public.com/v1",
                "internalURL": "https://compute.south.internal.com/v1",
                "versionId": "1",
                "versionInfo": "https://compute.south.public.com/v1/",
                "versionList": "https://compute.south.public.com/",
                "enabled": false
            },
            {
                "id": 3,
                "region": "North",
                "global": true,
                "type": "object-store",
                "publicURL": "https://object-store.north.public.com/v1.0",
                "versionId": "1.0",
                "versionInfo": "https://object-store.north.public.com/v1.0/",
                "versionList": "https://object-store.north.public.com/",
                "enabled": true
            },
            {
                "id": 4,
                "region": "South",
                "type": "object-store",
                "publicURL": "https://object-store.south.public.com/v2",
                "versionId": "2",
                "versionInfo": "https://object-store.south.public.com/v2/",
                "versionList": "https://object-store.south.public.com/",
                "enabled": true
            },
            {
                "id": 5,
                "global": true,
                "type": "OS-DNS:DNS",
                "publicURL": "https://dns.public.com/v3.2",
                "versionId": "1.0",
                "versionInfo": "https://dns.public.com/v1.0/",
                "versionList": "https://dns.public.com/",
                "enabled": true
            }
        ],
    "OS-KSCATALOG:endpointsTemplates_links": []
}</programlisting>
                  </example>
                </doc>
              </representation>
            </response>
            <response>
              <representation mediaType="application/xml" element="identity:identityFault"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="400">
              <representation mediaType="application/xml" element="identity:badRequest"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="401">
              <representation mediaType="application/xml" element="identity:unauthorized"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="403">
              <representation mediaType="application/xml" element="identity:forbidden"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="405">
              <representation mediaType="application/xml" element="identity:badMethod"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="413">
              <representation mediaType="application/xml" element="identity:overLimit"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="503">
              <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="404">
              <representation mediaType="application/xml" element="identity:itemNotFound"/>
              <representation mediaType="application/json"/>
            </response>
          </method>
          <method name="POST" rax:id="addEndpointTemplate" xmlns:rax="http://docs.rackspace.com/api">
            <doc xml:lang="EN" title="Add Endpoint Template">
              <p xmlns="http://www.w3.org/1999/xhtml">Add Endpoint Template.</p>
            </doc>
            <request>
              <representation mediaType="application/xml" element="OS-KSCATALOG:endpointTemplate">
                <doc xml:lang="EN">
                  <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                    <title>Add Endpoint Template Request: XML</title>
                    <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>

&lt;endpointTemplate
  xmlns="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0"
  id="1" 
  region="North" 
  global="true"
  type="compute"
  name="Compute"
  publicURL="https://service-public.com/v1"
  internalURL="https://service-internal.com/v1" 
  enabled="true">
  &lt;version
    id="1"
    info="https://compute.north.public.com/v1/"
    list="https://compute.north.public.com/"
  />
&lt;/endpointTemplate></programlisting>
                  </example>
                </doc>
              </representation>
              <representation mediaType="application/json">
                <doc xml:lang="EN">
                  <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                    <title>Add Endpoint Template Request: JSON</title>
                    <programlisting language="javascript">{
    "OS-KSCATALOG:endpointTemplate":{
        "id":1,
        "region":"North",
        "global":true,
        "type":"compute",
        "publicURL":"https://compute.north.public.com/v1",
        "internalURL":"https://compute.north.internal.com/v1",
        "versionId":"1",
        "versionInfo":"https://compute.north.public.com/v1/",
        "versionList":"https://compute.north.public.com/",
        "enabled":true
    }
}</programlisting>
                  </example>
                </doc>
              </representation>
            </request>
            <response status="201">
              <representation mediaType="application/xml" element="OS-KSCATALOG:endpointTemplate">
                <doc xml:lang="EN">
                  <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                    <title>Add Endpoint Template Response: XML</title>
                    <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>

&lt;endpointTemplate
  xmlns="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0"
  id="1" 
  region="North" 
  global="true"
  type="compute"
  name="Compute"
  publicURL="https://service-public.com/v1"
  internalURL="https://service-internal.com/v1" 
  enabled="true">
  &lt;version
    id="1"
    info="https://compute.north.public.com/v1/"
    list="https://compute.north.public.com/"
  />
&lt;/endpointTemplate></programlisting>
                  </example>
                </doc>
                <param name="Location" type="xsd:anyURI" style="header" rax:id=""/>
              </representation>
              <representation mediaType="application/json">
                <doc xml:lang="EN">
                  <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                    <title>Add Endpoint Template Response: JSON</title>
                    <programlisting language="javascript">{
    "OS-KSCATALOG:endpointTemplate":{
        "id":1,
        "region":"North",
        "global":true,
        "type":"compute",
        "publicURL":"https://compute.north.public.com/v1",
        "internalURL":"https://compute.north.internal.com/v1",
        "versionId":"1",
        "versionInfo":"https://compute.north.public.com/v1/",
        "versionList":"https://compute.north.public.com/",
        "enabled":true
    }
}</programlisting>
                  </example>
                </doc>
                <param name="Location" type="xsd:anyURI" style="header" rax:id=""/>
              </representation>
            </response>
            <response>
              <representation mediaType="application/xml" element="identity:identityFault"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="400">
              <representation mediaType="application/xml" element="identity:badRequest"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="401">
              <representation mediaType="application/xml" element="identity:unauthorized"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="403">
              <representation mediaType="application/xml" element="identity:forbidden"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="405">
              <representation mediaType="application/xml" element="identity:badMethod"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="413">
              <representation mediaType="application/xml" element="identity:overLimit"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="503">
              <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="404">
              <representation mediaType="application/xml" element="identity:itemNotFound"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="415">
              <representation mediaType="application/xml" element="identity:badMediaType"/>
              <representation mediaType="application/json"/>
            </response>
          </method>
          <resource path="{endpointTemplateId}">
            <param name="endpointTemplateId" style="template" type="xsd:int" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
            <method name="GET" rax:id="getEndpointTemplate" xmlns:rax="http://docs.rackspace.com/api">
              <doc xml:lang="EN" title="Get Endpoint Template">
                <p xmlns="http://www.w3.org/1999/xhtml">Get Endpoint Template.</p>
              </doc>
              <response status="200 203">
                <representation mediaType="application/xml" element="OS-KSCATALOG:endpointTemplate">
                  <doc xml:lang="EN">
                    <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                      <title>Get Endpoint Template Response: XML</title>
                      <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>

&lt;endpointTemplate
  xmlns="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0"
  id="1" 
  region="North" 
  global="true"
  type="compute"
  name="Compute"
  publicURL="https://service-public.com/v1"
  internalURL="https://service-internal.com/v1" 
  enabled="true">
  &lt;version
    id="1"
    info="https://compute.north.public.com/v1/"
    list="https://compute.north.public.com/"
  />
&lt;/endpointTemplate></programlisting>
                    </example>
                  </doc>
                </representation>
                <representation mediaType="application/json">
                  <doc xml:lang="EN">
                    <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                      <title>Get Endpoint Template Response: JSON</title>
                      <programlisting language="javascript">{
    "OS-KSCATALOG:endpointTemplate":{
        "id":1,
        "region":"North",
        "global":true,
        "type":"compute",
        "publicURL":"https://compute.north.public.com/v1",
        "internalURL":"https://compute.north.internal.com/v1",
        "versionId":"1",
        "versionInfo":"https://compute.north.public.com/v1/",
        "versionList":"https://compute.north.public.com/",
        "enabled":true
    }
}</programlisting>
                    </example>
                  </doc>
                </representation>
              </response>
              <response>
                <representation mediaType="application/xml" element="identity:identityFault"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="400">
                <representation mediaType="application/xml" element="identity:badRequest"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="401">
                <representation mediaType="application/xml" element="identity:unauthorized"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="403">
                <representation mediaType="application/xml" element="identity:forbidden"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="405">
                <representation mediaType="application/xml" element="identity:badMethod"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="413">
                <representation mediaType="application/xml" element="identity:overLimit"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="503">
                <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="404">
                <representation mediaType="application/xml" element="identity:itemNotFound"/>
                <representation mediaType="application/json"/>
              </response>
            </method>
            <method name="DELETE" rax:id="deleteEndpointTemplate" xmlns:rax="http://docs.rackspace.com/api">
              <doc xml:lang="EN" title="Delete Endpoint Template.">
                <p xmlns="http://www.w3.org/1999/xhtml">Delete a Endpoint Template.</p>
              </doc>
              <response status="204"/>
              <response>
                <representation mediaType="application/xml" element="identity:identityFault"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="400">
                <representation mediaType="application/xml" element="identity:badRequest"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="401">
                <representation mediaType="application/xml" element="identity:unauthorized"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="403">
                <representation mediaType="application/xml" element="identity:forbidden"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="405">
                <representation mediaType="application/xml" element="identity:badMethod"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="413">
                <representation mediaType="application/xml" element="identity:overLimit"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="503">
                <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="404">
                <representation mediaType="application/xml" element="identity:itemNotFound"/>
                <representation mediaType="application/json"/>
              </response>
            </method>
          </resource>
        </resource>
      </resource>
    </resource>
  </resources>
  <!--*******************************************************-->
  <!--All Methods-->
  <!--*******************************************************-->
  <!--EndPoint Templates-->
  <method name="GET" id="listEndpointTemplates">
    <doc xml:lang="EN" title="List Endpoint Templates">
      <p xmlns="http://www.w3.org/1999/xhtml">List Endpoint Templates.</p>
    </doc>
    <request>
      <param name="serviceId" style="query" required="false" type="xsd:string" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="OS-KSCATALOG:endpointTemplates">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>List Endpoint Templates Response: XML</title>
            <programlisting language="xml"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>

<endpointTemplates xmlns="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0">
  <endpointTemplate
   id="1"
   region="North"
   global="true"
   type="compute"
   name="Compute"
   publicURL="https://compute.north.public.com/v1"
   internalURL="https://compute.north.internal.com/v1" 
   enabled="true">
   <version
     id="1"
     list="https://compute.north.public.com/"
     info="https://compute.north.public.com/v1"/>
  </endpointTemplate>
  <endpointTemplate
   id="2" 
   region="south"
   type="compute"
   name="Compute"
   publicURL="https://service2.public.com/v1"
   internalURL="https://service2.internal.public.com/v1" 
   enabled="false">
   <version
    id="1"
    list="https://service1.public.com/"
    info="https://service1.public.com/v1"/>
  </endpointTemplate>
  <endpointTemplate
   id="3" 
   region="DFW" 
   global="true"
   type="ext1:service1"
   name="Compute"
   publicURL="https://service1.public.com/v1" 
   enabled="true">
   <version
    id="1"
    list="https://service1.public.com/"
    info="https://service1.public.com/v1"/>
  </endpointTemplate>
  <endpointTemplate
   id="4" 
   region="ORD"
   type="compute"
   name="Compute"
   publicURL="https://service2.public.com/v1" 
   enabled="true">
   <version
    id="1"
    list="https://service1.public.com/"
    info="https://service1.public.com/v1"/>
  </endpointTemplate>
  <endpointTemplate
   id="5" 
   global="true"
   type="compute"
   name="Compute"
   publicURL="https://service3.public.com/v1">
   <version
    id="1"
    list="https://service1.public.com/"
    info="https://service1.public.com/v1"/>
  </endpointTemplate>
</endpointTemplates>]]]]>><![CDATA[</programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>List Endpoint Templates Response: JSON</title>
            <programlisting language="javascript">{
    "OS-KSCATALOG:endpointsTemplates": [
            {
                "id": 1,
                "region": "North",
                "global": true,
                "type": "compute",
                "publicURL": "https://compute.north.public.com/v1",
                "internalURL": "https://compute.north.internal.com/v1",
                "versionId": "1",
                "versionInfo": "https://compute.north.public.com/v1/",
                "versionList": "https://compute.north.public.com/",
                "enabled": true
            },
            {
                "id": 2,
                "region": "South",
                "type": "compute",
                "publicURL": "https://compute.south.public.com/v1",
                "internalURL": "https://compute.south.internal.com/v1",
                "versionId": "1",
                "versionInfo": "https://compute.south.public.com/v1/",
                "versionList": "https://compute.south.public.com/",
                "enabled": false
            },
            {
                "id": 3,
                "region": "North",
                "global": true,
                "type": "object-store",
                "publicURL": "https://object-store.north.public.com/v1.0",
                "versionId": "1.0",
                "versionInfo": "https://object-store.north.public.com/v1.0/",
                "versionList": "https://object-store.north.public.com/",
                "enabled": true
            },
            {
                "id": 4,
                "region": "South",
                "type": "object-store",
                "publicURL": "https://object-store.south.public.com/v2",
                "versionId": "2",
                "versionInfo": "https://object-store.south.public.com/v2/",
                "versionList": "https://object-store.south.public.com/",
                "enabled": true
            },
            {
                "id": 5,
                "global": true,
                "type": "OS-DNS:DNS",
                "publicURL": "https://dns.public.com/v3.2",
                "versionId": "1.0",
                "versionInfo": "https://dns.public.com/v1.0/",
                "versionList": "https://dns.public.com/",
                "enabled": true
            }
        ],
    "OS-KSCATALOG:endpointsTemplates_links": []
}</programlisting>
          </example>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getEndpointTemplate">
    <doc xml:lang="EN" title="Get Endpoint Template">
      <p xmlns="http://www.w3.org/1999/xhtml">Get Endpoint Template.</p>
    </doc>
    <response status="200 203">
      <representation mediaType="application/xml" element="OS-KSCATALOG:endpointTemplate">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Get Endpoint Template Response: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>

&lt;endpointTemplate
  xmlns="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0"
  id="1" 
  region="North" 
  global="true"
  type="compute"
  name="Compute"
  publicURL="https://service-public.com/v1"
  internalURL="https://service-internal.com/v1" 
  enabled="true">
  &lt;version
    id="1"
    info="https://compute.north.public.com/v1/"
    list="https://compute.north.public.com/"
  />
&lt;/endpointTemplate></programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Get Endpoint Template Response: JSON</title>
            <programlisting language="javascript">{
    "OS-KSCATALOG:endpointTemplate":{
        "id":1,
        "region":"North",
        "global":true,
        "type":"compute",
        "publicURL":"https://compute.north.public.com/v1",
        "internalURL":"https://compute.north.internal.com/v1",
        "versionId":"1",
        "versionInfo":"https://compute.north.public.com/v1/",
        "versionList":"https://compute.north.public.com/",
        "enabled":true
    }
}</programlisting>
          </example>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="POST" id="addEndpointTemplate">
    <doc xml:lang="EN" title="Add Endpoint Template">
      <p xmlns="http://www.w3.org/1999/xhtml">Add Endpoint Template.</p>
    </doc>
    <request>
      <representation mediaType="application/xml" element="OS-KSCATALOG:endpointTemplate">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Add Endpoint Template Request: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>

&lt;endpointTemplate
  xmlns="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0"
  id="1" 
  region="North" 
  global="true"
  type="compute"
  name="Compute"
  publicURL="https://service-public.com/v1"
  internalURL="https://service-internal.com/v1" 
  enabled="true">
  &lt;version
    id="1"
    info="https://compute.north.public.com/v1/"
    list="https://compute.north.public.com/"
  />
&lt;/endpointTemplate></programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Add Endpoint Template Request: JSON</title>
            <programlisting language="javascript">{
    "OS-KSCATALOG:endpointTemplate":{
        "id":1,
        "region":"North",
        "global":true,
        "type":"compute",
        "publicURL":"https://compute.north.public.com/v1",
        "internalURL":"https://compute.north.internal.com/v1",
        "versionId":"1",
        "versionInfo":"https://compute.north.public.com/v1/",
        "versionList":"https://compute.north.public.com/",
        "enabled":true
    }
}</programlisting>
          </example>
        </doc>
      </representation>
    </request>
    <response status="201">
      <representation mediaType="application/xml" element="OS-KSCATALOG:endpointTemplate">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Add Endpoint Template Response: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>

&lt;endpointTemplate
  xmlns="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0"
  id="1" 
  region="North" 
  global="true"
  type="compute"
  name="Compute"
  publicURL="https://service-public.com/v1"
  internalURL="https://service-internal.com/v1" 
  enabled="true">
  &lt;version
    id="1"
    info="https://compute.north.public.com/v1/"
    list="https://compute.north.public.com/"
  />
&lt;/endpointTemplate></programlisting>
          </example>
        </doc>
        <param name="Location" type="xsd:anyURI" style="header" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Add Endpoint Template Response: JSON</title>
            <programlisting language="javascript">{
    "OS-KSCATALOG:endpointTemplate":{
        "id":1,
        "region":"North",
        "global":true,
        "type":"compute",
        "publicURL":"https://compute.north.public.com/v1",
        "internalURL":"https://compute.north.internal.com/v1",
        "versionId":"1",
        "versionInfo":"https://compute.north.public.com/v1/",
        "versionList":"https://compute.north.public.com/",
        "enabled":true
    }
}</programlisting>
          </example>
        </doc>
        <param name="Location" type="xsd:anyURI" style="header" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="DELETE" id="deleteEndpointTemplate">
    <doc xml:lang="EN" title="Delete Endpoint Template.">
      <p xmlns="http://www.w3.org/1999/xhtml">Delete a Endpoint Template.</p>
    </doc>
    <response status="204"/>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="POST" id="addEndpoint">
    <doc xml:lang="EN" title="Add Endpoint">
      <p xmlns="http://www.w3.org/1999/xhtml">Add Endpoint to a tenant.</p>
    </doc>
    <request>
      <representation mediaType="application/xml" element="OS-KSCATALOG:endpointTemplate">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Add Endpoint Request: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;endpointTemplate
  xmlns="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:type="EndpointTemplateWithOnlyId"
  id="1"/></programlisting>
          </example>
        </doc>
        <param name="endpoint" style="plain" path="/" type="OS-KSCATALOG:EndpointTemplateWithOnlyId" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Add Endpoint Request: JSON</title>
            <programlisting language="javascript">{
    "OS-KSCATALOG:endpointTemplate":{
        "id":1,
    }
}</programlisting>
          </example>
        </doc>
      </representation>
    </request>
    <response status="201">
      <representation mediaType="application/xml" element="identity:endpoint">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Add Endpoint Response: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>

&lt;endpoint
            id="1" 
            tenantId="1"
            type="compute"
            name="Compute"
            region="North"
            publicURL="https://compute.north.public.com/v1"
            internalURL="https://compute.north.internal.com/v1"
            adminURL="https://compute.north.internal.com/v1"
            xmlns="http://docs.openstack.org/identity/api/v2.0">
            &lt;version
                        id="1"
                        info="https://compute.north.public.com/v1/"
                        list="https://compute.north.public.com/"
            />
&lt;/endpoint></programlisting>
          </example>
        </doc>
        <param name="Location" type="xsd:anyURI" style="header" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Add Endpoint Response: JSON</title>
            <programlisting language="javascript">{
  "endpoint": {
  "id": 1,
  "tenantId":1,
  "region": "North",
  "type": "compute",
  "publicURL": "https://compute.north.public.com/v1",
  "internalURL": "https://compute.north.internal.com/v1",
  "adminURL" : "https://compute.north.internal.com/v1",
  "versionId": "1",
  "versionInfo": "https://compute.north.public.com/v1/",
  "versionList": "https://compute.north.public.com/"
  }
}</programlisting>
          </example>
        </doc>
        <param name="Location" type="xsd:anyURI" style="header" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="listEndpoints">
    <doc xml:lang="EN" title="List Endpoints">
      <p xmlns="http://www.w3.org/1999/xhtml">List Endpoints of a Tenant.</p>
    </doc>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:endpoints">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>List Endpoints Response: XML</title>
            <programlisting language="xml"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>

<endpoints
    xmlns="http://docs.openstack.org/identity/api/v2.0">
  <endpoint
      id="1" 
      tenantId="1"
      type="compute"
      name="Compute"
      region="North"
      publicURL="https://compute.north.public.com/v1"
      internalURL="https://compute.north.internal.com/v1"
      adminURL="https://compute.north.internal.com/v1">
      <version
          id="1"
          info="https://compute.north.public.com/v1/"
          list="https://compute.north.public.com/"
      />
  </endpoint>
  <endpoint
      id="2" 
      tenantId="2"
      type="compute"
      name="Compute"
      region="South"
      publicURL="https://compute.north.public.com/v1"
      internalURL="https://compute.north.internal.com/v1"
      adminURL="https://compute.north.internal.com/v1">
      <version
          id="1"
          info="https://compute.north.public.com/v1/"
          list="https://compute.north.public.com/"
      />
  </endpoint>
  <endpoint
      id="3" 
      tenantId="1"
      type="compute"
      name="Compute"
      region="East"
      publicURL="https://compute.north.public.com/v1"
      internalURL="https://compute.north.internal.com/v1"
      adminURL="https://compute.north.internal.com/v1"
      tenantId="1"
  />
  <endpoint
      id="4" 
      tenantId="1"
      type="compute"
      name="Compute"
      region="West"
      publicURL="https://compute.north.public.com/v1"
      internalURL="https://compute.north.internal.com/v1"
      adminURL="https://compute.north.internal.com/v1">
      <version
          id="1"
          info="https://compute.north.public.com/v1/"
          list="https://compute.north.public.com/"
      />
  </endpoint>
  <endpoint
      id="5" 
      tenantId="1"
      type="compute"
      name="Compute"
      region="Global"
      publicURL="https://compute.north.public.com/v1"
      internalURL="https://compute.north.internal.com/v1"
      adminURL="https://compute.north.internal.com/v1">
      <version
          id="1"
          info="https://compute.north.public.com/v1/"
          list="https://compute.north.public.com/"
      />
  </endpoint>
</endpoints>]]]]>><![CDATA[</programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>List Endpoints Response: JSON</title>
            <programlisting language="javascript">{
    "endpoints":[{
                "id":1,
                "tenantId":"1",
                "region":"North",
                "type":"compute",
                "publicURL":"https://compute.north.public.com/v1",
                "internalURL":"https://compute.north.internal.com/v1",
                "adminURL" : "https://compute.north.internal.com/v1",
                "versionId":"1",
                "versionInfo":"https://compute.north.public.com/v1/",
                "versionList":"https://compute.north.public.com/"
            },
            {
                "id":2,
                "tenantId":"1",
                "region":"South",
                "type":"compute",
                "publicURL":"https://compute.north.public.com/v1",
                "internalURL":"https://compute.north.internal.com/v1",
                "adminURL" : "https://compute.north.internal.com/v1",
                "versionId":"1",
                "versionInfo":"https://compute.north.public.com/v1/",
                "versionList":"https://compute.north.public.com/"
            },
            {
                "id":3,
                "tenantId":"1",
                "region":"East",
                "type":"compute",
                "publicURL":"https://compute.north.public.com/v1",
                "internalURL":"https://compute.north.internal.com/v1",
                "adminURL" : "https://compute.north.internal.com/v1",
                "versionId":"1",
                "versionInfo":"https://compute.north.public.com/v1/",
                "versionList":"https://compute.north.public.com/"
            },
            {
                "id":4,
                "tenantId":"1",
                "region":"West",
                "type":"compute",
                "publicURL":"https://compute.north.public.com/v1",
                "internalURL":"https://compute.north.internal.com/v1",
                "adminURL" : "https://compute.north.internal.com/v1",
                "versionId":"1",
                "versionInfo":"https://compute.north.public.com/v1/",
                "versionList":"https://compute.north.public.com/"
            },
            {
                "id":5,
                "tenantId":"1",
                "region":"Global",
                "type":"compute",
                "publicURL":"https://compute.north.public.com/v1",
                "internalURL":"https://compute.north.internal.com/v1",
                "adminURL" : "https://compute.north.internal.com/v1",
                "versionId":"1",
                "versionInfo":"https://compute.north.public.com/v1/",
                "versionList":"https://compute.north.public.com/"
            }
        ],
    "endpoints_links":[]
}</programlisting>
          </example>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getEndpoint">
    <doc xml:lang="EN" title="Get Endpoint">
      <p xmlns="http://www.w3.org/1999/xhtml">Get Endpoint of a Tenant.</p>
    </doc>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:endpoint">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Get Endpoint Response: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>

&lt;endpoint
            id="1" 
            tenantId="1"
            type="compute"
            name="Compute"
            region="North"
            publicURL="https://compute.north.public.com/v1"
            internalURL="https://compute.north.internal.com/v1"
            adminURL="https://compute.north.internal.com/v1"
            xmlns="http://docs.openstack.org/identity/api/v2.0">
            &lt;version
                        id="1"
                        info="https://compute.north.public.com/v1/"
                        list="https://compute.north.public.com/"
            />
&lt;/endpoint></programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Get Endpoint Response: JSON</title>
            <programlisting language="javascript">{
  "endpoint": {
  "id": 1,
  "tenantId":1,
  "region": "North",
  "type": "compute",
  "publicURL": "https://compute.north.public.com/v1",
  "internalURL": "https://compute.north.internal.com/v1",
  "adminURL" : "https://compute.north.internal.com/v1",
  "versionId": "1",
  "versionInfo": "https://compute.north.public.com/v1/",
  "versionList": "https://compute.north.public.com/"
  }
}</programlisting>
          </example>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="DELETE" id="deleteEndpoint">
    <doc xml:lang="EN" title="Delete Endpoint.">
      <p xmlns="http://www.w3.org/1999/xhtml">Delete a Endpoint from a Tenant.</p>
    </doc>
    <response status="204"/>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
</application>]]></con:content><con:type>http://wadl.dev.java.net/2009/02</con:type></con:part><con:part><con:url>file:/home/jenny/keystone/keystone/content/admin/normalized/OS-KSCATALOG-admin-xsd-1.xsd</con:url><con:content><![CDATA[<!--Flattened from: file:/home/jenny/keystone/keystone/content/admin/../common/xsd/api.xsd-->
<xsd:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:rax="http://docs.rackspace.com/api" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:OS-KSCATALOG="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0">
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="OS-KSCATALOG-admin-xsd-6.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="OS-KSCATALOG-admin-xsd-4.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="OS-KSCATALOG-admin-xsd-6.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Elements-->
  <!--Complex Types-->
  <!--EndpointForService-->
  <!--VersionForService-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="OS-KSCATALOG-admin-xsd-4.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Elements-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="OS-KSCATALOG-admin-xsd-4.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Simple Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="OS-KSCATALOG-admin-xsd-6.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Elements-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Fault Elements-->
  <!--Fault Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="OS-KSCATALOG-admin-xsd-6.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="OS-KSCATALOG-admin-xsd-4.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Elements-->
  <!--Complex Types-->
  <!--EndpointForService-->
  <!--VersionForService-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="OS-KSCATALOG-admin-xsd-4.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Elements-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Fault Elements-->
  <!--Fault Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="OS-KSCATALOG-admin-xsd-4.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="OS-KSCATALOG-admin-xsd-4.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Elements-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="OS-KSCATALOG-admin-xsd-4.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Elements-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="OS-KSCATALOG-admin-xsd-6.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Elements-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="OS-KSCATALOG-admin-xsd-6.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Elements-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="OS-KSCATALOG-admin-xsd-6.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Elements-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="OS-KSCATALOG-admin-xsd-6.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Simple Types-->
  <element name="access" type="identity:AuthenticateResponse" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="roles" type="identity:RoleList" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A list of roles.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="role" type="identity:Role" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A role.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="tenant" type="identity:Tenant" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A container used to group or isolate resources and/or identity
                  objects. Depending on the service operator, a tenant may map to a customer,
                  account, organization, or project.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/xml" href="../samples/tenant.xml"/>
                     
          </xsdxt:sample>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/json" href="../samples/tenant.json"/>
                     
          </xsdxt:sample>
                 
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="tenants" type="identity:Tenants" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A list of tenants.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="identityFault" type="identity:IdentityFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="serviceUnavailable" type="identity:ServiceUnavailableFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="badRequest" type="identity:BadRequestFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="unauthorized" type="identity:UnauthorizedFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="overLimit" type="identity:OverLimitFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="userDisabled" type="identity:UserDisabledFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="forbidden" type="identity:ForbiddenFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="itemNotFound" type="identity:ItemNotFoundFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="tenantConflict" type="identity:TenantConflictFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="endpoint" type="identity:Endpoint" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>An Endpoint.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="endpoints" type="identity:EndpointList" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A list of Endpoints.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="users" type="identity:UserList" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN">
        <p>A list of Users.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="user" type="identity:User" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN">
        <p>A Keystone User.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="auth" type="identity:AuthenticationRequest" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="credential" type="identity:CredentialType" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="credentials" type="identity:CredentialListType" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="passwordCredentials" type="identity:PasswordCredentialsRequiredUsername" substitutionGroup="identity:credential" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <simpleType name="ExtensibleServiceType" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>
          An extensible service type allows all of the
                    strings defined in
          <a href="#type_ServiceType" title="See definition of                         ServiceType">ServiceType</a>
          or an
                    alias prefixed status.
        </p>
      </xsd:documentation>
    </annotation>
    <union memberTypes="identity:ServiceType identity:ExtendedService"/>
  </simpleType>
  <simpleType name="ServiceType" xmlns="http://www.w3.org/2001/XMLSchema">
    <restriction base="xsd:string">
      <enumeration value="compute">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for an OpenStack Compute API 1.1 compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="object-store">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for a Swift-compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="image-service">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for a Glance-compatible service</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="identity">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for a Keystone-compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
    </restriction>
  </simpleType>
  <simpleType name="ExtendedService" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A non-core service type which must contain an extension prefix.</p>
      </xsd:documentation>
    </annotation>
    <restriction base="xsd:string">
      <pattern value="(\w|-)+:\w+"/>
    </restriction>
  </simpleType>
  <simpleType name="ExtensibleServiceType" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>
          An extensible service type allows all of the
                    strings defined in
          <a href="#type_ServiceType" title="See definition of                         ServiceType">ServiceType</a>
          or an
                    alias prefixed status.
        </p>
      </xsd:documentation>
    </annotation>
    <union memberTypes="identity:ServiceType identity:ExtendedService"/>
  </simpleType>
  <simpleType name="ServiceType" xmlns="http://www.w3.org/2001/XMLSchema">
    <restriction base="xsd:string">
      <enumeration value="compute">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for an OpenStack Compute API 1.1 compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="object-store">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for a Swift-compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="image-service">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for a Glance-compatible service</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="identity">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for a Keystone-compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
    </restriction>
  </simpleType>
  <simpleType name="ExtendedService" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A non-core service type which must contain an extension prefix.</p>
      </xsd:documentation>
    </annotation>
    <restriction base="xsd:string">
      <pattern value="(\w|-)+:\w+"/>
    </restriction>
  </simpleType>
  <complexType name="Token" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A token is an arbitrary bit of text that is used to access
                    resources. Each token has a scope which describes which
                    resources are accessible with it. A token may be
                    revoked at anytime and is valid for a finite duration.</p>
        <p>While Keystone supports token-based authentication in this release,
                    the intention is for it to support additional protocols in the
                    future. The desire is for it to be an integration service, and not
                    a full-fledged identity store and management solution.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/token.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/token.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
    <sequence>
      <element name="tenant" type="identity:TenantForAuthenticateResponse"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:string" use="required"/>
    <attribute name="expires" type="xsd:dateTime" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="AuthenticateResponse" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="token" type="identity:Token"/>
      <element name="user" type="identity:UserForAuthenticateResponse"/>
      <element name="serviceCatalog" type="identity:ServiceCatalog" minOccurs="0"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="UserForAuthenticateResponse" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="roles" type="identity:RoleList"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:string"/>
    <attribute name="name" type="xsd:string"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="TenantForAuthenticateResponse" xmlns="http://www.w3.org/2001/XMLSchema">
    <attribute name="id" type="xsd:string"/>
    <attribute name="name" type="xsd:string"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="ServiceCatalog" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>The service catalog lists the services you have access to</p>
        <div class="design">
          <p>We optimized for future flexibility around the hierarchy. So we
                    left the design as a flat list of endpoints with attributes and the
                    consumer can categorize as they need.
                    This results in potential duplication (such as with the version/@list)
                    but we acceopt that normalization cost in order to not force an
                    artificial hierarchy (suchas on region, which can be optional).</p>
        </div>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/xml" href="../samples/services.xml"/>
                     
          </xsdxt:sample>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/json" href="../samples/services.json"/>
                     
          </xsdxt:sample>
                 
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
    <sequence>
      <element name="service" type="identity:ServiceForCatalog" minOccurs="1" maxOccurs="unbounded">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>A list of services.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="ServiceForCatalog" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="endpoint" type="identity:EndpointForService" minOccurs="1" maxOccurs="unbounded">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>A list of endpoints.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="type" type="identity:ExtensibleServiceType" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The OpenStack-registered type (e.g. 'compute', 'object-store', etc).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The commercial service name (e.g. 'My Nova Cloud Servers').</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="EndpointForService" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="version" type="identity:VersionForService" maxOccurs="1" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>Version details.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="region" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The name of the region where the endpoint
                        lives. Example: airport codes; LHR (UK),
                        STL (Saint Louis)</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="tenantId" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>Tenant id to which the endpoints belong.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="publicURL" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>Public accessible service URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="internalURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A service URL, accessible only locally within that
                        cloud (generally over a high bandwidth, low latency,
                        free of charge link).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="adminURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>An Admin URL (used for administration using privileged
                        calls). This may expose
                        additional functionality not found in the public and
                        internal URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="VersionForService" xmlns="http://www.w3.org/2001/XMLSchema">
    <attribute name="id" type="xsd:string" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>Id of the version.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="info" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>URI to get the information specific to this version.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="list" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>URI to get the information about all versions.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="Role" xmlns="http://www.w3.org/2001/XMLSchema">
    <attribute name="id" type="xsd:string" use="optional"/>
    <attribute name="name" type="xsd:string" use="required"/>
    <attribute name="description" type="xsd:string" use="optional"/>
    <attribute name="serviceId" type="xsd:string" use="optional"/>
    <attribute name="tenantId" type="xsd:string" use="optional"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="RoleList" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="role" type="identity:Role" minOccurs="0" maxOccurs="unbounded"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="Tenants" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="tenant" type="identity:Tenant" maxOccurs="100"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="Tenant" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="description" type="xsd:string">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>An free text description of the tenant.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:ID" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>An ID uniquely identifying the tenant. This usually comes from the back-end store.
                        This value is guaranteed to be unique and immutable (it will never change).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="name" type="xsd:string" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The name of the tenant. This is guaranteed to be unique, but may change.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="enabled" type="xsd:boolean" use="optional" default="true">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>An boolean signifying if a tenant is enabled or not. A disabled tenant
                        cannot be authenticated against.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="display-name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A human-readable, friendly name for use in user interfaces.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute type="xsd:dateTime" name="updated" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A time-stamp identifying the modification time of the
                        tenant.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute type="xsd:dateTime" name="created" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A creation time-stamp for the tenant.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="IdentityFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="message" type="xsd:string">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>A human readable message that is appropriate for display
                            to the end user.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element name="details" type="xsd:string" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The optional &lt;details> element may contain useful
                            information for tracking down errors (e.g a stack
                            trace).  This information may or may not be appropriate
                            for display to an end user.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="code" type="xsd:int" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The HTTP status code associated with the current fault.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="ServiceUnavailableFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:IdentityFault"/>
    </complexContent>
  </complexType>
  <complexType name="BadRequestFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:IdentityFault"/>
    </complexContent>
  </complexType>
  <complexType name="UnauthorizedFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:IdentityFault"/>
    </complexContent>
  </complexType>
  <complexType name="UserDisabledFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:IdentityFault"/>
    </complexContent>
  </complexType>
  <complexType name="ForbiddenFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:IdentityFault"/>
    </complexContent>
  </complexType>
  <complexType name="ItemNotFoundFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:IdentityFault"/>
    </complexContent>
  </complexType>
  <complexType name="TenantConflictFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:IdentityFault"/>
    </complexContent>
  </complexType>
  <complexType name="OverLimitFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:IdentityFault">
        <attribute name="retryAt" type="xsd:dateTime" use="optional">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
              <p>An optional dateTime denoting when an operation should
                                be retried.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="Endpoint" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="version" type="identity:VersionForService" maxOccurs="1" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>Version details.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:int" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>An ID uniquely identifying the Endpoint.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="type" type="identity:ExtensibleServiceType" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The OpenStack-registered type (e.g. 'compute', 'object-store', etc).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The commercial service name (e.g. 'My Nova Cloud Servers').</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="region" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The region of Endpoint Template.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="publicURL" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The public URL to access represented service.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="internalURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The internal version of the public URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="adminURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The admin URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="tenantId" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>Tenant id to which the endpoints belong.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="EndpointList" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="endpoint" type="identity:Endpoint" minOccurs="0" maxOccurs="unbounded"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="User" xmlns="http://www.w3.org/2001/XMLSchema">
    <attribute name="id" type="xsd:ID" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>An automatically generated, unique, immutable (it will never change) identifier
                        for the user. This is generated by the backend this user is stored in.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="username" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A unique, mutable (it can change) user name that may be used by the user
                        an identifier when presenting credentials.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="email" type="xsd:string" use="optional"/>
    <attribute name="enabled" type="xsd:boolean" default="true" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A true/false value that determines if the user may authenticate or not.
                        If enabled is false, the user will not be able to authenticate.
                        How this value is stored or generated is dependent on the backend in use.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="display-name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A human-readable, friendly name for use in user interfaces.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="updated" type="xsd:dateTime" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A time-stamp identifying the modification time of the
                        user.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="created" type="xsd:dateTime" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A creation time-stamp for the user.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="UserList" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="user" type="identity:User" minOccurs="0" maxOccurs="unbounded"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="CredentialType" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Base type for credential in Keystone.</p>
      </xsd:documentation>
    </annotation>
    <sequence>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="AuthenticationRequest" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Both the tenantId and tenantName are optional, but should not be specified together. If both attributes are specified, the server SHOULD respond with a 400 Bad Request.</p>
      </xsd:documentation>
    </annotation>
    <sequence>
      <choice>
        <element ref="identity:credential" minOccurs="1"/>
        <element name="token" type="identity:TokenForAuthenticationRequest"/>
      </choice>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="tenantId" type="xsd:string" use="optional"/>
    <attribute name="tenantName" type="xsd:string" use="optional"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="TokenForAuthenticationRequest" xmlns="http://www.w3.org/2001/XMLSchema">
    <attribute name="id" type="xsd:string" use="required"/>
  </complexType>
  <complexType name="PasswordCredentialsBase" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:CredentialType">
        <attribute name="username" type="xsd:string" use="optional"/>
        <attribute name="password" type="xsd:string" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="PasswordCredentialsWithoutUsername" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <restriction base="identity:PasswordCredentialsBase">
        <attribute name="username" type="xsd:string" use="prohibited"/>
        <attribute name="password" type="xsd:string" use="required"/>
      </restriction>
    </complexContent>
  </complexType>
  <complexType name="PasswordCredentialsRequiredUsername" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <restriction base="identity:PasswordCredentialsBase">
        <attribute name="username" type="xsd:string" use="required"/>
        <attribute name="password" type="xsd:string" use="required"/>
      </restriction>
    </complexContent>
  </complexType>
  <complexType name="CredentialListType" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element ref="identity:credential" minOccurs="1" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jenny/keystone/keystone/content/admin/normalized/OS-KSCATALOG-admin-xsd-6.xsd</con:url><con:content><![CDATA[<!--Flattened from: file:/home/jenny/keystone/keystone/content/admin/../common/xsd/atom/atom.xsd-->
<xsd:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://www.w3.org/2005/Atom" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:rax="http://docs.rackspace.com/api" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:OS-KSCATALOG="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0">
  <xs:element name="link" type="atom:link" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
  <xs:simpleType name="relation" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:restriction base="xs:string">
      <xs:enumeration value="alternate"/>
      <xs:enumeration value="appendix"/>
      <xs:enumeration value="archives"/>
      <xs:enumeration value="author"/>
      <xs:enumeration value="bookmark"/>
      <xs:enumeration value="chapter"/>
      <xs:enumeration value="contents"/>
      <xs:enumeration value="copyright"/>
      <xs:enumeration value="current"/>
      <xs:enumeration value="describedby"/>
      <xs:enumeration value="edit"/>
      <xs:enumeration value="edit-media"/>
      <xs:enumeration value="first"/>
      <xs:enumeration value="glossary"/>
      <xs:enumeration value="help"/>
      <xs:enumeration value="hub"/>
      <xs:enumeration value="icon"/>
      <xs:enumeration value="index"/>
      <xs:enumeration value="last"/>
      <xs:enumeration value="latest-version"/>
      <xs:enumeration value="license"/>
      <xs:enumeration value="monitor"/>
      <xs:enumeration value="monitor-group"/>
      <xs:enumeration value="next"/>
      <xs:enumeration value="next-arvhice"/>
      <xs:enumeration value="nofollow"/>
      <xs:enumeration value="payment"/>
      <xs:enumeration value="predecessor-version"/>
      <xs:enumeration value="prefetch"/>
      <xs:enumeration value="prev"/>
      <xs:enumeration value="previous"/>
      <xs:enumeration value="prev-archive"/>
      <xs:enumeration value="replies"/>
      <xs:enumeration value="search"/>
      <xs:enumeration value="section"/>
      <xs:enumeration value="self"/>
      <xs:enumeration value="service"/>
      <xs:enumeration value="start"/>
      <xs:enumeration value="stylesheet"/>
      <xs:enumeration value="subsection"/>
      <xs:enumeration value="successor-version"/>
      <xs:enumeration value="up"/>
      <xs:enumeration value="version-history"/>
      <xs:enumeration value="via"/>
      <xs:enumeration value="working-copy"/>
      <xs:enumeration value="working-copy-of"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="link" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation>
        <html:p>
          See section 3.4 of the ATOM RFC
          <html:a href="http://tools.ietf.org/html/rfc4287">RFC4287</html:a>
        </html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="rel" use="required" type="atom:relation">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="type" use="optional" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="href" use="required" type="xs:anyURI">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="hreflang" use="optional" type="xs:NMTOKEN">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="title" use="optional" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
  </xs:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jenny/keystone/keystone/content/admin/normalized/OS-KSCATALOG-admin-xsd-4.xsd</con:url><con:content><![CDATA[<!--Flattened from: file:/home/jenny/keystone/keystone/content/common/xsd/atom/atom.xsd-->
<xsd:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://www.w3.org/2005/Atom" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:rax="http://docs.rackspace.com/api" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:OS-KSCATALOG="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0">
  <xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="OS-KSCATALOG-admin-xsd-5.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
  <xs:element name="link" type="atom:link" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
  <xs:simpleType name="relation" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:restriction base="xs:string">
      <xs:enumeration value="alternate"/>
      <xs:enumeration value="appendix"/>
      <xs:enumeration value="archives"/>
      <xs:enumeration value="author"/>
      <xs:enumeration value="bookmark"/>
      <xs:enumeration value="chapter"/>
      <xs:enumeration value="contents"/>
      <xs:enumeration value="copyright"/>
      <xs:enumeration value="current"/>
      <xs:enumeration value="describedby"/>
      <xs:enumeration value="edit"/>
      <xs:enumeration value="edit-media"/>
      <xs:enumeration value="first"/>
      <xs:enumeration value="glossary"/>
      <xs:enumeration value="help"/>
      <xs:enumeration value="hub"/>
      <xs:enumeration value="icon"/>
      <xs:enumeration value="index"/>
      <xs:enumeration value="last"/>
      <xs:enumeration value="latest-version"/>
      <xs:enumeration value="license"/>
      <xs:enumeration value="monitor"/>
      <xs:enumeration value="monitor-group"/>
      <xs:enumeration value="next"/>
      <xs:enumeration value="next-arvhice"/>
      <xs:enumeration value="nofollow"/>
      <xs:enumeration value="payment"/>
      <xs:enumeration value="predecessor-version"/>
      <xs:enumeration value="prefetch"/>
      <xs:enumeration value="prev"/>
      <xs:enumeration value="previous"/>
      <xs:enumeration value="prev-archive"/>
      <xs:enumeration value="replies"/>
      <xs:enumeration value="search"/>
      <xs:enumeration value="section"/>
      <xs:enumeration value="self"/>
      <xs:enumeration value="service"/>
      <xs:enumeration value="start"/>
      <xs:enumeration value="stylesheet"/>
      <xs:enumeration value="subsection"/>
      <xs:enumeration value="successor-version"/>
      <xs:enumeration value="up"/>
      <xs:enumeration value="version-history"/>
      <xs:enumeration value="via"/>
      <xs:enumeration value="working-copy"/>
      <xs:enumeration value="working-copy-of"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="link" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation>
        <html:p>
          See section 3.4 of the ATOM RFC
          <html:a href="http://tools.ietf.org/html/rfc4287">RFC4287</html:a>
        </html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="rel" use="required" type="atom:relation">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="type" use="optional" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="href" use="required" type="xs:anyURI">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="hreflang" use="optional" type="xs:NMTOKEN">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="title" use="optional" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
  </xs:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jenny/keystone/keystone/content/admin/normalized/OS-KSCATALOG-admin-xsd-5.xsd</con:url><con:content><![CDATA[<!--Flattened from: file:/home/jenny/keystone/keystone/content/common/xsd/atom/xml.xsd-->
<xsd:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:rax="http://docs.rackspace.com/api" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:OS-KSCATALOG="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0">
  <xs:annotation xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:documentation>
      <div>
        <h1>About the XML namespace</h1>
        <div class="bodytext">
          <p>This schema document describes the XML namespace, in a form
      suitable for import by other schema documents.</p>
          <p>
            See
            <a href="http://www.w3.org/XML/1998/namespace.html">http://www.w3.org/XML/1998/namespace.html</a>
            and
            <a href="http://www.w3.org/TR/REC-xml">http://www.w3.org/TR/REC-xml</a>
            for information 
      about this namespace.
          </p>
          <p>Note that local names in this namespace are intended to be
      defined only by the World Wide Web Consortium or its subgroups.
      The names currently defined in this namespace are listed below.
      They should not be used with conflicting semantics by any Working
      Group, specification, or document instance.</p>
          <p>
            See further below in this document for more information about
            <a href="#usage">how to refer to this schema document from your own
      XSD schema documents</a>
            and about
            <a href="#nsversioning">the
      namespace-versioning policy governing this schema document</a>
            .
          </p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>lang (as an attribute name)</h3>
          <p>denotes an attribute whose value
       is a language code for the natural language of the content of
       any element; its value is inherited.  This name is reserved
       by virtue of its definition in the XML specification.</p>
        </div>
        <div>
          <h4>Notes</h4>
          <p>Attempting to install the relevant ISO 2- and 3-letter
      codes as the enumerated possible values is probably never
      going to be a realistic possibility.</p>
          <p>
            See BCP 47 at
            <a href="http://www.rfc-editor.org/rfc/bcp/bcp47.txt">http://www.rfc-editor.org/rfc/bcp/bcp47.txt</a>
            and the IANA language subtag registry at
            <a href="http://www.iana.org/assignments/language-subtag-registry">http://www.iana.org/assignments/language-subtag-registry</a>
            for further information.
          </p>
          <p>The union allows for the 'un-declaration' of xml:lang with
      the empty string.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:union memberTypes="xs:language">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value=""/>
          </xs:restriction>
        </xs:simpleType>
      </xs:union>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="space" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>space (as an attribute name)</h3>
          <p>denotes an attribute whose
       value is a keyword indicating what whitespace processing
       discipline is intended for the content of the element; its
       value is inherited.  This name is reserved by virtue of its
       definition in the XML specification.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>base (as an attribute name)</h3>
          <p>denotes an attribute whose value
       provides a URI to be used as the base for interpreting any
       relative URIs in the scope of the element on which it
       appears; its value is inherited.  This name is reserved
       by virtue of its definition in the XML Base specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xmlbase/">http://www.w3.org/TR/xmlbase/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="id" type="xs:ID" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>id (as an attribute name)</h3>
          <p>denotes an attribute whose value
       should be interpreted as if declared to be of type ID.
       This name is reserved by virtue of its definition in the
       xml:id specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xml-id/">http://www.w3.org/TR/xml-id/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
    <xs:attribute ref="xml:id"/>
  </xs:attributeGroup>
  <xs:annotation xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:documentation>
      <div>
        <h3>Father (in any context at all)</h3>
        <div class="bodytext">
          <p>denotes Jon Bosak, the chair of 
      the original XML Working Group.  This name is reserved by 
      the following decision of the W3C XML Plenary and 
      XML Coordination groups:</p>
          <blockquote>
            <p>In appreciation for his vision, leadership and
	dedication the W3C XML Plenary on this 10th day of
	February, 2000, reserves for Jon Bosak in perpetuity
	the XML name "xml:Father".</p>
          </blockquote>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:documentation>
      <div xml:id="usage" id="usage">
        <h2>
          <a name="usage">About this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            This schema defines attributes and an attribute group suitable
      for use by schemas wishing to allow
            <code>xml:base</code>
            ,
            <code>xml:lang</code>
            ,
            <code>xml:space</code>
            or
            <code>xml:id</code>
            attributes on elements they define.
          </p>
          <p>To enable this, such a schema must import this schema for
      the XML namespace, e.g. as follows:</p>
          <pre>&lt;schema . . .>
           . . .
           &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2001/xml.xsd"/></pre>
          <p>or</p>
          <pre>&lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2009/01/xml.xsd"/></pre>
          <p>Subsequently, qualified reference to any of the attributes or the
      group defined below will have the desired effect, e.g.</p>
          <pre>&lt;type . . .>
           . . .
           &lt;attributeGroup ref="xml:specialAttrs"/></pre>
          <p>will define a type which will schema-validate an instance element
      with any of those attributes.</p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:documentation>
      <div id="nsversioning" xml:id="nsversioning">
        <h2>
          <a name="nsversioning">Versioning policy for this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            In keeping with the XML Schema WG's standard versioning
      policy, this schema document will persist at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            .
          </p>
          <p>
            At the date of issue it can also be found at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            .
          </p>
          <p>
            The schema document at that URI may however change in the future,
      in order to remain compatible with the latest version of XML
      Schema itself, or with the XML namespace itself.  In other words,
      if the XML Schema or XML namespaces change, the version of this
      document at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            will change accordingly; the version at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            will not change.
          </p>
          <p>Previous dated (and unchanging) versions of this schema 
      document are at:</p>
          <ul>
            <li>
              <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2007/08/xml.xsd">http://www.w3.org/2007/08/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2004/10/xml.xsd">http://www.w3.org/2004/10/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2001/03/xml.xsd">http://www.w3.org/2001/03/xml.xsd</a>
            </li>
          </ul>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jenny/keystone/keystone/content/admin/normalized/OS-KSCATALOG-admin-xsd-2.xsd</con:url><con:content><![CDATA[<!--Flattened from: file:/home/jenny/keystone/keystone/content/admin/../common/xsd/api-common.xsd-->
<xsd:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/common/api/v1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:rax="http://docs.rackspace.com/api" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:OS-KSCATALOG="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0">
  <annotation xmlns="http://www.w3.org/2001/XMLSchema">
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Open Stack Common API Schema Types 1.0</xsdxt:title>
      <xsdxt:link rev="index" href="extensions.xsd"/>
      <xsdxt:link rev="index" href="limits.xsd"/>
      <xsdxt:link rev="index" href="version.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>This is the main index XML Schema document
                for Common API Schema Types Version 1.0.</p>
    </xsd:documentation>
  </annotation>
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <xs:annotation xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Version Types</xsdxt:title>
      <xsdxt:link rel="index" href="api-common.xsd"/>
    </xs:appinfo>
    <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>This schema file defines all types related to versioning.</p>
    </xs:documentation>
  </xs:annotation>
  <!--Import ATOM specific schema definitions-->
  <!--Multiple choices-->
  <!--Versioning-->
  <!--Types-->
  <xsd:element name="extensions" type="ext:Extensions" xmlns:ext="http://docs.openstack.org/common/api/v1.0"/>
  <xsd:element name="extension" type="ext:Extension" xmlns:ext="http://docs.openstack.org/common/api/v1.0"/>
  <xs:element name="choices" type="vers:VersionChoiceList" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>This element is returned when the version of the
                    resource cannot be determined. The element
                    provides a list of choices for the resource.</p>
      </xs:documentation>
      <xs:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/choices.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/choices.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <xs:element name="versions" type="vers:VersionChoiceList" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Provides a list of supported versions.</p>
      </xs:documentation>
      <xs:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/versions.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/versions.json"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/atom+xml" href="../samples/versions-atom.xml"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <xs:element name="version2" type="vers:VersionChoiceRoot" vc:minVersion="1.1" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>This element provides detailed meta information
                    regarding the status of the current API
                    version. The description should include a pointer
                    to both a human readable and a machine processable
                    description of the API service.</p>
      </xs:documentation>
      <xs:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/version.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/version.json"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/atom+xml" href="../samples/version-atom.xml"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <xsd:simpleType name="Alias" xmlns:ext="http://docs.openstack.org/common/api/v1.0">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="\w+\-\w+"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xs:simpleType name="VersionStatus" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation>
        <html:p>The VersionStatus type describes a service's operational status.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="ALPHA">
        <xs:annotation>
          <xs:documentation>
            <html:p>This is a new service the API. Thi API
                            contract may be set, but the implementaiton
                            may not be 100% complient with it. Developers
                            are encouraged to begin testing aganst an
                            ALPHA version to provide feedback.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BETA">
        <xs:annotation>
          <xs:documentation>
            <html:p>A status of BETA indicates that this
                            version is a candidate for the next major
                            release and may feature functionality not
                            available in the current
                            version. Developers are encouraged to test
                            and begin the migration processes to a
                            BETA version. Note that a BETA version is
                            undergoing testing, it has not been
                            officially released, and my not be stable.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CURRENT">
        <xs:annotation>
          <xs:documentation>
            <html:p>The API version is stable and has been
                            tested. Developers are encouraged to
                            develop against this API version. The
                            current released version of the API will
                            always be marked as CURRENT.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="DEPRECATED">
        <xs:annotation>
          <xs:documentation>
            <html:p>A status of DEPRECATED indicates that a
                            newer version of the API is
                            available. Application developers are
                            discouraged from using this version and
                            should instead develop against the latest
                            current version of the API.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xsd:complexType name="Extensions" xmlns:ext="http://docs.openstack.org/common/api/v1.0">
    <xsd:sequence>
      <xsd:element name="extension" type="ext:Extension" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
  </xsd:complexType>
  <xsd:complexType name="Extension" xmlns:ext="http://docs.openstack.org/common/api/v1.0">
    <xsd:sequence>
      <xsd:element name="description" type="xsd:string" minOccurs="1"/>
      <!--<xsd:element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded" />-->
      <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="name" type="xsd:string" use="required"/>
    <xsd:attribute name="namespace" type="xsd:anyURI" use="required"/>
    <xsd:attribute name="alias" type="ext:Alias" use="required"/>
    <xsd:attribute name="updated" type="xsd:dateTime" use="optional"/>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
    <!--TODO(Ziad)resolve asser issue
            <xsd:assert vc:minVersion="1.1" test="atom:link[@rel='describedby']">
            <xsd:annotation>
                <xsd:documentation
                    xml:lang="EN"
                    xmlns="http://www.w3.org/1999/xhtml">
                    <p>
                        There should be at least one atom link
                        with a describedby relation.
                    </p>
                </xsd:documentation>
            </xsd:annotation>
        </xsd:assert>-->
  </xsd:complexType>
  <xs:complexType name="VersionChoiceList" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation>
        <html:p>A version choice list outlines a collection of
                    resources at various versions.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="version" type="vers:VersionChoice" minOccurs="1" maxOccurs="unbounded"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
    <!--TODO(Ziad)resolve assert issue
            <xs:assert vc:minVersion="1.1" test="every $v in vers:version satisfies $v/atom:link[@rel='self']">
            <xs:annotation>
                <xs:documentation>
                    <html:p>
                        In version lists, every single version must
                        contain at least one self link.
                    </html:p>
                </xs:documentation>
            </xs:annotation>
        </xs:assert>-->
  </xs:complexType>
  <xs:complexType name="VersionChoiceRoot" vc:minVersion="1.1" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:complexContent>
      <xs:extension base="vers:VersionChoice">
        <!--TODO(Ziad)resolve asser issue
                    <xs:assert test="atom:link[@rel='describedby']">
                    <xs:annotation>
                        <xs:documentation>
                            <html:p>
                                When used as a root element, a version choice
                                must contain at least one describedby link.
                            </html:p>
                        </xs:documentation>
                    </xs:annotation>
                </xs:assert>-->
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="VersionChoice" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation>
        <html:p>A version choice contains relevant information
                    about an available service that a user can then
                    use to target a specific version of the service.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="media-types" type="vers:MediaTypeList" minOccurs="0" maxOccurs="1"/>
      <!--<xs:element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded" />-->
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>
          <html:p>The ID of a version choice represents the service version's unique 
                        identifier. This ID is guaranteed to be unique only among the
                        service version choices outlined in the VersionChoiceList.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="status" type="vers:VersionStatus" use="required">
      <xs:annotation>
        <xs:documentation>
          <html:p>A version choice's status describes the current operational state of
                        the given service version. The operational status is captured in a
                        simple type enumeration called VersionStatus.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="updated" type="xs:dateTime" use="optional">
      <xs:annotation>
        <xs:documentation>
          <html:p>
            A version choice's updated attribute describes
                        the time when the version was updated. The
                        time should be updated anytime
            <html:strong>anything</html:strong>
            in the
                        version has changed: documentation,
                        extensions, bug fixes.
          </html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:complexType name="MediaTypeList" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation>
        <html:p>A MediaTypeList outlines a collection of valid media types for a given 
                    service version.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="media-type" type="vers:MediaType" minOccurs="1" maxOccurs="unbounded"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:complexType name="MediaType" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation>
        <html:p>A MediaType describes what content types the service version understands.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="base" type="xs:string" use="optional" default="">
      <xs:annotation>
        <xs:documentation>
          <html:p>The base of a given media type describes the
                        simple MIME type that then a more complicated
                        media type can be derived from. These types
                        are basic and provide no namespace or version
                        specific data are are only provided as a
                        convenience.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="type" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>
          <html:p>The type attribute of a MediaType describes
                        the MIME specific identifier of the media type
                        in question.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jenny/keystone/keystone/content/admin/normalized/OS-KSCATALOG-admin-xsd-3.xsd</con:url><con:content><![CDATA[<!--Flattened from: file:/home/jenny/keystone/keystone/content/admin/../common/xsd/OS-KSCATALOG.xsd-->
<xsd:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:rax="http://docs.rackspace.com/api" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:OS-KSCATALOG="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0">
  <import namespace="http://docs.openstack.org/identity/api/v2.0" schemaLocation="OS-KSCATALOG-admin-xsd-1.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="OS-KSCATALOG-admin-xsd-6.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Complex Types-->
  <element name="endpointTemplates" type="OS-KSCATALOG:EndpointTemplateList" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A list of Endpoint Templates.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="endpointTemplate" type="OS-KSCATALOG:EndpointTemplate" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>An Endpoint Template.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <complexType name="EndpointTemplate" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="version" type="identity:VersionForService" maxOccurs="1" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>Version details.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:string" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>An ID uniquely identifying the Endpoint Template.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="type" type="identity:ExtensibleServiceType" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The OpenStack-registered type (e.g. 'compute', 'object-store', etc).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The commercial service name (e.g. 'My Nova Cloud Servers').</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="region" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The region of Endpoint Template.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="publicURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The public URL to access represented service.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="internalURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The internal version of the public URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="adminURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The admin URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="global" type="xsd:boolean" default="false" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>If true the Endpoint Template is automatically part of every account.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="enabled" type="xsd:boolean" default="true" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>True if the Endpoint Template is enabled (active). 
                        A Endpoint Template cannot be added if it's disabled or inactive (false).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="EndpointTemplateList" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="endpointTemplate" type="OS-KSCATALOG:EndpointTemplate" minOccurs="0" maxOccurs="unbounded"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="EndpointTemplateWithOnlyId" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <restriction base="OS-KSCATALOG:EndpointTemplate">
        <attribute name="id" type="xsd:string" use="required"/>
        <attribute name="type" type="identity:ExtensibleServiceType" use="prohibited"/>
        <attribute name="name" type="xsd:string" use="prohibited"/>
        <attribute name="region" type="xsd:string" use="prohibited"/>
        <attribute name="publicURL" type="xsd:anyURI" use="prohibited"/>
        <attribute name="internalURL" type="xsd:anyURI" use="prohibited"/>
        <attribute name="adminURL" type="xsd:anyURI" use="prohibited"/>
        <attribute name="global" type="xsd:boolean" use="prohibited"/>
        <attribute name="enabled" type="xsd:boolean" use="prohibited"/>
      </restriction>
    </complexContent>
  </complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:35357</con:endpoint><con:endpoint>${#Project#Endpoint}</con:endpoint></con:endpoints><con:resource name="v2.0" path="${#Project#path}"><con:settings/><con:parameters/><con:resource name="tenants" path="tenants"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="{tenantId}" path="{tenantId}"><con:settings/><con:parameters><con:parameter><con:name>tenantId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="OS-KSCATALOG" path="OS-KSCATALOG"><con:settings/><con:parameters/><con:resource name="endpoints" path="endpoints"><con:settings/><con:parameters/><con:resource name="{endpointId}" path="{endpointId}"><con:settings/><con:parameters><con:parameter><con:name>endpointId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Get Endpoint" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:endpoint</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete Endpoint." method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="List Endpoints" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:endpoints</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Add Endpoint" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0">v1:endpointTemplate</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:endpoint</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource></con:resource><con:resource name="OS-KSCATALOG" path="OS-KSCATALOG"><con:settings/><con:parameters/><con:resource name="endpointTemplates" path="endpointTemplates"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="{endpointTemplateId}" path="{endpointTemplateId}"><con:settings/><con:parameters><con:parameter><con:name>endpointTemplateId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Get Endpoint Template" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0">v1:endpointTemplate</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete Endpoint Template." method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="List Endpoint Templates" method="GET"><con:settings/><con:parameters><con:parameter><con:name>serviceId</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0">v1:endpointTemplates</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Add Endpoint Template" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0">v1:endpointTemplate</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0">v1:endpointTemplate</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="OS-KSEC2-admin" type="rest" basePath="" definitionUrl="/home/jenny/keystone/keystone/content/admin/normalized/OS-KSEC2-admin.wadl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/home/jenny/keystone/keystone/content/admin/normalized/OS-KSEC2-admin.wadl"><con:part><con:url>file:/home/jenny/keystone/keystone/content/admin/normalized/OS-KSEC2-admin.wadl</con:url><con:content><![CDATA[<application xsi:schemaLocation="http://docs.openstack.org/identity/api/v2.0 ../common/xsd/api.xsd   http://docs.openstack.org/common/api/v1.0 ../common/xsd/api-common.xsd   http://wadl.dev.java.net/2009/02 http://www.w3.org/Submission/wadl/wadl.xsd   http://docs.openstack.org/identity/api/ext/OS-KSEC2/v1.0 ../common/xsd/OS-KSEC2-credentials.xsd   " xmlns="http://wadl.dev.java.net/2009/02" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:OS-KSEC2="http://docs.openstack.org/identity/api/ext/OS-KSEC2/v1.0" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0">
  <wadl:grammars xmlns:wadl="http://wadl.dev.java.net/2009/02">
    <!--Original xsd: file:/home/jenny/keystone/keystone/content/admin/../common/xsd/api.xsd-->
    <wadl:include href="OS-KSEC2-admin-xsd-1.xsd"/>
    <!--Original xsd: file:/home/jenny/keystone/keystone/content/admin/../common/xsd/api-common.xsd-->
    <wadl:include href="OS-KSEC2-admin-xsd-2.xsd"/>
    <!--Original xsd: file:/home/jenny/keystone/keystone/content/admin/../common/xsd/OS-KSEC2-credentials.xsd-->
    <wadl:include href="OS-KSEC2-admin-xsd-3.xsd"/>
  </wadl:grammars>
  <!--*******************************************************-->
  <!--All Resources-->
  <!--*******************************************************-->
  <!--We should use SSL in production-->
  <resources base="http://localhost:35357">
    <resource path="v2.0">
      <param name="X-Auth-Token" style="header" type="xsd:string" required="true" rax:id="" xmlns:rax="http://docs.rackspace.com/api">
        <doc>You need a valid admin token for access.</doc>
      </param>
      <resource path="users">
        <resource path="{userId}">
          <param name="userId" style="template" required="true" type="xsd:string" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
          <resource path="OS-KSADM">
            <resource path="credentials">
              <method name="POST" rax:id="addUserCredential" xmlns:rax="http://docs.rackspace.com/api">
                <doc xml:lang="EN" title="Add user Credential.">
                  <p xmlns="http://www.w3.org/1999/xhtml">Adds a credential to a user.</p>
                </doc>
                <request>
                  <representation mediaType="application/xml" element="OS-KSEC2:ec2Credentials">
                    <doc xml:lang="EN">
                      <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                        <title>Add user Credential. Request: XML</title>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
  &lt;ec2Credentials
    xmlns="http://docs.openstack.org/identity/api/ext/OS-KSEC2/v1.0"
    username="testuser"
    key="aaaaa"
    signature="bbbbb"/></programlisting>
                      </example>
                    </doc>
                  </representation>
                  <representation mediaType="application/json">
                    <doc xml:lang="EN">
                      <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                        <title>Add user Credential. Request: JSON</title>
                        <programlisting language="javascript">{
    "OS-KSEC2-ec2Credentials":{
        "username":"test_user",
        "secret":"aaaaa",
        "signature":"bbb"
    }
}</programlisting>
                      </example>
                    </doc>
                  </representation>
                </request>
                <response status="201">
                  <representation mediaType="application/xml" element="OS-KSEC2:ec2Credentials">
                    <doc xml:lang="EN">
                      <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                        <title>Add user Credential. Response: XML</title>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
  &lt;ec2Credentials
    xmlns="http://docs.openstack.org/identity/api/ext/OS-KSEC2/v1.0"
    username="testuser"
    key="aaaaa"
    signature="bbbbb"/></programlisting>
                      </example>
                    </doc>
                  </representation>
                  <representation mediaType="application/json">
                    <doc xml:lang="EN">
                      <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                        <title>Add user Credential. Response: JSON</title>
                        <programlisting language="javascript">{
    "OS-KSEC2-ec2Credentials":{
        "username":"test_user",
        "secret":"aaaaa",
        "signature":"bbb"
    }
}</programlisting>
                      </example>
                    </doc>
                  </representation>
                </response>
                <response>
                  <representation mediaType="application/xml" element="identity:identityFault"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="400">
                  <representation mediaType="application/xml" element="identity:badRequest"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="401">
                  <representation mediaType="application/xml" element="identity:unauthorized"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="403">
                  <representation mediaType="application/xml" element="identity:forbidden"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="405">
                  <representation mediaType="application/xml" element="identity:badMethod"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="413">
                  <representation mediaType="application/xml" element="identity:overLimit"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="503">
                  <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="415">
                  <representation mediaType="application/xml" element="identity:badMediaType"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="404">
                  <representation mediaType="application/xml" element="identity:itemNotFound"/>
                  <representation mediaType="application/json"/>
                </response>
              </method>
              <method name="GET" rax:id="listCredentials" xmlns:rax="http://docs.rackspace.com/api">
                <doc xml:lang="EN" title="List Credentials">
                  <p xmlns="http://www.w3.org/1999/xhtml">List credentials.</p>
                </doc>
                <request>
                  <param name="marker" style="query" required="false" type="xsd:string" rax:id=""/>
                  <param name="limit" style="query" required="false" type="xsd:int" rax:id=""/>
                </request>
                <response status="200 203">
                  <representation mediaType="application/xml" element="identity:credentials">
                    <doc xml:lang="EN">
                      <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                        <title>List Credentials Response: XML</title>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;credentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://docs.openstack.org/identity/api/v2.0">
    &lt;passwordCredentials username="test_user" password="test"/>
    &lt;ec2Credentials xmlns="http://docs.openstack.org/identity/api/ext/OS-KSEC2/v1.0"
    	username="testuser" key="aaaaa" signature="bbbbb"/>
&lt;/credentials></programlisting>
                      </example>
                    </doc>
                  </representation>
                  <representation mediaType="application/json">
                    <doc xml:lang="EN">
                      <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                        <title>List Credentials Response: JSON</title>
                        <programlisting language="javascript">{
    "credentials":[{
            "passwordCredentials":{
                "username":"test_user",
                "password":"mypass"
            }
        },
        {
            "OS-KSEC2-ec2Credentials":{
                "username":"test_user",
                "secret":"aaaaa",
                "signature":"bbb"
            }
        }
    ],
    "credentials_links":[]
}</programlisting>
                      </example>
                    </doc>
                  </representation>
                </response>
                <response>
                  <representation mediaType="application/xml" element="identity:identityFault"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="400">
                  <representation mediaType="application/xml" element="identity:badRequest"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="401">
                  <representation mediaType="application/xml" element="identity:unauthorized"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="403">
                  <representation mediaType="application/xml" element="identity:forbidden"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="405">
                  <representation mediaType="application/xml" element="identity:badMethod"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="413">
                  <representation mediaType="application/xml" element="identity:overLimit"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="503">
                  <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="404">
                  <representation mediaType="application/xml" element="identity:itemNotFound"/>
                  <representation mediaType="application/json"/>
                </response>
              </method>
              <resource path="OS-KSEC2:ec2Credentials">
                <method name="POST" rax:id="updateUserCredential" xmlns:rax="http://docs.rackspace.com/api">
                  <doc xml:lang="EN" title="Update user credential">
                    <p xmlns="http://www.w3.org/1999/xhtml">Update credentials.</p>
                  </doc>
                  <request>
                    <representation mediaType="application/xml" element="OS-KSEC2:ec2Credentials">
                      <doc xml:lang="EN">
                        <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                          <title>Update user credential Request: XML</title>
                          <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
  &lt;ec2Credentials
    xmlns="http://docs.openstack.org/identity/api/ext/OS-KSEC2/v1.0"
    username="testuser"
    key="aaaaa"
    signature="bbbbb"/></programlisting>
                        </example>
                      </doc>
                    </representation>
                    <representation mediaType="application/json">
                      <doc xml:lang="EN">
                        <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                          <title>Update user credential Request: JSON</title>
                          <programlisting language="javascript">{
    "OS-KSEC2-ec2Credentials":{
        "username":"test_user",
        "secret":"aaaaa",
        "signature":"bbb"
    }
}</programlisting>
                        </example>
                      </doc>
                    </representation>
                  </request>
                  <response status="200">
                    <representation mediaType="application/xml" element="OS-KSEC2:ec2Credentials">
                      <doc xml:lang="EN">
                        <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                          <title>Update user credential Response: XML</title>
                          <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
  &lt;ec2Credentials
    xmlns="http://docs.openstack.org/identity/api/ext/OS-KSEC2/v1.0"
    username="testuser"
    key="aaaaa"
    signature="bbbbb"/></programlisting>
                        </example>
                      </doc>
                    </representation>
                    <representation mediaType="application/json">
                      <doc xml:lang="EN">
                        <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                          <title>Update user credential Response: JSON</title>
                          <programlisting language="javascript">{
    "OS-KSEC2-ec2Credentials":{
        "username":"test_user",
        "secret":"aaaaa",
        "signature":"bbb"
    }
}</programlisting>
                        </example>
                      </doc>
                    </representation>
                  </response>
                  <response>
                    <representation mediaType="application/xml" element="identity:identityFault"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="400">
                    <representation mediaType="application/xml" element="identity:badRequest"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="401">
                    <representation mediaType="application/xml" element="identity:unauthorized"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="403">
                    <representation mediaType="application/xml" element="identity:forbidden"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="405">
                    <representation mediaType="application/xml" element="identity:badMethod"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="413">
                    <representation mediaType="application/xml" element="identity:overLimit"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="503">
                    <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="415">
                    <representation mediaType="application/xml" element="identity:badMediaType"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="404">
                    <representation mediaType="application/xml" element="identity:itemNotFound"/>
                    <representation mediaType="application/json"/>
                  </response>
                </method>
                <method name="DELETE" rax:id="deleteUserCredential" xmlns:rax="http://docs.rackspace.com/api">
                  <doc xml:lang="EN" title="Delete user credential">
                    <p xmlns="http://www.w3.org/1999/xhtml">Delete User credentials.</p>
                  </doc>
                  <response status="204"/>
                  <response>
                    <representation mediaType="application/xml" element="identity:identityFault"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="400">
                    <representation mediaType="application/xml" element="identity:badRequest"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="401">
                    <representation mediaType="application/xml" element="identity:unauthorized"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="403">
                    <representation mediaType="application/xml" element="identity:forbidden"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="405">
                    <representation mediaType="application/xml" element="identity:badMethod"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="413">
                    <representation mediaType="application/xml" element="identity:overLimit"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="503">
                    <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="415">
                    <representation mediaType="application/xml" element="identity:badMediaType"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="404">
                    <representation mediaType="application/xml" element="identity:itemNotFound"/>
                    <representation mediaType="application/json"/>
                  </response>
                </method>
                <method name="GET" rax:id="getUserCredential" xmlns:rax="http://docs.rackspace.com/api">
                  <doc xml:lang="EN" title="Get user Credentials">
                    <p xmlns="http://www.w3.org/1999/xhtml">Get user credentials.</p>
                  </doc>
                  <response status="200 203">
                    <representation mediaType="application/xml" element="OS-KSEC2:ec2Credentials">
                      <doc xml:lang="EN">
                        <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                          <title>Get user Credentials Response: XML</title>
                          <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
  &lt;ec2Credentials
    xmlns="http://docs.openstack.org/identity/api/ext/OS-KSEC2/v1.0"
    username="testuser"
    key="aaaaa"
    signature="bbbbb"/></programlisting>
                        </example>
                      </doc>
                    </representation>
                    <representation mediaType="application/json">
                      <doc xml:lang="EN">
                        <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                          <title>Get user Credentials Response: JSON</title>
                          <programlisting language="javascript">{
    "OS-KSEC2-ec2Credentials":{
        "username":"test_user",
        "secret":"aaaaa",
        "signature":"bbb"
    }
}</programlisting>
                        </example>
                      </doc>
                    </representation>
                  </response>
                  <response>
                    <representation mediaType="application/xml" element="identity:identityFault"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="400">
                    <representation mediaType="application/xml" element="identity:badRequest"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="401">
                    <representation mediaType="application/xml" element="identity:unauthorized"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="403">
                    <representation mediaType="application/xml" element="identity:forbidden"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="405">
                    <representation mediaType="application/xml" element="identity:badMethod"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="413">
                    <representation mediaType="application/xml" element="identity:overLimit"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="503">
                    <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="404">
                    <representation mediaType="application/xml" element="identity:itemNotFound"/>
                    <representation mediaType="application/json"/>
                  </response>
                </method>
              </resource>
            </resource>
          </resource>
        </resource>
      </resource>
    </resource>
  </resources>
  <!--*******************************************************-->
  <!--All Methods-->
  <!--*******************************************************-->
  <!--User Credentials-->
  <method name="POST" id="addUserCredential">
    <doc xml:lang="EN" title="Add user Credential.">
      <p xmlns="http://www.w3.org/1999/xhtml">Adds a credential to a user.</p>
    </doc>
    <request>
      <representation mediaType="application/xml" element="OS-KSEC2:ec2Credentials">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Add user Credential. Request: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
  &lt;ec2Credentials
    xmlns="http://docs.openstack.org/identity/api/ext/OS-KSEC2/v1.0"
    username="testuser"
    key="aaaaa"
    signature="bbbbb"/></programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Add user Credential. Request: JSON</title>
            <programlisting language="javascript">{
    "OS-KSEC2-ec2Credentials":{
        "username":"test_user",
        "secret":"aaaaa",
        "signature":"bbb"
    }
}</programlisting>
          </example>
        </doc>
      </representation>
    </request>
    <response status="201">
      <representation mediaType="application/xml" element="OS-KSEC2:ec2Credentials">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Add user Credential. Response: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
  &lt;ec2Credentials
    xmlns="http://docs.openstack.org/identity/api/ext/OS-KSEC2/v1.0"
    username="testuser"
    key="aaaaa"
    signature="bbbbb"/></programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Add user Credential. Response: JSON</title>
            <programlisting language="javascript">{
    "OS-KSEC2-ec2Credentials":{
        "username":"test_user",
        "secret":"aaaaa",
        "signature":"bbb"
    }
}</programlisting>
          </example>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="listCredentials">
    <doc xml:lang="EN" title="List Credentials">
      <p xmlns="http://www.w3.org/1999/xhtml">List credentials.</p>
    </doc>
    <request>
      <param name="marker" style="query" required="false" type="xsd:string" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
      <param name="limit" style="query" required="false" type="xsd:int" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:credentials">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>List Credentials Response: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;credentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://docs.openstack.org/identity/api/v2.0">
    &lt;passwordCredentials username="test_user" password="test"/>
    &lt;ec2Credentials xmlns="http://docs.openstack.org/identity/api/ext/OS-KSEC2/v1.0"
    	username="testuser" key="aaaaa" signature="bbbbb"/>
&lt;/credentials></programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>List Credentials Response: JSON</title>
            <programlisting language="javascript">{
    "credentials":[{
            "passwordCredentials":{
                "username":"test_user",
                "password":"mypass"
            }
        },
        {
            "OS-KSEC2-ec2Credentials":{
                "username":"test_user",
                "secret":"aaaaa",
                "signature":"bbb"
            }
        }
    ],
    "credentials_links":[]
}</programlisting>
          </example>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="listCredentialsByType">
    <doc xml:lang="EN" title="List Credentials by type">
      <p xmlns="http://www.w3.org/1999/xhtml">List credentials by type.</p>
    </doc>
    <request>
      <param name="marker" style="query" required="false" type="xsd:string" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
      <param name="limit" style="query" required="false" type="xsd:int" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:credentials">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>List Credentials by type Response: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;credentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://docs.openstack.org/identity/api/v2.0">
    &lt;passwordCredentials username="test_user" password="test"/>
&lt;/credentials></programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>List Credentials by type Response: JSON</title>
            <programlisting language="javascript">{
    "credentials":[{
            "passwordCredentials":{
                "username":"test_user",
                "password":"mypass"
            }
        }
    ],
    "credentials_links":[]
}</programlisting>
          </example>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="POST" id="updateUserCredential">
    <doc xml:lang="EN" title="Update user credential">
      <p xmlns="http://www.w3.org/1999/xhtml">Update credentials.</p>
    </doc>
    <request>
      <representation mediaType="application/xml" element="OS-KSEC2:ec2Credentials">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Update user credential Request: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
  &lt;ec2Credentials
    xmlns="http://docs.openstack.org/identity/api/ext/OS-KSEC2/v1.0"
    username="testuser"
    key="aaaaa"
    signature="bbbbb"/></programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Update user credential Request: JSON</title>
            <programlisting language="javascript">{
    "OS-KSEC2-ec2Credentials":{
        "username":"test_user",
        "secret":"aaaaa",
        "signature":"bbb"
    }
}</programlisting>
          </example>
        </doc>
      </representation>
    </request>
    <response status="200">
      <representation mediaType="application/xml" element="OS-KSEC2:ec2Credentials">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Update user credential Response: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
  &lt;ec2Credentials
    xmlns="http://docs.openstack.org/identity/api/ext/OS-KSEC2/v1.0"
    username="testuser"
    key="aaaaa"
    signature="bbbbb"/></programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Update user credential Response: JSON</title>
            <programlisting language="javascript">{
    "OS-KSEC2-ec2Credentials":{
        "username":"test_user",
        "secret":"aaaaa",
        "signature":"bbb"
    }
}</programlisting>
          </example>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="DELETE" id="deleteUserCredential">
    <doc xml:lang="EN" title="Delete user credential">
      <p xmlns="http://www.w3.org/1999/xhtml">Delete User credentials.</p>
    </doc>
    <response status="204"/>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getUserCredential">
    <doc xml:lang="EN" title="Get user Credentials">
      <p xmlns="http://www.w3.org/1999/xhtml">Get user credentials.</p>
    </doc>
    <response status="200 203">
      <representation mediaType="application/xml" element="OS-KSEC2:ec2Credentials">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Get user Credentials Response: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
  &lt;ec2Credentials
    xmlns="http://docs.openstack.org/identity/api/ext/OS-KSEC2/v1.0"
    username="testuser"
    key="aaaaa"
    signature="bbbbb"/></programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Get user Credentials Response: JSON</title>
            <programlisting language="javascript">{
    "OS-KSEC2-ec2Credentials":{
        "username":"test_user",
        "secret":"aaaaa",
        "signature":"bbb"
    }
}</programlisting>
          </example>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
</application>]]></con:content><con:type>http://wadl.dev.java.net/2009/02</con:type></con:part><con:part><con:url>file:/home/jenny/keystone/keystone/content/admin/normalized/OS-KSEC2-admin-xsd-1.xsd</con:url><con:content><![CDATA[<!--Flattened from: file:/home/jenny/keystone/keystone/content/admin/../common/xsd/api.xsd-->
<xsd:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:rax="http://docs.rackspace.com/api" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:OS-KSEC2="http://docs.openstack.org/identity/api/ext/OS-KSEC2/v1.0">
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="OS-KSEC2-admin-xsd-4.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <!--Elements-->
  <!--Complex Types-->
  <!--EndpointForService-->
  <!--VersionForService-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="OS-KSEC2-admin-xsd-4.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Elements-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="OS-KSEC2-admin-xsd-4.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Simple Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <!--Elements-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Fault Elements-->
  <!--Fault Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="OS-KSEC2-admin-xsd-4.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Elements-->
  <!--Complex Types-->
  <!--EndpointForService-->
  <!--VersionForService-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="OS-KSEC2-admin-xsd-4.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Elements-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Fault Elements-->
  <!--Fault Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="OS-KSEC2-admin-xsd-4.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="OS-KSEC2-admin-xsd-4.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Elements-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="OS-KSEC2-admin-xsd-4.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Elements-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <!--Elements-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <!--Elements-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <!--Elements-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <!--Simple Types-->
  <element name="access" type="identity:AuthenticateResponse" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="roles" type="identity:RoleList" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A list of roles.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="role" type="identity:Role" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A role.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="tenant" type="identity:Tenant" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A container used to group or isolate resources and/or identity
                  objects. Depending on the service operator, a tenant may map to a customer,
                  account, organization, or project.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/xml" href="../samples/tenant.xml"/>
                     
          </xsdxt:sample>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/json" href="../samples/tenant.json"/>
                     
          </xsdxt:sample>
                 
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="tenants" type="identity:Tenants" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A list of tenants.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="identityFault" type="identity:IdentityFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="serviceUnavailable" type="identity:ServiceUnavailableFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="badRequest" type="identity:BadRequestFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="unauthorized" type="identity:UnauthorizedFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="overLimit" type="identity:OverLimitFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="userDisabled" type="identity:UserDisabledFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="forbidden" type="identity:ForbiddenFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="itemNotFound" type="identity:ItemNotFoundFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="tenantConflict" type="identity:TenantConflictFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="endpoint" type="identity:Endpoint" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>An Endpoint.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="endpoints" type="identity:EndpointList" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A list of Endpoints.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="users" type="identity:UserList" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN">
        <p>A list of Users.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="user" type="identity:User" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN">
        <p>A Keystone User.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="auth" type="identity:AuthenticationRequest" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="credential" type="identity:CredentialType" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="credentials" type="identity:CredentialListType" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="passwordCredentials" type="identity:PasswordCredentialsRequiredUsername" substitutionGroup="identity:credential" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <simpleType name="ExtensibleServiceType" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>
          An extensible service type allows all of the
                    strings defined in
          <a href="#type_ServiceType" title="See definition of                         ServiceType">ServiceType</a>
          or an
                    alias prefixed status.
        </p>
      </xsd:documentation>
    </annotation>
    <union memberTypes="identity:ServiceType identity:ExtendedService"/>
  </simpleType>
  <simpleType name="ServiceType" xmlns="http://www.w3.org/2001/XMLSchema">
    <restriction base="xsd:string">
      <enumeration value="compute">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for an OpenStack Compute API 1.1 compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="object-store">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for a Swift-compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="image-service">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for a Glance-compatible service</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="identity">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for a Keystone-compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
    </restriction>
  </simpleType>
  <simpleType name="ExtendedService" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A non-core service type which must contain an extension prefix.</p>
      </xsd:documentation>
    </annotation>
    <restriction base="xsd:string">
      <pattern value="(\w|-)+:\w+"/>
    </restriction>
  </simpleType>
  <simpleType name="ExtensibleServiceType" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>
          An extensible service type allows all of the
                    strings defined in
          <a href="#type_ServiceType" title="See definition of                         ServiceType">ServiceType</a>
          or an
                    alias prefixed status.
        </p>
      </xsd:documentation>
    </annotation>
    <union memberTypes="identity:ServiceType identity:ExtendedService"/>
  </simpleType>
  <simpleType name="ServiceType" xmlns="http://www.w3.org/2001/XMLSchema">
    <restriction base="xsd:string">
      <enumeration value="compute">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for an OpenStack Compute API 1.1 compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="object-store">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for a Swift-compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="image-service">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for a Glance-compatible service</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="identity">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for a Keystone-compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
    </restriction>
  </simpleType>
  <simpleType name="ExtendedService" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A non-core service type which must contain an extension prefix.</p>
      </xsd:documentation>
    </annotation>
    <restriction base="xsd:string">
      <pattern value="(\w|-)+:\w+"/>
    </restriction>
  </simpleType>
  <complexType name="Token" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A token is an arbitrary bit of text that is used to access
                    resources. Each token has a scope which describes which
                    resources are accessible with it. A token may be
                    revoked at anytime and is valid for a finite duration.</p>
        <p>While Keystone supports token-based authentication in this release,
                    the intention is for it to support additional protocols in the
                    future. The desire is for it to be an integration service, and not
                    a full-fledged identity store and management solution.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/token.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/token.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
    <sequence>
      <element name="tenant" type="identity:TenantForAuthenticateResponse"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:string" use="required"/>
    <attribute name="expires" type="xsd:dateTime" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="AuthenticateResponse" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="token" type="identity:Token"/>
      <element name="user" type="identity:UserForAuthenticateResponse"/>
      <element name="serviceCatalog" type="identity:ServiceCatalog" minOccurs="0"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="UserForAuthenticateResponse" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="roles" type="identity:RoleList"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:string"/>
    <attribute name="name" type="xsd:string"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="TenantForAuthenticateResponse" xmlns="http://www.w3.org/2001/XMLSchema">
    <attribute name="id" type="xsd:string"/>
    <attribute name="name" type="xsd:string"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="ServiceCatalog" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>The service catalog lists the services you have access to</p>
        <div class="design">
          <p>We optimized for future flexibility around the hierarchy. So we
                    left the design as a flat list of endpoints with attributes and the
                    consumer can categorize as they need.
                    This results in potential duplication (such as with the version/@list)
                    but we acceopt that normalization cost in order to not force an
                    artificial hierarchy (suchas on region, which can be optional).</p>
        </div>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/xml" href="../samples/services.xml"/>
                     
          </xsdxt:sample>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/json" href="../samples/services.json"/>
                     
          </xsdxt:sample>
                 
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
    <sequence>
      <element name="service" type="identity:ServiceForCatalog" minOccurs="1" maxOccurs="unbounded">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>A list of services.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="ServiceForCatalog" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="endpoint" type="identity:EndpointForService" minOccurs="1" maxOccurs="unbounded">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>A list of endpoints.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="type" type="identity:ExtensibleServiceType" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The OpenStack-registered type (e.g. 'compute', 'object-store', etc).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The commercial service name (e.g. 'My Nova Cloud Servers').</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="EndpointForService" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="version" type="identity:VersionForService" maxOccurs="1" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>Version details.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="region" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The name of the region where the endpoint
                        lives. Example: airport codes; LHR (UK),
                        STL (Saint Louis)</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="tenantId" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>Tenant id to which the endpoints belong.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="publicURL" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>Public accessible service URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="internalURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A service URL, accessible only locally within that
                        cloud (generally over a high bandwidth, low latency,
                        free of charge link).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="adminURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>An Admin URL (used for administration using privileged
                        calls). This may expose
                        additional functionality not found in the public and
                        internal URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="VersionForService" xmlns="http://www.w3.org/2001/XMLSchema">
    <attribute name="id" type="xsd:string" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>Id of the version.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="info" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>URI to get the information specific to this version.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="list" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>URI to get the information about all versions.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="Role" xmlns="http://www.w3.org/2001/XMLSchema">
    <attribute name="id" type="xsd:string" use="optional"/>
    <attribute name="name" type="xsd:string" use="required"/>
    <attribute name="description" type="xsd:string" use="optional"/>
    <attribute name="serviceId" type="xsd:string" use="optional"/>
    <attribute name="tenantId" type="xsd:string" use="optional"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="RoleList" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="role" type="identity:Role" minOccurs="0" maxOccurs="unbounded"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="Tenants" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="tenant" type="identity:Tenant" maxOccurs="100"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="Tenant" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="description" type="xsd:string">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>An free text description of the tenant.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:ID" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>An ID uniquely identifying the tenant. This usually comes from the back-end store.
                        This value is guaranteed to be unique and immutable (it will never change).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="name" type="xsd:string" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The name of the tenant. This is guaranteed to be unique, but may change.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="enabled" type="xsd:boolean" use="optional" default="true">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>An boolean signifying if a tenant is enabled or not. A disabled tenant
                        cannot be authenticated against.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="display-name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A human-readable, friendly name for use in user interfaces.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute type="xsd:dateTime" name="updated" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A time-stamp identifying the modification time of the
                        tenant.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute type="xsd:dateTime" name="created" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A creation time-stamp for the tenant.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="IdentityFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="message" type="xsd:string">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>A human readable message that is appropriate for display
                            to the end user.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element name="details" type="xsd:string" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The optional &lt;details> element may contain useful
                            information for tracking down errors (e.g a stack
                            trace).  This information may or may not be appropriate
                            for display to an end user.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="code" type="xsd:int" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The HTTP status code associated with the current fault.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="ServiceUnavailableFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:IdentityFault"/>
    </complexContent>
  </complexType>
  <complexType name="BadRequestFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:IdentityFault"/>
    </complexContent>
  </complexType>
  <complexType name="UnauthorizedFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:IdentityFault"/>
    </complexContent>
  </complexType>
  <complexType name="UserDisabledFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:IdentityFault"/>
    </complexContent>
  </complexType>
  <complexType name="ForbiddenFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:IdentityFault"/>
    </complexContent>
  </complexType>
  <complexType name="ItemNotFoundFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:IdentityFault"/>
    </complexContent>
  </complexType>
  <complexType name="TenantConflictFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:IdentityFault"/>
    </complexContent>
  </complexType>
  <complexType name="OverLimitFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:IdentityFault">
        <attribute name="retryAt" type="xsd:dateTime" use="optional">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
              <p>An optional dateTime denoting when an operation should
                                be retried.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="Endpoint" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="version" type="identity:VersionForService" maxOccurs="1" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>Version details.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:int" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>An ID uniquely identifying the Endpoint.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="type" type="identity:ExtensibleServiceType" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The OpenStack-registered type (e.g. 'compute', 'object-store', etc).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The commercial service name (e.g. 'My Nova Cloud Servers').</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="region" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The region of Endpoint Template.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="publicURL" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The public URL to access represented service.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="internalURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The internal version of the public URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="adminURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The admin URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="tenantId" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>Tenant id to which the endpoints belong.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="EndpointList" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="endpoint" type="identity:Endpoint" minOccurs="0" maxOccurs="unbounded"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="User" xmlns="http://www.w3.org/2001/XMLSchema">
    <attribute name="id" type="xsd:ID" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>An automatically generated, unique, immutable (it will never change) identifier
                        for the user. This is generated by the backend this user is stored in.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="username" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A unique, mutable (it can change) user name that may be used by the user
                        an identifier when presenting credentials.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="email" type="xsd:string" use="optional"/>
    <attribute name="enabled" type="xsd:boolean" default="true" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A true/false value that determines if the user may authenticate or not.
                        If enabled is false, the user will not be able to authenticate.
                        How this value is stored or generated is dependent on the backend in use.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="display-name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A human-readable, friendly name for use in user interfaces.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="updated" type="xsd:dateTime" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A time-stamp identifying the modification time of the
                        user.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="created" type="xsd:dateTime" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A creation time-stamp for the user.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="UserList" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="user" type="identity:User" minOccurs="0" maxOccurs="unbounded"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="CredentialType" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Base type for credential in Keystone.</p>
      </xsd:documentation>
    </annotation>
    <sequence>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="AuthenticationRequest" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Both the tenantId and tenantName are optional, but should not be specified together. If both attributes are specified, the server SHOULD respond with a 400 Bad Request.</p>
      </xsd:documentation>
    </annotation>
    <sequence>
      <choice>
        <element ref="identity:credential" minOccurs="1"/>
        <element name="token" type="identity:TokenForAuthenticationRequest"/>
      </choice>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="tenantId" type="xsd:string" use="optional"/>
    <attribute name="tenantName" type="xsd:string" use="optional"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="TokenForAuthenticationRequest" xmlns="http://www.w3.org/2001/XMLSchema">
    <attribute name="id" type="xsd:string" use="required"/>
  </complexType>
  <complexType name="PasswordCredentialsBase" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:CredentialType">
        <attribute name="username" type="xsd:string" use="optional"/>
        <attribute name="password" type="xsd:string" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="PasswordCredentialsWithoutUsername" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <restriction base="identity:PasswordCredentialsBase">
        <attribute name="username" type="xsd:string" use="prohibited"/>
        <attribute name="password" type="xsd:string" use="required"/>
      </restriction>
    </complexContent>
  </complexType>
  <complexType name="PasswordCredentialsRequiredUsername" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <restriction base="identity:PasswordCredentialsBase">
        <attribute name="username" type="xsd:string" use="required"/>
        <attribute name="password" type="xsd:string" use="required"/>
      </restriction>
    </complexContent>
  </complexType>
  <complexType name="CredentialListType" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element ref="identity:credential" minOccurs="1" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jenny/keystone/keystone/content/admin/normalized/OS-KSEC2-admin-xsd-4.xsd</con:url><con:content><![CDATA[<!--Flattened from: file:/home/jenny/keystone/keystone/content/common/xsd/atom/atom.xsd-->
<xsd:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://www.w3.org/2005/Atom" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:rax="http://docs.rackspace.com/api" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:OS-KSEC2="http://docs.openstack.org/identity/api/ext/OS-KSEC2/v1.0">
  <xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="OS-KSEC2-admin-xsd-5.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
  <xs:element name="link" type="atom:link" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
  <xs:simpleType name="relation" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:restriction base="xs:string">
      <xs:enumeration value="alternate"/>
      <xs:enumeration value="appendix"/>
      <xs:enumeration value="archives"/>
      <xs:enumeration value="author"/>
      <xs:enumeration value="bookmark"/>
      <xs:enumeration value="chapter"/>
      <xs:enumeration value="contents"/>
      <xs:enumeration value="copyright"/>
      <xs:enumeration value="current"/>
      <xs:enumeration value="describedby"/>
      <xs:enumeration value="edit"/>
      <xs:enumeration value="edit-media"/>
      <xs:enumeration value="first"/>
      <xs:enumeration value="glossary"/>
      <xs:enumeration value="help"/>
      <xs:enumeration value="hub"/>
      <xs:enumeration value="icon"/>
      <xs:enumeration value="index"/>
      <xs:enumeration value="last"/>
      <xs:enumeration value="latest-version"/>
      <xs:enumeration value="license"/>
      <xs:enumeration value="monitor"/>
      <xs:enumeration value="monitor-group"/>
      <xs:enumeration value="next"/>
      <xs:enumeration value="next-arvhice"/>
      <xs:enumeration value="nofollow"/>
      <xs:enumeration value="payment"/>
      <xs:enumeration value="predecessor-version"/>
      <xs:enumeration value="prefetch"/>
      <xs:enumeration value="prev"/>
      <xs:enumeration value="previous"/>
      <xs:enumeration value="prev-archive"/>
      <xs:enumeration value="replies"/>
      <xs:enumeration value="search"/>
      <xs:enumeration value="section"/>
      <xs:enumeration value="self"/>
      <xs:enumeration value="service"/>
      <xs:enumeration value="start"/>
      <xs:enumeration value="stylesheet"/>
      <xs:enumeration value="subsection"/>
      <xs:enumeration value="successor-version"/>
      <xs:enumeration value="up"/>
      <xs:enumeration value="version-history"/>
      <xs:enumeration value="via"/>
      <xs:enumeration value="working-copy"/>
      <xs:enumeration value="working-copy-of"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="link" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation>
        <html:p>
          See section 3.4 of the ATOM RFC
          <html:a href="http://tools.ietf.org/html/rfc4287">RFC4287</html:a>
        </html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="rel" use="required" type="atom:relation">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="type" use="optional" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="href" use="required" type="xs:anyURI">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="hreflang" use="optional" type="xs:NMTOKEN">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="title" use="optional" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
  </xs:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jenny/keystone/keystone/content/admin/normalized/OS-KSEC2-admin-xsd-5.xsd</con:url><con:content><![CDATA[<!--Flattened from: file:/home/jenny/keystone/keystone/content/common/xsd/atom/xml.xsd-->
<xsd:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:rax="http://docs.rackspace.com/api" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:OS-KSEC2="http://docs.openstack.org/identity/api/ext/OS-KSEC2/v1.0">
  <xs:annotation xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:documentation>
      <div>
        <h1>About the XML namespace</h1>
        <div class="bodytext">
          <p>This schema document describes the XML namespace, in a form
      suitable for import by other schema documents.</p>
          <p>
            See
            <a href="http://www.w3.org/XML/1998/namespace.html">http://www.w3.org/XML/1998/namespace.html</a>
            and
            <a href="http://www.w3.org/TR/REC-xml">http://www.w3.org/TR/REC-xml</a>
            for information 
      about this namespace.
          </p>
          <p>Note that local names in this namespace are intended to be
      defined only by the World Wide Web Consortium or its subgroups.
      The names currently defined in this namespace are listed below.
      They should not be used with conflicting semantics by any Working
      Group, specification, or document instance.</p>
          <p>
            See further below in this document for more information about
            <a href="#usage">how to refer to this schema document from your own
      XSD schema documents</a>
            and about
            <a href="#nsversioning">the
      namespace-versioning policy governing this schema document</a>
            .
          </p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>lang (as an attribute name)</h3>
          <p>denotes an attribute whose value
       is a language code for the natural language of the content of
       any element; its value is inherited.  This name is reserved
       by virtue of its definition in the XML specification.</p>
        </div>
        <div>
          <h4>Notes</h4>
          <p>Attempting to install the relevant ISO 2- and 3-letter
      codes as the enumerated possible values is probably never
      going to be a realistic possibility.</p>
          <p>
            See BCP 47 at
            <a href="http://www.rfc-editor.org/rfc/bcp/bcp47.txt">http://www.rfc-editor.org/rfc/bcp/bcp47.txt</a>
            and the IANA language subtag registry at
            <a href="http://www.iana.org/assignments/language-subtag-registry">http://www.iana.org/assignments/language-subtag-registry</a>
            for further information.
          </p>
          <p>The union allows for the 'un-declaration' of xml:lang with
      the empty string.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:union memberTypes="xs:language">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value=""/>
          </xs:restriction>
        </xs:simpleType>
      </xs:union>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="space" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>space (as an attribute name)</h3>
          <p>denotes an attribute whose
       value is a keyword indicating what whitespace processing
       discipline is intended for the content of the element; its
       value is inherited.  This name is reserved by virtue of its
       definition in the XML specification.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>base (as an attribute name)</h3>
          <p>denotes an attribute whose value
       provides a URI to be used as the base for interpreting any
       relative URIs in the scope of the element on which it
       appears; its value is inherited.  This name is reserved
       by virtue of its definition in the XML Base specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xmlbase/">http://www.w3.org/TR/xmlbase/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="id" type="xs:ID" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>id (as an attribute name)</h3>
          <p>denotes an attribute whose value
       should be interpreted as if declared to be of type ID.
       This name is reserved by virtue of its definition in the
       xml:id specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xml-id/">http://www.w3.org/TR/xml-id/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
    <xs:attribute ref="xml:id"/>
  </xs:attributeGroup>
  <xs:annotation xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:documentation>
      <div>
        <h3>Father (in any context at all)</h3>
        <div class="bodytext">
          <p>denotes Jon Bosak, the chair of 
      the original XML Working Group.  This name is reserved by 
      the following decision of the W3C XML Plenary and 
      XML Coordination groups:</p>
          <blockquote>
            <p>In appreciation for his vision, leadership and
	dedication the W3C XML Plenary on this 10th day of
	February, 2000, reserves for Jon Bosak in perpetuity
	the XML name "xml:Father".</p>
          </blockquote>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:documentation>
      <div xml:id="usage" id="usage">
        <h2>
          <a name="usage">About this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            This schema defines attributes and an attribute group suitable
      for use by schemas wishing to allow
            <code>xml:base</code>
            ,
            <code>xml:lang</code>
            ,
            <code>xml:space</code>
            or
            <code>xml:id</code>
            attributes on elements they define.
          </p>
          <p>To enable this, such a schema must import this schema for
      the XML namespace, e.g. as follows:</p>
          <pre>&lt;schema . . .>
           . . .
           &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2001/xml.xsd"/></pre>
          <p>or</p>
          <pre>&lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2009/01/xml.xsd"/></pre>
          <p>Subsequently, qualified reference to any of the attributes or the
      group defined below will have the desired effect, e.g.</p>
          <pre>&lt;type . . .>
           . . .
           &lt;attributeGroup ref="xml:specialAttrs"/></pre>
          <p>will define a type which will schema-validate an instance element
      with any of those attributes.</p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:documentation>
      <div id="nsversioning" xml:id="nsversioning">
        <h2>
          <a name="nsversioning">Versioning policy for this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            In keeping with the XML Schema WG's standard versioning
      policy, this schema document will persist at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            .
          </p>
          <p>
            At the date of issue it can also be found at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            .
          </p>
          <p>
            The schema document at that URI may however change in the future,
      in order to remain compatible with the latest version of XML
      Schema itself, or with the XML namespace itself.  In other words,
      if the XML Schema or XML namespaces change, the version of this
      document at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            will change accordingly; the version at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            will not change.
          </p>
          <p>Previous dated (and unchanging) versions of this schema 
      document are at:</p>
          <ul>
            <li>
              <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2007/08/xml.xsd">http://www.w3.org/2007/08/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2004/10/xml.xsd">http://www.w3.org/2004/10/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2001/03/xml.xsd">http://www.w3.org/2001/03/xml.xsd</a>
            </li>
          </ul>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jenny/keystone/keystone/content/admin/normalized/OS-KSEC2-admin-xsd-2.xsd</con:url><con:content><![CDATA[<!--Flattened from: file:/home/jenny/keystone/keystone/content/admin/../common/xsd/api-common.xsd-->
<xsd:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/common/api/v1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:rax="http://docs.rackspace.com/api" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:OS-KSEC2="http://docs.openstack.org/identity/api/ext/OS-KSEC2/v1.0">
  <annotation xmlns="http://www.w3.org/2001/XMLSchema">
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Open Stack Common API Schema Types 1.0</xsdxt:title>
      <xsdxt:link rev="index" href="extensions.xsd"/>
      <xsdxt:link rev="index" href="limits.xsd"/>
      <xsdxt:link rev="index" href="version.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>This is the main index XML Schema document
                for Common API Schema Types Version 1.0.</p>
    </xsd:documentation>
  </annotation>
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <xs:annotation xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Version Types</xsdxt:title>
      <xsdxt:link rel="index" href="api-common.xsd"/>
    </xs:appinfo>
    <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>This schema file defines all types related to versioning.</p>
    </xs:documentation>
  </xs:annotation>
  <!--Import ATOM specific schema definitions-->
  <!--Multiple choices-->
  <!--Versioning-->
  <!--Types-->
  <xsd:element name="extensions" type="ext:Extensions" xmlns:ext="http://docs.openstack.org/common/api/v1.0"/>
  <xsd:element name="extension" type="ext:Extension" xmlns:ext="http://docs.openstack.org/common/api/v1.0"/>
  <xs:element name="choices" type="vers:VersionChoiceList" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>This element is returned when the version of the
                    resource cannot be determined. The element
                    provides a list of choices for the resource.</p>
      </xs:documentation>
      <xs:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/choices.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/choices.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <xs:element name="versions" type="vers:VersionChoiceList" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Provides a list of supported versions.</p>
      </xs:documentation>
      <xs:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/versions.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/versions.json"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/atom+xml" href="../samples/versions-atom.xml"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <xs:element name="version2" type="vers:VersionChoiceRoot" vc:minVersion="1.1" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>This element provides detailed meta information
                    regarding the status of the current API
                    version. The description should include a pointer
                    to both a human readable and a machine processable
                    description of the API service.</p>
      </xs:documentation>
      <xs:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/version.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/version.json"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/atom+xml" href="../samples/version-atom.xml"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <xsd:simpleType name="Alias" xmlns:ext="http://docs.openstack.org/common/api/v1.0">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="\w+\-\w+"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xs:simpleType name="VersionStatus" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation>
        <html:p>The VersionStatus type describes a service's operational status.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="ALPHA">
        <xs:annotation>
          <xs:documentation>
            <html:p>This is a new service the API. Thi API
                            contract may be set, but the implementaiton
                            may not be 100% complient with it. Developers
                            are encouraged to begin testing aganst an
                            ALPHA version to provide feedback.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BETA">
        <xs:annotation>
          <xs:documentation>
            <html:p>A status of BETA indicates that this
                            version is a candidate for the next major
                            release and may feature functionality not
                            available in the current
                            version. Developers are encouraged to test
                            and begin the migration processes to a
                            BETA version. Note that a BETA version is
                            undergoing testing, it has not been
                            officially released, and my not be stable.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CURRENT">
        <xs:annotation>
          <xs:documentation>
            <html:p>The API version is stable and has been
                            tested. Developers are encouraged to
                            develop against this API version. The
                            current released version of the API will
                            always be marked as CURRENT.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="DEPRECATED">
        <xs:annotation>
          <xs:documentation>
            <html:p>A status of DEPRECATED indicates that a
                            newer version of the API is
                            available. Application developers are
                            discouraged from using this version and
                            should instead develop against the latest
                            current version of the API.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xsd:complexType name="Extensions" xmlns:ext="http://docs.openstack.org/common/api/v1.0">
    <xsd:sequence>
      <xsd:element name="extension" type="ext:Extension" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
  </xsd:complexType>
  <xsd:complexType name="Extension" xmlns:ext="http://docs.openstack.org/common/api/v1.0">
    <xsd:sequence>
      <xsd:element name="description" type="xsd:string" minOccurs="1"/>
      <!--<xsd:element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded" />-->
      <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="name" type="xsd:string" use="required"/>
    <xsd:attribute name="namespace" type="xsd:anyURI" use="required"/>
    <xsd:attribute name="alias" type="ext:Alias" use="required"/>
    <xsd:attribute name="updated" type="xsd:dateTime" use="optional"/>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
    <!--TODO(Ziad)resolve asser issue
            <xsd:assert vc:minVersion="1.1" test="atom:link[@rel='describedby']">
            <xsd:annotation>
                <xsd:documentation
                    xml:lang="EN"
                    xmlns="http://www.w3.org/1999/xhtml">
                    <p>
                        There should be at least one atom link
                        with a describedby relation.
                    </p>
                </xsd:documentation>
            </xsd:annotation>
        </xsd:assert>-->
  </xsd:complexType>
  <xs:complexType name="VersionChoiceList" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation>
        <html:p>A version choice list outlines a collection of
                    resources at various versions.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="version" type="vers:VersionChoice" minOccurs="1" maxOccurs="unbounded"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
    <!--TODO(Ziad)resolve assert issue
            <xs:assert vc:minVersion="1.1" test="every $v in vers:version satisfies $v/atom:link[@rel='self']">
            <xs:annotation>
                <xs:documentation>
                    <html:p>
                        In version lists, every single version must
                        contain at least one self link.
                    </html:p>
                </xs:documentation>
            </xs:annotation>
        </xs:assert>-->
  </xs:complexType>
  <xs:complexType name="VersionChoiceRoot" vc:minVersion="1.1" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:complexContent>
      <xs:extension base="vers:VersionChoice">
        <!--TODO(Ziad)resolve asser issue
                    <xs:assert test="atom:link[@rel='describedby']">
                    <xs:annotation>
                        <xs:documentation>
                            <html:p>
                                When used as a root element, a version choice
                                must contain at least one describedby link.
                            </html:p>
                        </xs:documentation>
                    </xs:annotation>
                </xs:assert>-->
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="VersionChoice" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation>
        <html:p>A version choice contains relevant information
                    about an available service that a user can then
                    use to target a specific version of the service.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="media-types" type="vers:MediaTypeList" minOccurs="0" maxOccurs="1"/>
      <!--<xs:element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded" />-->
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>
          <html:p>The ID of a version choice represents the service version's unique 
                        identifier. This ID is guaranteed to be unique only among the
                        service version choices outlined in the VersionChoiceList.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="status" type="vers:VersionStatus" use="required">
      <xs:annotation>
        <xs:documentation>
          <html:p>A version choice's status describes the current operational state of
                        the given service version. The operational status is captured in a
                        simple type enumeration called VersionStatus.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="updated" type="xs:dateTime" use="optional">
      <xs:annotation>
        <xs:documentation>
          <html:p>
            A version choice's updated attribute describes
                        the time when the version was updated. The
                        time should be updated anytime
            <html:strong>anything</html:strong>
            in the
                        version has changed: documentation,
                        extensions, bug fixes.
          </html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:complexType name="MediaTypeList" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation>
        <html:p>A MediaTypeList outlines a collection of valid media types for a given 
                    service version.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="media-type" type="vers:MediaType" minOccurs="1" maxOccurs="unbounded"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:complexType name="MediaType" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation>
        <html:p>A MediaType describes what content types the service version understands.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="base" type="xs:string" use="optional" default="">
      <xs:annotation>
        <xs:documentation>
          <html:p>The base of a given media type describes the
                        simple MIME type that then a more complicated
                        media type can be derived from. These types
                        are basic and provide no namespace or version
                        specific data are are only provided as a
                        convenience.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="type" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>
          <html:p>The type attribute of a MediaType describes
                        the MIME specific identifier of the media type
                        in question.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jenny/keystone/keystone/content/admin/normalized/OS-KSEC2-admin-xsd-3.xsd</con:url><con:content><![CDATA[<!--Flattened from: file:/home/jenny/keystone/keystone/content/admin/../common/xsd/OS-KSEC2-credentials.xsd-->
<xsd:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/ext/OS-KSEC2/v1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:rax="http://docs.rackspace.com/api" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:OS-KSEC2="http://docs.openstack.org/identity/api/ext/OS-KSEC2/v1.0">
  <import namespace="http://docs.openstack.org/identity/api/v2.0" schemaLocation="OS-KSEC2-admin-xsd-6.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Import schema we are extending-->
  <!--Elements-->
  <!--Complex Types-->
  <element name="ec2Credentials" type="OS-KSEC2:ec2CredentialsType" substitutionGroup="identity:credential" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <complexType name="ec2CredentialsType" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:CredentialType">
        <attribute name="username" type="xsd:string" use="required"/>
        <attribute name="key" type="xsd:string" use="required"/>
        <attribute name="signature" type="xsd:string" use="required"/>
      </extension>
    </complexContent>
  </complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jenny/keystone/keystone/content/admin/normalized/OS-KSEC2-admin-xsd-6.xsd</con:url><con:content><![CDATA[<!--Flattened from: file:/home/jenny/keystone/keystone/content/admin/../common/xsd/credentials.xsd-->
<xsd:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:rax="http://docs.rackspace.com/api" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:OS-KSEC2="http://docs.openstack.org/identity/api/ext/OS-KSEC2/v1.0">
  <!--Import ATOM specific schema definitions-->
  <!--Elements-->
  <!--Complex Types-->
  <element name="auth" type="identity:AuthenticationRequest" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="credential" type="identity:CredentialType" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="credentials" type="identity:CredentialListType" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="passwordCredentials" type="identity:PasswordCredentialsRequiredUsername" substitutionGroup="identity:credential" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <complexType name="CredentialType" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Base type for credential in Keystone.</p>
      </xsd:documentation>
    </annotation>
    <sequence>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="AuthenticationRequest" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Both the tenantId and tenantName are optional, but should not be specified together. If both attributes are specified, the server SHOULD respond with a 400 Bad Request.</p>
      </xsd:documentation>
    </annotation>
    <sequence>
      <choice>
        <element ref="identity:credential" minOccurs="1"/>
        <element name="token" type="identity:TokenForAuthenticationRequest"/>
      </choice>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="tenantId" type="xsd:string" use="optional"/>
    <attribute name="tenantName" type="xsd:string" use="optional"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="TokenForAuthenticationRequest" xmlns="http://www.w3.org/2001/XMLSchema">
    <attribute name="id" type="xsd:string" use="required"/>
  </complexType>
  <complexType name="PasswordCredentialsBase" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:CredentialType">
        <attribute name="username" type="xsd:string" use="optional"/>
        <attribute name="password" type="xsd:string" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="PasswordCredentialsWithoutUsername" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <restriction base="identity:PasswordCredentialsBase">
        <attribute name="username" type="xsd:string" use="prohibited"/>
        <attribute name="password" type="xsd:string" use="required"/>
      </restriction>
    </complexContent>
  </complexType>
  <complexType name="PasswordCredentialsRequiredUsername" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <restriction base="identity:PasswordCredentialsBase">
        <attribute name="username" type="xsd:string" use="required"/>
        <attribute name="password" type="xsd:string" use="required"/>
      </restriction>
    </complexContent>
  </complexType>
  <complexType name="CredentialListType" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element ref="identity:credential" minOccurs="1" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:35357</con:endpoint></con:endpoints><con:resource name="v2.0" path="${#Project#path}"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="users" path="users"><con:settings/><con:parameters/><con:resource name="{userId}" path="{userId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>userId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="OS-KSADM" path="OS-KSADM"><con:settings/><con:parameters/><con:resource name="credentials" path="credentials"><con:settings/><con:parameters/><con:resource name="OS-KSEC2:ec2Credentials" path="OS-KSEC2:ec2Credentials"><con:settings/><con:parameters/><con:method name="Update user credential" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSEC2/v1.0">v1:ec2Credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSEC2/v1.0">v1:ec2Credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete user credential" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Get user Credentials" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSEC2/v1.0">v1:ec2Credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Add user Credential." method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSEC2/v1.0">v1:ec2Credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSEC2/v1.0">v1:ec2Credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="List Credentials" method="GET"><con:settings/><con:parameters><con:parameter><con:name>marker</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource></con:resource></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="RAX-KSGRP-admin" type="rest" basePath="" definitionUrl="/home/jenny/keystone/keystone/content/admin/normalized/RAX-KSGRP-admin.wadl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/home/jenny/keystone/keystone/content/admin/normalized/RAX-KSGRP-admin.wadl"><con:part><con:url>file:/home/jenny/keystone/keystone/content/admin/normalized/RAX-KSGRP-admin.wadl</con:url><con:content><![CDATA[<application xsi:schemaLocation="http://docs.openstack.org/identity/api/v2.0 ../common/xsd/api.xsd     http://docs.openstack.org/common/api/v1.0 ../common/xsd/api-common.xsd     http://wadl.dev.java.net/2009/02 http://www.w3.org/Submission/wadl/wadl.xsd     http://docs.openstack.org/identity/api/ext/RAX-KSGRP/v1.0 ../common/xsd/RAX-KSGRP-groups.xsd     " xmlns="http://wadl.dev.java.net/2009/02" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:RAX-KSGRP="http://docs.openstack.org/identity/api/ext/RAX-KSGRP/v1.0" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0">
  <wadl:grammars xmlns:wadl="http://wadl.dev.java.net/2009/02">
    <!--Original xsd: file:/home/jenny/keystone/keystone/content/admin/../common/xsd/api.xsd-->
    <wadl:include href="RAX-KSGRP-admin-xsd-1.xsd"/>
    <!--Original xsd: file:/home/jenny/keystone/keystone/content/admin/../common/xsd/api-common.xsd-->
    <wadl:include href="RAX-KSGRP-admin-xsd-2.xsd"/>
    <!--Original xsd: file:/home/jenny/keystone/keystone/content/admin/../common/xsd/RAX-KSGRP-groups.xsd-->
    <wadl:include href="RAX-KSGRP-admin-xsd-3.xsd"/>
  </wadl:grammars>
  <!--*******************************************************-->
  <!--All Resources-->
  <!--*******************************************************-->
  <!--We should use SSL in production-->
  <resources base="http://localhost:35357">
    <resource path="v2.0">
      <param name="X-Auth-Token" style="header" type="xsd:string" required="true" rax:id="" xmlns:rax="http://docs.rackspace.com/api">
        <doc>You need a valid admin token for access.</doc>
      </param>
      <resource path="users">
        <resource path="{userId}">
          <param name="userId" style="template" type="xsd:string" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
          <resource path="RAX-KSGRP">
            <method name="GET" rax:id="listUserGroups" xmlns:rax="http://docs.rackspace.com/api">
              <doc xml:lang="EN" title="List Groups for a User">
                <p xmlns="http://www.w3.org/1999/xhtml">List all the groups for a user.</p>
              </doc>
              <response status="200 203">
                <representation mediaType="application/xml" element="RAX-KSGRP:groups">
                  <doc xml:lang="EN">
                    <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                      <title>List Groups for a User Response: XML</title>
                      <programlisting language="xml"><![CDATA[<groups xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">
    <group xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0" id="test_global_group_add">
        <description>A Description of the group</description>
    </group>
</groups>]]]]>><![CDATA[</programlisting>
                    </example>
                  </doc>
                </representation>
                <representation mediaType="application/json">
                  <doc xml:lang="EN">
                    <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                      <title>List Groups for a User Response: JSON</title>
                      <programlisting language="javascript">{
    "RAX-KSGRP:groups":[{
            "id":"test_global_group_add",
            "description":"A description ..."
        }
    ],
    "RAX-KSGRP:groups_links":[]
}</programlisting>
                    </example>
                  </doc>
                </representation>
              </response>
              <response>
                <representation mediaType="application/xml" element="identity:identityFault"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="400">
                <representation mediaType="application/xml" element="identity:badRequest"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="401">
                <representation mediaType="application/xml" element="identity:unauthorized"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="403">
                <representation mediaType="application/xml" element="identity:forbidden"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="405">
                <representation mediaType="application/xml" element="identity:badMethod"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="413">
                <representation mediaType="application/xml" element="identity:overLimit"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="503">
                <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="404">
                <representation mediaType="application/xml" element="identity:itemNotFound"/>
                <representation mediaType="application/json"/>
              </response>
            </method>
          </resource>
        </resource>
      </resource>
    </resource>
  </resources>
  <method name="GET" id="listUserGroups">
    <doc xml:lang="EN" title="List Groups for a User">
      <p xmlns="http://www.w3.org/1999/xhtml">List all the groups for a user.</p>
    </doc>
    <response status="200 203">
      <representation mediaType="application/xml" element="RAX-KSGRP:groups">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>List Groups for a User Response: XML</title>
            <programlisting language="xml"><![CDATA[<groups xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">
    <group xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0" id="test_global_group_add">
        <description>A Description of the group</description>
    </group>
</groups>]]]]>><![CDATA[</programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>List Groups for a User Response: JSON</title>
            <programlisting language="javascript">{
    "RAX-KSGRP:groups":[{
            "id":"test_global_group_add",
            "description":"A description ..."
        }
    ],
    "RAX-KSGRP:groups_links":[]
}</programlisting>
          </example>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
</application>]]></con:content><con:type>http://wadl.dev.java.net/2009/02</con:type></con:part><con:part><con:url>file:/home/jenny/keystone/keystone/content/admin/normalized/RAX-KSGRP-admin-xsd-1.xsd</con:url><con:content><![CDATA[<!--Flattened from: file:/home/jenny/keystone/keystone/content/admin/../common/xsd/api.xsd-->
<xsd:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:rax="http://docs.rackspace.com/api" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:RAX-KSGRP="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="RAX-KSGRP-admin-xsd-4.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <!--Elements-->
  <!--Complex Types-->
  <!--EndpointForService-->
  <!--VersionForService-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="RAX-KSGRP-admin-xsd-4.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Elements-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="RAX-KSGRP-admin-xsd-4.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Simple Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <!--Elements-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Fault Elements-->
  <!--Fault Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="RAX-KSGRP-admin-xsd-4.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Elements-->
  <!--Complex Types-->
  <!--EndpointForService-->
  <!--VersionForService-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="RAX-KSGRP-admin-xsd-4.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Elements-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Fault Elements-->
  <!--Fault Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="RAX-KSGRP-admin-xsd-4.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="RAX-KSGRP-admin-xsd-4.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Elements-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="RAX-KSGRP-admin-xsd-4.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Elements-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <!--Elements-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <!--Elements-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <!--Elements-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <!--Simple Types-->
  <element name="access" type="identity:AuthenticateResponse" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="roles" type="identity:RoleList" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A list of roles.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="role" type="identity:Role" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A role.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="tenant" type="identity:Tenant" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A container used to group or isolate resources and/or identity
                  objects. Depending on the service operator, a tenant may map to a customer,
                  account, organization, or project.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/xml" href="../samples/tenant.xml"/>
                     
          </xsdxt:sample>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/json" href="../samples/tenant.json"/>
                     
          </xsdxt:sample>
                 
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="tenants" type="identity:Tenants" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A list of tenants.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="identityFault" type="identity:IdentityFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="serviceUnavailable" type="identity:ServiceUnavailableFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="badRequest" type="identity:BadRequestFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="unauthorized" type="identity:UnauthorizedFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="overLimit" type="identity:OverLimitFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="userDisabled" type="identity:UserDisabledFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="forbidden" type="identity:ForbiddenFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="itemNotFound" type="identity:ItemNotFoundFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="tenantConflict" type="identity:TenantConflictFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="endpoint" type="identity:Endpoint" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>An Endpoint.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="endpoints" type="identity:EndpointList" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A list of Endpoints.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="users" type="identity:UserList" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN">
        <p>A list of Users.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="user" type="identity:User" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN">
        <p>A Keystone User.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="auth" type="identity:AuthenticationRequest" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="credential" type="identity:CredentialType" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="credentials" type="identity:CredentialListType" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="passwordCredentials" type="identity:PasswordCredentialsRequiredUsername" substitutionGroup="identity:credential" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <simpleType name="ExtensibleServiceType" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>
          An extensible service type allows all of the
                    strings defined in
          <a href="#type_ServiceType" title="See definition of                         ServiceType">ServiceType</a>
          or an
                    alias prefixed status.
        </p>
      </xsd:documentation>
    </annotation>
    <union memberTypes="identity:ServiceType identity:ExtendedService"/>
  </simpleType>
  <simpleType name="ServiceType" xmlns="http://www.w3.org/2001/XMLSchema">
    <restriction base="xsd:string">
      <enumeration value="compute">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for an OpenStack Compute API 1.1 compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="object-store">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for a Swift-compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="image-service">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for a Glance-compatible service</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="identity">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for a Keystone-compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
    </restriction>
  </simpleType>
  <simpleType name="ExtendedService" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A non-core service type which must contain an extension prefix.</p>
      </xsd:documentation>
    </annotation>
    <restriction base="xsd:string">
      <pattern value="(\w|-)+:\w+"/>
    </restriction>
  </simpleType>
  <simpleType name="ExtensibleServiceType" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>
          An extensible service type allows all of the
                    strings defined in
          <a href="#type_ServiceType" title="See definition of                         ServiceType">ServiceType</a>
          or an
                    alias prefixed status.
        </p>
      </xsd:documentation>
    </annotation>
    <union memberTypes="identity:ServiceType identity:ExtendedService"/>
  </simpleType>
  <simpleType name="ServiceType" xmlns="http://www.w3.org/2001/XMLSchema">
    <restriction base="xsd:string">
      <enumeration value="compute">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for an OpenStack Compute API 1.1 compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="object-store">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for a Swift-compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="image-service">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for a Glance-compatible service</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="identity">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for a Keystone-compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
    </restriction>
  </simpleType>
  <simpleType name="ExtendedService" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A non-core service type which must contain an extension prefix.</p>
      </xsd:documentation>
    </annotation>
    <restriction base="xsd:string">
      <pattern value="(\w|-)+:\w+"/>
    </restriction>
  </simpleType>
  <complexType name="Token" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A token is an arbitrary bit of text that is used to access
                    resources. Each token has a scope which describes which
                    resources are accessible with it. A token may be
                    revoked at anytime and is valid for a finite duration.</p>
        <p>While Keystone supports token-based authentication in this release,
                    the intention is for it to support additional protocols in the
                    future. The desire is for it to be an integration service, and not
                    a full-fledged identity store and management solution.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/token.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/token.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
    <sequence>
      <element name="tenant" type="identity:TenantForAuthenticateResponse"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:string" use="required"/>
    <attribute name="expires" type="xsd:dateTime" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="AuthenticateResponse" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="token" type="identity:Token"/>
      <element name="user" type="identity:UserForAuthenticateResponse"/>
      <element name="serviceCatalog" type="identity:ServiceCatalog" minOccurs="0"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="UserForAuthenticateResponse" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="roles" type="identity:RoleList"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:string"/>
    <attribute name="name" type="xsd:string"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="TenantForAuthenticateResponse" xmlns="http://www.w3.org/2001/XMLSchema">
    <attribute name="id" type="xsd:string"/>
    <attribute name="name" type="xsd:string"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="ServiceCatalog" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>The service catalog lists the services you have access to</p>
        <div class="design">
          <p>We optimized for future flexibility around the hierarchy. So we
                    left the design as a flat list of endpoints with attributes and the
                    consumer can categorize as they need.
                    This results in potential duplication (such as with the version/@list)
                    but we acceopt that normalization cost in order to not force an
                    artificial hierarchy (suchas on region, which can be optional).</p>
        </div>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/xml" href="../samples/services.xml"/>
                     
          </xsdxt:sample>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/json" href="../samples/services.json"/>
                     
          </xsdxt:sample>
                 
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
    <sequence>
      <element name="service" type="identity:ServiceForCatalog" minOccurs="1" maxOccurs="unbounded">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>A list of services.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="ServiceForCatalog" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="endpoint" type="identity:EndpointForService" minOccurs="1" maxOccurs="unbounded">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>A list of endpoints.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="type" type="identity:ExtensibleServiceType" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The OpenStack-registered type (e.g. 'compute', 'object-store', etc).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The commercial service name (e.g. 'My Nova Cloud Servers').</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="EndpointForService" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="version" type="identity:VersionForService" maxOccurs="1" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>Version details.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="region" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The name of the region where the endpoint
                        lives. Example: airport codes; LHR (UK),
                        STL (Saint Louis)</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="tenantId" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>Tenant id to which the endpoints belong.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="publicURL" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>Public accessible service URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="internalURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A service URL, accessible only locally within that
                        cloud (generally over a high bandwidth, low latency,
                        free of charge link).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="adminURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>An Admin URL (used for administration using privileged
                        calls). This may expose
                        additional functionality not found in the public and
                        internal URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="VersionForService" xmlns="http://www.w3.org/2001/XMLSchema">
    <attribute name="id" type="xsd:string" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>Id of the version.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="info" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>URI to get the information specific to this version.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="list" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>URI to get the information about all versions.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="Role" xmlns="http://www.w3.org/2001/XMLSchema">
    <attribute name="id" type="xsd:string" use="optional"/>
    <attribute name="name" type="xsd:string" use="required"/>
    <attribute name="description" type="xsd:string" use="optional"/>
    <attribute name="serviceId" type="xsd:string" use="optional"/>
    <attribute name="tenantId" type="xsd:string" use="optional"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="RoleList" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="role" type="identity:Role" minOccurs="0" maxOccurs="unbounded"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="Tenants" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="tenant" type="identity:Tenant" maxOccurs="100"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="Tenant" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="description" type="xsd:string">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>An free text description of the tenant.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:ID" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>An ID uniquely identifying the tenant. This usually comes from the back-end store.
                        This value is guaranteed to be unique and immutable (it will never change).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="name" type="xsd:string" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The name of the tenant. This is guaranteed to be unique, but may change.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="enabled" type="xsd:boolean" use="optional" default="true">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>An boolean signifying if a tenant is enabled or not. A disabled tenant
                        cannot be authenticated against.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="display-name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A human-readable, friendly name for use in user interfaces.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute type="xsd:dateTime" name="updated" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A time-stamp identifying the modification time of the
                        tenant.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute type="xsd:dateTime" name="created" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A creation time-stamp for the tenant.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="IdentityFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="message" type="xsd:string">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>A human readable message that is appropriate for display
                            to the end user.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element name="details" type="xsd:string" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The optional &lt;details> element may contain useful
                            information for tracking down errors (e.g a stack
                            trace).  This information may or may not be appropriate
                            for display to an end user.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="code" type="xsd:int" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The HTTP status code associated with the current fault.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="ServiceUnavailableFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:IdentityFault"/>
    </complexContent>
  </complexType>
  <complexType name="BadRequestFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:IdentityFault"/>
    </complexContent>
  </complexType>
  <complexType name="UnauthorizedFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:IdentityFault"/>
    </complexContent>
  </complexType>
  <complexType name="UserDisabledFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:IdentityFault"/>
    </complexContent>
  </complexType>
  <complexType name="ForbiddenFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:IdentityFault"/>
    </complexContent>
  </complexType>
  <complexType name="ItemNotFoundFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:IdentityFault"/>
    </complexContent>
  </complexType>
  <complexType name="TenantConflictFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:IdentityFault"/>
    </complexContent>
  </complexType>
  <complexType name="OverLimitFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:IdentityFault">
        <attribute name="retryAt" type="xsd:dateTime" use="optional">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
              <p>An optional dateTime denoting when an operation should
                                be retried.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="Endpoint" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="version" type="identity:VersionForService" maxOccurs="1" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>Version details.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:int" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>An ID uniquely identifying the Endpoint.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="type" type="identity:ExtensibleServiceType" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The OpenStack-registered type (e.g. 'compute', 'object-store', etc).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The commercial service name (e.g. 'My Nova Cloud Servers').</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="region" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The region of Endpoint Template.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="publicURL" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The public URL to access represented service.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="internalURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The internal version of the public URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="adminURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The admin URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="tenantId" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>Tenant id to which the endpoints belong.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="EndpointList" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="endpoint" type="identity:Endpoint" minOccurs="0" maxOccurs="unbounded"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="User" xmlns="http://www.w3.org/2001/XMLSchema">
    <attribute name="id" type="xsd:ID" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>An automatically generated, unique, immutable (it will never change) identifier
                        for the user. This is generated by the backend this user is stored in.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="username" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A unique, mutable (it can change) user name that may be used by the user
                        an identifier when presenting credentials.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="email" type="xsd:string" use="optional"/>
    <attribute name="enabled" type="xsd:boolean" default="true" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A true/false value that determines if the user may authenticate or not.
                        If enabled is false, the user will not be able to authenticate.
                        How this value is stored or generated is dependent on the backend in use.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="display-name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A human-readable, friendly name for use in user interfaces.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="updated" type="xsd:dateTime" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A time-stamp identifying the modification time of the
                        user.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="created" type="xsd:dateTime" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A creation time-stamp for the user.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="UserList" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="user" type="identity:User" minOccurs="0" maxOccurs="unbounded"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="CredentialType" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Base type for credential in Keystone.</p>
      </xsd:documentation>
    </annotation>
    <sequence>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="AuthenticationRequest" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Both the tenantId and tenantName are optional, but should not be specified together. If both attributes are specified, the server SHOULD respond with a 400 Bad Request.</p>
      </xsd:documentation>
    </annotation>
    <sequence>
      <choice>
        <element ref="identity:credential" minOccurs="1"/>
        <element name="token" type="identity:TokenForAuthenticationRequest"/>
      </choice>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="tenantId" type="xsd:string" use="optional"/>
    <attribute name="tenantName" type="xsd:string" use="optional"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="TokenForAuthenticationRequest" xmlns="http://www.w3.org/2001/XMLSchema">
    <attribute name="id" type="xsd:string" use="required"/>
  </complexType>
  <complexType name="PasswordCredentialsBase" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:CredentialType">
        <attribute name="username" type="xsd:string" use="optional"/>
        <attribute name="password" type="xsd:string" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="PasswordCredentialsWithoutUsername" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <restriction base="identity:PasswordCredentialsBase">
        <attribute name="username" type="xsd:string" use="prohibited"/>
        <attribute name="password" type="xsd:string" use="required"/>
      </restriction>
    </complexContent>
  </complexType>
  <complexType name="PasswordCredentialsRequiredUsername" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <restriction base="identity:PasswordCredentialsBase">
        <attribute name="username" type="xsd:string" use="required"/>
        <attribute name="password" type="xsd:string" use="required"/>
      </restriction>
    </complexContent>
  </complexType>
  <complexType name="CredentialListType" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element ref="identity:credential" minOccurs="1" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jenny/keystone/keystone/content/admin/normalized/RAX-KSGRP-admin-xsd-4.xsd</con:url><con:content><![CDATA[<!--Flattened from: file:/home/jenny/keystone/keystone/content/common/xsd/atom/atom.xsd-->
<xsd:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://www.w3.org/2005/Atom" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:rax="http://docs.rackspace.com/api" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:RAX-KSGRP="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">
  <xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="RAX-KSGRP-admin-xsd-5.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
  <xs:element name="link" type="atom:link" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
  <xs:simpleType name="relation" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:restriction base="xs:string">
      <xs:enumeration value="alternate"/>
      <xs:enumeration value="appendix"/>
      <xs:enumeration value="archives"/>
      <xs:enumeration value="author"/>
      <xs:enumeration value="bookmark"/>
      <xs:enumeration value="chapter"/>
      <xs:enumeration value="contents"/>
      <xs:enumeration value="copyright"/>
      <xs:enumeration value="current"/>
      <xs:enumeration value="describedby"/>
      <xs:enumeration value="edit"/>
      <xs:enumeration value="edit-media"/>
      <xs:enumeration value="first"/>
      <xs:enumeration value="glossary"/>
      <xs:enumeration value="help"/>
      <xs:enumeration value="hub"/>
      <xs:enumeration value="icon"/>
      <xs:enumeration value="index"/>
      <xs:enumeration value="last"/>
      <xs:enumeration value="latest-version"/>
      <xs:enumeration value="license"/>
      <xs:enumeration value="monitor"/>
      <xs:enumeration value="monitor-group"/>
      <xs:enumeration value="next"/>
      <xs:enumeration value="next-arvhice"/>
      <xs:enumeration value="nofollow"/>
      <xs:enumeration value="payment"/>
      <xs:enumeration value="predecessor-version"/>
      <xs:enumeration value="prefetch"/>
      <xs:enumeration value="prev"/>
      <xs:enumeration value="previous"/>
      <xs:enumeration value="prev-archive"/>
      <xs:enumeration value="replies"/>
      <xs:enumeration value="search"/>
      <xs:enumeration value="section"/>
      <xs:enumeration value="self"/>
      <xs:enumeration value="service"/>
      <xs:enumeration value="start"/>
      <xs:enumeration value="stylesheet"/>
      <xs:enumeration value="subsection"/>
      <xs:enumeration value="successor-version"/>
      <xs:enumeration value="up"/>
      <xs:enumeration value="version-history"/>
      <xs:enumeration value="via"/>
      <xs:enumeration value="working-copy"/>
      <xs:enumeration value="working-copy-of"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="link" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation>
        <html:p>
          See section 3.4 of the ATOM RFC
          <html:a href="http://tools.ietf.org/html/rfc4287">RFC4287</html:a>
        </html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="rel" use="required" type="atom:relation">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="type" use="optional" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="href" use="required" type="xs:anyURI">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="hreflang" use="optional" type="xs:NMTOKEN">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="title" use="optional" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
  </xs:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jenny/keystone/keystone/content/admin/normalized/RAX-KSGRP-admin-xsd-5.xsd</con:url><con:content><![CDATA[<!--Flattened from: file:/home/jenny/keystone/keystone/content/common/xsd/atom/xml.xsd-->
<xsd:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:rax="http://docs.rackspace.com/api" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:RAX-KSGRP="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">
  <xs:annotation xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:documentation>
      <div>
        <h1>About the XML namespace</h1>
        <div class="bodytext">
          <p>This schema document describes the XML namespace, in a form
      suitable for import by other schema documents.</p>
          <p>
            See
            <a href="http://www.w3.org/XML/1998/namespace.html">http://www.w3.org/XML/1998/namespace.html</a>
            and
            <a href="http://www.w3.org/TR/REC-xml">http://www.w3.org/TR/REC-xml</a>
            for information 
      about this namespace.
          </p>
          <p>Note that local names in this namespace are intended to be
      defined only by the World Wide Web Consortium or its subgroups.
      The names currently defined in this namespace are listed below.
      They should not be used with conflicting semantics by any Working
      Group, specification, or document instance.</p>
          <p>
            See further below in this document for more information about
            <a href="#usage">how to refer to this schema document from your own
      XSD schema documents</a>
            and about
            <a href="#nsversioning">the
      namespace-versioning policy governing this schema document</a>
            .
          </p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>lang (as an attribute name)</h3>
          <p>denotes an attribute whose value
       is a language code for the natural language of the content of
       any element; its value is inherited.  This name is reserved
       by virtue of its definition in the XML specification.</p>
        </div>
        <div>
          <h4>Notes</h4>
          <p>Attempting to install the relevant ISO 2- and 3-letter
      codes as the enumerated possible values is probably never
      going to be a realistic possibility.</p>
          <p>
            See BCP 47 at
            <a href="http://www.rfc-editor.org/rfc/bcp/bcp47.txt">http://www.rfc-editor.org/rfc/bcp/bcp47.txt</a>
            and the IANA language subtag registry at
            <a href="http://www.iana.org/assignments/language-subtag-registry">http://www.iana.org/assignments/language-subtag-registry</a>
            for further information.
          </p>
          <p>The union allows for the 'un-declaration' of xml:lang with
      the empty string.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:union memberTypes="xs:language">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value=""/>
          </xs:restriction>
        </xs:simpleType>
      </xs:union>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="space" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>space (as an attribute name)</h3>
          <p>denotes an attribute whose
       value is a keyword indicating what whitespace processing
       discipline is intended for the content of the element; its
       value is inherited.  This name is reserved by virtue of its
       definition in the XML specification.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>base (as an attribute name)</h3>
          <p>denotes an attribute whose value
       provides a URI to be used as the base for interpreting any
       relative URIs in the scope of the element on which it
       appears; its value is inherited.  This name is reserved
       by virtue of its definition in the XML Base specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xmlbase/">http://www.w3.org/TR/xmlbase/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="id" type="xs:ID" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>id (as an attribute name)</h3>
          <p>denotes an attribute whose value
       should be interpreted as if declared to be of type ID.
       This name is reserved by virtue of its definition in the
       xml:id specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xml-id/">http://www.w3.org/TR/xml-id/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
    <xs:attribute ref="xml:id"/>
  </xs:attributeGroup>
  <xs:annotation xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:documentation>
      <div>
        <h3>Father (in any context at all)</h3>
        <div class="bodytext">
          <p>denotes Jon Bosak, the chair of 
      the original XML Working Group.  This name is reserved by 
      the following decision of the W3C XML Plenary and 
      XML Coordination groups:</p>
          <blockquote>
            <p>In appreciation for his vision, leadership and
	dedication the W3C XML Plenary on this 10th day of
	February, 2000, reserves for Jon Bosak in perpetuity
	the XML name "xml:Father".</p>
          </blockquote>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:documentation>
      <div xml:id="usage" id="usage">
        <h2>
          <a name="usage">About this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            This schema defines attributes and an attribute group suitable
      for use by schemas wishing to allow
            <code>xml:base</code>
            ,
            <code>xml:lang</code>
            ,
            <code>xml:space</code>
            or
            <code>xml:id</code>
            attributes on elements they define.
          </p>
          <p>To enable this, such a schema must import this schema for
      the XML namespace, e.g. as follows:</p>
          <pre>&lt;schema . . .>
           . . .
           &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2001/xml.xsd"/></pre>
          <p>or</p>
          <pre>&lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2009/01/xml.xsd"/></pre>
          <p>Subsequently, qualified reference to any of the attributes or the
      group defined below will have the desired effect, e.g.</p>
          <pre>&lt;type . . .>
           . . .
           &lt;attributeGroup ref="xml:specialAttrs"/></pre>
          <p>will define a type which will schema-validate an instance element
      with any of those attributes.</p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:documentation>
      <div id="nsversioning" xml:id="nsversioning">
        <h2>
          <a name="nsversioning">Versioning policy for this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            In keeping with the XML Schema WG's standard versioning
      policy, this schema document will persist at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            .
          </p>
          <p>
            At the date of issue it can also be found at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            .
          </p>
          <p>
            The schema document at that URI may however change in the future,
      in order to remain compatible with the latest version of XML
      Schema itself, or with the XML namespace itself.  In other words,
      if the XML Schema or XML namespaces change, the version of this
      document at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            will change accordingly; the version at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            will not change.
          </p>
          <p>Previous dated (and unchanging) versions of this schema 
      document are at:</p>
          <ul>
            <li>
              <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2007/08/xml.xsd">http://www.w3.org/2007/08/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2004/10/xml.xsd">http://www.w3.org/2004/10/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2001/03/xml.xsd">http://www.w3.org/2001/03/xml.xsd</a>
            </li>
          </ul>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jenny/keystone/keystone/content/admin/normalized/RAX-KSGRP-admin-xsd-2.xsd</con:url><con:content><![CDATA[<!--Flattened from: file:/home/jenny/keystone/keystone/content/admin/../common/xsd/api-common.xsd-->
<xsd:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/common/api/v1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:rax="http://docs.rackspace.com/api" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:RAX-KSGRP="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">
  <annotation xmlns="http://www.w3.org/2001/XMLSchema">
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Open Stack Common API Schema Types 1.0</xsdxt:title>
      <xsdxt:link rev="index" href="extensions.xsd"/>
      <xsdxt:link rev="index" href="limits.xsd"/>
      <xsdxt:link rev="index" href="version.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>This is the main index XML Schema document
                for Common API Schema Types Version 1.0.</p>
    </xsd:documentation>
  </annotation>
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <xs:annotation xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Version Types</xsdxt:title>
      <xsdxt:link rel="index" href="api-common.xsd"/>
    </xs:appinfo>
    <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>This schema file defines all types related to versioning.</p>
    </xs:documentation>
  </xs:annotation>
  <!--Import ATOM specific schema definitions-->
  <!--Multiple choices-->
  <!--Versioning-->
  <!--Types-->
  <xsd:element name="extensions" type="ext:Extensions" xmlns:ext="http://docs.openstack.org/common/api/v1.0"/>
  <xsd:element name="extension" type="ext:Extension" xmlns:ext="http://docs.openstack.org/common/api/v1.0"/>
  <xs:element name="choices" type="vers:VersionChoiceList" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>This element is returned when the version of the
                    resource cannot be determined. The element
                    provides a list of choices for the resource.</p>
      </xs:documentation>
      <xs:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/choices.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/choices.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <xs:element name="versions" type="vers:VersionChoiceList" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Provides a list of supported versions.</p>
      </xs:documentation>
      <xs:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/versions.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/versions.json"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/atom+xml" href="../samples/versions-atom.xml"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <xs:element name="version2" type="vers:VersionChoiceRoot" vc:minVersion="1.1" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>This element provides detailed meta information
                    regarding the status of the current API
                    version. The description should include a pointer
                    to both a human readable and a machine processable
                    description of the API service.</p>
      </xs:documentation>
      <xs:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/version.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/version.json"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/atom+xml" href="../samples/version-atom.xml"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <xsd:simpleType name="Alias" xmlns:ext="http://docs.openstack.org/common/api/v1.0">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="\w+\-\w+"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xs:simpleType name="VersionStatus" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation>
        <html:p>The VersionStatus type describes a service's operational status.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="ALPHA">
        <xs:annotation>
          <xs:documentation>
            <html:p>This is a new service the API. Thi API
                            contract may be set, but the implementaiton
                            may not be 100% complient with it. Developers
                            are encouraged to begin testing aganst an
                            ALPHA version to provide feedback.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BETA">
        <xs:annotation>
          <xs:documentation>
            <html:p>A status of BETA indicates that this
                            version is a candidate for the next major
                            release and may feature functionality not
                            available in the current
                            version. Developers are encouraged to test
                            and begin the migration processes to a
                            BETA version. Note that a BETA version is
                            undergoing testing, it has not been
                            officially released, and my not be stable.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CURRENT">
        <xs:annotation>
          <xs:documentation>
            <html:p>The API version is stable and has been
                            tested. Developers are encouraged to
                            develop against this API version. The
                            current released version of the API will
                            always be marked as CURRENT.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="DEPRECATED">
        <xs:annotation>
          <xs:documentation>
            <html:p>A status of DEPRECATED indicates that a
                            newer version of the API is
                            available. Application developers are
                            discouraged from using this version and
                            should instead develop against the latest
                            current version of the API.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xsd:complexType name="Extensions" xmlns:ext="http://docs.openstack.org/common/api/v1.0">
    <xsd:sequence>
      <xsd:element name="extension" type="ext:Extension" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
  </xsd:complexType>
  <xsd:complexType name="Extension" xmlns:ext="http://docs.openstack.org/common/api/v1.0">
    <xsd:sequence>
      <xsd:element name="description" type="xsd:string" minOccurs="1"/>
      <!--<xsd:element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded" />-->
      <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="name" type="xsd:string" use="required"/>
    <xsd:attribute name="namespace" type="xsd:anyURI" use="required"/>
    <xsd:attribute name="alias" type="ext:Alias" use="required"/>
    <xsd:attribute name="updated" type="xsd:dateTime" use="optional"/>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
    <!--TODO(Ziad)resolve asser issue
            <xsd:assert vc:minVersion="1.1" test="atom:link[@rel='describedby']">
            <xsd:annotation>
                <xsd:documentation
                    xml:lang="EN"
                    xmlns="http://www.w3.org/1999/xhtml">
                    <p>
                        There should be at least one atom link
                        with a describedby relation.
                    </p>
                </xsd:documentation>
            </xsd:annotation>
        </xsd:assert>-->
  </xsd:complexType>
  <xs:complexType name="VersionChoiceList" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation>
        <html:p>A version choice list outlines a collection of
                    resources at various versions.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="version" type="vers:VersionChoice" minOccurs="1" maxOccurs="unbounded"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
    <!--TODO(Ziad)resolve assert issue
            <xs:assert vc:minVersion="1.1" test="every $v in vers:version satisfies $v/atom:link[@rel='self']">
            <xs:annotation>
                <xs:documentation>
                    <html:p>
                        In version lists, every single version must
                        contain at least one self link.
                    </html:p>
                </xs:documentation>
            </xs:annotation>
        </xs:assert>-->
  </xs:complexType>
  <xs:complexType name="VersionChoiceRoot" vc:minVersion="1.1" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:complexContent>
      <xs:extension base="vers:VersionChoice">
        <!--TODO(Ziad)resolve asser issue
                    <xs:assert test="atom:link[@rel='describedby']">
                    <xs:annotation>
                        <xs:documentation>
                            <html:p>
                                When used as a root element, a version choice
                                must contain at least one describedby link.
                            </html:p>
                        </xs:documentation>
                    </xs:annotation>
                </xs:assert>-->
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="VersionChoice" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation>
        <html:p>A version choice contains relevant information
                    about an available service that a user can then
                    use to target a specific version of the service.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="media-types" type="vers:MediaTypeList" minOccurs="0" maxOccurs="1"/>
      <!--<xs:element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded" />-->
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>
          <html:p>The ID of a version choice represents the service version's unique 
                        identifier. This ID is guaranteed to be unique only among the
                        service version choices outlined in the VersionChoiceList.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="status" type="vers:VersionStatus" use="required">
      <xs:annotation>
        <xs:documentation>
          <html:p>A version choice's status describes the current operational state of
                        the given service version. The operational status is captured in a
                        simple type enumeration called VersionStatus.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="updated" type="xs:dateTime" use="optional">
      <xs:annotation>
        <xs:documentation>
          <html:p>
            A version choice's updated attribute describes
                        the time when the version was updated. The
                        time should be updated anytime
            <html:strong>anything</html:strong>
            in the
                        version has changed: documentation,
                        extensions, bug fixes.
          </html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:complexType name="MediaTypeList" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation>
        <html:p>A MediaTypeList outlines a collection of valid media types for a given 
                    service version.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="media-type" type="vers:MediaType" minOccurs="1" maxOccurs="unbounded"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:complexType name="MediaType" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation>
        <html:p>A MediaType describes what content types the service version understands.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="base" type="xs:string" use="optional" default="">
      <xs:annotation>
        <xs:documentation>
          <html:p>The base of a given media type describes the
                        simple MIME type that then a more complicated
                        media type can be derived from. These types
                        are basic and provide no namespace or version
                        specific data are are only provided as a
                        convenience.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="type" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>
          <html:p>The type attribute of a MediaType describes
                        the MIME specific identifier of the media type
                        in question.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jenny/keystone/keystone/content/admin/normalized/RAX-KSGRP-admin-xsd-3.xsd</con:url><con:content><![CDATA[<!--Flattened from: file:/home/jenny/keystone/keystone/content/admin/../common/xsd/RAX-KSGRP-groups.xsd-->
<xsd:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:rax="http://docs.rackspace.com/api" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:RAX-KSGRP="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">
  <import namespace="http://docs.openstack.org/identity/api/v2.0" schemaLocation="RAX-KSGRP-admin-xsd-6.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <import namespace="http://docs.openstack.org/identity/api/v2.0" schemaLocation="RAX-KSGRP-admin-xsd-1.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Import schema we are extending-->
  <element name="groups" type="RAX-KSGRP:Groups" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <complexType name="Groups" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="group" type="RAX-KSGRP:Group" maxOccurs="100"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="Group" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="description" type="xsd:string" maxOccurs="1"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:string" use="required"/>
    <attribute name="name" type="xsd:string" use="optional"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="TenantGroup" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="RAX-KSGRP:Group">
        <attribute name="tenantId" type="xsd:string" use="required"/>
      </extension>
    </complexContent>
  </complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jenny/keystone/keystone/content/admin/normalized/RAX-KSGRP-admin-xsd-6.xsd</con:url><con:content><![CDATA[<!--Flattened from: file:/home/jenny/keystone/keystone/content/admin/../common/xsd/token.xsd-->
<xsd:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:rax="http://docs.rackspace.com/api" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:RAX-KSGRP="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">
  <!--Import ATOM specific schema definitions-->
  <!--Elements-->
  <!--Complex Types-->
  <!--EndpointForService-->
  <!--VersionForService-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <!--Elements-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <!--Simple Types-->
  <element name="access" type="identity:AuthenticateResponse" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="roles" type="identity:RoleList" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A list of roles.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="role" type="identity:Role" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A role.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <simpleType name="ExtensibleServiceType" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>
          An extensible service type allows all of the
                    strings defined in
          <a href="#type_ServiceType" title="See definition of                         ServiceType">ServiceType</a>
          or an
                    alias prefixed status.
        </p>
      </xsd:documentation>
    </annotation>
    <union memberTypes="identity:ServiceType identity:ExtendedService"/>
  </simpleType>
  <simpleType name="ServiceType" xmlns="http://www.w3.org/2001/XMLSchema">
    <restriction base="xsd:string">
      <enumeration value="compute">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for an OpenStack Compute API 1.1 compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="object-store">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for a Swift-compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="image-service">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for a Glance-compatible service</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="identity">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for a Keystone-compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
    </restriction>
  </simpleType>
  <simpleType name="ExtendedService" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A non-core service type which must contain an extension prefix.</p>
      </xsd:documentation>
    </annotation>
    <restriction base="xsd:string">
      <pattern value="(\w|-)+:\w+"/>
    </restriction>
  </simpleType>
  <complexType name="Token" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A token is an arbitrary bit of text that is used to access
                    resources. Each token has a scope which describes which
                    resources are accessible with it. A token may be
                    revoked at anytime and is valid for a finite duration.</p>
        <p>While Keystone supports token-based authentication in this release,
                    the intention is for it to support additional protocols in the
                    future. The desire is for it to be an integration service, and not
                    a full-fledged identity store and management solution.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/token.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/token.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
    <sequence>
      <element name="tenant" type="identity:TenantForAuthenticateResponse"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:string" use="required"/>
    <attribute name="expires" type="xsd:dateTime" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="AuthenticateResponse" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="token" type="identity:Token"/>
      <element name="user" type="identity:UserForAuthenticateResponse"/>
      <element name="serviceCatalog" type="identity:ServiceCatalog" minOccurs="0"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="UserForAuthenticateResponse" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="roles" type="identity:RoleList"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:string"/>
    <attribute name="name" type="xsd:string"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="TenantForAuthenticateResponse" xmlns="http://www.w3.org/2001/XMLSchema">
    <attribute name="id" type="xsd:string"/>
    <attribute name="name" type="xsd:string"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="ServiceCatalog" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>The service catalog lists the services you have access to</p>
        <div class="design">
          <p>We optimized for future flexibility around the hierarchy. So we
                    left the design as a flat list of endpoints with attributes and the
                    consumer can categorize as they need.
                    This results in potential duplication (such as with the version/@list)
                    but we acceopt that normalization cost in order to not force an
                    artificial hierarchy (suchas on region, which can be optional).</p>
        </div>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/xml" href="../samples/services.xml"/>
                     
          </xsdxt:sample>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/json" href="../samples/services.json"/>
                     
          </xsdxt:sample>
                 
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
    <sequence>
      <element name="service" type="identity:ServiceForCatalog" minOccurs="1" maxOccurs="unbounded">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>A list of services.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="ServiceForCatalog" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="endpoint" type="identity:EndpointForService" minOccurs="1" maxOccurs="unbounded">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>A list of endpoints.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="type" type="identity:ExtensibleServiceType" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The OpenStack-registered type (e.g. 'compute', 'object-store', etc).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The commercial service name (e.g. 'My Nova Cloud Servers').</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="EndpointForService" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="version" type="identity:VersionForService" maxOccurs="1" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>Version details.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="region" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The name of the region where the endpoint
                        lives. Example: airport codes; LHR (UK),
                        STL (Saint Louis)</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="tenantId" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>Tenant id to which the endpoints belong.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="publicURL" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>Public accessible service URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="internalURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A service URL, accessible only locally within that
                        cloud (generally over a high bandwidth, low latency,
                        free of charge link).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="adminURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>An Admin URL (used for administration using privileged
                        calls). This may expose
                        additional functionality not found in the public and
                        internal URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="VersionForService" xmlns="http://www.w3.org/2001/XMLSchema">
    <attribute name="id" type="xsd:string" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>Id of the version.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="info" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>URI to get the information specific to this version.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="list" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>URI to get the information about all versions.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="Role" xmlns="http://www.w3.org/2001/XMLSchema">
    <attribute name="id" type="xsd:string" use="optional"/>
    <attribute name="name" type="xsd:string" use="required"/>
    <attribute name="description" type="xsd:string" use="optional"/>
    <attribute name="serviceId" type="xsd:string" use="optional"/>
    <attribute name="tenantId" type="xsd:string" use="optional"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="RoleList" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="role" type="identity:Role" minOccurs="0" maxOccurs="unbounded"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:35357</con:endpoint><con:endpoint>${#Project#Endpoint}</con:endpoint></con:endpoints><con:resource name="v2.0" path="${#Project#path}"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="users" path="users"><con:settings/><con:parameters/><con:resource name="{userId}" path="{userId}"><con:settings/><con:parameters><con:parameter><con:name>userId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="RAX-KSGRP" path="RAX-KSGRP"><con:settings/><con:parameters/><con:method name="List Groups for a User" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/RAX-KSGRP/v1.0">v1:groups</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="RAX-KSKEY-admin" type="rest" basePath="" definitionUrl="/home/jenny/keystone/keystone/content/admin/normalized/RAX-KSKEY-admin.wadl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/home/jenny/keystone/keystone/content/admin/normalized/RAX-KSKEY-admin.wadl"><con:part><con:url>file:/home/jenny/keystone/keystone/content/admin/normalized/RAX-KSKEY-admin.wadl</con:url><con:content><![CDATA[<application xsi:schemaLocation="http://docs.openstack.org/identity/api/v2.0 ../common/xsd/api.xsd   http://docs.openstack.org/common/api/v1.0 ../common/xsd/api-common.xsd   http://wadl.dev.java.net/2009/02 http://www.w3.org/Submission/wadl/wadl.xsd   http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0 ../common/xsd/RAX-KSKEY-credentials.xsd   " xmlns="http://wadl.dev.java.net/2009/02" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:RAX-KSKEY="http://docs.openstack.org/identity/api/ext/RAX-KSKEY/v1.0" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0">
  <wadl:grammars xmlns:wadl="http://wadl.dev.java.net/2009/02">
    <!--Original xsd: file:/home/jenny/keystone/keystone/content/admin/../common/xsd/api.xsd-->
    <wadl:include href="RAX-KSKEY-admin-xsd-1.xsd"/>
    <!--Original xsd: file:/home/jenny/keystone/keystone/content/admin/../common/xsd/api-common.xsd-->
    <wadl:include href="RAX-KSKEY-admin-xsd-2.xsd"/>
    <!--Original xsd: file:/home/jenny/keystone/keystone/content/admin/../common/xsd/RAX-KSKEY-credentials.xsd-->
    <wadl:include href="RAX-KSKEY-admin-xsd-3.xsd"/>
  </wadl:grammars>
  <!--*******************************************************-->
  <!--All Resources-->
  <!--*******************************************************-->
  <!--We should use SSL in production-->
  <resources base="http://localhost:35357">
    <resource path="v2.0">
      <param name="X-Auth-Token" style="header" type="xsd:string" required="true" rax:id="" xmlns:rax="http://docs.rackspace.com/api">
        <doc>You need a valid admin token for access.</doc>
      </param>
      <resource path="users">
        <resource path="{userId}">
          <param name="userId" style="template" required="true" type="xsd:string" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
          <resource path="OS-KSADM">
            <resource path="credentials">
              <method name="POST" rax:id="addUserCredential" xmlns:rax="http://docs.rackspace.com/api">
                <doc xml:lang="EN" title="Add user Credential.">
                  <p xmlns="http://www.w3.org/1999/xhtml">Adds a credential to a user.</p>
                </doc>
                <request>
                  <representation mediaType="application/xml" element="RAX-KSKEY:apiKeyCredentials">
                    <doc xml:lang="EN">
                      <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                        <title>Add user Credential. Request: XML</title>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;apiKeyCredentials
	xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"
	username="testuser"
	apiKey="aaaaa-bbbbb-ccccc-12345678"/></programlisting>
                      </example>
                    </doc>
                  </representation>
                  <representation mediaType="application/json">
                    <doc xml:lang="EN">
                      <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                        <title>Add user Credential. Request: JSON</title>
                        <programlisting language="javascript">{
    "RAX-KSKEY:apiKeyCredentials":{
        "username":"test_user",
        "apiKey":"aaaaa-bbbbb-ccccc-12345678"
    }
}</programlisting>
                      </example>
                    </doc>
                  </representation>
                </request>
                <response status="201">
                  <representation mediaType="application/xml" element="RAX-KSKEY:apiKeyCredentials">
                    <doc xml:lang="EN">
                      <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                        <title>Add user Credential. Response: XML</title>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;apiKeyCredentials
	xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"
	username="testuser"
	apiKey="aaaaa-bbbbb-ccccc-12345678"/></programlisting>
                      </example>
                    </doc>
                  </representation>
                  <representation mediaType="application/json">
                    <doc xml:lang="EN">
                      <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                        <title>Add user Credential. Response: JSON</title>
                        <programlisting language="javascript">{
    "RAX-KSKEY:apiKeyCredentials":{
        "username":"test_user",
        "apiKey":"aaaaa-bbbbb-ccccc-12345678"
    }
}</programlisting>
                      </example>
                    </doc>
                  </representation>
                </response>
                <response>
                  <representation mediaType="application/xml" element="identity:identityFault"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="400">
                  <representation mediaType="application/xml" element="identity:badRequest"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="401">
                  <representation mediaType="application/xml" element="identity:unauthorized"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="403">
                  <representation mediaType="application/xml" element="identity:forbidden"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="405">
                  <representation mediaType="application/xml" element="identity:badMethod"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="413">
                  <representation mediaType="application/xml" element="identity:overLimit"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="503">
                  <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="415">
                  <representation mediaType="application/xml" element="identity:badMediaType"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="404">
                  <representation mediaType="application/xml" element="identity:itemNotFound"/>
                  <representation mediaType="application/json"/>
                </response>
              </method>
              <method name="GET" rax:id="listCredentials" xmlns:rax="http://docs.rackspace.com/api">
                <doc xml:lang="EN" title="List Credentials">
                  <p xmlns="http://www.w3.org/1999/xhtml">List credentials.</p>
                </doc>
                <request>
                  <param name="marker" style="query" required="false" type="xsd:string" rax:id=""/>
                  <param name="limit" style="query" required="false" type="xsd:int" rax:id=""/>
                </request>
                <response status="200 203">
                  <representation mediaType="application/xml" element="identity:credentials">
                    <doc xml:lang="EN">
                      <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                        <title>List Credentials Response: XML</title>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;credentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://docs.openstack.org/identity/api/v2.0">
    &lt;passwordCredentials username="test_user" password="test"/>
    &lt;apiKeyCredentials
	xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"
	username="testuser"
	apiKey="aaaaa-bbbbb-ccccc-12345678"/>
&lt;/credentials></programlisting>
                      </example>
                    </doc>
                  </representation>
                  <representation mediaType="application/json">
                    <doc xml:lang="EN">
                      <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                        <title>List Credentials Response: JSON</title>
                        <programlisting language="javascript">{
    "credentials":[{
            "passwordCredentials":{
                "username":"test_user",
                "password":"mypass"
            }
        },
        {
            "RAX-KSKEY:apiKeyCredentials":{
                "username":"test_user",
                "apiKey":"aaaaa-bbbbb-ccccc-12345678"
            }
        }
    ],
    "credentials_links":[]
}</programlisting>
                      </example>
                    </doc>
                  </representation>
                </response>
                <response>
                  <representation mediaType="application/xml" element="identity:identityFault"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="400">
                  <representation mediaType="application/xml" element="identity:badRequest"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="401">
                  <representation mediaType="application/xml" element="identity:unauthorized"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="403">
                  <representation mediaType="application/xml" element="identity:forbidden"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="405">
                  <representation mediaType="application/xml" element="identity:badMethod"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="413">
                  <representation mediaType="application/xml" element="identity:overLimit"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="503">
                  <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="404">
                  <representation mediaType="application/xml" element="identity:itemNotFound"/>
                  <representation mediaType="application/json"/>
                </response>
              </method>
              <resource path="RAX-KSKEY:apiKeyCredentials">
                <method name="POST" rax:id="updateUserCredential" xmlns:rax="http://docs.rackspace.com/api">
                  <doc xml:lang="EN" title="Update user credential">
                    <p xmlns="http://www.w3.org/1999/xhtml">Update credentials.</p>
                  </doc>
                  <request>
                    <representation mediaType="application/xml" element="RAX-KSKEY:apiKeyCredentials">
                      <doc xml:lang="EN">
                        <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                          <title>Update user credential Request: XML</title>
                          <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;apiKeyCredentials
	xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"
	username="testuser"
	apiKey="aaaaa-bbbbb-ccccc-12345678"/></programlisting>
                        </example>
                      </doc>
                    </representation>
                    <representation mediaType="application/json">
                      <doc xml:lang="EN">
                        <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                          <title>Update user credential Request: JSON</title>
                          <programlisting language="javascript">{
    "RAX-KSKEY:apiKeyCredentials":{
        "username":"test_user",
        "apiKey":"aaaaa-bbbbb-ccccc-12345678"
    }
}</programlisting>
                        </example>
                      </doc>
                    </representation>
                  </request>
                  <response status="200">
                    <representation mediaType="application/xml" element="RAX-KSKEY:apiKeyCredentials">
                      <doc xml:lang="EN">
                        <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                          <title>Update user credential Response: XML</title>
                          <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;apiKeyCredentials
	xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"
	username="testuser"
	apiKey="aaaaa-bbbbb-ccccc-12345678"/></programlisting>
                        </example>
                      </doc>
                    </representation>
                    <representation mediaType="application/json">
                      <doc xml:lang="EN">
                        <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                          <title>Update user credential Response: JSON</title>
                          <programlisting language="javascript">{
    "RAX-KSKEY:apiKeyCredentials":{
        "username":"test_user",
        "apiKey":"aaaaa-bbbbb-ccccc-12345678"
    }
}</programlisting>
                        </example>
                      </doc>
                    </representation>
                  </response>
                  <response>
                    <representation mediaType="application/xml" element="identity:identityFault"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="400">
                    <representation mediaType="application/xml" element="identity:badRequest"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="401">
                    <representation mediaType="application/xml" element="identity:unauthorized"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="403">
                    <representation mediaType="application/xml" element="identity:forbidden"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="405">
                    <representation mediaType="application/xml" element="identity:badMethod"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="413">
                    <representation mediaType="application/xml" element="identity:overLimit"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="503">
                    <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="415">
                    <representation mediaType="application/xml" element="identity:badMediaType"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="404">
                    <representation mediaType="application/xml" element="identity:itemNotFound"/>
                    <representation mediaType="application/json"/>
                  </response>
                </method>
                <method name="DELETE" rax:id="deleteUserCredential" xmlns:rax="http://docs.rackspace.com/api">
                  <doc xml:lang="EN" title="Delete user credential">
                    <p xmlns="http://www.w3.org/1999/xhtml">Delete User credentials.</p>
                  </doc>
                  <response status="204"/>
                  <response>
                    <representation mediaType="application/xml" element="identity:identityFault"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="400">
                    <representation mediaType="application/xml" element="identity:badRequest"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="401">
                    <representation mediaType="application/xml" element="identity:unauthorized"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="403">
                    <representation mediaType="application/xml" element="identity:forbidden"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="405">
                    <representation mediaType="application/xml" element="identity:badMethod"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="413">
                    <representation mediaType="application/xml" element="identity:overLimit"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="503">
                    <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="415">
                    <representation mediaType="application/xml" element="identity:badMediaType"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="404">
                    <representation mediaType="application/xml" element="identity:itemNotFound"/>
                    <representation mediaType="application/json"/>
                  </response>
                </method>
                <method name="GET" rax:id="getUserCredential" xmlns:rax="http://docs.rackspace.com/api">
                  <doc xml:lang="EN" title="Get user Credentials">
                    <p xmlns="http://www.w3.org/1999/xhtml">Get user credentials.</p>
                  </doc>
                  <response status="200 203">
                    <representation mediaType="application/xml" element="RAX-KSKEY:apiKeyCredentials">
                      <doc xml:lang="EN">
                        <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                          <title>Get user Credentials Response: XML</title>
                          <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;apiKeyCredentials
	xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"
	username="testuser"
	apiKey="aaaaa-bbbbb-ccccc-12345678"/></programlisting>
                        </example>
                      </doc>
                    </representation>
                    <representation mediaType="application/json">
                      <doc xml:lang="EN">
                        <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                          <title>Get user Credentials Response: JSON</title>
                          <programlisting language="javascript">{
    "RAX-KSKEY:apiKeyCredentials":{
        "username":"test_user",
        "apiKey":"aaaaa-bbbbb-ccccc-12345678"
    }
}</programlisting>
                        </example>
                      </doc>
                    </representation>
                  </response>
                  <response>
                    <representation mediaType="application/xml" element="identity:identityFault"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="400">
                    <representation mediaType="application/xml" element="identity:badRequest"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="401">
                    <representation mediaType="application/xml" element="identity:unauthorized"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="403">
                    <representation mediaType="application/xml" element="identity:forbidden"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="405">
                    <representation mediaType="application/xml" element="identity:badMethod"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="413">
                    <representation mediaType="application/xml" element="identity:overLimit"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="503">
                    <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="404">
                    <representation mediaType="application/xml" element="identity:itemNotFound"/>
                    <representation mediaType="application/json"/>
                  </response>
                </method>
              </resource>
            </resource>
          </resource>
        </resource>
      </resource>
    </resource>
  </resources>
  <!--*******************************************************-->
  <!--All Methods-->
  <!--*******************************************************-->
  <!--User Credentials-->
  <method name="POST" id="addUserCredential">
    <doc xml:lang="EN" title="Add user Credential.">
      <p xmlns="http://www.w3.org/1999/xhtml">Adds a credential to a user.</p>
    </doc>
    <request>
      <representation mediaType="application/xml" element="RAX-KSKEY:apiKeyCredentials">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Add user Credential. Request: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;apiKeyCredentials
	xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"
	username="testuser"
	apiKey="aaaaa-bbbbb-ccccc-12345678"/></programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Add user Credential. Request: JSON</title>
            <programlisting language="javascript">{
    "RAX-KSKEY:apiKeyCredentials":{
        "username":"test_user",
        "apiKey":"aaaaa-bbbbb-ccccc-12345678"
    }
}</programlisting>
          </example>
        </doc>
      </representation>
    </request>
    <response status="201">
      <representation mediaType="application/xml" element="RAX-KSKEY:apiKeyCredentials">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Add user Credential. Response: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;apiKeyCredentials
	xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"
	username="testuser"
	apiKey="aaaaa-bbbbb-ccccc-12345678"/></programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Add user Credential. Response: JSON</title>
            <programlisting language="javascript">{
    "RAX-KSKEY:apiKeyCredentials":{
        "username":"test_user",
        "apiKey":"aaaaa-bbbbb-ccccc-12345678"
    }
}</programlisting>
          </example>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="listCredentials">
    <doc xml:lang="EN" title="List Credentials">
      <p xmlns="http://www.w3.org/1999/xhtml">List credentials.</p>
    </doc>
    <request>
      <param name="marker" style="query" required="false" type="xsd:string" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
      <param name="limit" style="query" required="false" type="xsd:int" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:credentials">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>List Credentials Response: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;credentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://docs.openstack.org/identity/api/v2.0">
    &lt;passwordCredentials username="test_user" password="test"/>
    &lt;apiKeyCredentials
	xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"
	username="testuser"
	apiKey="aaaaa-bbbbb-ccccc-12345678"/>
&lt;/credentials></programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>List Credentials Response: JSON</title>
            <programlisting language="javascript">{
    "credentials":[{
            "passwordCredentials":{
                "username":"test_user",
                "password":"mypass"
            }
        },
        {
            "RAX-KSKEY:apiKeyCredentials":{
                "username":"test_user",
                "apiKey":"aaaaa-bbbbb-ccccc-12345678"
            }
        }
    ],
    "credentials_links":[]
}</programlisting>
          </example>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="listCredentialsByType">
    <doc xml:lang="EN" title="List Credentials by type">
      <p xmlns="http://www.w3.org/1999/xhtml">List credentials by type.</p>
    </doc>
    <request>
      <param name="marker" style="query" required="false" type="xsd:string" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
      <param name="limit" style="query" required="false" type="xsd:int" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:credentials">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>List Credentials by type Response: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;credentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://docs.openstack.org/identity/api/v2.0">
    &lt;passwordCredentials username="test_user" password="test"/>
&lt;/credentials></programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>List Credentials by type Response: JSON</title>
            <programlisting language="javascript">{
    "credentials":[{
            "passwordCredentials":{
                "username":"test_user",
                "password":"mypass"
            }
        }
    ],
    "credentials_links":[]
}</programlisting>
          </example>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="POST" id="updateUserCredential">
    <doc xml:lang="EN" title="Update user credential">
      <p xmlns="http://www.w3.org/1999/xhtml">Update credentials.</p>
    </doc>
    <request>
      <representation mediaType="application/xml" element="RAX-KSKEY:apiKeyCredentials">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Update user credential Request: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;apiKeyCredentials
	xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"
	username="testuser"
	apiKey="aaaaa-bbbbb-ccccc-12345678"/></programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Update user credential Request: JSON</title>
            <programlisting language="javascript">{
    "RAX-KSKEY:apiKeyCredentials":{
        "username":"test_user",
        "apiKey":"aaaaa-bbbbb-ccccc-12345678"
    }
}</programlisting>
          </example>
        </doc>
      </representation>
    </request>
    <response status="200">
      <representation mediaType="application/xml" element="RAX-KSKEY:apiKeyCredentials">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Update user credential Response: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;apiKeyCredentials
	xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"
	username="testuser"
	apiKey="aaaaa-bbbbb-ccccc-12345678"/></programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Update user credential Response: JSON</title>
            <programlisting language="javascript">{
    "RAX-KSKEY:apiKeyCredentials":{
        "username":"test_user",
        "apiKey":"aaaaa-bbbbb-ccccc-12345678"
    }
}</programlisting>
          </example>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="DELETE" id="deleteUserCredential">
    <doc xml:lang="EN" title="Delete user credential">
      <p xmlns="http://www.w3.org/1999/xhtml">Delete User credentials.</p>
    </doc>
    <response status="204"/>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getUserCredential">
    <doc xml:lang="EN" title="Get user Credentials">
      <p xmlns="http://www.w3.org/1999/xhtml">Get user credentials.</p>
    </doc>
    <response status="200 203">
      <representation mediaType="application/xml" element="RAX-KSKEY:apiKeyCredentials">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Get user Credentials Response: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;apiKeyCredentials
	xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"
	username="testuser"
	apiKey="aaaaa-bbbbb-ccccc-12345678"/></programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Get user Credentials Response: JSON</title>
            <programlisting language="javascript">{
    "RAX-KSKEY:apiKeyCredentials":{
        "username":"test_user",
        "apiKey":"aaaaa-bbbbb-ccccc-12345678"
    }
}</programlisting>
          </example>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
</application>]]></con:content><con:type>http://wadl.dev.java.net/2009/02</con:type></con:part><con:part><con:url>file:/home/jenny/keystone/keystone/content/admin/normalized/RAX-KSKEY-admin-xsd-1.xsd</con:url><con:content><![CDATA[<!--Flattened from: file:/home/jenny/keystone/keystone/content/admin/../common/xsd/api.xsd-->
<xsd:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:rax="http://docs.rackspace.com/api" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:RAX-KSKEY="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0">
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="RAX-KSKEY-admin-xsd-4.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <!--Elements-->
  <!--Complex Types-->
  <!--EndpointForService-->
  <!--VersionForService-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="RAX-KSKEY-admin-xsd-4.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Elements-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="RAX-KSKEY-admin-xsd-4.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Simple Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <!--Elements-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Fault Elements-->
  <!--Fault Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="RAX-KSKEY-admin-xsd-4.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Elements-->
  <!--Complex Types-->
  <!--EndpointForService-->
  <!--VersionForService-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="RAX-KSKEY-admin-xsd-4.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Elements-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Fault Elements-->
  <!--Fault Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="RAX-KSKEY-admin-xsd-4.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="RAX-KSKEY-admin-xsd-4.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Elements-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="RAX-KSKEY-admin-xsd-4.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Elements-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <!--Elements-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <!--Elements-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <!--Elements-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <!--Simple Types-->
  <element name="access" type="identity:AuthenticateResponse" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="roles" type="identity:RoleList" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A list of roles.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="role" type="identity:Role" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A role.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="tenant" type="identity:Tenant" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A container used to group or isolate resources and/or identity
                  objects. Depending on the service operator, a tenant may map to a customer,
                  account, organization, or project.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/xml" href="../samples/tenant.xml"/>
                     
          </xsdxt:sample>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/json" href="../samples/tenant.json"/>
                     
          </xsdxt:sample>
                 
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="tenants" type="identity:Tenants" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A list of tenants.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="identityFault" type="identity:IdentityFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="serviceUnavailable" type="identity:ServiceUnavailableFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="badRequest" type="identity:BadRequestFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="unauthorized" type="identity:UnauthorizedFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="overLimit" type="identity:OverLimitFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="userDisabled" type="identity:UserDisabledFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="forbidden" type="identity:ForbiddenFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="itemNotFound" type="identity:ItemNotFoundFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="tenantConflict" type="identity:TenantConflictFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="endpoint" type="identity:Endpoint" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>An Endpoint.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="endpoints" type="identity:EndpointList" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A list of Endpoints.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="users" type="identity:UserList" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN">
        <p>A list of Users.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="user" type="identity:User" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN">
        <p>A Keystone User.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="auth" type="identity:AuthenticationRequest" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="credential" type="identity:CredentialType" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="credentials" type="identity:CredentialListType" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="passwordCredentials" type="identity:PasswordCredentialsRequiredUsername" substitutionGroup="identity:credential" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <simpleType name="ExtensibleServiceType" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>
          An extensible service type allows all of the
                    strings defined in
          <a href="#type_ServiceType" title="See definition of                         ServiceType">ServiceType</a>
          or an
                    alias prefixed status.
        </p>
      </xsd:documentation>
    </annotation>
    <union memberTypes="identity:ServiceType identity:ExtendedService"/>
  </simpleType>
  <simpleType name="ServiceType" xmlns="http://www.w3.org/2001/XMLSchema">
    <restriction base="xsd:string">
      <enumeration value="compute">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for an OpenStack Compute API 1.1 compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="object-store">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for a Swift-compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="image-service">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for a Glance-compatible service</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="identity">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for a Keystone-compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
    </restriction>
  </simpleType>
  <simpleType name="ExtendedService" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A non-core service type which must contain an extension prefix.</p>
      </xsd:documentation>
    </annotation>
    <restriction base="xsd:string">
      <pattern value="(\w|-)+:\w+"/>
    </restriction>
  </simpleType>
  <simpleType name="ExtensibleServiceType" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>
          An extensible service type allows all of the
                    strings defined in
          <a href="#type_ServiceType" title="See definition of                         ServiceType">ServiceType</a>
          or an
                    alias prefixed status.
        </p>
      </xsd:documentation>
    </annotation>
    <union memberTypes="identity:ServiceType identity:ExtendedService"/>
  </simpleType>
  <simpleType name="ServiceType" xmlns="http://www.w3.org/2001/XMLSchema">
    <restriction base="xsd:string">
      <enumeration value="compute">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for an OpenStack Compute API 1.1 compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="object-store">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for a Swift-compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="image-service">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for a Glance-compatible service</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="identity">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for a Keystone-compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
    </restriction>
  </simpleType>
  <simpleType name="ExtendedService" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A non-core service type which must contain an extension prefix.</p>
      </xsd:documentation>
    </annotation>
    <restriction base="xsd:string">
      <pattern value="(\w|-)+:\w+"/>
    </restriction>
  </simpleType>
  <complexType name="Token" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A token is an arbitrary bit of text that is used to access
                    resources. Each token has a scope which describes which
                    resources are accessible with it. A token may be
                    revoked at anytime and is valid for a finite duration.</p>
        <p>While Keystone supports token-based authentication in this release,
                    the intention is for it to support additional protocols in the
                    future. The desire is for it to be an integration service, and not
                    a full-fledged identity store and management solution.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/token.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/token.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
    <sequence>
      <element name="tenant" type="identity:TenantForAuthenticateResponse"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:string" use="required"/>
    <attribute name="expires" type="xsd:dateTime" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="AuthenticateResponse" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="token" type="identity:Token"/>
      <element name="user" type="identity:UserForAuthenticateResponse"/>
      <element name="serviceCatalog" type="identity:ServiceCatalog" minOccurs="0"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="UserForAuthenticateResponse" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="roles" type="identity:RoleList"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:string"/>
    <attribute name="name" type="xsd:string"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="TenantForAuthenticateResponse" xmlns="http://www.w3.org/2001/XMLSchema">
    <attribute name="id" type="xsd:string"/>
    <attribute name="name" type="xsd:string"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="ServiceCatalog" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>The service catalog lists the services you have access to</p>
        <div class="design">
          <p>We optimized for future flexibility around the hierarchy. So we
                    left the design as a flat list of endpoints with attributes and the
                    consumer can categorize as they need.
                    This results in potential duplication (such as with the version/@list)
                    but we acceopt that normalization cost in order to not force an
                    artificial hierarchy (suchas on region, which can be optional).</p>
        </div>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/xml" href="../samples/services.xml"/>
                     
          </xsdxt:sample>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/json" href="../samples/services.json"/>
                     
          </xsdxt:sample>
                 
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
    <sequence>
      <element name="service" type="identity:ServiceForCatalog" minOccurs="1" maxOccurs="unbounded">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>A list of services.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="ServiceForCatalog" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="endpoint" type="identity:EndpointForService" minOccurs="1" maxOccurs="unbounded">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>A list of endpoints.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="type" type="identity:ExtensibleServiceType" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The OpenStack-registered type (e.g. 'compute', 'object-store', etc).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The commercial service name (e.g. 'My Nova Cloud Servers').</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="EndpointForService" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="version" type="identity:VersionForService" maxOccurs="1" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>Version details.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="region" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The name of the region where the endpoint
                        lives. Example: airport codes; LHR (UK),
                        STL (Saint Louis)</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="tenantId" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>Tenant id to which the endpoints belong.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="publicURL" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>Public accessible service URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="internalURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A service URL, accessible only locally within that
                        cloud (generally over a high bandwidth, low latency,
                        free of charge link).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="adminURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>An Admin URL (used for administration using privileged
                        calls). This may expose
                        additional functionality not found in the public and
                        internal URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="VersionForService" xmlns="http://www.w3.org/2001/XMLSchema">
    <attribute name="id" type="xsd:string" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>Id of the version.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="info" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>URI to get the information specific to this version.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="list" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>URI to get the information about all versions.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="Role" xmlns="http://www.w3.org/2001/XMLSchema">
    <attribute name="id" type="xsd:string" use="optional"/>
    <attribute name="name" type="xsd:string" use="required"/>
    <attribute name="description" type="xsd:string" use="optional"/>
    <attribute name="serviceId" type="xsd:string" use="optional"/>
    <attribute name="tenantId" type="xsd:string" use="optional"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="RoleList" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="role" type="identity:Role" minOccurs="0" maxOccurs="unbounded"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="Tenants" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="tenant" type="identity:Tenant" maxOccurs="100"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="Tenant" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="description" type="xsd:string">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>An free text description of the tenant.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:ID" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>An ID uniquely identifying the tenant. This usually comes from the back-end store.
                        This value is guaranteed to be unique and immutable (it will never change).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="name" type="xsd:string" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The name of the tenant. This is guaranteed to be unique, but may change.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="enabled" type="xsd:boolean" use="optional" default="true">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>An boolean signifying if a tenant is enabled or not. A disabled tenant
                        cannot be authenticated against.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="display-name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A human-readable, friendly name for use in user interfaces.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute type="xsd:dateTime" name="updated" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A time-stamp identifying the modification time of the
                        tenant.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute type="xsd:dateTime" name="created" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A creation time-stamp for the tenant.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="IdentityFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="message" type="xsd:string">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>A human readable message that is appropriate for display
                            to the end user.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element name="details" type="xsd:string" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The optional &lt;details> element may contain useful
                            information for tracking down errors (e.g a stack
                            trace).  This information may or may not be appropriate
                            for display to an end user.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="code" type="xsd:int" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The HTTP status code associated with the current fault.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="ServiceUnavailableFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:IdentityFault"/>
    </complexContent>
  </complexType>
  <complexType name="BadRequestFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:IdentityFault"/>
    </complexContent>
  </complexType>
  <complexType name="UnauthorizedFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:IdentityFault"/>
    </complexContent>
  </complexType>
  <complexType name="UserDisabledFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:IdentityFault"/>
    </complexContent>
  </complexType>
  <complexType name="ForbiddenFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:IdentityFault"/>
    </complexContent>
  </complexType>
  <complexType name="ItemNotFoundFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:IdentityFault"/>
    </complexContent>
  </complexType>
  <complexType name="TenantConflictFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:IdentityFault"/>
    </complexContent>
  </complexType>
  <complexType name="OverLimitFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:IdentityFault">
        <attribute name="retryAt" type="xsd:dateTime" use="optional">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
              <p>An optional dateTime denoting when an operation should
                                be retried.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="Endpoint" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="version" type="identity:VersionForService" maxOccurs="1" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>Version details.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:int" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>An ID uniquely identifying the Endpoint.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="type" type="identity:ExtensibleServiceType" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The OpenStack-registered type (e.g. 'compute', 'object-store', etc).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The commercial service name (e.g. 'My Nova Cloud Servers').</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="region" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The region of Endpoint Template.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="publicURL" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The public URL to access represented service.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="internalURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The internal version of the public URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="adminURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The admin URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="tenantId" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>Tenant id to which the endpoints belong.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="EndpointList" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="endpoint" type="identity:Endpoint" minOccurs="0" maxOccurs="unbounded"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="User" xmlns="http://www.w3.org/2001/XMLSchema">
    <attribute name="id" type="xsd:ID" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>An automatically generated, unique, immutable (it will never change) identifier
                        for the user. This is generated by the backend this user is stored in.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="username" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A unique, mutable (it can change) user name that may be used by the user
                        an identifier when presenting credentials.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="email" type="xsd:string" use="optional"/>
    <attribute name="enabled" type="xsd:boolean" default="true" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A true/false value that determines if the user may authenticate or not.
                        If enabled is false, the user will not be able to authenticate.
                        How this value is stored or generated is dependent on the backend in use.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="display-name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A human-readable, friendly name for use in user interfaces.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="updated" type="xsd:dateTime" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A time-stamp identifying the modification time of the
                        user.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="created" type="xsd:dateTime" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A creation time-stamp for the user.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="UserList" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="user" type="identity:User" minOccurs="0" maxOccurs="unbounded"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="CredentialType" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Base type for credential in Keystone.</p>
      </xsd:documentation>
    </annotation>
    <sequence>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="AuthenticationRequest" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Both the tenantId and tenantName are optional, but should not be specified together. If both attributes are specified, the server SHOULD respond with a 400 Bad Request.</p>
      </xsd:documentation>
    </annotation>
    <sequence>
      <choice>
        <element ref="identity:credential" minOccurs="1"/>
        <element name="token" type="identity:TokenForAuthenticationRequest"/>
      </choice>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="tenantId" type="xsd:string" use="optional"/>
    <attribute name="tenantName" type="xsd:string" use="optional"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="TokenForAuthenticationRequest" xmlns="http://www.w3.org/2001/XMLSchema">
    <attribute name="id" type="xsd:string" use="required"/>
  </complexType>
  <complexType name="PasswordCredentialsBase" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:CredentialType">
        <attribute name="username" type="xsd:string" use="optional"/>
        <attribute name="password" type="xsd:string" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="PasswordCredentialsWithoutUsername" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <restriction base="identity:PasswordCredentialsBase">
        <attribute name="username" type="xsd:string" use="prohibited"/>
        <attribute name="password" type="xsd:string" use="required"/>
      </restriction>
    </complexContent>
  </complexType>
  <complexType name="PasswordCredentialsRequiredUsername" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <restriction base="identity:PasswordCredentialsBase">
        <attribute name="username" type="xsd:string" use="required"/>
        <attribute name="password" type="xsd:string" use="required"/>
      </restriction>
    </complexContent>
  </complexType>
  <complexType name="CredentialListType" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element ref="identity:credential" minOccurs="1" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jenny/keystone/keystone/content/admin/normalized/RAX-KSKEY-admin-xsd-4.xsd</con:url><con:content><![CDATA[<!--Flattened from: file:/home/jenny/keystone/keystone/content/common/xsd/atom/atom.xsd-->
<xsd:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://www.w3.org/2005/Atom" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:rax="http://docs.rackspace.com/api" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:RAX-KSKEY="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0">
  <xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="RAX-KSKEY-admin-xsd-5.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
  <xs:element name="link" type="atom:link" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
  <xs:simpleType name="relation" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:restriction base="xs:string">
      <xs:enumeration value="alternate"/>
      <xs:enumeration value="appendix"/>
      <xs:enumeration value="archives"/>
      <xs:enumeration value="author"/>
      <xs:enumeration value="bookmark"/>
      <xs:enumeration value="chapter"/>
      <xs:enumeration value="contents"/>
      <xs:enumeration value="copyright"/>
      <xs:enumeration value="current"/>
      <xs:enumeration value="describedby"/>
      <xs:enumeration value="edit"/>
      <xs:enumeration value="edit-media"/>
      <xs:enumeration value="first"/>
      <xs:enumeration value="glossary"/>
      <xs:enumeration value="help"/>
      <xs:enumeration value="hub"/>
      <xs:enumeration value="icon"/>
      <xs:enumeration value="index"/>
      <xs:enumeration value="last"/>
      <xs:enumeration value="latest-version"/>
      <xs:enumeration value="license"/>
      <xs:enumeration value="monitor"/>
      <xs:enumeration value="monitor-group"/>
      <xs:enumeration value="next"/>
      <xs:enumeration value="next-arvhice"/>
      <xs:enumeration value="nofollow"/>
      <xs:enumeration value="payment"/>
      <xs:enumeration value="predecessor-version"/>
      <xs:enumeration value="prefetch"/>
      <xs:enumeration value="prev"/>
      <xs:enumeration value="previous"/>
      <xs:enumeration value="prev-archive"/>
      <xs:enumeration value="replies"/>
      <xs:enumeration value="search"/>
      <xs:enumeration value="section"/>
      <xs:enumeration value="self"/>
      <xs:enumeration value="service"/>
      <xs:enumeration value="start"/>
      <xs:enumeration value="stylesheet"/>
      <xs:enumeration value="subsection"/>
      <xs:enumeration value="successor-version"/>
      <xs:enumeration value="up"/>
      <xs:enumeration value="version-history"/>
      <xs:enumeration value="via"/>
      <xs:enumeration value="working-copy"/>
      <xs:enumeration value="working-copy-of"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="link" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation>
        <html:p>
          See section 3.4 of the ATOM RFC
          <html:a href="http://tools.ietf.org/html/rfc4287">RFC4287</html:a>
        </html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="rel" use="required" type="atom:relation">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="type" use="optional" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="href" use="required" type="xs:anyURI">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="hreflang" use="optional" type="xs:NMTOKEN">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="title" use="optional" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
  </xs:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jenny/keystone/keystone/content/admin/normalized/RAX-KSKEY-admin-xsd-5.xsd</con:url><con:content><![CDATA[<!--Flattened from: file:/home/jenny/keystone/keystone/content/common/xsd/atom/xml.xsd-->
<xsd:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:rax="http://docs.rackspace.com/api" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:RAX-KSKEY="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0">
  <xs:annotation xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:documentation>
      <div>
        <h1>About the XML namespace</h1>
        <div class="bodytext">
          <p>This schema document describes the XML namespace, in a form
      suitable for import by other schema documents.</p>
          <p>
            See
            <a href="http://www.w3.org/XML/1998/namespace.html">http://www.w3.org/XML/1998/namespace.html</a>
            and
            <a href="http://www.w3.org/TR/REC-xml">http://www.w3.org/TR/REC-xml</a>
            for information 
      about this namespace.
          </p>
          <p>Note that local names in this namespace are intended to be
      defined only by the World Wide Web Consortium or its subgroups.
      The names currently defined in this namespace are listed below.
      They should not be used with conflicting semantics by any Working
      Group, specification, or document instance.</p>
          <p>
            See further below in this document for more information about
            <a href="#usage">how to refer to this schema document from your own
      XSD schema documents</a>
            and about
            <a href="#nsversioning">the
      namespace-versioning policy governing this schema document</a>
            .
          </p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>lang (as an attribute name)</h3>
          <p>denotes an attribute whose value
       is a language code for the natural language of the content of
       any element; its value is inherited.  This name is reserved
       by virtue of its definition in the XML specification.</p>
        </div>
        <div>
          <h4>Notes</h4>
          <p>Attempting to install the relevant ISO 2- and 3-letter
      codes as the enumerated possible values is probably never
      going to be a realistic possibility.</p>
          <p>
            See BCP 47 at
            <a href="http://www.rfc-editor.org/rfc/bcp/bcp47.txt">http://www.rfc-editor.org/rfc/bcp/bcp47.txt</a>
            and the IANA language subtag registry at
            <a href="http://www.iana.org/assignments/language-subtag-registry">http://www.iana.org/assignments/language-subtag-registry</a>
            for further information.
          </p>
          <p>The union allows for the 'un-declaration' of xml:lang with
      the empty string.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:union memberTypes="xs:language">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value=""/>
          </xs:restriction>
        </xs:simpleType>
      </xs:union>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="space" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>space (as an attribute name)</h3>
          <p>denotes an attribute whose
       value is a keyword indicating what whitespace processing
       discipline is intended for the content of the element; its
       value is inherited.  This name is reserved by virtue of its
       definition in the XML specification.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>base (as an attribute name)</h3>
          <p>denotes an attribute whose value
       provides a URI to be used as the base for interpreting any
       relative URIs in the scope of the element on which it
       appears; its value is inherited.  This name is reserved
       by virtue of its definition in the XML Base specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xmlbase/">http://www.w3.org/TR/xmlbase/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="id" type="xs:ID" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>id (as an attribute name)</h3>
          <p>denotes an attribute whose value
       should be interpreted as if declared to be of type ID.
       This name is reserved by virtue of its definition in the
       xml:id specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xml-id/">http://www.w3.org/TR/xml-id/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
    <xs:attribute ref="xml:id"/>
  </xs:attributeGroup>
  <xs:annotation xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:documentation>
      <div>
        <h3>Father (in any context at all)</h3>
        <div class="bodytext">
          <p>denotes Jon Bosak, the chair of 
      the original XML Working Group.  This name is reserved by 
      the following decision of the W3C XML Plenary and 
      XML Coordination groups:</p>
          <blockquote>
            <p>In appreciation for his vision, leadership and
	dedication the W3C XML Plenary on this 10th day of
	February, 2000, reserves for Jon Bosak in perpetuity
	the XML name "xml:Father".</p>
          </blockquote>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:documentation>
      <div xml:id="usage" id="usage">
        <h2>
          <a name="usage">About this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            This schema defines attributes and an attribute group suitable
      for use by schemas wishing to allow
            <code>xml:base</code>
            ,
            <code>xml:lang</code>
            ,
            <code>xml:space</code>
            or
            <code>xml:id</code>
            attributes on elements they define.
          </p>
          <p>To enable this, such a schema must import this schema for
      the XML namespace, e.g. as follows:</p>
          <pre>&lt;schema . . .>
           . . .
           &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2001/xml.xsd"/></pre>
          <p>or</p>
          <pre>&lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2009/01/xml.xsd"/></pre>
          <p>Subsequently, qualified reference to any of the attributes or the
      group defined below will have the desired effect, e.g.</p>
          <pre>&lt;type . . .>
           . . .
           &lt;attributeGroup ref="xml:specialAttrs"/></pre>
          <p>will define a type which will schema-validate an instance element
      with any of those attributes.</p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:documentation>
      <div id="nsversioning" xml:id="nsversioning">
        <h2>
          <a name="nsversioning">Versioning policy for this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            In keeping with the XML Schema WG's standard versioning
      policy, this schema document will persist at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            .
          </p>
          <p>
            At the date of issue it can also be found at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            .
          </p>
          <p>
            The schema document at that URI may however change in the future,
      in order to remain compatible with the latest version of XML
      Schema itself, or with the XML namespace itself.  In other words,
      if the XML Schema or XML namespaces change, the version of this
      document at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            will change accordingly; the version at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            will not change.
          </p>
          <p>Previous dated (and unchanging) versions of this schema 
      document are at:</p>
          <ul>
            <li>
              <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2007/08/xml.xsd">http://www.w3.org/2007/08/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2004/10/xml.xsd">http://www.w3.org/2004/10/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2001/03/xml.xsd">http://www.w3.org/2001/03/xml.xsd</a>
            </li>
          </ul>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jenny/keystone/keystone/content/admin/normalized/RAX-KSKEY-admin-xsd-2.xsd</con:url><con:content><![CDATA[<!--Flattened from: file:/home/jenny/keystone/keystone/content/admin/../common/xsd/api-common.xsd-->
<xsd:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/common/api/v1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:rax="http://docs.rackspace.com/api" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:RAX-KSKEY="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0">
  <annotation xmlns="http://www.w3.org/2001/XMLSchema">
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Open Stack Common API Schema Types 1.0</xsdxt:title>
      <xsdxt:link rev="index" href="extensions.xsd"/>
      <xsdxt:link rev="index" href="limits.xsd"/>
      <xsdxt:link rev="index" href="version.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>This is the main index XML Schema document
                for Common API Schema Types Version 1.0.</p>
    </xsd:documentation>
  </annotation>
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <xs:annotation xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Version Types</xsdxt:title>
      <xsdxt:link rel="index" href="api-common.xsd"/>
    </xs:appinfo>
    <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>This schema file defines all types related to versioning.</p>
    </xs:documentation>
  </xs:annotation>
  <!--Import ATOM specific schema definitions-->
  <!--Multiple choices-->
  <!--Versioning-->
  <!--Types-->
  <xsd:element name="extensions" type="ext:Extensions" xmlns:ext="http://docs.openstack.org/common/api/v1.0"/>
  <xsd:element name="extension" type="ext:Extension" xmlns:ext="http://docs.openstack.org/common/api/v1.0"/>
  <xs:element name="choices" type="vers:VersionChoiceList" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>This element is returned when the version of the
                    resource cannot be determined. The element
                    provides a list of choices for the resource.</p>
      </xs:documentation>
      <xs:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/choices.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/choices.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <xs:element name="versions" type="vers:VersionChoiceList" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Provides a list of supported versions.</p>
      </xs:documentation>
      <xs:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/versions.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/versions.json"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/atom+xml" href="../samples/versions-atom.xml"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <xs:element name="version2" type="vers:VersionChoiceRoot" vc:minVersion="1.1" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>This element provides detailed meta information
                    regarding the status of the current API
                    version. The description should include a pointer
                    to both a human readable and a machine processable
                    description of the API service.</p>
      </xs:documentation>
      <xs:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/version.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/version.json"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/atom+xml" href="../samples/version-atom.xml"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <xsd:simpleType name="Alias" xmlns:ext="http://docs.openstack.org/common/api/v1.0">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="\w+\-\w+"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xs:simpleType name="VersionStatus" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation>
        <html:p>The VersionStatus type describes a service's operational status.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="ALPHA">
        <xs:annotation>
          <xs:documentation>
            <html:p>This is a new service the API. Thi API
                            contract may be set, but the implementaiton
                            may not be 100% complient with it. Developers
                            are encouraged to begin testing aganst an
                            ALPHA version to provide feedback.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BETA">
        <xs:annotation>
          <xs:documentation>
            <html:p>A status of BETA indicates that this
                            version is a candidate for the next major
                            release and may feature functionality not
                            available in the current
                            version. Developers are encouraged to test
                            and begin the migration processes to a
                            BETA version. Note that a BETA version is
                            undergoing testing, it has not been
                            officially released, and my not be stable.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CURRENT">
        <xs:annotation>
          <xs:documentation>
            <html:p>The API version is stable and has been
                            tested. Developers are encouraged to
                            develop against this API version. The
                            current released version of the API will
                            always be marked as CURRENT.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="DEPRECATED">
        <xs:annotation>
          <xs:documentation>
            <html:p>A status of DEPRECATED indicates that a
                            newer version of the API is
                            available. Application developers are
                            discouraged from using this version and
                            should instead develop against the latest
                            current version of the API.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xsd:complexType name="Extensions" xmlns:ext="http://docs.openstack.org/common/api/v1.0">
    <xsd:sequence>
      <xsd:element name="extension" type="ext:Extension" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
  </xsd:complexType>
  <xsd:complexType name="Extension" xmlns:ext="http://docs.openstack.org/common/api/v1.0">
    <xsd:sequence>
      <xsd:element name="description" type="xsd:string" minOccurs="1"/>
      <!--<xsd:element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded" />-->
      <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="name" type="xsd:string" use="required"/>
    <xsd:attribute name="namespace" type="xsd:anyURI" use="required"/>
    <xsd:attribute name="alias" type="ext:Alias" use="required"/>
    <xsd:attribute name="updated" type="xsd:dateTime" use="optional"/>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
    <!--TODO(Ziad)resolve asser issue
            <xsd:assert vc:minVersion="1.1" test="atom:link[@rel='describedby']">
            <xsd:annotation>
                <xsd:documentation
                    xml:lang="EN"
                    xmlns="http://www.w3.org/1999/xhtml">
                    <p>
                        There should be at least one atom link
                        with a describedby relation.
                    </p>
                </xsd:documentation>
            </xsd:annotation>
        </xsd:assert>-->
  </xsd:complexType>
  <xs:complexType name="VersionChoiceList" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation>
        <html:p>A version choice list outlines a collection of
                    resources at various versions.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="version" type="vers:VersionChoice" minOccurs="1" maxOccurs="unbounded"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
    <!--TODO(Ziad)resolve assert issue
            <xs:assert vc:minVersion="1.1" test="every $v in vers:version satisfies $v/atom:link[@rel='self']">
            <xs:annotation>
                <xs:documentation>
                    <html:p>
                        In version lists, every single version must
                        contain at least one self link.
                    </html:p>
                </xs:documentation>
            </xs:annotation>
        </xs:assert>-->
  </xs:complexType>
  <xs:complexType name="VersionChoiceRoot" vc:minVersion="1.1" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:complexContent>
      <xs:extension base="vers:VersionChoice">
        <!--TODO(Ziad)resolve asser issue
                    <xs:assert test="atom:link[@rel='describedby']">
                    <xs:annotation>
                        <xs:documentation>
                            <html:p>
                                When used as a root element, a version choice
                                must contain at least one describedby link.
                            </html:p>
                        </xs:documentation>
                    </xs:annotation>
                </xs:assert>-->
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="VersionChoice" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation>
        <html:p>A version choice contains relevant information
                    about an available service that a user can then
                    use to target a specific version of the service.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="media-types" type="vers:MediaTypeList" minOccurs="0" maxOccurs="1"/>
      <!--<xs:element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded" />-->
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>
          <html:p>The ID of a version choice represents the service version's unique 
                        identifier. This ID is guaranteed to be unique only among the
                        service version choices outlined in the VersionChoiceList.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="status" type="vers:VersionStatus" use="required">
      <xs:annotation>
        <xs:documentation>
          <html:p>A version choice's status describes the current operational state of
                        the given service version. The operational status is captured in a
                        simple type enumeration called VersionStatus.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="updated" type="xs:dateTime" use="optional">
      <xs:annotation>
        <xs:documentation>
          <html:p>
            A version choice's updated attribute describes
                        the time when the version was updated. The
                        time should be updated anytime
            <html:strong>anything</html:strong>
            in the
                        version has changed: documentation,
                        extensions, bug fixes.
          </html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:complexType name="MediaTypeList" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation>
        <html:p>A MediaTypeList outlines a collection of valid media types for a given 
                    service version.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="media-type" type="vers:MediaType" minOccurs="1" maxOccurs="unbounded"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:complexType name="MediaType" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation>
        <html:p>A MediaType describes what content types the service version understands.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="base" type="xs:string" use="optional" default="">
      <xs:annotation>
        <xs:documentation>
          <html:p>The base of a given media type describes the
                        simple MIME type that then a more complicated
                        media type can be derived from. These types
                        are basic and provide no namespace or version
                        specific data are are only provided as a
                        convenience.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="type" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>
          <html:p>The type attribute of a MediaType describes
                        the MIME specific identifier of the media type
                        in question.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jenny/keystone/keystone/content/admin/normalized/RAX-KSKEY-admin-xsd-3.xsd</con:url><con:content><![CDATA[<!--Flattened from: file:/home/jenny/keystone/keystone/content/admin/../common/xsd/RAX-KSKEY-credentials.xsd-->
<xsd:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:rax="http://docs.rackspace.com/api" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:RAX-KSKEY="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0">
  <import namespace="http://docs.openstack.org/identity/api/v2.0" schemaLocation="RAX-KSKEY-admin-xsd-6.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Import schema we are extending-->
  <!--Elements-->
  <!--Complex Types-->
  <element name="apiKeyCredentials" type="RAX-KSKEY:apiKeyCredentials" substitutionGroup="identity:credential" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <complexType name="apiKeyCredentials" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:CredentialType">
        <attribute name="username" type="xsd:string" use="optional"/>
        <attribute name="apiKey" type="xsd:string" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="apiKeyCredentialsWithOnlyApiKey" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <restriction base="RAX-KSKEY:apiKeyCredentials">
        <attribute name="username" type="xsd:string" use="prohibited"/>
        <attribute name="apiKey" type="xsd:string" use="required">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
              <p>The user's API Key.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
      </restriction>
    </complexContent>
  </complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jenny/keystone/keystone/content/admin/normalized/RAX-KSKEY-admin-xsd-6.xsd</con:url><con:content><![CDATA[<!--Flattened from: file:/home/jenny/keystone/keystone/content/admin/../common/xsd/credentials.xsd-->
<xsd:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:rax="http://docs.rackspace.com/api" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:RAX-KSKEY="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0">
  <!--Import ATOM specific schema definitions-->
  <!--Elements-->
  <!--Complex Types-->
  <element name="auth" type="identity:AuthenticationRequest" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="credential" type="identity:CredentialType" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="credentials" type="identity:CredentialListType" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="passwordCredentials" type="identity:PasswordCredentialsRequiredUsername" substitutionGroup="identity:credential" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <complexType name="CredentialType" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Base type for credential in Keystone.</p>
      </xsd:documentation>
    </annotation>
    <sequence>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="AuthenticationRequest" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Both the tenantId and tenantName are optional, but should not be specified together. If both attributes are specified, the server SHOULD respond with a 400 Bad Request.</p>
      </xsd:documentation>
    </annotation>
    <sequence>
      <choice>
        <element ref="identity:credential" minOccurs="1"/>
        <element name="token" type="identity:TokenForAuthenticationRequest"/>
      </choice>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="tenantId" type="xsd:string" use="optional"/>
    <attribute name="tenantName" type="xsd:string" use="optional"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="TokenForAuthenticationRequest" xmlns="http://www.w3.org/2001/XMLSchema">
    <attribute name="id" type="xsd:string" use="required"/>
  </complexType>
  <complexType name="PasswordCredentialsBase" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:CredentialType">
        <attribute name="username" type="xsd:string" use="optional"/>
        <attribute name="password" type="xsd:string" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="PasswordCredentialsWithoutUsername" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <restriction base="identity:PasswordCredentialsBase">
        <attribute name="username" type="xsd:string" use="prohibited"/>
        <attribute name="password" type="xsd:string" use="required"/>
      </restriction>
    </complexContent>
  </complexType>
  <complexType name="PasswordCredentialsRequiredUsername" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <restriction base="identity:PasswordCredentialsBase">
        <attribute name="username" type="xsd:string" use="required"/>
        <attribute name="password" type="xsd:string" use="required"/>
      </restriction>
    </complexContent>
  </complexType>
  <complexType name="CredentialListType" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element ref="identity:credential" minOccurs="1" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:35357</con:endpoint></con:endpoints><con:resource name="v2.0" path="${#Project#path}"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="users" path="users"><con:settings/><con:parameters/><con:resource name="{userId}" path="{userId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>userId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="OS-KSADM" path="OS-KSADM"><con:settings/><con:parameters/><con:resource name="credentials" path="credentials"><con:settings/><con:parameters/><con:resource name="RAX-KSKEY:apiKeyCredentials" path="RAX-KSKEY:apiKeyCredentials"><con:settings/><con:parameters/><con:method name="Update user credential" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/RAX-KSKEY/v1.0">v1:apiKeyCredentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/RAX-KSKEY/v1.0">v1:apiKeyCredentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete user credential" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Get user Credentials" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/RAX-KSKEY/v1.0">v1:apiKeyCredentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Add user Credential." method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/RAX-KSKEY/v1.0">v1:apiKeyCredentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/RAX-KSKEY/v1.0">v1:apiKeyCredentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="List Credentials" method="GET"><con:settings/><con:parameters><con:parameter><con:name>marker</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource></con:resource></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="RAX-KSQA-admin" type="rest" basePath="" definitionUrl="/home/jenny/keystone/keystone/content/admin/normalized/RAX-KSQA-admin.wadl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/home/jenny/keystone/keystone/content/admin/normalized/RAX-KSQA-admin.wadl"><con:part><con:url>file:/home/jenny/keystone/keystone/content/admin/normalized/RAX-KSQA-admin.wadl</con:url><con:content><![CDATA[<application xsi:schemaLocation="http://docs.openstack.org/identity/api/v2.0 ../common/xsd/api.xsd     http://docs.openstack.org/common/api/v1.0 ../common/xsd/api-common.xsd     http://wadl.dev.java.net/2009/02 http://www.w3.org/Submission/wadl/wadl.xsd     http://docs.openstack.org/identity/api/ext/RAX-KSQA/v1.0 ../common/xsd/RAX-KSQA-secretQA.xsd     " xmlns="http://wadl.dev.java.net/2009/02" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:RAX-KSQA="http://docs.openstack.org/identity/api/ext/RAX-KSQA/v1.0" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0">
  <wadl:grammars xmlns:wadl="http://wadl.dev.java.net/2009/02">
    <!--Original xsd: file:/home/jenny/keystone/keystone/content/admin/../common/xsd/api.xsd-->
    <wadl:include href="RAX-KSQA-admin-xsd-1.xsd"/>
    <!--Original xsd: file:/home/jenny/keystone/keystone/content/admin/../common/xsd/api-common.xsd-->
    <wadl:include href="RAX-KSQA-admin-xsd-2.xsd"/>
    <!--Original xsd: file:/home/jenny/keystone/keystone/content/admin/../common/xsd/RAX-KSQA-secretQA.xsd-->
    <wadl:include href="RAX-KSQA-admin-xsd-3.xsd"/>
  </wadl:grammars>
  <!--*******************************************************-->
  <!--All Resources-->
  <!--*******************************************************-->
  <!--We should use SSL in production-->
  <resources base="http://localhost:35357">
    <resource path="v2.0">
      <param name="X-Auth-Token" style="header" type="xsd:string" required="true" rax:id="" xmlns:rax="http://docs.rackspace.com/api">
        <doc>You need a valid admin token for access.</doc>
      </param>
      <resource path="users">
        <resource path="{userId}">
          <param name="userId" style="template" type="xsd:string" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
          <resource path="RAX-KSQA">
            <resource path="secretqa">
              <method name="GET" rax:id="getUserSecretQA" xmlns:rax="http://docs.rackspace.com/api">
                <doc xml:lang="EN" title="Get User SecretQA">
                  <p xmlns="http://www.w3.org/1999/xhtml">Gets a User secret Question and Answer.</p>
                </doc>
                <response status="200 203">
                  <representation mediaType="application/xml" element="RAX-KSQA:secretQA">
                    <doc xml:lang="EN">
                      <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                        <title>Get User SecretQA Response: XML</title>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>

&lt;secretQA xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0"
          question="What is the color of my eyes?"
          answer="Leonardo Da Vinci" /></programlisting>
                      </example>
                    </doc>
                  </representation>
                  <representation mediaType="application/json">
                    <doc xml:lang="EN">
                      <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                        <title>Get User SecretQA Response: JSON</title>
                        <programlisting language="javascript">{
    "RAX-KSQA:secretQA":{
        "question":"What is the color of my eyes?",
        "answer":"Leonardo Da Vinci"
    }
}</programlisting>
                      </example>
                    </doc>
                  </representation>
                </response>
                <response>
                  <representation mediaType="application/xml" element="identity:identityFault"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="400">
                  <representation mediaType="application/xml" element="identity:badRequest"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="401">
                  <representation mediaType="application/xml" element="identity:unauthorized"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="403">
                  <representation mediaType="application/xml" element="identity:forbidden"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="405">
                  <representation mediaType="application/xml" element="identity:badMethod"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="413">
                  <representation mediaType="application/xml" element="identity:overLimit"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="503">
                  <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="404">
                  <representation mediaType="application/xml" element="identity:itemNotFound"/>
                  <representation mediaType="application/json"/>
                </response>
              </method>
              <method name="PUT" rax:id="updateUserSecretQA" xmlns:rax="http://docs.rackspace.com/api">
                <doc xml:lang="EN" title="Update User SecretQA">
                  <p xmlns="http://www.w3.org/1999/xhtml">Updates a User secret Question and Answer.</p>
                </doc>
                <request>
                  <representation mediaType="application/xml" element="RAX-KSQA:secretQA">
                    <doc xml:lang="EN">
                      <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                        <title>Update User SecretQA Request: XML</title>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>

&lt;secretQA xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0"
          question="What is the color of my eyes?"
          answer="Leonardo Da Vinci" /></programlisting>
                      </example>
                    </doc>
                  </representation>
                  <representation mediaType="application/json">
                    <doc xml:lang="EN">
                      <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                        <title>Update User SecretQA Request: JSON</title>
                        <programlisting language="javascript">{
    "RAX-KSQA:secretQA":{
        "question":"What is the color of my eyes?",
        "answer":"Leonardo Da Vinci"
    }
}</programlisting>
                      </example>
                    </doc>
                  </representation>
                </request>
                <response status="200">
                  <representation mediaType="application/xml" element="RAX-KSQA:secretQA">
                    <doc xml:lang="EN">
                      <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                        <title>Update User SecretQA Response: XML</title>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>

&lt;secretQA xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0"
          question="What is the color of my eyes?"
          answer="Leonardo Da Vinci" /></programlisting>
                      </example>
                    </doc>
                  </representation>
                  <representation mediaType="application/json">
                    <doc xml:lang="EN">
                      <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                        <title>Update User SecretQA Response: JSON</title>
                        <programlisting language="javascript">{
    "RAX-KSQA:secretQA":{
        "question":"What is the color of my eyes?",
        "answer":"Leonardo Da Vinci"
    }
}</programlisting>
                      </example>
                    </doc>
                  </representation>
                </response>
                <response>
                  <representation mediaType="application/xml" element="identity:identityFault"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="400">
                  <representation mediaType="application/xml" element="identity:badRequest"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="401">
                  <representation mediaType="application/xml" element="identity:unauthorized"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="403">
                  <representation mediaType="application/xml" element="identity:forbidden"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="405">
                  <representation mediaType="application/xml" element="identity:badMethod"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="413">
                  <representation mediaType="application/xml" element="identity:overLimit"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="503">
                  <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="415">
                  <representation mediaType="application/xml" element="identity:badMediaType"/>
                  <representation mediaType="application/json"/>
                </response>
              </method>
            </resource>
          </resource>
        </resource>
      </resource>
    </resource>
  </resources>
  <method name="GET" id="getUserSecretQA">
    <doc xml:lang="EN" title="Get User SecretQA">
      <p xmlns="http://www.w3.org/1999/xhtml">Gets a User secret Question and Answer.</p>
    </doc>
    <response status="200 203">
      <representation mediaType="application/xml" element="RAX-KSQA:secretQA">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Get User SecretQA Response: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>

&lt;secretQA xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0"
          question="What is the color of my eyes?"
          answer="Leonardo Da Vinci" /></programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Get User SecretQA Response: JSON</title>
            <programlisting language="javascript">{
    "RAX-KSQA:secretQA":{
        "question":"What is the color of my eyes?",
        "answer":"Leonardo Da Vinci"
    }
}</programlisting>
          </example>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="PUT" id="updateUserSecretQA">
    <doc xml:lang="EN" title="Update User SecretQA">
      <p xmlns="http://www.w3.org/1999/xhtml">Updates a User secret Question and Answer.</p>
    </doc>
    <request>
      <representation mediaType="application/xml" element="RAX-KSQA:secretQA">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Update User SecretQA Request: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>

&lt;secretQA xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0"
          question="What is the color of my eyes?"
          answer="Leonardo Da Vinci" /></programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Update User SecretQA Request: JSON</title>
            <programlisting language="javascript">{
    "RAX-KSQA:secretQA":{
        "question":"What is the color of my eyes?",
        "answer":"Leonardo Da Vinci"
    }
}</programlisting>
          </example>
        </doc>
      </representation>
    </request>
    <response status="200">
      <representation mediaType="application/xml" element="RAX-KSQA:secretQA">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Update User SecretQA Response: XML</title>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>

&lt;secretQA xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0"
          question="What is the color of my eyes?"
          answer="Leonardo Da Vinci" /></programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Update User SecretQA Response: JSON</title>
            <programlisting language="javascript">{
    "RAX-KSQA:secretQA":{
        "question":"What is the color of my eyes?",
        "answer":"Leonardo Da Vinci"
    }
}</programlisting>
          </example>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
</application>]]></con:content><con:type>http://wadl.dev.java.net/2009/02</con:type></con:part><con:part><con:url>file:/home/jenny/keystone/keystone/content/admin/normalized/RAX-KSQA-admin-xsd-1.xsd</con:url><con:content><![CDATA[<!--Flattened from: file:/home/jenny/keystone/keystone/content/admin/../common/xsd/api.xsd-->
<xsd:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:rax="http://docs.rackspace.com/api" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:RAX-KSQA="http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0">
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="RAX-KSQA-admin-xsd-4.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <!--Elements-->
  <!--Complex Types-->
  <!--EndpointForService-->
  <!--VersionForService-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="RAX-KSQA-admin-xsd-4.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Elements-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="RAX-KSQA-admin-xsd-4.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Simple Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <!--Elements-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Fault Elements-->
  <!--Fault Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="RAX-KSQA-admin-xsd-4.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Elements-->
  <!--Complex Types-->
  <!--EndpointForService-->
  <!--VersionForService-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="RAX-KSQA-admin-xsd-4.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Elements-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Fault Elements-->
  <!--Fault Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="RAX-KSQA-admin-xsd-4.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="RAX-KSQA-admin-xsd-4.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Elements-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="RAX-KSQA-admin-xsd-4.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Elements-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <!--Elements-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <!--Elements-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <!--Elements-->
  <!--Complex Types-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <!--Simple Types-->
  <element name="access" type="identity:AuthenticateResponse" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="roles" type="identity:RoleList" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A list of roles.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="role" type="identity:Role" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A role.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="tenant" type="identity:Tenant" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A container used to group or isolate resources and/or identity
                  objects. Depending on the service operator, a tenant may map to a customer,
                  account, organization, or project.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/xml" href="../samples/tenant.xml"/>
                     
          </xsdxt:sample>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/json" href="../samples/tenant.json"/>
                     
          </xsdxt:sample>
                 
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="tenants" type="identity:Tenants" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A list of tenants.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="identityFault" type="identity:IdentityFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="serviceUnavailable" type="identity:ServiceUnavailableFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="badRequest" type="identity:BadRequestFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="unauthorized" type="identity:UnauthorizedFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="overLimit" type="identity:OverLimitFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="userDisabled" type="identity:UserDisabledFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="forbidden" type="identity:ForbiddenFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="itemNotFound" type="identity:ItemNotFoundFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="tenantConflict" type="identity:TenantConflictFault" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="endpoint" type="identity:Endpoint" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>An Endpoint.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="endpoints" type="identity:EndpointList" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A list of Endpoints.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="users" type="identity:UserList" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN">
        <p>A list of Users.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="user" type="identity:User" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN">
        <p>A Keystone User.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="auth" type="identity:AuthenticationRequest" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="credential" type="identity:CredentialType" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="credentials" type="identity:CredentialListType" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="passwordCredentials" type="identity:PasswordCredentialsRequiredUsername" substitutionGroup="identity:credential" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <simpleType name="ExtensibleServiceType" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>
          An extensible service type allows all of the
                    strings defined in
          <a href="#type_ServiceType" title="See definition of                         ServiceType">ServiceType</a>
          or an
                    alias prefixed status.
        </p>
      </xsd:documentation>
    </annotation>
    <union memberTypes="identity:ServiceType identity:ExtendedService"/>
  </simpleType>
  <simpleType name="ServiceType" xmlns="http://www.w3.org/2001/XMLSchema">
    <restriction base="xsd:string">
      <enumeration value="compute">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for an OpenStack Compute API 1.1 compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="object-store">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for a Swift-compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="image-service">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for a Glance-compatible service</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="identity">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for a Keystone-compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
    </restriction>
  </simpleType>
  <simpleType name="ExtendedService" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A non-core service type which must contain an extension prefix.</p>
      </xsd:documentation>
    </annotation>
    <restriction base="xsd:string">
      <pattern value="(\w|-)+:\w+"/>
    </restriction>
  </simpleType>
  <simpleType name="ExtensibleServiceType" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>
          An extensible service type allows all of the
                    strings defined in
          <a href="#type_ServiceType" title="See definition of                         ServiceType">ServiceType</a>
          or an
                    alias prefixed status.
        </p>
      </xsd:documentation>
    </annotation>
    <union memberTypes="identity:ServiceType identity:ExtendedService"/>
  </simpleType>
  <simpleType name="ServiceType" xmlns="http://www.w3.org/2001/XMLSchema">
    <restriction base="xsd:string">
      <enumeration value="compute">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for an OpenStack Compute API 1.1 compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="object-store">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for a Swift-compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="image-service">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for a Glance-compatible service</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="identity">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The type for a Keystone-compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
    </restriction>
  </simpleType>
  <simpleType name="ExtendedService" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A non-core service type which must contain an extension prefix.</p>
      </xsd:documentation>
    </annotation>
    <restriction base="xsd:string">
      <pattern value="(\w|-)+:\w+"/>
    </restriction>
  </simpleType>
  <complexType name="Token" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A token is an arbitrary bit of text that is used to access
                    resources. Each token has a scope which describes which
                    resources are accessible with it. A token may be
                    revoked at anytime and is valid for a finite duration.</p>
        <p>While Keystone supports token-based authentication in this release,
                    the intention is for it to support additional protocols in the
                    future. The desire is for it to be an integration service, and not
                    a full-fledged identity store and management solution.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/token.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/token.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
    <sequence>
      <element name="tenant" type="identity:TenantForAuthenticateResponse"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:string" use="required"/>
    <attribute name="expires" type="xsd:dateTime" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="AuthenticateResponse" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="token" type="identity:Token"/>
      <element name="user" type="identity:UserForAuthenticateResponse"/>
      <element name="serviceCatalog" type="identity:ServiceCatalog" minOccurs="0"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="UserForAuthenticateResponse" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="roles" type="identity:RoleList"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:string"/>
    <attribute name="name" type="xsd:string"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="TenantForAuthenticateResponse" xmlns="http://www.w3.org/2001/XMLSchema">
    <attribute name="id" type="xsd:string"/>
    <attribute name="name" type="xsd:string"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="ServiceCatalog" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>The service catalog lists the services you have access to</p>
        <div class="design">
          <p>We optimized for future flexibility around the hierarchy. So we
                    left the design as a flat list of endpoints with attributes and the
                    consumer can categorize as they need.
                    This results in potential duplication (such as with the version/@list)
                    but we acceopt that normalization cost in order to not force an
                    artificial hierarchy (suchas on region, which can be optional).</p>
        </div>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/xml" href="../samples/services.xml"/>
                     
          </xsdxt:sample>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/json" href="../samples/services.json"/>
                     
          </xsdxt:sample>
                 
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
    <sequence>
      <element name="service" type="identity:ServiceForCatalog" minOccurs="1" maxOccurs="unbounded">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>A list of services.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="ServiceForCatalog" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="endpoint" type="identity:EndpointForService" minOccurs="1" maxOccurs="unbounded">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>A list of endpoints.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="type" type="identity:ExtensibleServiceType" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The OpenStack-registered type (e.g. 'compute', 'object-store', etc).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The commercial service name (e.g. 'My Nova Cloud Servers').</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="EndpointForService" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="version" type="identity:VersionForService" maxOccurs="1" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>Version details.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="region" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The name of the region where the endpoint
                        lives. Example: airport codes; LHR (UK),
                        STL (Saint Louis)</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="tenantId" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>Tenant id to which the endpoints belong.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="publicURL" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>Public accessible service URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="internalURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A service URL, accessible only locally within that
                        cloud (generally over a high bandwidth, low latency,
                        free of charge link).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="adminURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>An Admin URL (used for administration using privileged
                        calls). This may expose
                        additional functionality not found in the public and
                        internal URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="VersionForService" xmlns="http://www.w3.org/2001/XMLSchema">
    <attribute name="id" type="xsd:string" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>Id of the version.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="info" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>URI to get the information specific to this version.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="list" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>URI to get the information about all versions.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="Role" xmlns="http://www.w3.org/2001/XMLSchema">
    <attribute name="id" type="xsd:string" use="optional"/>
    <attribute name="name" type="xsd:string" use="required"/>
    <attribute name="description" type="xsd:string" use="optional"/>
    <attribute name="serviceId" type="xsd:string" use="optional"/>
    <attribute name="tenantId" type="xsd:string" use="optional"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="RoleList" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="role" type="identity:Role" minOccurs="0" maxOccurs="unbounded"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="Tenants" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="tenant" type="identity:Tenant" maxOccurs="100"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="Tenant" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="description" type="xsd:string">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>An free text description of the tenant.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:ID" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>An ID uniquely identifying the tenant. This usually comes from the back-end store.
                        This value is guaranteed to be unique and immutable (it will never change).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="name" type="xsd:string" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The name of the tenant. This is guaranteed to be unique, but may change.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="enabled" type="xsd:boolean" use="optional" default="true">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>An boolean signifying if a tenant is enabled or not. A disabled tenant
                        cannot be authenticated against.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="display-name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A human-readable, friendly name for use in user interfaces.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute type="xsd:dateTime" name="updated" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A time-stamp identifying the modification time of the
                        tenant.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute type="xsd:dateTime" name="created" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A creation time-stamp for the tenant.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="IdentityFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="message" type="xsd:string">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>A human readable message that is appropriate for display
                            to the end user.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element name="details" type="xsd:string" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The optional &lt;details> element may contain useful
                            information for tracking down errors (e.g a stack
                            trace).  This information may or may not be appropriate
                            for display to an end user.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="code" type="xsd:int" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The HTTP status code associated with the current fault.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="ServiceUnavailableFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:IdentityFault"/>
    </complexContent>
  </complexType>
  <complexType name="BadRequestFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:IdentityFault"/>
    </complexContent>
  </complexType>
  <complexType name="UnauthorizedFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:IdentityFault"/>
    </complexContent>
  </complexType>
  <complexType name="UserDisabledFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:IdentityFault"/>
    </complexContent>
  </complexType>
  <complexType name="ForbiddenFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:IdentityFault"/>
    </complexContent>
  </complexType>
  <complexType name="ItemNotFoundFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:IdentityFault"/>
    </complexContent>
  </complexType>
  <complexType name="TenantConflictFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:IdentityFault"/>
    </complexContent>
  </complexType>
  <complexType name="OverLimitFault" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:IdentityFault">
        <attribute name="retryAt" type="xsd:dateTime" use="optional">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
              <p>An optional dateTime denoting when an operation should
                                be retried.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="Endpoint" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="version" type="identity:VersionForService" maxOccurs="1" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>Version details.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:int" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>An ID uniquely identifying the Endpoint.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="type" type="identity:ExtensibleServiceType" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The OpenStack-registered type (e.g. 'compute', 'object-store', etc).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The commercial service name (e.g. 'My Nova Cloud Servers').</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="region" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The region of Endpoint Template.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="publicURL" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The public URL to access represented service.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="internalURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The internal version of the public URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="adminURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The admin URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="tenantId" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>Tenant id to which the endpoints belong.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="EndpointList" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="endpoint" type="identity:Endpoint" minOccurs="0" maxOccurs="unbounded"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="User" xmlns="http://www.w3.org/2001/XMLSchema">
    <attribute name="id" type="xsd:ID" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>An automatically generated, unique, immutable (it will never change) identifier
                        for the user. This is generated by the backend this user is stored in.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="username" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A unique, mutable (it can change) user name that may be used by the user
                        an identifier when presenting credentials.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="email" type="xsd:string" use="optional"/>
    <attribute name="enabled" type="xsd:boolean" default="true" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A true/false value that determines if the user may authenticate or not.
                        If enabled is false, the user will not be able to authenticate.
                        How this value is stored or generated is dependent on the backend in use.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="display-name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A human-readable, friendly name for use in user interfaces.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="updated" type="xsd:dateTime" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A time-stamp identifying the modification time of the
                        user.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="created" type="xsd:dateTime" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A creation time-stamp for the user.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="UserList" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="user" type="identity:User" minOccurs="0" maxOccurs="unbounded"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="CredentialType" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Base type for credential in Keystone.</p>
      </xsd:documentation>
    </annotation>
    <sequence>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="AuthenticationRequest" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Both the tenantId and tenantName are optional, but should not be specified together. If both attributes are specified, the server SHOULD respond with a 400 Bad Request.</p>
      </xsd:documentation>
    </annotation>
    <sequence>
      <choice>
        <element ref="identity:credential" minOccurs="1"/>
        <element name="token" type="identity:TokenForAuthenticationRequest"/>
      </choice>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="tenantId" type="xsd:string" use="optional"/>
    <attribute name="tenantName" type="xsd:string" use="optional"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="TokenForAuthenticationRequest" xmlns="http://www.w3.org/2001/XMLSchema">
    <attribute name="id" type="xsd:string" use="required"/>
  </complexType>
  <complexType name="PasswordCredentialsBase" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:CredentialType">
        <attribute name="username" type="xsd:string" use="optional"/>
        <attribute name="password" type="xsd:string" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="PasswordCredentialsWithoutUsername" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <restriction base="identity:PasswordCredentialsBase">
        <attribute name="username" type="xsd:string" use="prohibited"/>
        <attribute name="password" type="xsd:string" use="required"/>
      </restriction>
    </complexContent>
  </complexType>
  <complexType name="PasswordCredentialsRequiredUsername" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <restriction base="identity:PasswordCredentialsBase">
        <attribute name="username" type="xsd:string" use="required"/>
        <attribute name="password" type="xsd:string" use="required"/>
      </restriction>
    </complexContent>
  </complexType>
  <complexType name="CredentialListType" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element ref="identity:credential" minOccurs="1" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jenny/keystone/keystone/content/admin/normalized/RAX-KSQA-admin-xsd-4.xsd</con:url><con:content><![CDATA[<!--Flattened from: file:/home/jenny/keystone/keystone/content/common/xsd/atom/atom.xsd-->
<xsd:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://www.w3.org/2005/Atom" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:rax="http://docs.rackspace.com/api" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:RAX-KSQA="http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0">
  <xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="RAX-KSQA-admin-xsd-5.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
  <xs:element name="link" type="atom:link" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
  <xs:simpleType name="relation" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:restriction base="xs:string">
      <xs:enumeration value="alternate"/>
      <xs:enumeration value="appendix"/>
      <xs:enumeration value="archives"/>
      <xs:enumeration value="author"/>
      <xs:enumeration value="bookmark"/>
      <xs:enumeration value="chapter"/>
      <xs:enumeration value="contents"/>
      <xs:enumeration value="copyright"/>
      <xs:enumeration value="current"/>
      <xs:enumeration value="describedby"/>
      <xs:enumeration value="edit"/>
      <xs:enumeration value="edit-media"/>
      <xs:enumeration value="first"/>
      <xs:enumeration value="glossary"/>
      <xs:enumeration value="help"/>
      <xs:enumeration value="hub"/>
      <xs:enumeration value="icon"/>
      <xs:enumeration value="index"/>
      <xs:enumeration value="last"/>
      <xs:enumeration value="latest-version"/>
      <xs:enumeration value="license"/>
      <xs:enumeration value="monitor"/>
      <xs:enumeration value="monitor-group"/>
      <xs:enumeration value="next"/>
      <xs:enumeration value="next-arvhice"/>
      <xs:enumeration value="nofollow"/>
      <xs:enumeration value="payment"/>
      <xs:enumeration value="predecessor-version"/>
      <xs:enumeration value="prefetch"/>
      <xs:enumeration value="prev"/>
      <xs:enumeration value="previous"/>
      <xs:enumeration value="prev-archive"/>
      <xs:enumeration value="replies"/>
      <xs:enumeration value="search"/>
      <xs:enumeration value="section"/>
      <xs:enumeration value="self"/>
      <xs:enumeration value="service"/>
      <xs:enumeration value="start"/>
      <xs:enumeration value="stylesheet"/>
      <xs:enumeration value="subsection"/>
      <xs:enumeration value="successor-version"/>
      <xs:enumeration value="up"/>
      <xs:enumeration value="version-history"/>
      <xs:enumeration value="via"/>
      <xs:enumeration value="working-copy"/>
      <xs:enumeration value="working-copy-of"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="link" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation>
        <html:p>
          See section 3.4 of the ATOM RFC
          <html:a href="http://tools.ietf.org/html/rfc4287">RFC4287</html:a>
        </html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="rel" use="required" type="atom:relation">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="type" use="optional" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="href" use="required" type="xs:anyURI">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="hreflang" use="optional" type="xs:NMTOKEN">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="title" use="optional" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
  </xs:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jenny/keystone/keystone/content/admin/normalized/RAX-KSQA-admin-xsd-5.xsd</con:url><con:content><![CDATA[<!--Flattened from: file:/home/jenny/keystone/keystone/content/common/xsd/atom/xml.xsd-->
<xsd:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:rax="http://docs.rackspace.com/api" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:RAX-KSQA="http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0">
  <xs:annotation xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:documentation>
      <div>
        <h1>About the XML namespace</h1>
        <div class="bodytext">
          <p>This schema document describes the XML namespace, in a form
      suitable for import by other schema documents.</p>
          <p>
            See
            <a href="http://www.w3.org/XML/1998/namespace.html">http://www.w3.org/XML/1998/namespace.html</a>
            and
            <a href="http://www.w3.org/TR/REC-xml">http://www.w3.org/TR/REC-xml</a>
            for information 
      about this namespace.
          </p>
          <p>Note that local names in this namespace are intended to be
      defined only by the World Wide Web Consortium or its subgroups.
      The names currently defined in this namespace are listed below.
      They should not be used with conflicting semantics by any Working
      Group, specification, or document instance.</p>
          <p>
            See further below in this document for more information about
            <a href="#usage">how to refer to this schema document from your own
      XSD schema documents</a>
            and about
            <a href="#nsversioning">the
      namespace-versioning policy governing this schema document</a>
            .
          </p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>lang (as an attribute name)</h3>
          <p>denotes an attribute whose value
       is a language code for the natural language of the content of
       any element; its value is inherited.  This name is reserved
       by virtue of its definition in the XML specification.</p>
        </div>
        <div>
          <h4>Notes</h4>
          <p>Attempting to install the relevant ISO 2- and 3-letter
      codes as the enumerated possible values is probably never
      going to be a realistic possibility.</p>
          <p>
            See BCP 47 at
            <a href="http://www.rfc-editor.org/rfc/bcp/bcp47.txt">http://www.rfc-editor.org/rfc/bcp/bcp47.txt</a>
            and the IANA language subtag registry at
            <a href="http://www.iana.org/assignments/language-subtag-registry">http://www.iana.org/assignments/language-subtag-registry</a>
            for further information.
          </p>
          <p>The union allows for the 'un-declaration' of xml:lang with
      the empty string.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:union memberTypes="xs:language">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value=""/>
          </xs:restriction>
        </xs:simpleType>
      </xs:union>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="space" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>space (as an attribute name)</h3>
          <p>denotes an attribute whose
       value is a keyword indicating what whitespace processing
       discipline is intended for the content of the element; its
       value is inherited.  This name is reserved by virtue of its
       definition in the XML specification.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>base (as an attribute name)</h3>
          <p>denotes an attribute whose value
       provides a URI to be used as the base for interpreting any
       relative URIs in the scope of the element on which it
       appears; its value is inherited.  This name is reserved
       by virtue of its definition in the XML Base specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xmlbase/">http://www.w3.org/TR/xmlbase/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="id" type="xs:ID" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>id (as an attribute name)</h3>
          <p>denotes an attribute whose value
       should be interpreted as if declared to be of type ID.
       This name is reserved by virtue of its definition in the
       xml:id specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xml-id/">http://www.w3.org/TR/xml-id/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
    <xs:attribute ref="xml:id"/>
  </xs:attributeGroup>
  <xs:annotation xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:documentation>
      <div>
        <h3>Father (in any context at all)</h3>
        <div class="bodytext">
          <p>denotes Jon Bosak, the chair of 
      the original XML Working Group.  This name is reserved by 
      the following decision of the W3C XML Plenary and 
      XML Coordination groups:</p>
          <blockquote>
            <p>In appreciation for his vision, leadership and
	dedication the W3C XML Plenary on this 10th day of
	February, 2000, reserves for Jon Bosak in perpetuity
	the XML name "xml:Father".</p>
          </blockquote>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:documentation>
      <div xml:id="usage" id="usage">
        <h2>
          <a name="usage">About this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            This schema defines attributes and an attribute group suitable
      for use by schemas wishing to allow
            <code>xml:base</code>
            ,
            <code>xml:lang</code>
            ,
            <code>xml:space</code>
            or
            <code>xml:id</code>
            attributes on elements they define.
          </p>
          <p>To enable this, such a schema must import this schema for
      the XML namespace, e.g. as follows:</p>
          <pre>&lt;schema . . .>
           . . .
           &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2001/xml.xsd"/></pre>
          <p>or</p>
          <pre>&lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2009/01/xml.xsd"/></pre>
          <p>Subsequently, qualified reference to any of the attributes or the
      group defined below will have the desired effect, e.g.</p>
          <pre>&lt;type . . .>
           . . .
           &lt;attributeGroup ref="xml:specialAttrs"/></pre>
          <p>will define a type which will schema-validate an instance element
      with any of those attributes.</p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
    <xs:documentation>
      <div id="nsversioning" xml:id="nsversioning">
        <h2>
          <a name="nsversioning">Versioning policy for this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            In keeping with the XML Schema WG's standard versioning
      policy, this schema document will persist at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            .
          </p>
          <p>
            At the date of issue it can also be found at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            .
          </p>
          <p>
            The schema document at that URI may however change in the future,
      in order to remain compatible with the latest version of XML
      Schema itself, or with the XML namespace itself.  In other words,
      if the XML Schema or XML namespaces change, the version of this
      document at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            will change accordingly; the version at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            will not change.
          </p>
          <p>Previous dated (and unchanging) versions of this schema 
      document are at:</p>
          <ul>
            <li>
              <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2007/08/xml.xsd">http://www.w3.org/2007/08/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2004/10/xml.xsd">http://www.w3.org/2004/10/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2001/03/xml.xsd">http://www.w3.org/2001/03/xml.xsd</a>
            </li>
          </ul>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jenny/keystone/keystone/content/admin/normalized/RAX-KSQA-admin-xsd-2.xsd</con:url><con:content><![CDATA[<!--Flattened from: file:/home/jenny/keystone/keystone/content/admin/../common/xsd/api-common.xsd-->
<xsd:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/common/api/v1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:rax="http://docs.rackspace.com/api" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:RAX-KSQA="http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0">
  <annotation xmlns="http://www.w3.org/2001/XMLSchema">
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Open Stack Common API Schema Types 1.0</xsdxt:title>
      <xsdxt:link rev="index" href="extensions.xsd"/>
      <xsdxt:link rev="index" href="limits.xsd"/>
      <xsdxt:link rev="index" href="version.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>This is the main index XML Schema document
                for Common API Schema Types Version 1.0.</p>
    </xsd:documentation>
  </annotation>
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <!--Import ATOM specific schema definitions-->
  <!--(C) 2011 OpenStack LLC., All Rights Reserved-->
  <xs:annotation xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Version Types</xsdxt:title>
      <xsdxt:link rel="index" href="api-common.xsd"/>
    </xs:appinfo>
    <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>This schema file defines all types related to versioning.</p>
    </xs:documentation>
  </xs:annotation>
  <!--Import ATOM specific schema definitions-->
  <!--Multiple choices-->
  <!--Versioning-->
  <!--Types-->
  <xsd:element name="extensions" type="ext:Extensions" xmlns:ext="http://docs.openstack.org/common/api/v1.0"/>
  <xsd:element name="extension" type="ext:Extension" xmlns:ext="http://docs.openstack.org/common/api/v1.0"/>
  <xs:element name="choices" type="vers:VersionChoiceList" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>This element is returned when the version of the
                    resource cannot be determined. The element
                    provides a list of choices for the resource.</p>
      </xs:documentation>
      <xs:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/choices.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/choices.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <xs:element name="versions" type="vers:VersionChoiceList" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Provides a list of supported versions.</p>
      </xs:documentation>
      <xs:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/versions.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/versions.json"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/atom+xml" href="../samples/versions-atom.xml"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <xs:element name="version2" type="vers:VersionChoiceRoot" vc:minVersion="1.1" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>This element provides detailed meta information
                    regarding the status of the current API
                    version. The description should include a pointer
                    to both a human readable and a machine processable
                    description of the API service.</p>
      </xs:documentation>
      <xs:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/version.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/version.json"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/atom+xml" href="../samples/version-atom.xml"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <xsd:simpleType name="Alias" xmlns:ext="http://docs.openstack.org/common/api/v1.0">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="\w+\-\w+"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xs:simpleType name="VersionStatus" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation>
        <html:p>The VersionStatus type describes a service's operational status.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="ALPHA">
        <xs:annotation>
          <xs:documentation>
            <html:p>This is a new service the API. Thi API
                            contract may be set, but the implementaiton
                            may not be 100% complient with it. Developers
                            are encouraged to begin testing aganst an
                            ALPHA version to provide feedback.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BETA">
        <xs:annotation>
          <xs:documentation>
            <html:p>A status of BETA indicates that this
                            version is a candidate for the next major
                            release and may feature functionality not
                            available in the current
                            version. Developers are encouraged to test
                            and begin the migration processes to a
                            BETA version. Note that a BETA version is
                            undergoing testing, it has not been
                            officially released, and my not be stable.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CURRENT">
        <xs:annotation>
          <xs:documentation>
            <html:p>The API version is stable and has been
                            tested. Developers are encouraged to
                            develop against this API version. The
                            current released version of the API will
                            always be marked as CURRENT.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="DEPRECATED">
        <xs:annotation>
          <xs:documentation>
            <html:p>A status of DEPRECATED indicates that a
                            newer version of the API is
                            available. Application developers are
                            discouraged from using this version and
                            should instead develop against the latest
                            current version of the API.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xsd:complexType name="Extensions" xmlns:ext="http://docs.openstack.org/common/api/v1.0">
    <xsd:sequence>
      <xsd:element name="extension" type="ext:Extension" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
  </xsd:complexType>
  <xsd:complexType name="Extension" xmlns:ext="http://docs.openstack.org/common/api/v1.0">
    <xsd:sequence>
      <xsd:element name="description" type="xsd:string" minOccurs="1"/>
      <!--<xsd:element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded" />-->
      <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="name" type="xsd:string" use="required"/>
    <xsd:attribute name="namespace" type="xsd:anyURI" use="required"/>
    <xsd:attribute name="alias" type="ext:Alias" use="required"/>
    <xsd:attribute name="updated" type="xsd:dateTime" use="optional"/>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
    <!--TODO(Ziad)resolve asser issue
            <xsd:assert vc:minVersion="1.1" test="atom:link[@rel='describedby']">
            <xsd:annotation>
                <xsd:documentation
                    xml:lang="EN"
                    xmlns="http://www.w3.org/1999/xhtml">
                    <p>
                        There should be at least one atom link
                        with a describedby relation.
                    </p>
                </xsd:documentation>
            </xsd:annotation>
        </xsd:assert>-->
  </xsd:complexType>
  <xs:complexType name="VersionChoiceList" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation>
        <html:p>A version choice list outlines a collection of
                    resources at various versions.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="version" type="vers:VersionChoice" minOccurs="1" maxOccurs="unbounded"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
    <!--TODO(Ziad)resolve assert issue
            <xs:assert vc:minVersion="1.1" test="every $v in vers:version satisfies $v/atom:link[@rel='self']">
            <xs:annotation>
                <xs:documentation>
                    <html:p>
                        In version lists, every single version must
                        contain at least one self link.
                    </html:p>
                </xs:documentation>
            </xs:annotation>
        </xs:assert>-->
  </xs:complexType>
  <xs:complexType name="VersionChoiceRoot" vc:minVersion="1.1" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:complexContent>
      <xs:extension base="vers:VersionChoice">
        <!--TODO(Ziad)resolve asser issue
                    <xs:assert test="atom:link[@rel='describedby']">
                    <xs:annotation>
                        <xs:documentation>
                            <html:p>
                                When used as a root element, a version choice
                                must contain at least one describedby link.
                            </html:p>
                        </xs:documentation>
                    </xs:annotation>
                </xs:assert>-->
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="VersionChoice" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation>
        <html:p>A version choice contains relevant information
                    about an available service that a user can then
                    use to target a specific version of the service.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="media-types" type="vers:MediaTypeList" minOccurs="0" maxOccurs="1"/>
      <!--<xs:element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded" />-->
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>
          <html:p>The ID of a version choice represents the service version's unique 
                        identifier. This ID is guaranteed to be unique only among the
                        service version choices outlined in the VersionChoiceList.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="status" type="vers:VersionStatus" use="required">
      <xs:annotation>
        <xs:documentation>
          <html:p>A version choice's status describes the current operational state of
                        the given service version. The operational status is captured in a
                        simple type enumeration called VersionStatus.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="updated" type="xs:dateTime" use="optional">
      <xs:annotation>
        <xs:documentation>
          <html:p>
            A version choice's updated attribute describes
                        the time when the version was updated. The
                        time should be updated anytime
            <html:strong>anything</html:strong>
            in the
                        version has changed: documentation,
                        extensions, bug fixes.
          </html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:complexType name="MediaTypeList" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation>
        <html:p>A MediaTypeList outlines a collection of valid media types for a given 
                    service version.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="media-type" type="vers:MediaType" minOccurs="1" maxOccurs="unbounded"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:complexType name="MediaType" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
      <xs:documentation>
        <html:p>A MediaType describes what content types the service version understands.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="base" type="xs:string" use="optional" default="">
      <xs:annotation>
        <xs:documentation>
          <html:p>The base of a given media type describes the
                        simple MIME type that then a more complicated
                        media type can be derived from. These types
                        are basic and provide no namespace or version
                        specific data are are only provided as a
                        convenience.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="type" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>
          <html:p>The type attribute of a MediaType describes
                        the MIME specific identifier of the media type
                        in question.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jenny/keystone/keystone/content/admin/normalized/RAX-KSQA-admin-xsd-3.xsd</con:url><con:content><![CDATA[<!--Flattened from: file:/home/jenny/keystone/keystone/content/admin/../common/xsd/RAX-KSQA-secretQA.xsd-->
<xsd:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:rax="http://docs.rackspace.com/api" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:RAX-KSQA="http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0">
  <import namespace="http://docs.openstack.org/identity/api/v2.0" schemaLocation="RAX-KSQA-admin-xsd-6.xsd" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <!--Import schema we are extending-->
  <!--Elements-->
  <!--Complex Types-->
  <element name="secretQA" type="RAX-KSQA:SecretQA" substitutionGroup="identity:credential" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <complexType name="SecretQA" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A Secret Question and Answer. The answer shall serve to prove
                              the user's identity as it should only be able to be answered
                              by the user who proposed the question.</p>
        </xsd:documentation>
        <xsd:appinfo>
          <xsdxt:samples>
            <xsdxt:sample>
              <xsdxt:code type="application/xml" href="../samples/RAX-KSQA-secretQA.xml"/>
            </xsdxt:sample>
            <xsdxt:sample>
              <xsdxt:code type="application/json" href="../samples/RAX-KSQA-secretQA.json"/>
            </xsdxt:sample>
          </xsdxt:samples>
        </xsd:appinfo>
      </annotation>
      <extension base="identity:CredentialType">
        <attribute name="username" type="xsd:string" use="optional"/>
        <attribute name="question" type="xsd:string" use="optional"/>
        <attribute name="answer" type="xsd:string" use="optional"/>
        <anyAttribute namespace="##other" processContents="lax"/>
      </extension>
    </complexContent>
  </complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jenny/keystone/keystone/content/admin/normalized/RAX-KSQA-admin-xsd-6.xsd</con:url><con:content><![CDATA[<!--Flattened from: file:/home/jenny/keystone/keystone/content/admin/../common/xsd/credentials.xsd-->
<xsd:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:rax="http://docs.rackspace.com/api" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:RAX-KSQA="http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0">
  <!--Import ATOM specific schema definitions-->
  <!--Elements-->
  <!--Complex Types-->
  <element name="auth" type="identity:AuthenticationRequest" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="credential" type="identity:CredentialType" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="credentials" type="identity:CredentialListType" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="passwordCredentials" type="identity:PasswordCredentialsRequiredUsername" substitutionGroup="identity:credential" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <complexType name="CredentialType" abstract="true" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Base type for credential in Keystone.</p>
      </xsd:documentation>
    </annotation>
    <sequence>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="AuthenticationRequest" xmlns="http://www.w3.org/2001/XMLSchema">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Both the tenantId and tenantName are optional, but should not be specified together. If both attributes are specified, the server SHOULD respond with a 400 Bad Request.</p>
      </xsd:documentation>
    </annotation>
    <sequence>
      <choice>
        <element ref="identity:credential" minOccurs="1"/>
        <element name="token" type="identity:TokenForAuthenticationRequest"/>
      </choice>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="tenantId" type="xsd:string" use="optional"/>
    <attribute name="tenantName" type="xsd:string" use="optional"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="TokenForAuthenticationRequest" xmlns="http://www.w3.org/2001/XMLSchema">
    <attribute name="id" type="xsd:string" use="required"/>
  </complexType>
  <complexType name="PasswordCredentialsBase" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="identity:CredentialType">
        <attribute name="username" type="xsd:string" use="optional"/>
        <attribute name="password" type="xsd:string" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="PasswordCredentialsWithoutUsername" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <restriction base="identity:PasswordCredentialsBase">
        <attribute name="username" type="xsd:string" use="prohibited"/>
        <attribute name="password" type="xsd:string" use="required"/>
      </restriction>
    </complexContent>
  </complexType>
  <complexType name="PasswordCredentialsRequiredUsername" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <restriction base="identity:PasswordCredentialsBase">
        <attribute name="username" type="xsd:string" use="required"/>
        <attribute name="password" type="xsd:string" use="required"/>
      </restriction>
    </complexContent>
  </complexType>
  <complexType name="CredentialListType" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element ref="identity:credential" minOccurs="1" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:35357</con:endpoint><con:endpoint>${#Project#Endpoint}</con:endpoint></con:endpoints><con:resource name="v2.0" path="${#Project#path}"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="users" path="users"><con:settings/><con:parameters/><con:resource name="{userId}" path="{userId}"><con:settings/><con:parameters><con:parameter><con:name>userId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="RAX-KSQA" path="RAX-KSQA"><con:settings/><con:parameters/><con:resource name="secretqa" path="secretqa"><con:settings/><con:parameters/><con:method name="Get User SecretQA" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/RAX-KSQA/v1.0">v1:secretQA</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Update User SecretQA" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/RAX-KSQA/v1.0">v1:secretQA</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/RAX-KSQA/v1.0">v1:secretQA</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource></con:resource></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="RAX-GRPADM-admin" type="rest" basePath="" definitionUrl="/home/jenny/identity-api/openstack-identity-api/src/docbkx/RAX-GRPADM/normalized/RAX-GRPADM.wadl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/home/jenny/identity-api/openstack-identity-api/src/docbkx/RAX-GRPADM/normalized/RAX-GRPADM.wadl"><con:part><con:url>file:/home/jenny/identity-api/openstack-identity-api/src/docbkx/RAX-GRPADM/normalized/RAX-GRPADM.wadl</con:url><con:content><![CDATA[<!--*******************************************************-->
<!--Import Common XML Entities-->
<!---->
<!--You can resolve the entites with xmllint-->
<!---->
<!--xmllint -noent RAX-GRPADM.wadl-->
<!--*******************************************************-->
<application xmlns="http://wadl.dev.java.net/2009/02" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:grp="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:db="http://docbook.org/ns/docbook" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0">
  <wadl:grammars xmlns:wadl="http://wadl.dev.java.net/2009/02">
    <!--Original xsd: file:/home/jenny/identity-api/openstack-identity-api/src/docbkx/RAX-GRPADM/xsd/api.xsd-->
    <wadl:include href="RAX-GRPADM-xsd-1.xsd"/>
  </wadl:grammars>
  <resources base="http://localhost:35357">
    <resource id="version" path="v2.0">
      <resource id="RAX-GRPADM" path="RAX-GRPADM">
        <resource id="groups" path="groups" xmlns:rax="http://docs.rackspace.com/api">
          <doc xml:lang="EN" title="Volume List">
            <db:para>A list of groups.</db:para>
          </doc>
          <method name="GET" rax:id="listGroups">
            <doc xml:lang="EN" title="Get Groups">
              <db:para role="shortdesc">List of groups.</db:para>
              <db:para>
                Displays a list of available groups.  You can use the
                <db:parameter>name</db:parameter>
                to display only
                those groups matching a particular name.
              </db:para>
            </doc>
            <request>
              <param name="marker" style="query" required="false" type="xsd:string" rax:id=""/>
              <param name="limit" style="query" required="false" type="xsd:int" rax:id=""/>
              <param name="name" style="query" required="false" type="xsd:string" rax:id=""/>
            </request>
            <response status="200 203">
              <representation mediaType="application/xml" element="grp:groups">
                <doc xml:lang="EN">
                  <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                    <title>Get Groups Response: XML</title>
                    <?dbfo keep-together="auto"?>
                    <programlisting language="xml"><![CDATA[<groups xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0"
        xmlns:atom="http://www.w3.org/2005/Atom">
    <group id="1234" name="group1">
        <description>A Description of the group</description>
    </group>
    <group id="1235" name="group2">
        <description>A Description of the group</description>
    </group>
    <group id="1236" name="group3">
        <description>A Description of the group</description>
    </group>
    <atom:link rel="next" href="https://identity.openstack.com/v2.0/RAX-GRPADM/groups?marker=1236"/>
</groups>]]]]>><![CDATA[</programlisting>
                  </example>
                </doc>
                <param name="next" style="plain" type="xsd:anyURI" path="grp:groups/atom:link[@rel='next']/@href" rax:id="">
                  <link resource_type="#GroupList" rel="next"/>
                </param>
                <param name="previous" style="plain" type="xsd:anyURI" path="grp:groups/atom:link[@rel='previous']/@href" rax:id="">
                  <link resource_type="#GroupList" rel="previous"/>
                </param>
              </representation>
              <representation mediaType="application/json">
                <doc xml:lang="EN">
                  <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                    <title>Get Groups Response: JSON</title>
                    <?dbfo keep-together="auto"?>
                    <programlisting language="javascript">{
  "RAX-KSGRP:groups": [
   {
       "id" : "1234",
       "name": "group1",
       "description": "A Description of the group"
   },
   {
       "id" : "1235",
       "name": "group2",
       "description": "A Description of the group"
   },
   {
       "id" : "1236",
       "name": "group3",
       "description": "A Description of the group"
   }
  ],
  "RAX-KSGRP:groups_links": [
      {
          "rel" : "next",
          "href" : "https://identity.openstack.com/v2.0/RAX-GRPADM/groups?marker=1236"
      }
  ]
}</programlisting>
                  </example>
                </doc>
              </representation>
            </response>
            <!--commonFaults-->
            <response>
              <representation mediaType="application/xml" element="identity:identityFault"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="400">
              <representation mediaType="application/xml" element="identity:badRequest"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="401">
              <representation mediaType="application/xml" element="identity:unauthorized"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="403">
              <representation mediaType="application/xml" element="identity:forbidden"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="405">
              <representation mediaType="application/xml" element="identity:badMethod"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="413">
              <representation mediaType="application/xml" element="identity:overLimit"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="503">
              <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
              <representation mediaType="application/json"/>
            </response>
          </method>
          <method name="POST" rax:id="addGroup">
            <doc xml:lang="EN" title="Add a New Group">
              <db:para role="shortdesc">Add a new group.</db:para>
            </doc>
            <request>
              <representation mediaType="application/xml" element="grp:group">
                <doc xml:lang="EN">
                  <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                    <title>Add a New Group Request: XML</title>
                    <?dbfo keep-together="auto"?>
                    <programlisting language="xml">&lt;group name="group1" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">
    &lt;description>A Description of the group&lt;/description>
&lt;/group></programlisting>
                  </example>
                </doc>
                <param name="group" style="plain" required="true" type="grp:GroupForCreate" path="grp:group" rax:id=""/>
              </representation>
              <representation mediaType="application/json">
                <doc xml:lang="EN">
                  <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                    <title>Add a New Group Request: JSON</title>
                    <?dbfo keep-together="auto"?>
                    <programlisting language="javascript">{
  "RAX-KSGRP:group": {
      "name" : "group1",
      "description" : "A Description of the group"
  }
}</programlisting>
                  </example>
                </doc>
              </representation>
            </request>
            <response status="201">
              <param name="Location" style="header" required="true" type="xsd:anyURI" rax:id="">
                <doc xml:lang="EN" title="Location Header">
                  <db:para>
                    The full URL to the newly created group is
                        returned via the
                    <db:code>Loctaton</db:code>
                    header.
                  </db:para>
                </doc>
              </param>
              <representation mediaType="application/xml" element="grp:group">
                <doc xml:lang="EN">
                  <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                    <title>Add a New Group Response: XML</title>
                    <?dbfo keep-together="auto"?>
                    <programlisting language="xml">&lt;group id="1234" name="group1" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">
    &lt;description>A Description of the group&lt;/description>
&lt;/group></programlisting>
                  </example>
                </doc>
              </representation>
              <representation mediaType="application/json">
                <doc xml:lang="EN">
                  <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                    <title>Add a New Group Response: JSON</title>
                    <?dbfo keep-together="auto"?>
                    <programlisting language="javascript">{
  "RAX-KSGRP:group": {
      "id" : "1234",
      "name" : "group1",
      "description" : "A Description of the group"
  }
}</programlisting>
                  </example>
                </doc>
              </representation>
            </response>
            <response>
              <representation mediaType="application/xml" element="identity:identityFault"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="400">
              <representation mediaType="application/xml" element="identity:badRequest"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="401">
              <representation mediaType="application/xml" element="identity:unauthorized"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="403">
              <representation mediaType="application/xml" element="identity:forbidden"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="405">
              <representation mediaType="application/xml" element="identity:badMethod"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="413">
              <representation mediaType="application/xml" element="identity:overLimit"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="503">
              <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="404">
              <representation mediaType="application/xml" element="identity:itemNotFound"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="415">
              <representation mediaType="application/xml" element="identity:badMediaType"/>
              <representation mediaType="application/json"/>
            </response>
          </method>
          <resource id="group" path="{groupId}">
            <param name="groupId" style="template" type="xsd:string" rax:id="">
              <doc xml:lang="EN" title="GroupId">
                <db:para>A unique identifier for the group.</db:para>
              </doc>
            </param>
            <method name="GET" rax:id="getGroup">
              <doc xml:lang="EN" title="Get Group">
                <db:para role="shortdesc">Get group by id.</db:para>
              </doc>
              <response status="200 203">
                <representation mediaType="application/xml" element="grp:group">
                  <doc xml:lang="EN">
                    <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                      <title>Get Group Response: XML</title>
                      <?dbfo keep-together="auto"?>
                      <programlisting language="xml">&lt;group id="1234" name="group1" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">
    &lt;description>A Description of the group&lt;/description>
&lt;/group></programlisting>
                    </example>
                  </doc>
                </representation>
                <representation mediaType="application/json">
                  <doc xml:lang="EN">
                    <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                      <title>Get Group Response: JSON</title>
                      <?dbfo keep-together="auto"?>
                      <programlisting language="javascript">{
  "RAX-KSGRP:group": {
      "id" : "1234",
      "name" : "group1",
      "description" : "A Description of the group"
  }
}</programlisting>
                    </example>
                  </doc>
                </representation>
              </response>
              <!--Common, GET-->
              <response>
                <representation mediaType="application/xml" element="identity:identityFault"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="400">
                <representation mediaType="application/xml" element="identity:badRequest"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="401">
                <representation mediaType="application/xml" element="identity:unauthorized"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="403">
                <representation mediaType="application/xml" element="identity:forbidden"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="405">
                <representation mediaType="application/xml" element="identity:badMethod"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="413">
                <representation mediaType="application/xml" element="identity:overLimit"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="503">
                <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="404">
                <representation mediaType="application/xml" element="identity:itemNotFound"/>
                <representation mediaType="application/json"/>
              </response>
            </method>
            <method name="PUT" rax:id="updateGroup">
              <doc xml:lang="EN" title="Update a Group">
                <db:para role="shortdesc">Update a group.</db:para>
              </doc>
              <request>
                <representation mediaType="application/xml" element="grp:group">
                  <doc xml:lang="EN">
                    <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                      <title>Update a Group Request: XML</title>
                      <?dbfo keep-together="auto"?>
                      <programlisting language="xml">&lt;group name="newName" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">
    &lt;description>A new description&lt;/description>
&lt;/group></programlisting>
                    </example>
                  </doc>
                  <param name="group" style="plain" required="true" type="grp:GroupForUpdate" path="grp:group" rax:id=""/>
                </representation>
                <representation mediaType="application/json">
                  <doc xml:lang="EN">
                    <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                      <title>Update a Group Request: JSON</title>
                      <?dbfo keep-together="auto"?>
                      <programlisting language="javascript">{
  "RAX-KSGRP:group": {
      "name" : "newName",
      "description" : "A Description of the group"
  }
}</programlisting>
                    </example>
                  </doc>
                </representation>
              </request>
              <response status="200">
                <representation mediaType="application/xml" element="grp:group">
                  <doc xml:lang="EN">
                    <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                      <title>Update a Group Response: XML</title>
                      <?dbfo keep-together="auto"?>
                      <programlisting language="xml">&lt;group id="1234" name="newName" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">
    &lt;description>A new description&lt;/description>
&lt;/group></programlisting>
                    </example>
                  </doc>
                </representation>
                <representation mediaType="application/json">
                  <doc xml:lang="EN">
                    <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                      <title>Update a Group Response: JSON</title>
                      <?dbfo keep-together="auto"?>
                      <programlisting language="javascript">{
  "RAX-KSGRP:group": {
      "id" : "1234",
      "name" : "newName",
      "description" : "A new description"
  }
}</programlisting>
                    </example>
                  </doc>
                </representation>
              </response>
              <response>
                <representation mediaType="application/xml" element="identity:identityFault"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="400">
                <representation mediaType="application/xml" element="identity:badRequest"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="401">
                <representation mediaType="application/xml" element="identity:unauthorized"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="403">
                <representation mediaType="application/xml" element="identity:forbidden"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="405">
                <representation mediaType="application/xml" element="identity:badMethod"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="413">
                <representation mediaType="application/xml" element="identity:overLimit"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="503">
                <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="404">
                <representation mediaType="application/xml" element="identity:itemNotFound"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="415">
                <representation mediaType="application/xml" element="identity:badMediaType"/>
                <representation mediaType="application/json"/>
              </response>
            </method>
            <method name="DELETE" rax:id="deleteGroup">
              <doc xml:lang="EN" title="Delete Group">
                <db:para role="shortdesc">Delete a group.</db:para>
              </doc>
              <response status="204"/>
              <!--Common, GET-->
              <response>
                <representation mediaType="application/xml" element="identity:identityFault"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="400">
                <representation mediaType="application/xml" element="identity:badRequest"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="401">
                <representation mediaType="application/xml" element="identity:unauthorized"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="403">
                <representation mediaType="application/xml" element="identity:forbidden"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="405">
                <representation mediaType="application/xml" element="identity:badMethod"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="413">
                <representation mediaType="application/xml" element="identity:overLimit"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="503">
                <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="404">
                <representation mediaType="application/xml" element="identity:itemNotFound"/>
                <representation mediaType="application/json"/>
              </response>
            </method>
            <resource id="users" path="users">
              <doc xml:lang="EN" title="Volume List">
                <db:para>A list of users.</db:para>
              </doc>
              <method name="GET" rax:id="getUsersForGroup">
                <doc xml:lang="EN" title="Get Users For Group">
                  <db:para role="shortdesc">List users for group.</db:para>
                  <db:para>A list of users belonging to a particular group.</db:para>
                </doc>
                <request>
                  <param name="marker" style="query" required="false" type="xsd:string" rax:id=""/>
                  <param name="limit" style="query" required="false" type="xsd:int" rax:id=""/>
                </request>
                <response status="200 203">
                  <representation mediaType="application/xml" element="identity:users">
                    <doc xml:lang="EN">
                      <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                        <title>Get Users For Group Response: XML</title>
                        <?dbfo keep-together="auto"?>
                        <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;users xmlns="http://docs.openstack.org/identity/api/v2.0">
    &lt;user xmlns="http://docs.openstack.org/identity/api/v2.0"
          enabled="true" email="john.smith@example.org"
          username="jqsmith" id="u1000"/>
    &lt;user xmlns="http://docs.openstack.org/identity/api/v2.0"
          enabled="true" email="john.smith@example.org"
          username="jqsmith" id="u1001"/>
&lt;/users></programlisting>
                      </example>
                    </doc>
                    <param name="next" style="plain" type="xsd:anyURI" path="identity:users/atom:link[@rel='next']/@href" rax:id="">
                      <link resource_type="#UserList" rel="next"/>
                    </param>
                    <param name="previous" style="plain" type="xsd:anyURI" path="identity:users/atom:link[@rel='previous']/@href" rax:id="">
                      <link resource_type="#UserList" rel="previous"/>
                    </param>
                  </representation>
                  <representation mediaType="application/json">
                    <doc xml:lang="EN">
                      <example role="wadl" xmlns="http://docbook.org/ns/docbook">
                        <title>Get Users For Group Response: JSON</title>
                        <?dbfo keep-together="auto"?>
                        <programlisting language="javascript">{
  "users": [
    {
      "id": "u1000",
      "username": "jqsmith",
      "email": "john.smith@example.org",
      "enabled": true
    },
    {
      "id": "u1001",
      "username": "jqsmith",
      "email": "john.smith@example.org",
      "enabled": true
    }
  ],
  "users_links": []
}</programlisting>
                      </example>
                    </doc>
                  </representation>
                </response>
                <!--commonFaults-->
                <response>
                  <representation mediaType="application/xml" element="identity:identityFault"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="400">
                  <representation mediaType="application/xml" element="identity:badRequest"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="401">
                  <representation mediaType="application/xml" element="identity:unauthorized"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="403">
                  <representation mediaType="application/xml" element="identity:forbidden"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="405">
                  <representation mediaType="application/xml" element="identity:badMethod"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="413">
                  <representation mediaType="application/xml" element="identity:overLimit"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="503">
                  <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
                  <representation mediaType="application/json"/>
                </response>
              </method>
              <resource id="user" path="{userId}">
                <param name="userId" style="template" type="xsd:string" rax:id="">
                  <doc xml:lang="EN" title="GroupId">
                    <db:para>A unique identifier for the user.</db:para>
                  </doc>
                </param>
                <method name="PUT" rax:id="addUserToGroup">
                  <doc xml:lang="EN" title="Add User to Group">
                    <db:para role="shortdesc">Add a user to the group.</db:para>
                  </doc>
                  <response status="204"/>
                  <!--Common, GET-->
                  <response>
                    <representation mediaType="application/xml" element="identity:identityFault"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="400">
                    <representation mediaType="application/xml" element="identity:badRequest"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="401">
                    <representation mediaType="application/xml" element="identity:unauthorized"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="403">
                    <representation mediaType="application/xml" element="identity:forbidden"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="405">
                    <representation mediaType="application/xml" element="identity:badMethod"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="413">
                    <representation mediaType="application/xml" element="identity:overLimit"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="503">
                    <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="404">
                    <representation mediaType="application/xml" element="identity:itemNotFound"/>
                    <representation mediaType="application/json"/>
                  </response>
                </method>
                <method name="DELETE" rax:id="removeUserFromGroup">
                  <doc xml:lang="EN" title="Remove User From Group">
                    <db:para role="shortdesc">Remove a user to the group.</db:para>
                  </doc>
                  <response status="204"/>
                  <!--Common, GET-->
                  <response>
                    <representation mediaType="application/xml" element="identity:identityFault"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="400">
                    <representation mediaType="application/xml" element="identity:badRequest"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="401">
                    <representation mediaType="application/xml" element="identity:unauthorized"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="403">
                    <representation mediaType="application/xml" element="identity:forbidden"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="405">
                    <representation mediaType="application/xml" element="identity:badMethod"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="413">
                    <representation mediaType="application/xml" element="identity:overLimit"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="503">
                    <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="404">
                    <representation mediaType="application/xml" element="identity:itemNotFound"/>
                    <representation mediaType="application/json"/>
                  </response>
                </method>
              </resource>
            </resource>
          </resource>
        </resource>
      </resource>
    </resource>
  </resources>
  <resource_type id="UserList">
    <doc xml:lang="EN" title="Volume List">
      <db:para>A list of users.</db:para>
    </doc>
    <method name="GET" rax:id="getUsersForGroup" xmlns:rax="http://docs.rackspace.com/api">
      <doc xml:lang="EN" title="Get Users For Group">
        <db:para role="shortdesc">List users for group.</db:para>
        <db:para>A list of users belonging to a particular group.</db:para>
      </doc>
      <request>
        <param name="marker" style="query" required="false" type="xsd:string" rax:id=""/>
        <param name="limit" style="query" required="false" type="xsd:int" rax:id=""/>
      </request>
      <response status="200 203">
        <representation mediaType="application/xml" element="identity:users">
          <doc xml:lang="EN">
            <example role="wadl" xmlns="http://docbook.org/ns/docbook">
              <title>Get Users For Group Response: XML</title>
              <?dbfo keep-together="auto"?>
              <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;users xmlns="http://docs.openstack.org/identity/api/v2.0">
    &lt;user xmlns="http://docs.openstack.org/identity/api/v2.0"
          enabled="true" email="john.smith@example.org"
          username="jqsmith" id="u1000"/>
    &lt;user xmlns="http://docs.openstack.org/identity/api/v2.0"
          enabled="true" email="john.smith@example.org"
          username="jqsmith" id="u1001"/>
&lt;/users></programlisting>
            </example>
          </doc>
          <param name="next" style="plain" type="xsd:anyURI" path="identity:users/atom:link[@rel='next']/@href" rax:id="">
            <link resource_type="#UserList" rel="next"/>
          </param>
          <param name="previous" style="plain" type="xsd:anyURI" path="identity:users/atom:link[@rel='previous']/@href" rax:id="">
            <link resource_type="#UserList" rel="previous"/>
          </param>
        </representation>
        <representation mediaType="application/json">
          <doc xml:lang="EN">
            <example role="wadl" xmlns="http://docbook.org/ns/docbook">
              <title>Get Users For Group Response: JSON</title>
              <?dbfo keep-together="auto"?>
              <programlisting language="javascript">{
  "users": [
    {
      "id": "u1000",
      "username": "jqsmith",
      "email": "john.smith@example.org",
      "enabled": true
    },
    {
      "id": "u1001",
      "username": "jqsmith",
      "email": "john.smith@example.org",
      "enabled": true
    }
  ],
  "users_links": []
}</programlisting>
            </example>
          </doc>
        </representation>
      </response>
      <!--commonFaults-->
      <response>
        <representation mediaType="application/xml" element="identity:identityFault"/>
        <representation mediaType="application/json"/>
      </response>
      <response status="400">
        <representation mediaType="application/xml" element="identity:badRequest"/>
        <representation mediaType="application/json"/>
      </response>
      <response status="401">
        <representation mediaType="application/xml" element="identity:unauthorized"/>
        <representation mediaType="application/json"/>
      </response>
      <response status="403">
        <representation mediaType="application/xml" element="identity:forbidden"/>
        <representation mediaType="application/json"/>
      </response>
      <response status="405">
        <representation mediaType="application/xml" element="identity:badMethod"/>
        <representation mediaType="application/json"/>
      </response>
      <response status="413">
        <representation mediaType="application/xml" element="identity:overLimit"/>
        <representation mediaType="application/json"/>
      </response>
      <response status="503">
        <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
        <representation mediaType="application/json"/>
      </response>
    </method>
  </resource_type>
  <resource_type id="GroupList">
    <doc xml:lang="EN" title="Volume List">
      <db:para>A list of groups.</db:para>
    </doc>
    <method name="GET" rax:id="listGroups" xmlns:rax="http://docs.rackspace.com/api">
      <doc xml:lang="EN" title="Get Groups">
        <db:para role="shortdesc">List of groups.</db:para>
        <db:para>
          Displays a list of available groups.  You can use the
          <db:parameter>name</db:parameter>
          to display only
                those groups matching a particular name.
        </db:para>
      </doc>
      <request>
        <param name="marker" style="query" required="false" type="xsd:string" rax:id=""/>
        <param name="limit" style="query" required="false" type="xsd:int" rax:id=""/>
        <param name="name" style="query" required="false" type="xsd:string" rax:id=""/>
      </request>
      <response status="200 203">
        <representation mediaType="application/xml" element="grp:groups">
          <doc xml:lang="EN">
            <example role="wadl" xmlns="http://docbook.org/ns/docbook">
              <title>Get Groups Response: XML</title>
              <?dbfo keep-together="auto"?>
              <programlisting language="xml"><![CDATA[<groups xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0"
        xmlns:atom="http://www.w3.org/2005/Atom">
    <group id="1234" name="group1">
        <description>A Description of the group</description>
    </group>
    <group id="1235" name="group2">
        <description>A Description of the group</description>
    </group>
    <group id="1236" name="group3">
        <description>A Description of the group</description>
    </group>
    <atom:link rel="next" href="https://identity.openstack.com/v2.0/RAX-GRPADM/groups?marker=1236"/>
</groups>]]]]>><![CDATA[</programlisting>
            </example>
          </doc>
          <param name="next" style="plain" type="xsd:anyURI" path="grp:groups/atom:link[@rel='next']/@href" rax:id="">
            <link resource_type="#GroupList" rel="next"/>
          </param>
          <param name="previous" style="plain" type="xsd:anyURI" path="grp:groups/atom:link[@rel='previous']/@href" rax:id="">
            <link resource_type="#GroupList" rel="previous"/>
          </param>
        </representation>
        <representation mediaType="application/json">
          <doc xml:lang="EN">
            <example role="wadl" xmlns="http://docbook.org/ns/docbook">
              <title>Get Groups Response: JSON</title>
              <?dbfo keep-together="auto"?>
              <programlisting language="javascript">{
  "RAX-KSGRP:groups": [
   {
       "id" : "1234",
       "name": "group1",
       "description": "A Description of the group"
   },
   {
       "id" : "1235",
       "name": "group2",
       "description": "A Description of the group"
   },
   {
       "id" : "1236",
       "name": "group3",
       "description": "A Description of the group"
   }
  ],
  "RAX-KSGRP:groups_links": [
      {
          "rel" : "next",
          "href" : "https://identity.openstack.com/v2.0/RAX-GRPADM/groups?marker=1236"
      }
  ]
}</programlisting>
            </example>
          </doc>
        </representation>
      </response>
      <!--commonFaults-->
      <response>
        <representation mediaType="application/xml" element="identity:identityFault"/>
        <representation mediaType="application/json"/>
      </response>
      <response status="400">
        <representation mediaType="application/xml" element="identity:badRequest"/>
        <representation mediaType="application/json"/>
      </response>
      <response status="401">
        <representation mediaType="application/xml" element="identity:unauthorized"/>
        <representation mediaType="application/json"/>
      </response>
      <response status="403">
        <representation mediaType="application/xml" element="identity:forbidden"/>
        <representation mediaType="application/json"/>
      </response>
      <response status="405">
        <representation mediaType="application/xml" element="identity:badMethod"/>
        <representation mediaType="application/json"/>
      </response>
      <response status="413">
        <representation mediaType="application/xml" element="identity:overLimit"/>
        <representation mediaType="application/json"/>
      </response>
      <response status="503">
        <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
        <representation mediaType="application/json"/>
      </response>
    </method>
  </resource_type>
  <!--Methods-->
  <method id="listGroups" name="GET">
    <doc xml:lang="EN" title="Get Groups">
      <db:para role="shortdesc">List of groups.</db:para>
      <db:para>
        Displays a list of available groups.  You can use the
        <db:parameter>name</db:parameter>
        to display only
                those groups matching a particular name.
      </db:para>
    </doc>
    <request>
      <param name="marker" style="query" required="false" type="xsd:string" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
      <param name="limit" style="query" required="false" type="xsd:int" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
      <param name="name" style="query" required="false" type="xsd:string" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="grp:groups">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Get Groups Response: XML</title>
            <?dbfo keep-together="auto"?>
            <programlisting language="xml"><![CDATA[<groups xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0"
        xmlns:atom="http://www.w3.org/2005/Atom">
    <group id="1234" name="group1">
        <description>A Description of the group</description>
    </group>
    <group id="1235" name="group2">
        <description>A Description of the group</description>
    </group>
    <group id="1236" name="group3">
        <description>A Description of the group</description>
    </group>
    <atom:link rel="next" href="https://identity.openstack.com/v2.0/RAX-GRPADM/groups?marker=1236"/>
</groups>]]]]>><![CDATA[</programlisting>
          </example>
        </doc>
        <param name="next" style="plain" type="xsd:anyURI" path="grp:groups/atom:link[@rel='next']/@href" rax:id="" xmlns:rax="http://docs.rackspace.com/api">
          <link resource_type="#GroupList" rel="next"/>
        </param>
        <param name="previous" style="plain" type="xsd:anyURI" path="grp:groups/atom:link[@rel='previous']/@href" rax:id="" xmlns:rax="http://docs.rackspace.com/api">
          <link resource_type="#GroupList" rel="previous"/>
        </param>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Get Groups Response: JSON</title>
            <?dbfo keep-together="auto"?>
            <programlisting language="javascript">{
  "RAX-KSGRP:groups": [
   {
       "id" : "1234",
       "name": "group1",
       "description": "A Description of the group"
   },
   {
       "id" : "1235",
       "name": "group2",
       "description": "A Description of the group"
   },
   {
       "id" : "1236",
       "name": "group3",
       "description": "A Description of the group"
   }
  ],
  "RAX-KSGRP:groups_links": [
      {
          "rel" : "next",
          "href" : "https://identity.openstack.com/v2.0/RAX-GRPADM/groups?marker=1236"
      }
  ]
}</programlisting>
          </example>
        </doc>
      </representation>
    </response>
    <!--commonFaults-->
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method id="addGroup" name="POST">
    <doc xml:lang="EN" title="Add a New Group">
      <db:para role="shortdesc">Add a new group.</db:para>
    </doc>
    <request>
      <representation mediaType="application/xml" element="grp:group">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Add a New Group Request: XML</title>
            <?dbfo keep-together="auto"?>
            <programlisting language="xml">&lt;group name="group1" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">
    &lt;description>A Description of the group&lt;/description>
&lt;/group></programlisting>
          </example>
        </doc>
        <param name="group" style="plain" required="true" type="grp:GroupForCreate" path="grp:group" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Add a New Group Request: JSON</title>
            <?dbfo keep-together="auto"?>
            <programlisting language="javascript">{
  "RAX-KSGRP:group": {
      "name" : "group1",
      "description" : "A Description of the group"
  }
}</programlisting>
          </example>
        </doc>
      </representation>
    </request>
    <response status="201">
      <param name="Location" style="header" required="true" type="xsd:anyURI" rax:id="" xmlns:rax="http://docs.rackspace.com/api">
        <doc xml:lang="EN" title="Location Header">
          <db:para>
            The full URL to the newly created group is
                        returned via the
            <db:code>Loctaton</db:code>
            header.
          </db:para>
        </doc>
      </param>
      <representation mediaType="application/xml" element="grp:group">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Add a New Group Response: XML</title>
            <?dbfo keep-together="auto"?>
            <programlisting language="xml">&lt;group id="1234" name="group1" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">
    &lt;description>A Description of the group&lt;/description>
&lt;/group></programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Add a New Group Response: JSON</title>
            <?dbfo keep-together="auto"?>
            <programlisting language="javascript">{
  "RAX-KSGRP:group": {
      "id" : "1234",
      "name" : "group1",
      "description" : "A Description of the group"
  }
}</programlisting>
          </example>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method id="getGroup" name="GET">
    <doc xml:lang="EN" title="Get Group">
      <db:para role="shortdesc">Get group by id.</db:para>
    </doc>
    <response status="200 203">
      <representation mediaType="application/xml" element="grp:group">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Get Group Response: XML</title>
            <?dbfo keep-together="auto"?>
            <programlisting language="xml">&lt;group id="1234" name="group1" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">
    &lt;description>A Description of the group&lt;/description>
&lt;/group></programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Get Group Response: JSON</title>
            <?dbfo keep-together="auto"?>
            <programlisting language="javascript">{
  "RAX-KSGRP:group": {
      "id" : "1234",
      "name" : "group1",
      "description" : "A Description of the group"
  }
}</programlisting>
          </example>
        </doc>
      </representation>
    </response>
    <!--Common, GET-->
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method id="updateGroup" name="PUT">
    <doc xml:lang="EN" title="Update a Group">
      <db:para role="shortdesc">Update a group.</db:para>
    </doc>
    <request>
      <representation mediaType="application/xml" element="grp:group">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Update a Group Request: XML</title>
            <?dbfo keep-together="auto"?>
            <programlisting language="xml">&lt;group name="newName" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">
    &lt;description>A new description&lt;/description>
&lt;/group></programlisting>
          </example>
        </doc>
        <param name="group" style="plain" required="true" type="grp:GroupForUpdate" path="grp:group" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Update a Group Request: JSON</title>
            <?dbfo keep-together="auto"?>
            <programlisting language="javascript">{
  "RAX-KSGRP:group": {
      "name" : "newName",
      "description" : "A Description of the group"
  }
}</programlisting>
          </example>
        </doc>
      </representation>
    </request>
    <response status="200">
      <representation mediaType="application/xml" element="grp:group">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Update a Group Response: XML</title>
            <?dbfo keep-together="auto"?>
            <programlisting language="xml">&lt;group id="1234" name="newName" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">
    &lt;description>A new description&lt;/description>
&lt;/group></programlisting>
          </example>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Update a Group Response: JSON</title>
            <?dbfo keep-together="auto"?>
            <programlisting language="javascript">{
  "RAX-KSGRP:group": {
      "id" : "1234",
      "name" : "newName",
      "description" : "A new description"
  }
}</programlisting>
          </example>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method id="deleteGroup" name="DELETE">
    <doc xml:lang="EN" title="Delete Group">
      <db:para role="shortdesc">Delete a group.</db:para>
    </doc>
    <response status="204"/>
    <!--Common, GET-->
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method id="getUsersForGroup" name="GET">
    <doc xml:lang="EN" title="Get Users For Group">
      <db:para role="shortdesc">List users for group.</db:para>
      <db:para>A list of users belonging to a particular group.</db:para>
    </doc>
    <request>
      <param name="marker" style="query" required="false" type="xsd:string" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
      <param name="limit" style="query" required="false" type="xsd:int" rax:id="" xmlns:rax="http://docs.rackspace.com/api"/>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:users">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Get Users For Group Response: XML</title>
            <?dbfo keep-together="auto"?>
            <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;users xmlns="http://docs.openstack.org/identity/api/v2.0">
    &lt;user xmlns="http://docs.openstack.org/identity/api/v2.0"
          enabled="true" email="john.smith@example.org"
          username="jqsmith" id="u1000"/>
    &lt;user xmlns="http://docs.openstack.org/identity/api/v2.0"
          enabled="true" email="john.smith@example.org"
          username="jqsmith" id="u1001"/>
&lt;/users></programlisting>
          </example>
        </doc>
        <param name="next" style="plain" type="xsd:anyURI" path="identity:users/atom:link[@rel='next']/@href" rax:id="" xmlns:rax="http://docs.rackspace.com/api">
          <link resource_type="#UserList" rel="next"/>
        </param>
        <param name="previous" style="plain" type="xsd:anyURI" path="identity:users/atom:link[@rel='previous']/@href" rax:id="" xmlns:rax="http://docs.rackspace.com/api">
          <link resource_type="#UserList" rel="previous"/>
        </param>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <example role="wadl" xmlns="http://docbook.org/ns/docbook">
            <title>Get Users For Group Response: JSON</title>
            <?dbfo keep-together="auto"?>
            <programlisting language="javascript">{
  "users": [
    {
      "id": "u1000",
      "username": "jqsmith",
      "email": "john.smith@example.org",
      "enabled": true
    },
    {
      "id": "u1001",
      "username": "jqsmith",
      "email": "john.smith@example.org",
      "enabled": true
    }
  ],
  "users_links": []
}</programlisting>
          </example>
        </doc>
      </representation>
    </response>
    <!--commonFaults-->
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method id="addUserToGroup" name="PUT">
    <doc xml:lang="EN" title="Add User to Group">
      <db:para role="shortdesc">Add a user to the group.</db:para>
    </doc>
    <response status="204"/>
    <!--Common, GET-->
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method id="removeUserFromGroup" name="DELETE">
    <doc xml:lang="EN" title="Remove User From Group">
      <db:para role="shortdesc">Remove a user to the group.</db:para>
    </doc>
    <response status="204"/>
    <!--Common, GET-->
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
</application>]]></con:content><con:type>http://wadl.dev.java.net/2009/02</con:type></con:part><con:part><con:url>file:/home/jenny/identity-api/openstack-identity-api/src/docbkx/RAX-GRPADM/normalized/RAX-GRPADM-xsd-1.xsd</con:url><con:content><![CDATA[<!--Flattened from: file:/home/jenny/identity-api/openstack-identity-api/src/docbkx/RAX-GRPADM/xsd/api.xsd-->
<xsd:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:db="http://docbook.org/ns/docbook" xmlns:rax="http://docs.rackspace.com/api" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:RAX-KSGRP="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:html="http://www.w3.org/1999/xhtml">
  <!--Import schema we are extending-->
  <element name="group" type="RAX-KSGRP:Group" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <element name="groups" type="RAX-KSGRP:Groups" xmlns="http://www.w3.org/2001/XMLSchema"/>
  <complexType name="GroupForCreate" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <restriction base="RAX-KSGRP:Group">
        <sequence>
          <element name="description" type="xsd:string" maxOccurs="1"/>
          <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
        </sequence>
        <attribute name="id" type="xsd:string" use="prohibited"/>
        <attribute name="name" type="xsd:string" use="required"/>
        <anyAttribute namespace="##other" processContents="lax"/>
      </restriction>
    </complexContent>
  </complexType>
  <complexType name="GroupForUpdate" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <restriction base="RAX-KSGRP:Group">
        <sequence>
          <element name="description" type="xsd:string" maxOccurs="1"/>
          <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
        </sequence>
        <attribute name="id" type="xsd:string" use="optional"/>
        <attribute name="name" type="xsd:string" use="optional"/>
        <anyAttribute namespace="##other" processContents="lax"/>
      </restriction>
    </complexContent>
  </complexType>
  <complexType name="Groups" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="group" type="RAX-KSGRP:Group" maxOccurs="100"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="Group" xmlns="http://www.w3.org/2001/XMLSchema">
    <sequence>
      <element name="description" type="xsd:string" maxOccurs="1"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:string" use="optional"/>
    <attribute name="name" type="xsd:string" use="optional"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="TenantGroup" xmlns="http://www.w3.org/2001/XMLSchema">
    <complexContent>
      <extension base="RAX-KSGRP:Group">
        <attribute name="tenantId" type="xsd:string" use="required"/>
      </extension>
    </complexContent>
  </complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:35357</con:endpoint><con:endpoint>${#Project#Endpoint}</con:endpoint><con:endpoint>http://auth-n02.dev.us.ccp.rackspace.net</con:endpoint></con:endpoints><con:resource name="v2.0" path="${#Project#path}"><con:settings/><con:parameters/><con:resource name="RAX-GRPADM" path="RAX-GRPADM"><con:settings/><con:parameters/><con:resource name="Volume List" path="groups"><con:settings/><con:parameters/><con:resource name="{groupId}" path="{groupId}"><con:settings/><con:parameters><con:parameter><con:name>groupId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="Volume List" path="users"><con:settings/><con:parameters/><con:resource name="{userId}" path="{userId}"><con:settings/><con:parameters><con:parameter><con:name>userId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Add User to Group" method="PUT"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Remove User From Group" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get Users For Group" method="GET"><con:settings/><con:parameters><con:parameter><con:name>marker</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:users</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get Group" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">v1:group</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Update a Group" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">v1:group</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">v1:group</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete Group" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get Groups" method="GET"><con:settings/><con:parameters><con:parameter><con:name>marker</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>name</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">v1:groups</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Add a New Group" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">v1:group</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v1="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">v1:group</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource></con:interface><con:testSuite name="Functional - Group Operations - B-17758 &amp; D-05005"><con:description/><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Authenticate get Auth token" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="6eccd826-8ade-4572-ada8-b1eef2a446bf"><con:settings/><con:testStep type="groovy" name="set json requests"><con:settings/><con:config><script>def jsonReq = '{"auth":{"passwordCredentials":{"username":"${#Project#auth-user}","password":"${#Project#auth-pass}"}}}'

//set request
testRunner.testCase.testSteps["POST - Authenticate Service Admin - json"].setPropertyValue("Request", jsonReq)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Authenticate Service Admin - json"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Authenticate Service Admin - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${POST - Authenticate Service Admin - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def id = jsonObj."access"."token".id
log.info id
//store admin token
assert id != null || id != ""
def roleId = jsonObj."access"."user"."roles".id
log.info roleId[0]
def roleName = jsonObj."access"."user"."roles".name
log.info roleName[0]
def roleDesc = jsonObj."access"."user"."roles".description
log.info roleDesc[0]
//store admin role info
assert roleId[0] == "1"
assert roleDesc[0] == "Admin Role."</scriptText></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token and other info"><con:settings/><con:config><script>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${POST - Authenticate Service Admin - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def id = jsonObj."access"."token".id
log.info id
//store admin token
testRunner.testCase.testSuite.setPropertyValue("auth-token", id)
def userId = jsonObj."access"."user".id
//store admin user id
log.info userId
testRunner.testCase.testSuite.setPropertyValue("adminId", userId)
def roleId = jsonObj."access"."user"."roles".id
log.info roleId[0]
def roleName = jsonObj."access"."user"."roles".name
log.info roleName[0]
def roleDesc = jsonObj."access"."user"."roles".description
log.info roleDesc[0]
//store admin role info
testRunner.testCase.testSuite.setPropertyValue("adminRoleId", roleId[0])
testRunner.testCase.testSuite.setPropertyValue("adminRoleName", roleName[0])
testRunner.testCase.testSuite.setPropertyValue("adminRoleDesc", roleDesc[0])
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Authenticate Users" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="a9edd2a3-7ce7-4b39-914d-f8b3b5668b06"><con:settings/><con:testStep type="groovy" name="set json requests"><con:settings/><con:config><script>def jsonReq = '{"auth":{"passwordCredentials":{"username":"${#TestSuite#username}","password":"${#TestSuite#password}"}}}'

//set request
testRunner.testCase.testSteps["POST - Authenticate password - json"].setPropertyValue("Request", jsonReq)

def jsonReq1 = '{"auth":{"RAX-KSKEY:apiKeyCredentials":{"username":"${#TestSuite#username2}","apiKey":"${#TestSuite#key2}"}}}'

//set request
testRunner.testCase.testSteps["POST - Authenticate user-key 2 - json"].setPropertyValue("Request", jsonReq1)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Authenticate password - json"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Authenticate password - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"auth":{"passwordCredentials":{"username":"${#TestSuite#username}","password":"${#TestSuite#password}"}}}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${POST - Authenticate password - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def id = jsonObj."access"."token".id
log.info id
//store admin token
assert id != null || id != ""
def roleId = jsonObj."access"."user"."roles".id
log.info roleId[0]
def roleName = jsonObj."access"."user"."roles".name
log.info roleName[0]
def roleDesc = jsonObj."access"."user"."roles".description
log.info roleDesc[0]
//store admin role info
//assert roleId[0] == "1"
//assert roleDesc[0] == "Admin Role."
def name = jsonObj."access"."user".name
log.info name
def username = context.expand( '${#TestSuite#username}' )
assert name == username </scriptText></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="check service catalog name and type"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${POST - Authenticate password - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def serviceName = jsonObj."access"."serviceCatalog".name
log.info serviceName
def serviceType = jsonObj."access"."serviceCatalog".type
log.info serviceType
log.info serviceName.size()
for (i=0; i&lt;serviceName.size(); i++)
{
	log.info serviceName[i]
	log.info serviceType[i]
	assert serviceName[i] != null
	//assert serviceType[i] != null
}
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token and other info"><con:settings/><con:config><script>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${POST - Authenticate password - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def id = jsonObj."access"."token".id
log.info id
//store admin token
testRunner.testCase.testSuite.setPropertyValue("tokenId", id)
def userId = jsonObj."access"."user".id
//store admin user id
log.info userId
testRunner.testCase.testSuite.setPropertyValue("userId", userId)
def roleId = jsonObj."access"."user"."roles".id
log.info roleId[0]
def roleName = jsonObj."access"."user"."roles".name
log.info roleName[0]
def roleDesc = jsonObj."access"."user"."roles".description
log.info roleDesc[0]
//store admin role info
testRunner.testCase.testSuite.setPropertyValue("roleId", roleId[0])
testRunner.testCase.testSuite.setPropertyValue("roleName", roleName[0])
testRunner.testCase.testSuite.setPropertyValue("roleDesc", roleDesc[0])</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Authenticate user-key 2 - json"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Authenticate user-key 2 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"auth":{"RAX-KSKEY:apiKeyCredentials":{"username":"${#TestSuite#username2}","apiKey":"${#TestSuite#key2}"}}}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${POST - Authenticate user-key 2 - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def id = jsonObj."access"."token".id
log.info id
//store admin token
assert id != null || id != ""
def roleId = jsonObj."access"."user"."roles".id
log.info roleId[0]
def roleName = jsonObj."access"."user"."roles".name
log.info roleName[0]
def roleDesc = jsonObj."access"."user"."roles".description
log.info roleDesc[0]
//store admin role info
//assert roleId[0] == "1"
//assert roleDesc[0] == "Admin Role."
def name = jsonObj."access"."user".name
log.info name
def username = context.expand( '${#TestSuite#username2}' )
assert name == username </scriptText></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="check service catalog name and type"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${POST - Authenticate user-key 2 - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def serviceName = jsonObj."access"."serviceCatalog".name
log.info serviceName
def serviceType = jsonObj."access"."serviceCatalog".type
log.info serviceType
log.info serviceName.size()
for (i=0; i&lt;serviceName.size(); i++)
{
	log.info serviceName[i]
	log.info serviceType[i]
	assert serviceName[i] != null
	//assert serviceType[i] != null
}
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token and other info 2"><con:settings/><con:config><script>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp2 = context.expand( '${POST - Authenticate user-key 2 - json#Response}' )
def jsonObj2 = new JsonSlurper().parseText(jsonResp2)
def id2 = jsonObj2."access"."token".id
log.info id2
//store admin token
testRunner.testCase.testSuite.setPropertyValue("tokenId2", id2)
def userId2 = jsonObj2."access"."user".id
//store admin user id
log.info userId2
testRunner.testCase.testSuite.setPropertyValue("userId2", userId2)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Authenticate password 3 - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Authenticate password 3 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;passwordCredentials password="${#TestSuite#password3}" username="${#TestSuite#username3}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${POST - Authenticate user-key 2 - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def id = jsonObj."access"."token".id
log.info id
//store admin token
assert id != null || id != ""
def roleId = jsonObj."access"."user"."roles".id
log.info roleId[0]
def roleName = jsonObj."access"."user"."roles".name
log.info roleName[0]
def roleDesc = jsonObj."access"."user"."roles".description
log.info roleDesc[0]
//store admin role info
//assert roleId[0] == "1"
//assert roleDesc[0] == "Admin Role."
def name = jsonObj."access"."user".name
log.info name
def username = context.expand( '${#TestSuite#username2}' )
assert name == username </scriptText></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="check service catalog name and type"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${POST - Authenticate user-key 2 - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def serviceName = jsonObj."access"."serviceCatalog".name
log.info serviceName
def serviceType = jsonObj."access"."serviceCatalog".type
log.info serviceType
log.info serviceName.size()
for (i=0; i&lt;serviceName.size(); i++)
{
	log.info serviceName[i]
	log.info serviceType[i]
	assert serviceName[i] != null
	//assert serviceType[i] != null
}
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token and other info 3"><con:settings/><con:config><script>def token = context.expand( '${POST - Authenticate password 3 - xml#Response#declare namespace ns2=\'http://docs.openstack.org/identity/api/v2.0\'; //ns2:access[1]/ns2:token[1]/@id}' )
def id = context.expand( '${POST - Authenticate password 3 - xml#Response#declare namespace ns2=\'http://docs.openstack.org/identity/api/v2.0\'; //ns2:access[1]/ns2:user[1]/@id}' )
testRunner.testCase.testSuite.setPropertyValue("userId3", id)
testRunner.testCase.testSuite.setPropertyValue("tokenId3", token)</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Customer Admin role Operations" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="3dad0d91-f608-4d5b-9014-e76b97847694"><con:settings/><con:testStep type="restrequest" name="GET - List Subuser - json" disabled="true"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/users" methodName="Get a User by Name" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - List Subuser - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${GET - List Subuser - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def user = jsonObj."user"
log.info user
def id = jsonObj."user".id
log.info id
def name = jsonObj."user".username
log.info name
def enabled = jsonObj."user".enabled
log.info enabled
assert enabled == true
assert id == context.expand('${#TestSuite#userId3}')
assert name == context.expand('${#TestSuite#username3}')
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId3}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store subuser info" disabled="true"><con:settings/><con:config><script>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${GET - List Subuser - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def users = jsonObj."users"

if (users != null)
{
	def id = jsonObj."users".id
	log.info id
	def name = jsonObj."users".username
	log.info name
	testRunner.testCase.testSuite.setPropertyValue("u1SubUserId1", id[1])
	testRunner.testCase.testSuite.setPropertyValue("u1SubUserName1", name[1])
}
else
{
	log.info "only one user"
} </script></con:config></con:testStep><con:testStep type="restrequest" name="GET - List User w id u3 - json"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/users/{user_id}" methodName="Get a User by ID" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - List User w id u3 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${GET - List User w id u3 - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def username = jsonObj."user".username
def userId = jsonObj."user".id
def id = context.expand( '${#TestSuite#userId3}' )
def name = context.expand( '${#TestSuite#username3}' )

assert username == name
assert userId == id</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestSuite#u1SubUserName1}"/>
  <con:entry key="user_id" value="${#TestSuite#userId3}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId3}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="set json req1"><con:settings/><con:config><script>def jsonReq = '{"user": { "username": "${#TestSuite#u3SubUserName1}", "email": "${#TestSuite#u3SubUserEmail1}", "OS-KSADM:password":"${#TestSuite#u3SubUserPwd1}", "enabled": true} }'

//set request
testRunner.testCase.testSteps["POST - Add SubUser u3 - json"].setPropertyValue("Request", jsonReq)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Add SubUser u3 - json"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users" methodName="Add user" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Add SubUser u3 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"user": { "username": "${#TestSuite#u3SubUserName1}", "email": "${#TestSuite#u3SubUserEmail1}", "OS-KSADM:password":"${#TestSuite#u3SubUserPwd1}", "enabled": true} }</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId3}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store SubUser u3 info"><con:settings/><con:config><script>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${POST - Add SubUser u3 - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def userId = jsonObj."user".id
//def password = jsonObj."user"."OS-KSADM:password"
log.info userId
//log.info password
if (userId.toString() != "")
{
	testRunner.testCase.testSuite.setPropertyValue("u3SubUserId1", userId)
}</script></con:config></con:testStep><con:testStep type="delay" name="wait 1"><con:settings/><con:config><delay>3000</delay></con:config></con:testStep><con:testStep type="restrequest" name="GET - List Subuser by name - json"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/users" methodName="Get a User by Name" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - List Subuser by name - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${GET - List Subuser by name - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def user = jsonObj."user"
log.info user
def id = jsonObj."user".id
log.info id
def name = jsonObj."user".username
log.info name
def enabled = jsonObj."user".enabled
log.info enabled
assert enabled == true
assert id == context.expand('${#TestSuite#u3SubUserId1}')
assert name == context.expand('${#TestSuite#u3SubUserName1}')
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestSuite#u3SubUserName1}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId3}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - List Subuser u3 - json"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/users" methodName="Get a User by Name" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - List Subuser u3 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" disabled="true"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${GET - List Subuser u3 - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def users = jsonObj."users"
def u1SubUserId1 = context.expand( '${#TestSuite#u3SubUserId1}' )
def u1SubUserName1 = context.expand( '${#TestSuite#u3SubUserName1}' )

if (users.toString() != "" || users != null)
{
	def id = jsonObj."users".id
	log.info id[1]
	def name = jsonObj."users".username
	log.info name
	assert id[1] == u1SubUserId1
	assert name[1] == u1SubUserName1
	//context.testCase.testSuite.setPropertyValue("u1SubUserId1", id[1])
	//context.testCase.testSuite.setPropertyValue("u1SubUserName1", name[1])
}
else
{
	log.info "only one user"
} 
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestSuite#u3SubUserName1}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId3}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="set json req2"><con:settings/><con:config><script>

//def json_req1 =  '{"RAX-KSKEY:apiKeyCredentials":{"username":"${#TestSuite#u1SubUserName1}","apiKey":"${#TestSuite#u1SubUserKey1}"}}'
//testRunner.testCase.testSteps["POST - Add SubUser apiKeyCred auth-token u1 - json"].setPropertyValue("Request", json_req1)

//def json_req1 = '{"user": { "username": "${#TestSuite#u1SubUserName1}", "OS-KSADM:password": "${#TestSuite#u1SubUserPwd1}"} }'
//set request
//testRunner.testCase.testSteps["POST - Update SubUser pwd parent-token u1 - json"].setPropertyValue("Request", json_req1)

def json_req2 = '{"RAX-KSKEY:apiKeyCredentials":{"username":"${#TestSuite#u3SubUserName1}","apiKey":"${#TestSuite#u3SubUserKey1}"}}'
//set request
testRunner.testCase.testSteps["POST - Add SubUser apiKeyCred auth-token u3 - json"].setPropertyValue("Request", json_req2)

//def json_req2 = '{"user": { "username": "${#TestSuite#u1SubUserName1}", "email": "test@rackspace.com"} }'
//set request
//testRunner.testCase.testSteps["POST - Update SubUser email parent-token u1 - json"].setPropertyValue("Request", json_req2)

//def json_req3 = '{"user": { "username": "whatever01", "email": "${#TestSuite#u1SubUserEmail1}"} }'
//set request
//testRunner.testCase.testSteps["POST - Update SubUser name parent-token u1 - json"].setPropertyValue("Request", json_req3)

//def json_req4 = '{"user": { "username": "${#TestSuite#u1SubUserName1}", "email": "${#TestSuite#u1SubUserEmail1}"} }'
//set request
//testRunner.testCase.testSteps["POST - Update SubUser name parent-token u1 back - json"].setPropertyValue("Request", json_req4)

//def json_req5 = '{"user": { "username": "${#TestSuite#u1SubUserName1}", "email": "${#TestSuite#u1SubUserEmail1}", "enable":false} }'
//set request
//testRunner.testCase.testSteps["POST - Update SubUser disable parent-token u1 - json"].setPropertyValue("Request", json_req5)

//def json_req6 = '{"user": { "username": "${#TestSuite#u1SubUserName1}", "email": "${#TestSuite#u1SubUserEmail1}", "enable":true} }'
//set request
//testRunner.testCase.testSteps["POST - Update SubUser enable parent-token u1 - json"].setPropertyValue("Request", json_req6)

//def json_req6 = '{"passwordCredentials":{"username":"${#TestSuite#u1SubUserName1}","password":"${#TestSuite#u1SubUserPwd1}"}}'

//set request
//testRunner.testCase.testSteps["POST - Add SubUser pwdCred u1 - json"].setPropertyValue("Request", json_req6)

//def json_req7 =  '{ "RAX-KSKEY:apiKeyCredentials":{ "username":"${#TestSuite#u1SubUserName1}","apiKey":"${#TestSuite#newKey}" } }'
//set request
//testRunner.testCase.testSteps["POST - Update SubUser apiKeyCred auth-token u1 - json"].setPropertyValue("Request", json_req7)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Add SubUser apiKeyCred auth-token u3 - json"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" methodName="Add user Credential." xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Add SubUser apiKeyCred auth-token u3 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${POST - Add SubUser apiKeyCred auth-token u3 - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def apiCred = jsonObj."RAX-KSKEY:apiKeyCredentials"
if(apiCred != null)
{
	def name = jsonObj."RAX-KSKEY:apiKeyCredentials".username
	def key = jsonObj."RAX-KSKEY:apiKeyCredentials".apiKey
	assert name == context.expand( '${#TestSuite#u3SubUserName1}' )
	assert key == context.expand( '${#TestSuite#u3SubUserKey1}' )
}</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#u3SubUserId1}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="wait 2"><con:settings/><con:config><delay>3000</delay></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get User apikeyCred own-token u3 - json"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/{credential-type}" methodName="Get user Credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get User apikeyCred own-token u3 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${GET - Get User apikeyCred own-token u3 - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def apikeyCred = jsonObj."RAX-KSKEY:apiKeyCredentials"
log.info apikeyCred
assert apikeyCred != null
def apikey = jsonObj."RAX-KSKEY:apiKeyCredentials"."apiKey"
log.info apikey
def name = jsonObj."RAX-KSKEY:apiKeyCredentials".username
def username = context.expand( '${#TestSuite#username3}' )
def key = context.expand( '${#TestSuite#key3}' )
assert name == username
assert key == apikey</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="credential-type" value="${#TestSuite#credType1}"/>
  <con:entry key="userId" value="${#TestSuite#userId3}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId3}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - List subUser u2 - xml" disabled="true"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/users" methodName="Get a User by Name" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - List subUser u2 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" disabled="true"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${GET - List subUser u2 - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def username = context.expand('${#TestSuite#username2}')
def userId = context.expand('${#TestSuite#userId2}')
def users = jsonObj."users"
if (users != null)
{
	def ids = jsonObj."users".id
	def names = jsonObj."users".username
	assert ids[0] == userId
	assert names[0] == username
}
else
{
	def id = jsonObj."user".id
	log.info id
	def name = jsonObj."user".username
	log.info name
	
	assert id == userId
	assert name == username
}
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@username]"><con:configuration><path>declare namespace ns2='http://docs.openstack.org/identity/api/v2.0';
//ns2:user[1]/@username</path><content>${#TestSuite#username2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store SubUser Info 2" disabled="true"><con:settings/><con:config><script>def userId = context.expand( '${GET - List subUser u2 - xml#Response#declare namespace ns2=\'http://docs.openstack.org/identity/api/v2.0\'; //ns2:user[1]/@id}' )
log.info userId
if (userId != null)
{
	testRunner.testCase.testSuite.setPropertyValue("userId2", userId)
}</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - List User w id u2 - xml" disabled="true"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/users/{user_id}" methodName="Get a User by ID" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - List User w id u2 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" disabled="true"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${GET - List User w id u1 - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def username = jsonObj."user".username
def userId = jsonObj."user".id
def id = context.expand( '${#TestSuite#userId}' )
def name = context.expand( '${#TestSuite#username}' )

assert username == name
assert userId == id</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@username]"><con:configuration><path>declare namespace ns2='http://docs.openstack.org/identity/api/v2.0';
//ns2:user[1]/@username</path><content>${#TestSuite#username2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@id]"><con:configuration><path>declare namespace ns2='http://docs.openstack.org/identity/api/v2.0';
//ns2:user[1]/@id</path><content>${#TestSuite#userId2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestSuite#u1SubUserName1}"/>
  <con:entry key="user_id" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Add SubUser u2 - xml" disabled="true"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users" methodName="Add user" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Add SubUser u2 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:user email="${#TestSuite#u2SubUserEmail1}" enabled="true" username="${#TestSuite#u2SubUserName1}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>def name = context.expand( '${POST - Add SubUser u2 - xml#Response#declare namespace ns2=\'http://docs.openstack.org/identity/api/v2.0\'; //ns2:user[1]/@username}' )
def u2SubUserName1 = context.expand( '${#TestSuite#u2SubUserName1}' )

assert name == u2SubUserName1</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@ns1:password]" disabled="true"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0';
declare namespace ns2='http://docs.openstack.org/identity/api/v2.0';
//ns2:user[1]/@ns1:password</path><content>gvTFyAb7</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store subuser u2 info" disabled="true"><con:settings/><con:config><script>def name = context.expand( '${POST - Add SubUser u2 - xml#Response#declare namespace ns2=\'http://docs.openstack.org/identity/api/v2.0\'; //ns2:user[1]/@username}' )
log.info name
if (name.toString() != "")
{
def id = context.expand( '${POST - Add SubUser u2 - xml#Response#declare namespace ns2=\'http://docs.openstack.org/identity/api/v2.0\'; //ns2:user[1]/@id}' )
def password = context.expand( '${POST - Add SubUser u2 - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0\'; declare namespace ns2=\'http://docs.openstack.org/identity/api/v2.0\'; //ns2:user[1]/@ns1:password}' )
testRunner.testCase.testSuite.setPropertyValue("u2SubUserId1", id)
log.info id
testRunner.testCase.testSuite.setPropertyValue("u2SubUserPassword1", password)
log.info password
}</script></con:config></con:testStep><con:testStep type="delay" name="wait 5" disabled="true"><con:settings/><con:config><delay>3000</delay></con:config></con:testStep><con:testStep type="groovy" name="set xml req1" disabled="true"><con:settings/><con:config><script><![CDATA[//def xml_req = '<?xml version="1.0" encoding="UTF-8"?><apiKeyCredentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://docs.openstack.org/identity/api/v2.0" username="${#TestSuite#u2SubUserName1}" apiKey="${#TestSuite#u2SubUserKey1}"/>'

//testRunner.testCase.testSteps['POST - Add SubUser apiKeyCred auth-token u2 - xml'].setPropertyValue("Request", xml_req)

//def xml_req1 = '<?xml version="1.0" encoding="UTF-8"?><apiKeyCredentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://docs.openstack.org/identity/api/v2.0" username="${#TestSuite#u2SubUserName1}" apiKey="${#TestSuite#newkey}"/>'
//testRunner.testCase.testSteps['POST - Update SubUser apiKeyCred auth-token u2 - xml'].setPropertyValue("Request", xml_req1)

//def xml_req2 = '<?xml version="1.0" encoding="UTF-8"?><passwordCredentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://docs.openstack.org/identity/api/v2.0" username="${#TestSuite#u2SubUserName1}" password="${#TestSuite#u2SubUserPwd1}"/>'
//testRunner.testCase.testSteps['POST - Add SubUser pwdCred auth-token u2 - xml 501'].setPropertyValue("Request", xml_req2)

def xml_req1 = '<ns2:user xmlns:ns1="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0" xmlns:ns2="http://docs.openstack.org/identity/api/v2.0" id="173354" username="${#TestSuite#u2SubUserName1}" ns1:password="${#TestSuite#u2SubUserPwd1}"/>'
testRunner.testCase.testSteps['POST - Update SubUser pwdCred parent-token u2 - xml'].setPropertyValue("Request", xml_req1)

//def xml_req2 = '<?xml version="1.0" encoding="UTF-8"?><passwordCredentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://docs.openstack.org/identity/api/v2.0" username="${#TestSuite#u2SubUserName1}" password="${#TestSuite#u2SubUserPwd1}"/>'
//testRunner.testCase.testSteps['POST - Add SubUser pwdCred parent-token u2 - xml'].setPropertyValue("Request", xml_req2)]]></script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Update SubUser pwdCred parent-token u2 - xml" disabled="true"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users/{userId}" methodName="Update user" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Update SubUser pwdCred parent-token u2 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;ns2:user xmlns:ns1="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0" xmlns:ns2="http://docs.openstack.org/identity/api/v2.0" id="173354" username="${#TestSuite#u2SubUserName1}" ns1:password="${#TestSuite#u2SubUserPwd1}"/></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" disabled="true"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${POST - Update subUser pwdCred parent-token u2 - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def credType1 = context.expand( '${#TestSuite#credType1}' )
def credType =  "\""+credType1+"\""
def apikeyCred = jsonObj."passwordCredentials"
log.info apikeyCred
assert apikeyCred != null
def pwd = jsonObj."passwordCredentials".password
log.info pwd
def name = jsonObj."passwordCredentials".username
def username = context.expand( '${#TestSuite#u2SubUserName1}' )
//def password = context.expand( '${#TestSuite#u1SubUserPassword1}' )
assert name == username
assert pwd == "Password0"</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@username]"><con:configuration><path>declare namespace ns2='http://docs.openstack.org/identity/api/v2.0';
//ns2:user[1]/@username</path><content>${#TestSuite#u2SubUserName1}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@id]"><con:configuration><path>declare namespace ns2='http://docs.openstack.org/identity/api/v2.0';
//ns2:user[1]/@id</path><content>${#TestSuite#u2SubUserId1}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="credential-type" value="${#TestSuite#credType2}"/>
  <con:entry key="userId" value="${#TestSuite#u2SubUserId1}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="wait 6" disabled="true"><con:settings/><con:config><delay>3000</delay></con:config></con:testStep><con:testStep type="groovy" name="store subuser1 u2 pwd" disabled="true"><con:settings/><con:config><script>
def pwd = context.expand( '${POST - Update SubUser pwdCred parent-token u2 - xml#Response#declare namespace ns2=\'http://docs.openstack.org/identity/api/v2.0\'; //ns2:passwordCredentials[1]/@password}' )
if (pwd.toString() != "")
{
	log.info pwd
testRunner.testCase.testSuite.setPropertyValue("u2SubUserPwd1", pwd)
}</script></con:config></con:testStep><con:testStep type="groovy" name="set xml req2" disabled="true"><con:settings/><con:config><script><![CDATA[def xml_req = '<?xml version="1.0" encoding="UTF-8"?><apiKeyCredentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://docs.openstack.org/identity/api/v2.0" username="${#TestSuite#u2SubUserName1}" apiKey="${#TestSuite#u2SubUserKey1}"/>'
testRunner.testCase.testSteps['POST - Add SubUser apiKeyCred auth-token u2 - xml'].setPropertyValue("Request", xml_req)

//def xml_req1 = '<?xml version="1.0" encoding="UTF-8"?><apiKeyCredentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://docs.openstack.org/identity/api/v2.0" username="${#TestSuite#u2SubUserName1}" apiKey="${#TestSuite#newkey}"/>'
//testRunner.testCase.testSteps['POST - Update SubUser apiKeyCred auth-token u2 - xml'].setPropertyValue("Request", xml_req1)

//def xml_req2 = '<?xml version="1.0" encoding="UTF-8"?><passwordCredentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://docs.openstack.org/identity/api/v2.0" username="${#TestSuite#u2SubUserName1}" password="${#TestSuite#u2SubUserPwd1}"/>'
//testRunner.testCase.testSteps['POST - Add SubUser pwdCred auth-token u2 - xml 501'].setPropertyValue("Request", xml_req2)

//def xml_req1 = '<?xml version="1.0" encoding="UTF-8"?><passwordCredentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://docs.openstack.org/identity/api/v2.0" username="${#TestSuite#u2SubUserName1}" password="${#TestSuite#u2SubUserPwd1}"/>'
//testRunner.testCase.testSteps['POST - Update SubUser pwdCred parent-token u2 - xml'].setPropertyValue("Request", xml_req1)

//def xml_req2 = '<?xml version="1.0" encoding="UTF-8"?><passwordCredentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://docs.openstack.org/identity/api/v2.0" username="${#TestSuite#u2SubUserName1}" password="${#TestSuite#u2SubUserPwd1}"/>'
//testRunner.testCase.testSteps['POST - Add SubUser pwdCred auth-token u2 - xml'].setPropertyValue("Request", xml_req2)]]></script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Add SubUser apiKeyCred auth-token u2 - xml" disabled="true"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" methodName="Add user Credential." xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Add SubUser apiKeyCred auth-token u2 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8"?>&lt;apiKeyCredentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://docs.openstack.org/identity/api/v2.0" username="${#TestSuite#u2SubUserName1}" apiKey="${#TestSuite#u2SubUserKey1}"/></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" disabled="true"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${POST - Add SubUser apiKeyCred auth-token u1 - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)

def apikeyCred = jsonObj."RAX-KSKEY:apiKeyCredentials"
def apikey = jsonObj."RAX-KSKEY:apiKeyCredentials".apiKey
log.info apikey
def name = jsonObj."RAX-KSKEY:apiKeyCredentials".username
def key = context.expand( '${#TestSuite#u1SubUserKey1}' )
log.info key
def username = context.expand( '${#TestSuite#u1SubUserName1}' )

assert apikeyCred != null
if (apikeyCred != null)
{
	assert apikey == key
	assert name == username
}

</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@username]"><con:configuration><path>declare namespace ns3='http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0';
//ns3:apiKeyCredentials[1]/@username</path><content>${#TestSuite#u2SubUserName1}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@apiKey]"><con:configuration><path>declare namespace ns3='http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0';
//ns3:apiKeyCredentials[1]/@apiKey</path><content>${#TestSuite#u2SubUserKey1}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#u2subUserId1}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="wait 7" disabled="true"><con:settings/><con:config><delay>3000</delay></con:config></con:testStep><con:testStep type="restrequest" name="GET - List subUser u2 2 - xml" disabled="true"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/users" methodName="Get a User by Name" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - List subUser u2 2 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" disabled="true"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${GET - List Subuser 2-1 - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def id = jsonObj."users".id
log.info id
def name = jsonObj."users".username
log.info name

assert id[0] == context.expand('${#TestSuite#userId2}')
assert name[0] == context.expand('${#TestSuite#username2}')

for (i=0; i&lt;id.size(); i++)
{
	log.info id[i]
	log.info name[i]
	assert id[i] != null
	assert name[i] != null
}
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1"><con:configuration><scriptText>def id = context.expand( '${GET - List subUser u2 2 - xml#Response#declare namespace ns2=\'http://docs.openstack.org/identity/api/v2.0\'; //ns2:users[1]/ns2:user[2]/@id}' )
def name = context.expand( '${GET - List subUser u2 2 - xml#Response#declare namespace ns2=\'http://docs.openstack.org/identity/api/v2.0\'; //ns2:users[1]/ns2:user[2]/@username}' )
def u2SubUserId1 = context.expand( '${#TestSuite#u2SubUserId1}' )
def u2SubUserName1 = context.expand( '${#TestSuite#u2SubUserName1}' )
assert id == u2SubUserId1
assert name == u2SubUserName1</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store u2 subuser name" disabled="true"><con:settings/><con:config><script>def newname = context.expand( '${POST - Update SubUser1 parent-token u2 restore - xml#Response#declare namespace ns2=\'http://docs.openstack.org/identity/api/v2.0\'; //ns2:user[1]/@username}' )
if (newname.toString() != "")
{
log.info newname
//def newname = context.expand( '${POST - Update SubUser1 parent-token u2 restore - xml#Response#declare namespace ns2=\'http://docs.openstack.org/identity/api/v2.0\'; //ns2:user[1]/@username}' )
testRunner.testCase.testSuite.setPropertyValue("u2SubUserName1", newname)
}</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - List Credentials own-token u2 - xml" disabled="true"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" methodName="List Credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - List Credentials own-token u2 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" disabled="true"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${GET - List Credentials auth-token - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def list = jsonObj."credentials"
log.info list.size()
def apikeyCred = jsonObj."credentials"."RAX-KSKEY:apiKeyCredentials"
def apikey = jsonObj."credentials"."RAX-KSKEY:apiKeyCredentials".apiKey
log.info apikey[0]
def name = jsonObj."credentials"."RAX-KSKEY:apiKeyCredentials".username
def pwdCred = jsonObj."credentials"."passwordCredentials"
def pwd = jsonObj."credentials"."passwordCredentials".password
def name2 = jsonObj."credentials"."passwordCredentials".username
def key = context.expand( '${#TestSuite#key}' )
def username = context.expand( '${#TestSuite#username}' )
def password = context.expand( '${#TestSuite#password}' )
if (apikeyCred != null)
{
	assert apikey[0] == key
	assert name[0] == username
}
if (pwdCred != null)
{
	assert pwd[0] == password
	assert name2[0] == username
}
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1"><con:configuration><scriptText>def key = context.expand( '${GET - List Credentials own-token u2 - xml#Response#declare namespace ns2=\'http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0\'; declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:credentials[1]/ns2:apiKeyCredentials[1]/@apiKey}' )
//def pwd = context.expand( '${GET - List Credentials auth-token - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:credentials[1]/ns1:passwordCredentials[1]/@password}' )
def name1 = context.expand( '${GET - List Credentials own-token u2 - xml#Response#declare namespace ns2=\'http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0\'; declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:credentials[1]/ns2:apiKeyCredentials[1]/@username}' )
//def name2 = context.expand( '${GET - List Credentials auth-token - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:credentials[1]/ns1:passwordCredentials[1]/@username}' )
def username = context.expand( '${#TestSuite#username2}' )
def apiKey = context.expand( '${#TestSuite#key2}' )
def password = context.expand( '${#TestSuite#password2}' )
assert key == apiKey
assert name1 == username
//assert name2 == username
//assert pwd == password</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SubUser Authentication" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="254ab9a3-932a-4000-b02b-54b1bec3792f"><con:settings/><con:testStep type="groovy" name="set json resquest 1"><con:settings/><con:config><script>def json_req = '{"auth":{"passwordCredentials":{"username":"${#TestSuite#u3SubUserName1}","password":"${#TestSuite#u3SubUserPwd1}"}}}'
//def json_req = '{"auth":{"passwordCredentials":{"username":"${#TestSuite#u1SubUserName1}","password":"${#TestSuite#u1SubUserPwd1}"}}}'
//set request
testRunner.testCase.testSteps["POST - Authenticate SubUser user-pwd u3 - json"].setPropertyValue("Request", json_req)
def json_req1 = '{"auth":{"RAX-KSKEY:apiKeyCredentials":{"username":"${#TestSuite#u3SubUserName1}","apiKey":"${#TestSuite#u3SubUserKey1}"}}}'

//set request
testRunner.testCase.testSteps["POST - Authenticate SubUser user-key u3 - json"].setPropertyValue("Request", json_req1)

//def json_req2 = '{"auth":{"passwordCredentials":{"username":"${#TestSuite#u2SubUserName1}","password":"${#TestSuite#u2SubUserPwd1}"}}}'
//set request
//testRunner.testCase.testSteps["POST - Authenticate SubUser user-pwd u2 - json"].setPropertyValue("Request", json_req2)


//def json_req2 = '{"passwordCredentials":{"username":"${#TestSuite#u2SubUserName1}","password":"${#TestSuite#u2SubUserPwd1}"}}'
//set request
//testRunner.testCase.testSteps["POST - Add SubUser pwdCred u2 - json"].setPropertyValue("Request", json_req2)

//def json_req3 =  '{ "RAX-KSKEY:apiKeyCredentials":{ "username":"${#TestSuite#u1SubUserName1}","apiKey":"${#TestSuite#newKey}" } }'
//set request
//testRunner.testCase.testSteps["POST - Update SubUser apiKeyCred auth-token u1 - json"].setPropertyValue("Request", json_req3)
</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Authenticate SubUser user-pwd u3 - json"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Authenticate SubUser user-pwd u3 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${POST - Authenticate SubUser user-pwd u3 - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def id = jsonObj."access"."token".id
log.info id
//store admin token
assert id != null || id != ""
def roleId = jsonObj."access"."user"."roles".id
log.info roleId[0]
def roleName = jsonObj."access"."user"."roles".name
log.info roleName[0]
def roleDesc = jsonObj."access"."user"."roles".description
log.info roleDesc[0]
//store admin role info
assert roleId[0] == "2"
assert roleDesc[0] == "Default Role."</scriptText></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token and other info subuser u3"><con:settings/><con:config><script>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${POST - Authenticate SubUser user-pwd u3 - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def access = jsonObj."access"
if (access != null)
{
def id = jsonObj."access"."token".id
log.info id
//store admin token
testRunner.testCase.testSuite.setPropertyValue("u3SubUserTokenId1", id)
def userId = jsonObj."access"."user".id
//store admin user id
log.info userId
//testRunner.testCase.testSuite.setPropertyValue("adminId", userId)
def roleId = jsonObj."access"."user"."roles".id
log.info roleId[0]
def roleName = jsonObj."access"."user"."roles".name
log.info roleName[0]
def roleDesc = jsonObj."access"."user"."roles".description
log.info roleDesc[0]
//store admin role info

testRunner.testCase.testSuite.setPropertyValue("defaultRoleId", roleId[0])
testRunner.testCase.testSuite.setPropertyValue("defaultRoleName", roleName[0])
testRunner.testCase.testSuite.setPropertyValue("defaultRoleDesc", roleDesc[0])
}</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Authenticate SubUser user-key u3 - json"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Authenticate SubUser user-key u3 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${POST - Authenticate SubUser user-key u3 - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def id = jsonObj."access"."token".id
log.info id
//store admin token
assert id != null || id != ""
def tokenId = context.expand( '${#TestSuite#u3SubUserTokenId1}' )
assert id == tokenId
def roleId = jsonObj."access"."user"."roles".id
log.info roleId[0]
def roleName = jsonObj."access"."user"."roles".name
log.info roleName[0]
def roleDesc = jsonObj."access"."user"."roles".description
log.info roleDesc[0]
//store admin role info
assert roleId[0] == "2"
assert roleDesc[0] == "Default Role."</scriptText></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="set json req1" disabled="true"><con:settings/><con:config><script>def json_req = '{"user": { "username": "${#TestSuite#u1SubUserName2}", "email": "${#TestSuite#u1SubUserEmail2}", "enabled": true} }'
//set request
testRunner.testCase.testSteps["POST - Add SubUser2 u1 - json"].setPropertyValue("Request", json_req)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Add SubUser2 u1 - json" disabled="true"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users" methodName="Add user" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Add SubUser2 u1 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"user": { "username": "${#TestSuite#u1SubUserName2}", "email": "${#TestSuite#u1SubUserEmail2}", "enabled": true} }</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store SubUser2 u1 info" disabled="true"><con:settings/><con:config><script>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${POST - Add SubUser2 u1 - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def userId = jsonObj."user".id
def pwd = jsonObj."user"."OS-KSADM:password"
log.info userId
testRunner.testCase.testSuite.setPropertyValue("u1SubUserId2", userId)
testRunner.testCase.testSuite.setPropertyValue("u1SubUserPassword2", pwd)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - List Subuser u1 - json" disabled="true"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/users" methodName="Get a User by Name" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - List Subuser u1 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${GET - List Subuser u1 - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def users = jsonObj."users"
def u1SubUserId1 = context.expand( '${#TestSuite#u1SubUserId1}' )
def u1SubUserName1 = context.expand( '${#TestSuite#u1SubUserName1}' )

if (users != null)
{
	def id = jsonObj."users".id
	log.info id[1]
	def name = jsonObj."users".username
	log.info name
	assert id[1] == u1SubUserId1
	assert name[1] == u1SubUserName1
	//context.testCase.testSuite.setPropertyValue("u1SubUserId1", id[1])
	//context.testCase.testSuite.setPropertyValue("u1SubUserName1", name[1])
}
else
{
	log.info "only one user"
} 
</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="set json req1 1" disabled="true"><con:settings/><con:config><script>def json_req = '{"user": { "username": "${#TestSuite#u1SubUserName2}", "email": "${#TestSuite#u1SubUserEmail2}", "enabled": true} }'
//set request
testRunner.testCase.testSteps["POST - Add SubUser2 u1 - json"].setPropertyValue("Request", json_req)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Authenticate SubUser2 user-pwd u1 - xml" disabled="true"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Authenticate SubUser2 user-pwd u1 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;passwordCredentials password="${#TestSuite#u1SubUserPassword2}" username="${#TestSuite#u1SubUserName2}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion" disabled="true"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${POST - Authenticate SubUser user-pwd u1 - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def id = jsonObj."access"."token".id
log.info id
//store admin token
assert id != null || id != ""
def roleId = jsonObj."access"."user"."roles".id
log.info roleId[0]
def roleName = jsonObj."access"."user"."roles".name
log.info roleName[0]
def roleDesc = jsonObj."access"."user"."roles".description
log.info roleDesc[0]
//store admin role info
assert roleId[0] == "2"
assert roleDesc[0] == "Default Role."</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [ns2:message]" disabled="true"><con:configuration><path>declare namespace ns2='http://docs.openstack.org/identity/api/v2.0';
//ns2:unauthorized[1]/ns2:message[1]/text()</path><content>Unable to authenticate user with credentials provided.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token and other info subuser2 u1" disabled="true"><con:settings/><con:config><script>def token = context.expand( '${POST - Authenticate SubUser2 user-pwd u1 - xml#Response#declare namespace ns2=\'http://docs.openstack.org/identity/api/v2.0\'; //ns2:access[1]/ns2:token[1]/@id}' )
def roleId = context.expand( '${POST - Authenticate SubUser2 user-pwd u1 - xml#Response#declare namespace ns2=\'http://docs.openstack.org/identity/api/v2.0\'; //ns2:access[1]/ns2:user[1]/ns2:roles[1]/ns2:role[1]/@id}' )
def roleName = context.expand( '${POST - Authenticate SubUser2 user-pwd u1 - xml#Response#declare namespace ns2=\'http://docs.openstack.org/identity/api/v2.0\'; //ns2:access[1]/ns2:user[1]/ns2:roles[1]/ns2:role[1]/@name}' )
def roleDesc = context.expand( '${POST - Authenticate SubUser2 user-pwd u1 - xml#Response#declare namespace ns2=\'http://docs.openstack.org/identity/api/v2.0\'; //ns2:access[1]/ns2:user[1]/ns2:roles[1]/ns2:role[1]/@description}' )
log.info token
testRunner.testCase.testSuite.setPropertyValue("u1SubUserTokenId2", token)
def defaultRoleId = context.expand( '${#TestSuite#defaultRoleId}' )
def defaultRoleName = context.expand( '${#TestSuite#defaultRoleName}' )
def defaultRoleDesc = context.expand( '${#TestSuite#defaultRoleDesc}' )

assert roleId == defaultRoleId
assert roleName == defaultRoleName
assert roleDesc == defaultRoleDesc</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Admin Group Operations" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="f4484ebe-6ee5-44da-9ade-bc6f4b437b8a"><con:settings/><con:testStep type="restrequest" name="GET - List Groups for a Admin User - json 404"><con:settings/><con:config service="RAX-KSGRP-admin" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" methodName="List Groups for a User" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - List Groups for a Admin User - json 404" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#adminId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - List Groups for a Cust-Admin - json"><con:settings/><con:config service="RAX-KSGRP-admin" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" methodName="List Groups for a User" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - List Groups for a Cust-Admin - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId3}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - List Groups for a Cust-user - json"><con:settings/><con:config service="RAX-KSGRP-admin" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" methodName="List Groups for a User" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - List Groups for a Cust-user - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#u3SubUserId1}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get Groups - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Get Groups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get Groups - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${GET - Get Groups - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def id = jsonObj."RAX-KSGRP:groups".id
log.info id
def name = jsonObj."RAX-KSGRP:groups".name
log.info name
def desc = jsonObj."RAX-KSGRP:groups".description
log.info desc
def loop = 0
if(id.size() > 20)
{
	loop = 20
}
else
{
	loop = id.size()	
}
if(id[0] != null)
{
	for(i=0; i&lt;loop; i++)
	{
		context.testCase.setPropertyValue("groupId"+i, id[i])
		context.testCase.setPropertyValue("groupName"+i, name[i])
		context.testCase.setPropertyValue("groupDesc"+i, desc[i])
	}
}</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get Groups by name - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Get Groups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get Groups by name - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${GET - Get Groups by name - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def id = jsonObj."RAX-KSGRP:group".id 
log.info id
def name = jsonObj."RAX-KSGRP:group".name
log.info name
def desc = jsonObj."RAX-KSGRP:group".description
log.info desc
assert id == context.expand('${#TestCase#groupId0}')
assert name == context.expand('${#TestCase#groupName0}')
assert desc == context.expand('${#TestCase#groupDesc0}')</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="name" value="${#TestCase#groupName0}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get Group w id - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Get Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get Group w id - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${GET - Get Group w id - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def id = jsonObj."RAX-KSGRP:group".id 
log.info id
def name = jsonObj."RAX-KSGRP:group".name
log.info name
def desc = jsonObj."RAX-KSGRP:group".description
log.info desc
assert id == context.expand('${#TestCase#groupId1}')
assert name == context.expand('${#TestCase#groupName1}')
assert desc == context.expand('${#TestCase#groupDesc1}')</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="groupId" value="${#TestCase#groupId1}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get Groups by name 2 - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Get Groups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get Groups by name 2 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes" disabled="true"><con:configuration><codes>200 || 404</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${GET - Get Groups by name 2 - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def group = jsonObj."RAX-KSGRP:group"
if(group != null)
{
	def id = jsonObj."RAX-KSGRP:group".id 
	log.info id
	def name = jsonObj."RAX-KSGRP:group".name
	log.info name
	def desc = jsonObj."RAX-KSGRP:group".description
	log.info desc
	//assert id == context.expand('${#TestCase#groupId}')
	assert name == context.expand('${#TestCase#name}')
	//assert desc == context.expand('${#TestCase#desc}')
	context.testCase.setPropertyValue("groupId", id)
	context.testCase.setPropertyValue("desc", desc)
}</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="name" value="${#TestCase#name}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="call delete"><con:settings/><con:config><script>
import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${GET - Get Groups by name 2 - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def group = jsonObj."RAX-KSGRP:group"
if(group != null)
{
	def id = jsonObj."RAX-KSGRP:group".id
	testRunner.testCase.setPropertyValue("idtodelete", id)
	testRunner.runTestStepByName("DEL - Delete Group 1 - json")
}
</script></con:config></con:testStep><con:testStep type="restrequest" name="DEL - Delete Group 1 - json" disabled="true"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Delete Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DEL - Delete Group 1 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="groupId" value="${#TestCase#idtodelete}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="set xml req"><con:settings/><con:config><script><![CDATA[def json_req = '<group  name="New Group" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0"><description>A new description</description></group>'
//set request
testRunner.testCase.testSteps["POST - Add a New Group - xml"].setPropertyValue("Request", json_req)

def json_req1 = '<group name="new jv" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0"><description>A new description</description></group>'
//set request
testRunner.testCase.testSteps["PUT - Update a Group - xml"].setPropertyValue("Request", json_req1)]]></script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Add a New Group - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Add a New Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Add a New Group - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>201</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="wait 10"><con:settings/><con:config><delay>3000</delay></con:config></con:testStep><con:testStep type="groovy" name="store new group"><con:settings/><con:config><script>def id = context.expand( '${POST - Add a New Group - xml#Response#declare namespace ns6=\'http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0\'; //ns6:group[1]/@id}' )
def name = context.expand( '${POST - Add a New Group - xml#Response#declare namespace ns6=\'http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0\'; //ns6:group[1]/@name}' )
def desc = context.expand( '${POST - Add a New Group - xml#Response#declare namespace ns6=\'http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0\'; //ns6:group[1]/ns6:description[1]}' )

if(id != null)
{
	testRunner.testCase.setPropertyValue("newGroupId2", id)
	testRunner.testCase.setPropertyValue("name2", name)
	testRunner.testCase.setPropertyValue("desc2", desc)
}</script></con:config></con:testStep><con:testStep type="restrequest" name="PUT - Add User to Group 2 - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Add User to Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - Add User to Group 2 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestCase#newGroupId2}"/>
  <con:entry key="userId" value="${#TestSuite#userId3}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="wait 11"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="restrequest" name="PUT - Add SubUser to Group 2 - xml 400"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Add User to Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - Add SubUser to Group 2 - xml 400" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestCase#newGroupId2}"/>
  <con:entry key="userId" value="${#TestSuite#u3SubUserId1}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get Users For Group 2 new - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users" methodName="Get Users For Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get Users For Group 2 new - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" disabled="true"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${GET - Get Users For Group 2 new - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def users = jsonObj."users"
def found = 0
if (users != null)
{
	def id = jsonObj."users".id
	def name = jsonObj."users".name
	for (i=0; i&lt;id.size(); i++)
	{
		if (id[i] == context.expand('${#TestSuite#userId2}'))
		{
			found = found+1
		}
		if (id[i] == context.expand('${#TestSuite#u2SubUserId1'))
		{
			found = found+1
		}
	}
	assert found == true
}
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>def name1 = context.expand( '${GET - Get Users For Group 2 new - xml#Response#declare namespace ns2=\'http://docs.openstack.org/identity/api/v2.0\'; //ns2:users[1]/ns2:user[@id="${#TestSuite#userId3}"]/@username}' )
def name2 = context.expand( '${GET - Get Users For Group 2 new - xml#Response#declare namespace ns2=\'http://docs.openstack.org/identity/api/v2.0\'; //ns2:users[1]/ns2:user[@id="${#TestSuite#u3SubUserId1}"]/@username}' )
log.info name1
log.info name2
def username = context.expand( '${#TestSuite#username3}' )
def subusername = context.expand( '${#TestSuite#u3SubUserName1}' )
log.info username
log.info subusername

assert name1 == username
assert name2 == subusername</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="groupId" value="${#TestCase#newGroupId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - Update a Group - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Update a Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - Update a Group - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;group name="new jv" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">&lt;description>A new description&lt;/description>&lt;/group></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@name]"><con:configuration><path>declare namespace ns6='http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0';
//ns6:group[1]/@name</path><content>new jv</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [ns6:description]"><con:configuration><path>declare namespace ns6='http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0';
//ns6:group[1]/ns6:description[1]/text()</path><content>A new description</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="groupId" value="${#TestCase#newGroupId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="wait 12"><con:settings/><con:config><delay>3000</delay></con:config></con:testStep><con:testStep type="restrequest" name="DEL - Delete new Group - xml 400"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Delete Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DEL - Delete new Group - xml 400" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [ns2:message]"><con:configuration><path>declare namespace ns2='http://docs.openstack.org/identity/api/v2.0';
//ns2:badRequest[1]/ns2:message[1]/text()</path><content>Cannot delete a group with users in it.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="groupId" value="${#TestCase#newGroupId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get Users For Group - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users" methodName="Get Users For Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get Users For Group - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="groupId" value="${#TestCase#newGroupId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DEL - Remove User From Group 2 new - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Remove User From Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DEL - Remove User From Group 2 new - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestCase#newGroupId2}"/>
  <con:entry key="userId" value="${#TestSuite#userId3}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="wait 13"><con:settings/><con:config><delay>8000</delay></con:config></con:testStep><con:testStep type="restrequest" name="DEL - Remove SubUser From Group 2 new - xml 400"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Remove User From Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DEL - Remove SubUser From Group 2 new - xml 400" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:badRequest[1]/ns1:message[1]/text()</path><content>Cannot remove Sub-Users from a Group, must removed their Parent User from the Group.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestCase#newGroupId2}"/>
  <con:entry key="userId" value="${#TestSuite#u3SubUserId1}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get Users For Group after delete - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users" methodName="Get Users For Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get Users For Group after delete - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="groupId" value="${#TestCase#newGroupId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DEL - Delete new Group - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Delete Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DEL - Delete new Group - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="groupId" value="${#TestCase#newGroupId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="wait 14"><con:settings/><con:config><delay>3000</delay></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get Users For Group - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users" methodName="Get Users For Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get Users For Group - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [ns2:itemNotFound] using RegEx"><con:configuration><path>declare namespace ns2='http://docs.openstack.org/identity/api/v2.0';
matches( //ns2:itemNotFound[1], 'itemNotFound' )</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="groupId" value="${#TestCase#groupId4}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - Add User to Group - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Add User to Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - Add User to Group - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestCase#groupId4}"/>
  <con:entry key="userId" value="${#TestSuite#userId3}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - List Groups for a Cust-Admin after add new group - json"><con:settings/><con:config service="RAX-KSGRP-admin" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" methodName="List Groups for a User" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - List Groups for a Cust-Admin after add new group - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId3}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="wait 15"><con:settings/><con:config><delay>3000</delay></con:config></con:testStep><con:testStep type="restrequest" name="PUT - Add SubUser to Group - xml 400"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Add User to Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - Add SubUser to Group - xml 400" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestCase#groupId4}"/>
  <con:entry key="userId" value="${#TestSuite#u3SubUserId1}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - List Groups for a Cust-user after add new group - json"><con:settings/><con:config service="RAX-KSGRP-admin" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" methodName="List Groups for a User" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - List Groups for a Cust-user after add new group - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#u3SubUserId1}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get Users For Group 4 after added - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users" methodName="Get Users For Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get Users For Group 4 after added - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>def name = context.expand( '${GET - Get Users For Group 4 after added - xml#Response#declare namespace ns2=\'http://docs.openstack.org/identity/api/v2.0\'; //ns2:users[1]/ns2:user[@id="${#TestSuite#userId}"]/@username}' )
log.info name
assert name.toString() == context.expand( '${#testSuite#username}' )</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="groupId" value="${#TestCase#groupId4}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DEL - Remove User From Group 4 - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Remove User From Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DEL - Remove User From Group 4 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestCase#groupId4}"/>
  <con:entry key="userId" value="${#TestSuite#userId3}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="wait 16"><con:settings/><con:config><delay>3000</delay></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get Users For Group 4 after delete - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users" methodName="Get Users For Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get Users For Group 4 after delete - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert (messageExchange.responseStatusCode == 200 || messageExchange.responseStatusCode == 404)</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>def name = context.expand( '${GET - Get Users For Group 4 after delete - xml#Response#declare namespace ns2=\'http://docs.openstack.org/identity/api/v2.0\'; //ns2:users[1]/ns2:user[@id="${#TestSuite#userId}"]/@username}' )
log.info name
def msg = context.expand( '${GET - Get Users For Group 4 after delete - xml#Response#declare namespace ns2=\'http://docs.openstack.org/identity/api/v2.0\'; //ns2:itemNotFound[1]/ns2:message[1]}' )
log.info msg
assert (name.toString() == "" || msg.contains("No users in group"))
</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="groupId" value="${#TestCase#groupId4}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - List Groups for a User - xml"><con:settings/><con:config service="RAX-KSGRP-admin" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" methodName="List Groups for a User" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - List Groups for a User - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId3}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - List Groups for a SubUser - xml"><con:settings/><con:config service="RAX-KSGRP-admin" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" methodName="List Groups for a User" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - List Groups for a SubUser - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#u3SubUserId1}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DEL - Delete Group - xml 404"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Delete Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DEL - Delete Group - xml 404" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" disabled="true"><con:configuration/></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="groupId" value="${#TestCase#newGroupId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - List Groups for a Cust-Admin after delete all group - xml"><con:settings/><con:config service="RAX-KSGRP-admin" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" methodName="List Groups for a User" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - List Groups for a Cust-Admin after delete all group - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@name]"><con:configuration><path>declare namespace ns6='http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0';
//ns6:groups[1]/ns6:group[1]/@name</path><content>Default</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [ns6:description]"><con:configuration><path>declare namespace ns6='http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0';
//ns6:groups[1]/ns6:group[1]/ns6:description[1]/text()</path><content>Default Limits</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId3}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - List Groups for a Cust-user after delete all group - xml"><con:settings/><con:config service="RAX-KSGRP-admin" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" methodName="List Groups for a User" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - List Groups for a Cust-user after delete all group - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@name]"><con:configuration><path>declare namespace ns6='http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0';
//ns6:groups[1]/ns6:group[1]/@name</path><content>Default</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [ns6:description]"><con:configuration><path>declare namespace ns6='http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0';
//ns6:groups[1]/ns6:group[1]/ns6:description[1]/text()</path><content>Default Limits</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#u3SubUserId1}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - Add User to Group - xml 1" disabled="true"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Add User to Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - Add User to Group - xml 1" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="groupId" value="13" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Copy of GET - List Groups for a SubUser - xml" disabled="true"><con:settings/><con:config service="RAX-KSGRP-admin" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" methodName="List Groups for a User" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of GET - List Groups for a SubUser - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="157779"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>newgroupId</con:name><con:value>743</con:value></con:property><con:property><con:name>desc</con:name><con:value>new desc</con:value></con:property><con:property><con:name>name</con:name><con:value>JV test group</con:value></con:property><con:property><con:name>groupId0</con:name><con:value>2</con:value></con:property><con:property><con:name>groupName0</con:name><con:value>Update Name</con:value></con:property><con:property><con:name>groupDesc0</con:name><con:value>A new description</con:value></con:property><con:property><con:name>groupId1</con:name><con:value>1611</con:value></con:property><con:property><con:name>groupName1</con:name><con:value>testGroup96578</con:value></con:property><con:property><con:name>groupDesc1</con:name><con:value>testGroup96578</con:value></con:property><con:property><con:name>groupId2</con:name><con:value>1614</con:value></con:property><con:property><con:name>groupName2</con:name><con:value>ATestGroup2</con:value></con:property><con:property><con:name>groupDesc2</con:name><con:value>ATestGroup2 description</con:value></con:property><con:property><con:name>groupId3</con:name><con:value>1616</con:value></con:property><con:property><con:name>groupName3</con:name><con:value>JUnit-28052012052534241</con:value></con:property><con:property><con:name>groupDesc3</con:name><con:value>JUnit-28052012052534241 Description</con:value></con:property><con:property><con:name>groupId4</con:name><con:value>1623</con:value></con:property><con:property><con:name>groupName4</con:name><con:value>JUnitGroup</con:value></con:property><con:property><con:name>groupDesc4</con:name><con:value>JUnitGroup Description</con:value></con:property><con:property><con:name>groupId5</con:name><con:value>1625</con:value></con:property><con:property><con:name>groupName5</con:name><con:value>JUnitTest29052012092233773</con:value></con:property><con:property><con:name>groupDesc5</con:name><con:value>JUnitTest29052012092233773 Description</con:value></con:property><con:property><con:name>groupId6</con:name><con:value>1626</con:value></con:property><con:property><con:name>groupName6</con:name><con:value>JUnitTest29052012092327033</con:value></con:property><con:property><con:name>groupDesc6</con:name><con:value>JUnitTest29052012092327033 Description</con:value></con:property><con:property><con:name>groupId7</con:name><con:value>1627</con:value></con:property><con:property><con:name>groupName7</con:name><con:value>JUnitTest29052012092442801</con:value></con:property><con:property><con:name>groupDesc7</con:name><con:value>JUnitTest29052012092442801 Description</con:value></con:property><con:property><con:name>groupId8</con:name><con:value>1594</con:value></con:property><con:property><con:name>groupName8</con:name><con:value>migTestGroup1</con:value></con:property><con:property><con:name>groupDesc8</con:name><con:value>Creating a new group testGroup1</con:value></con:property><con:property><con:name>groupId9</con:name><con:value>1615</con:value></con:property><con:property><con:name>groupName9</con:name><con:value>ATestGroup1</con:value></con:property><con:property><con:name>groupDesc9</con:name><con:value>ATestGroup1 description</con:value></con:property><con:property><con:name>groupId</con:name><con:value>1386</con:value></con:property><con:property><con:name>idtodelete</con:name><con:value/></con:property><con:property><con:name>newGroupId2</con:name><con:value>10089</con:value></con:property><con:property><con:name>name2</con:name><con:value>New Group</con:value></con:property><con:property><con:name>desc2</con:name><con:value>A new description</con:value></con:property><con:property><con:name>testGroupId</con:name><con:value>113</con:value></con:property><con:property><con:name>testGroupName</con:name><con:value>SOAPUI TEST</con:value></con:property><con:property><con:name>testGroupDesc</con:name><con:value>New description</con:value></con:property><con:property><con:name>groupId10</con:name><con:value>1619</con:value></con:property><con:property><con:name>groupName10</con:name><con:value>JUnit-28052012052328293</con:value></con:property><con:property><con:name>groupDesc10</con:name><con:value>JUnit-28052012052328293 Description</con:value></con:property><con:property><con:name>groupId11</con:name><con:value>1620</con:value></con:property><con:property><con:name>groupName11</con:name><con:value>JUnit-28052012052453327</con:value></con:property><con:property><con:name>groupDesc11</con:name><con:value>JUnit-28052012052453327 Description</con:value></con:property><con:property><con:name>groupId12</con:name><con:value>1624</con:value></con:property><con:property><con:name>groupName12</con:name><con:value>JUnitTest29052012092019328</con:value></con:property><con:property><con:name>groupDesc12</con:name><con:value>JUnitTest29052012092019328 Description</con:value></con:property><con:property><con:name>groupId13</con:name><con:value>89</con:value></con:property><con:property><con:name>groupName13</con:name><con:value>test$#!!</con:value></con:property><con:property><con:name>groupDesc13</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Creating a group name with more than 200 characters</con:value></con:property><con:property><con:name>groupId14</con:name><con:value>1597</con:value></con:property><con:property><con:name>groupName14</con:name><con:value>migTestGroup2</con:value></con:property><con:property><con:name>groupDesc14</con:name><con:value>Creating a new group testGroup2</con:value></con:property><con:property><con:name>groupId15</con:name><con:value>1618</con:value></con:property><con:property><con:name>groupName15</con:name><con:value>JUnit-Group</con:value></con:property><con:property><con:name>groupDesc15</con:name><con:value>JUnit-Group Description</con:value></con:property><con:property><con:name>groupId16</con:name><con:value>1628</con:value></con:property><con:property><con:name>groupName16</con:name><con:value>JUnitTest29052012093355684</con:value></con:property><con:property><con:name>groupDesc16</con:name><con:value>A Description of the group</con:value></con:property><con:property><con:name>groupId17</con:name><con:value>1604</con:value></con:property><con:property><con:name>groupName17</con:name><con:value>testGroup1237</con:value></con:property><con:property><con:name>groupDesc17</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">testGroups5680</con:value></con:property><con:property><con:name>groupId18</con:name><con:value>1601</con:value></con:property><con:property><con:name>groupName18</con:name><con:value>testGroup123</con:value></con:property><con:property><con:name>groupDesc18</con:name><con:value>testGroups</con:value></con:property><con:property><con:name>groupId19</con:name><con:value>1608</con:value></con:property><con:property><con:name>groupName19</con:name><con:value>testGroup9876</con:value></con:property><con:property><con:name>groupDesc19</con:name><con:value>testGroup9876</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Delete Users SubUsers" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="24686e1c-a0f1-467b-a1f3-aadc27288d5f"><con:settings/><con:testStep type="restrequest" name="DEL - Delete SubUser user u3 - json"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users/{userId}" methodName="Delete user" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DEL - Delete SubUser user u3 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#u3SubUserId1}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId3}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="wait 1"><con:settings/><con:config><delay>3000</delay></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get SubUser after delete u3 - json"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/users/{user_id}" methodName="Get a User by ID" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get SubUser after delete u3 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>404</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${GET - Get SubUser after delete u3 - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def u3SubUserId1 = context.expand( '${#TestSuite#u3SubUserId1}' )

def msg = jsonObj."itemNotFound".message
log.info msg
assert msg != null
def message = "User with id: '"+ u3SubUserId1 + "' was not found"
assert msg == message</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestSuite#u3SubUserId1}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DEL - Delete user u1 - json" disabled="true"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users/{userId}" methodName="Delete user" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DEL - Delete user u1 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokeId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get user after delete u1 - json" disabled="true"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/users/{user_id}" methodName="Get a User by ID" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get user after delete u1 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>404</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${GET - Get user after delete u1 - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def userId = context.expand( '${#TestSuite#userId}' )

def msg = jsonObj."itemNotFound".message
log.info msg
assert msg != null
def message = "User with id: '"+ userId + "' was not found."
assert msg == message</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestSuite#u1SubUserId1}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DEL - Delete SubUser user u2 - xml" disabled="true"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users/{userId}" methodName="Delete user" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DEL - Delete SubUser user u2 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#u2SubUserId1}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="wait 2" disabled="true"><con:settings/><con:config><delay>3000</delay></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get SubUser after delete u2 - xml" disabled="true"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/users/{user_id}" methodName="Get a User by ID" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get SubUser after delete u2 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>404</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [ns2:message]"><con:configuration><path>declare namespace ns2='http://docs.openstack.org/identity/api/v2.0';
//ns2:itemNotFound[1]/ns2:message[1]/text()</path><content>User with id: '${#TestSuite#u2SubUserId1}' was not found.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestSuite#u2SubUserId1}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DEL - Delete user u2 - xml" disabled="true"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users/{userId}" methodName="Delete user" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DEL - Delete user u2 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokeId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get user after delete u2 - xml" disabled="true"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/users/{user_id}" methodName="Get a User by ID" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get user after delete u2 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>404</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${GET - Get user after delete u2 - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def userId = context.expand( '${#TestSuite#userId2}' )

def msg = jsonObj."itemNotFound".message
log.info msg
assert msg != null
def message = "User with id: '"+ userId + "' was not found."
assert msg == message</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DEL - Delete SubUser2 u1 - xml" disabled="true"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users/{userId}" methodName="Delete user" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DEL - Delete SubUser2 u1 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>204</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#u1SubUserId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="wait 3" disabled="true"><con:settings/><con:config><delay>3000</delay></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get SubUser after delete u1 - xml" disabled="true"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/users/{user_id}" methodName="Get a User by ID" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get SubUser after delete u1 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>404</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" disabled="true"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${GET - Get SubUser after delete u1 - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def userId = context.expand( '${#TestSuite#u1SubUserId2}' )

def msg = jsonObj."itemNotFound".message
log.info msg
assert msg != null
def message = "User with id: '"+ userId + "' was not found."
assert msg == message</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [ns2:message]"><con:configuration><path>declare namespace ns2='http://docs.openstack.org/identity/api/v2.0';
//ns2:itemNotFound[1]/ns2:message[1]/text()</path><content>User with id: '${#TestSuite#u1SubUserId2}' was not found.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestSuite#u1SubUserId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties><con:property><con:name>auth-token</con:name><con:value>b75e95cb-a6a9-4f78-a4bc-3ccea3b3f2a2</con:value></con:property><con:property><con:name>adminId</con:name><con:value>173189</con:value></con:property><con:property><con:name>adminRoleId</con:name><con:value>1</con:value></con:property><con:property><con:name>adminRoleName</con:name><con:value>identity:admin</con:value></con:property><con:property><con:name>adminRoleDesc</con:name><con:value>A Role that allows a user access to keystone Service methods</con:value></con:property><con:property><con:name>roleId</con:name><con:value>6</con:value></con:property><con:property><con:name>roleName</con:name><con:value>compute:default</con:value></con:property><con:property><con:name>roleDesc</con:name><con:value>A Role that allows a user access to keystone Service methods</con:value></con:property><con:property><con:name>defaultRoleId</con:name><con:value>2</con:value></con:property><con:property><con:name>defaultRoleName</con:name><con:value>identity:default</con:value></con:property><con:property><con:name>defaultRoleDesc</con:name><con:value>A Role that allows a user access to keystone Service methods</con:value></con:property><con:property><con:name>credType1</con:name><con:value>RAX-KSKEY:apiKeyCredentials</con:value></con:property><con:property><con:name>credType2</con:name><con:value>KEYSTONE:passwordCredentials</con:value></con:property><con:property><con:name>username</con:name><con:value>carlostest1</con:value></con:property><con:property><con:name>password</con:name><con:value>Password0</con:value></con:property><con:property><con:name>key</con:name><con:value>0f97f489c848438090250d50c7e1ea88</con:value></con:property><con:property><con:name>mossoId</con:name><con:value>5820075</con:value></con:property><con:property><con:name>nastId</con:name><con:value>StagingUS_36842ef1-1fd0-45b5-8056-fa16145ac37d</con:value></con:property><con:property><con:name>tokenId</con:name><con:value>4bc0eece17aa427ab5f9ce5c686e5610</con:value></con:property><con:property><con:name>userId</con:name><con:value>175015</con:value></con:property><con:property><con:name>u1SubUserId1</con:name><con:value>185954</con:value></con:property><con:property><con:name>u1SubUserName1</con:name><con:value>ga1subuser1</con:value></con:property><con:property><con:name>u1SubUserPassword1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">hCtn1zG9</con:value></con:property><con:property><con:name>u1SubUserPwd1</con:name><con:value>Password0</con:value></con:property><con:property><con:name>u1SubUserKey1</con:name><con:value>newKey1234567890</con:value></con:property><con:property><con:name>u1SubUserTokenId1</con:name><con:value>1c2f3b8d-eaea-4625-b4d0-0796dee6074f</con:value></con:property><con:property><con:name>u1SubUserId2</con:name><con:value>185950</con:value></con:property><con:property><con:name>u1SubUserName2</con:name><con:value>ga1subuser2</con:value></con:property><con:property><con:name>u1SubUserPassword2</con:name><con:value/></con:property><con:property><con:name>u1SubUserPwd2</con:name><con:value>Password2</con:value></con:property><con:property><con:name>u1SubUserKey2</con:name><con:value>u2testkey1234567890</con:value></con:property><con:property><con:name>u1SubUserTokenId2</con:name><con:value/></con:property><con:property><con:name>username2</con:name><con:value>carlostest2</con:value></con:property><con:property><con:name>password2</con:name><con:value>Password58</con:value></con:property><con:property><con:name>key2</con:name><con:value>0f97f489c848438090250d50c7e1ea88</con:value></con:property><con:property><con:name>mossoId2</con:name><con:value>5820093</con:value></con:property><con:property><con:name>nastId2</con:name><con:value>StagingUS_0418d8a5-d454-4a57-b6df-ba501933bd80</con:value></con:property><con:property><con:name>userId2</con:name><con:value>175016</con:value></con:property><con:property><con:name>tokenId2</con:name><con:value>59a244c39c094f5e904efc6fca732999</con:value></con:property><con:property><con:name>u2SubUserEmail1</con:name><con:value>auth.test@example.org</con:value></con:property><con:property><con:name>u2SubUserId1</con:name><con:value>185956</con:value></con:property><con:property><con:name>u2SubUserNewName</con:name><con:value>ga2SubUser1</con:value></con:property><con:property><con:name>u2SubUserName1</con:name><con:value>ga2SubUser1</con:value></con:property><con:property><con:name>u2SubUserPwd1</con:name><con:value>Password0</con:value></con:property><con:property><con:name>u2SubUserKey1</con:name><con:value>u2subkey1234567890</con:value></con:property><con:property><con:name>u2SubUserTokenId1</con:name><con:value>b7987023-a99b-4d45-9cae-fa31a4c3697d</con:value></con:property><con:property><con:name>u2SubUserKey1update</con:name><con:value>0f97f489c848438090250d50c7e1ea99</con:value></con:property><con:property><con:name>u2SubUserPassword1</con:name><con:value>QXB33aCD</con:value></con:property><con:property><con:name>invalidToken</con:name><con:value>0123456789</con:value></con:property><con:property><con:name>username3</con:name><con:value>carlostest3</con:value></con:property><con:property><con:name>nastId3</con:name><con:value>StagingUS_ea26e7d6-7f9a-40f0-add8-c84f346eb2df</con:value></con:property><con:property><con:name>mossoId3</con:name><con:value>5820095</con:value></con:property><con:property><con:name>password3</con:name><con:value>Password1</con:value></con:property><con:property><con:name>key3</con:name><con:value>0f97f489c848438090250d50c7e1ea88</con:value></con:property><con:property><con:name>userId3</con:name><con:value>175017</con:value></con:property><con:property><con:name>tokenId3</con:name><con:value>44f7479ae7634b419d2b9604a111e77d</con:value></con:property><con:property><con:name>u3SubUserName1</con:name><con:value>jv3SubUser1</con:value></con:property><con:property><con:name>u3SubUserPwd1</con:name><con:value>Password0</con:value></con:property><con:property><con:name>u3SubUserEmail1</con:name><con:value>test@rackspace.com</con:value></con:property><con:property><con:name>u3SubUserId1</con:name><con:value>10020435</con:value></con:property><con:property><con:name>u3SubUserTokenId1</con:name><con:value>bd35130ecf6a4624b1552ac118db2bdb</con:value></con:property><con:property><con:name>u3SubUserKey1</con:name><con:value>u3subkey1234567890</con:value></con:property><con:property><con:name>username4</con:name><con:value/></con:property><con:property><con:name>nastId4</con:name><con:value>StagingUS_fba7063c-4469-4857-856a-2931906cf0a6</con:value></con:property><con:property><con:name>mossoId4</con:name><con:value/></con:property><con:property><con:name>password4</con:name><con:value>Password4</con:value></con:property><con:property><con:name>key4</con:name><con:value>82d228a756b4bea9877331433c0fb408</con:value></con:property><con:property><con:name>userId4</con:name><con:value/></con:property><con:property><con:name>tokenId4</con:name><con:value/></con:property><con:property><con:name>newKey</con:name><con:value>newKey1234567890</con:value></con:property><con:property><con:name>idtodelete</con:name><con:value>174895</con:value></con:property><con:property><con:name>adminKey</con:name><con:value>0f97f489c848438090250d50c7e1ea88</con:value></con:property><con:property><con:name>u1SubUserEmail1</con:name><con:value>test@rackspace.com</con:value></con:property><con:property><con:name>u1SubUserEmail2</con:name><con:value>test@rackspace.com</con:value></con:property><con:property><con:name>question</con:name><con:value>What is your pet name?</con:value></con:property><con:property><con:name>answer</con:name><con:value>Tom</con:value></con:property><con:property><con:name>newAddedId1</con:name><con:value>185955</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="Functional - new"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Namespaces - B-18218" searchProperties="true" id="182a6280-0053-4163-80f9-50aec545c0da" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="GET - List Extensions - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/extensions" methodName="List Extensions" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - List Extensions - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains"><con:configuration><token>&lt;extensions</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [extension]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/common/api/v1.0';
//ns1:extensions[1]/ns1:extension[1]</path><content><![CDATA[<extension name="Rackspace API Key Authentication Service Extension" namespace="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0" alias="RAX-KSKEY" updated="2011-08-14T13:25:27-06:00" xmlns="http://docs.openstack.org/common/api/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <description>Rackspace extension to OpenStack Identity v2.0 API enabling API Key authentication.</description>
  <atom:link rel="describedby" type="application/xhtml+xml" href="http://docs.rackspace.com/auth/api/v2.0/auth-client-devguide/content/QuickStart-000.html"/>
  <atom:link rel="describedby" type="application/xml" href="http://docs.rackspacecloud.com/auth/api/v2.0/RAX-KSKEY/xsd/RAX-KSKEY-credentials.xsd"/>
</extension>]]></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - List Extensions - json"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/extensions" methodName="List Extensions" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - List Extensions - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" disabled="true"><con:configuration><token>&lt;extensions</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${GET - List Extensions - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def listAlias = ['RAX-KSKEY','RAX-KSGRP','RAX-KSQA', 'RAX-GRPADM','OS-KSADM']
def namespaces = ['http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0','http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0','http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0','http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0','http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0']
def names = ['Rackspace API Key Authentication Service Extension','Rackspace Keystone Group Extensions','Rackspace Keystone Secret Question and Answer','Rackspace Keystone Group Admin Extension','OpenStack KSADM Extension']
def alias = jsonObj."extensions".alias
def getnames = jsonObj."extensions".name
def getnamespaces = jsonObj."extensions".namespace
for (i=0; i&lt;alias.size(); i++)
{
	assert alias[i] != null
	assert alias[i] == listAlias[i]
	assert getnames[i] == names[i]
	assert getnamespaces[i] == namespaces[i]
}

def links = jsonObj."extensions".links
log.info links.size()

for (i=0; i&lt;links.size(); i++)
{
	log.info links[i]
	for (link in links[i]) 
	{
		log.info link
		for (e in link)
		{
			//log.info e.key
			//log.info e.value
			if (e.value.toString().equals("null"))
			{
				log.info e.key
				assert false 
				//break
			}
		}
	}

}

log.info getnamespaces
for (e in getnamespaces)
{
	if(e.toString().equals("null"))
	{
		assert false
	}
}</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="User Admin Email - B-18224" searchProperties="true" id="4dcf6b3a-ac08-4a58-bf62-568d03e374c7" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="set json requests"><con:settings/><con:config><script>def jsonReq = '{"auth":{"passwordCredentials":{"username":"${#Project#auth-user}","password":"${#Project#auth-pass}"}}}'

//set request
testRunner.testCase.testSteps["POST - Authenticate Service Admin - json"].setPropertyValue("Request", jsonReq)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Authenticate Service Admin - json"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Authenticate Service Admin - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"auth":{"passwordCredentials":{"username":"${#Project#auth-user}","password":"${#Project#auth-pass}"}}}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${POST - Authenticate Service Admin - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def id = jsonObj."access"."token".id
log.info id
//store admin token
assert id != null || id != ""
def roleId = jsonObj."access"."user"."roles".id
log.info roleId[0]
def roleName = jsonObj."access"."user"."roles".name
log.info roleName[0]
def roleDesc = jsonObj."access"."user"."roles".description
log.info roleDesc[0]
//store admin role info
assert roleId[0] == "1"
assert roleDesc[0] == "Admin Role."</scriptText></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token and other info"><con:settings/><con:config><script>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${POST - Authenticate Service Admin - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def id = jsonObj."access"."token".id
log.info id
//store admin token
testRunner.testCase.testSuite.setPropertyValue("auth-token", id)
def userId = jsonObj."access"."user".id
//store admin user id
log.info userId
testRunner.testCase.testSuite.setPropertyValue("adminId", userId)
def roleId = jsonObj."access"."user"."roles".id
log.info roleId[0]
def roleName = jsonObj."access"."user"."roles".name
log.info roleName[0]
def roleDesc = jsonObj."access"."user"."roles".description
log.info roleDesc[0]
//store admin role info
testRunner.testCase.testSuite.setPropertyValue("adminRoleId", roleId[0])
testRunner.testCase.testSuite.setPropertyValue("adminRoleName", roleName[0])
testRunner.testCase.testSuite.setPropertyValue("adminRoleDesc", roleDesc[0])
</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Authenticate password 3 - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Authenticate password 3 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;passwordCredentials password="${#TestSuite#password3}" username="${#TestSuite#username3}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion" disabled="true"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${POST - Authenticate user-key 2 - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def id = jsonObj."access"."token".id
log.info id
//store admin token
assert id != null || id != ""
def roleId = jsonObj."access"."user"."roles".id
log.info roleId[0]
def roleName = jsonObj."access"."user"."roles".name
log.info roleName[0]
def roleDesc = jsonObj."access"."user"."roles".description
log.info roleDesc[0]
//store admin role info
//assert roleId[0] == "1"
//assert roleDesc[0] == "Admin Role."
def name = jsonObj."access"."user".name
log.info name
def username = context.expand( '${#TestSuite#username2}' )
assert name == username </scriptText></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="check service catalog name and type" disabled="true"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${POST - Authenticate user-key 2 - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def serviceName = jsonObj."access"."serviceCatalog".name
log.info serviceName
def serviceType = jsonObj."access"."serviceCatalog".type
log.info serviceType
log.info serviceName.size()
for (i=0; i&lt;serviceName.size(); i++)
{
	log.info serviceName[i]
	log.info serviceType[i]
	assert serviceName[i] != null
	//assert serviceType[i] != null
}
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token and other info 3"><con:settings/><con:config><script>def token = context.expand( '${POST - Authenticate password 3 - xml#Response#declare namespace ns2=\'http://docs.openstack.org/identity/api/v2.0\'; //ns2:access[1]/ns2:token[1]/@id}' )
def id = context.expand( '${POST - Authenticate password 3 - xml#Response#declare namespace ns2=\'http://docs.openstack.org/identity/api/v2.0\'; //ns2:access[1]/ns2:user[1]/@id}' )
testRunner.testCase.testSuite.setPropertyValue("userId3", id)
testRunner.testCase.testSuite.setPropertyValue("tokenId3", token)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - List User w id u3 - json"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/users/{user_id}" methodName="Get a User by ID" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - List User w id u3 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${GET - List User w id u3 - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def username = jsonObj."user".username
def userId = jsonObj."user".id
def getemail = jsonObj."user".email
def id = context.expand( '${#TestSuite#userId3}' )
def name = context.expand( '${#TestSuite#username3}' )
def email = context.expand( '${#TestSuite#email3}' )
assert username == name
assert userId == id
//assert getemail == email</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestSuite#u1SubUserName1}"/>
  <con:entry key="user_id" value="${#TestSuite#userId3}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Prefix rax;dns - B-B-20936" searchProperties="true" id="60a7ade8-ddc8-4099-8d0a-299e4b545443"><con:settings/><con:testStep type="restrequest" name="POST - Authenticate password 3 - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Authenticate password 3 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;passwordCredentials password="${#TestSuite#password3}" username="${#TestSuite#username3}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion" disabled="true"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${POST - Authenticate user-key 2 - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def id = jsonObj."access"."token".id
log.info id
//store admin token
assert id != null || id != ""
def roleId = jsonObj."access"."user"."roles".id
log.info roleId[0]
def roleName = jsonObj."access"."user"."roles".name
log.info roleName[0]
def roleDesc = jsonObj."access"."user"."roles".description
log.info roleDesc[0]
//store admin role info
//assert roleId[0] == "1"
//assert roleDesc[0] == "Admin Role."
def name = jsonObj."access"."user".name
log.info name
def username = context.expand( '${#TestSuite#username2}' )
assert name == username </scriptText></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="check service catalog name and type" disabled="true"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${POST - Authenticate user-key 2 - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def serviceName = jsonObj."access"."serviceCatalog".name
log.info serviceName
def serviceType = jsonObj."access"."serviceCatalog".type
log.info serviceType
log.info serviceName.size()
for (i=0; i&lt;serviceName.size(); i++)
{
	log.info serviceName[i]
	log.info serviceType[i]
	assert serviceName[i] != null
	//assert serviceType[i] != null
}
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@type]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:serviceCatalog[1]/ns1:service[@name="cloudDNS"]/@type</path><content>rax:dns</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@type]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:serviceCatalog[1]/ns1:service[@name="cloudFilesCDN"]/@type</path><content>rax:object-cdn</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@name]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:serviceCatalog[1]/ns1:service[@name="cloudDatabases"]/@name</path><content>cloudDatabases</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@name]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:serviceCatalog[1]/ns1:service[@name="cloudLoadBalancers"]/@name</path><content>cloudLoadBalancers</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@name]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:serviceCatalog[1]/ns1:service[@name="cloudMonitoring"]/@name</path><content>cloudMonitoring</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token and other info 3"><con:settings/><con:config><script>def token = context.expand( '${POST - Authenticate password 3 - xml#Response#declare namespace ns2=\'http://docs.openstack.org/identity/api/v2.0\'; //ns2:access[1]/ns2:token[1]/@id}' )
def id = context.expand( '${POST - Authenticate password 3 - xml#Response#declare namespace ns2=\'http://docs.openstack.org/identity/api/v2.0\'; //ns2:access[1]/ns2:user[1]/@id}' )
testRunner.testCase.testSuite.setPropertyValue("userId3", id)
testRunner.testCase.testSuite.setPropertyValue("tokenId3", token)</script></con:config></con:testStep><con:testStep type="groovy" name="set json requests"><con:settings/><con:config><script>def jsonReq = '{"auth":{"passwordCredentials":{"username":"${#TestSuite#username3}","password":"${#TestSuite#password3}"}}}'

//set request
testRunner.testCase.testSteps["POST - Authenticate password 3 - json"].setPropertyValue("Request", jsonReq)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Authenticate password 3 - json"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Authenticate password 3 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"auth":{"passwordCredentials":{"username":"${#TestSuite#username3}","password":"${#TestSuite#password3}"}}}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${POST - Authenticate password 3 - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def id = jsonObj."access"."token".id
log.info id
//store admin token
assert id != null || id != ""
def roleId = jsonObj."access"."user"."roles".id
log.info roleId[0]
def roleName = jsonObj."access"."user"."roles".name
log.info roleName[0]
def roleDesc = jsonObj."access"."user"."roles".description
log.info roleDesc[0]
//store admin role info
assert roleId[0] == "3"
assert roleDesc[0] == "User Admin Role."
//verify rax extenstion
def services = jsonObj."access".serviceCatalog
log.info services.size()
for (i=0; i&lt;services.size(); i++)
{
	log.info services[i]."name"
	if (services[i]."name" == "cloudDNS")
	{
		assert (services[i]."type" == "rax:dns")
	}
	if (services[i]."name" == "cloudFilesCDN")
	{
		assert (services[i]."type" == "rax:object-cdn")
	}
	if (services[i]."name" == "cloudMonitoring")
	{
		assert (services[i]."type" == "rax:monitor")
	}
	if (services[i]."name" == "cloudDatabases")
	{
		assert (services[i]."type" == "rax:database")
	}
	if (services[i]."name" == "cloudLoadBalancers")
	{
		assert (services[i]."type" == "rax:load-balancer")
	}
}</scriptText></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Token Enhancement" searchProperties="true" id="34baf917-5e7a-436d-9c66-4041f02e7b64" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="set json requests"><con:settings/><con:config><script>def jsonReq = '{"auth":{"passwordCredentials":{"username":"${#Project#auth-user}","password":"${#Project#auth-pass}"}}}'

//set request
testRunner.testCase.testSteps["POST - Authenticate Service Admin - json"].setPropertyValue("Request", jsonReq)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Authenticate Service Admin - json"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Authenticate Service Admin - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"auth":{"passwordCredentials":{"username":"${#Project#auth-user}","password":"${#Project#auth-pass}"}}}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${POST - Authenticate Service Admin - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def id = jsonObj."access"."token".id
log.info id
//store admin token
assert id != null || id != ""
def roleId = jsonObj."access"."user"."roles".id
log.info roleId[0]
def roleName = jsonObj."access"."user"."roles".name
log.info roleName[0]
def roleDesc = jsonObj."access"."user"."roles".description
log.info roleDesc[0]
//store admin role info
assert roleId[0] == "1"
assert roleDesc[0] == "Admin Role."</scriptText></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token and other info"><con:settings/><con:config><script>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${POST - Authenticate Service Admin - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def id = jsonObj."access"."token".id
log.info id
//store admin token
testRunner.testCase.testSuite.setPropertyValue("auth-token", id)
def userId = jsonObj."access"."user".id
//store admin user id
log.info userId
testRunner.testCase.testSuite.setPropertyValue("adminId", userId)
def roleId = jsonObj."access"."user"."roles".id
log.info roleId[0]
def roleName = jsonObj."access"."user"."roles".name
log.info roleName[0]
def roleDesc = jsonObj."access"."user"."roles".description
log.info roleDesc[0]
//store admin role info
testRunner.testCase.testSuite.setPropertyValue("adminRoleId", roleId[0])
testRunner.testCase.testSuite.setPropertyValue("adminRoleName", roleName[0])
testRunner.testCase.testSuite.setPropertyValue("adminRoleDesc", roleDesc[0])
</script></con:config></con:testStep><con:testStep type="groovy" name="set json requests 1"><con:settings/><con:config><script>def jsonReq = '{"auth":{"passwordCredentials":{"username":"${#TestSuite#username}","password":"${#TestSuite#password}"}}}'

//set request
testRunner.testCase.testSteps["POST - Authenticate password - json"].setPropertyValue("Request", jsonReq)

def jsonReq1 = '{"auth":{"RAX-KSKEY:apiKeyCredentials":{"username":"${#TestSuite#username}","apiKey":"${#TestSuite#key}"}}}'

//set request
testRunner.testCase.testSteps["POST - Authenticate user-key 1 - json"].setPropertyValue("Request", jsonReq1)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Authenticate password - json"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Authenticate password - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"auth":{"passwordCredentials":{"username":"${#TestSuite#username}","password":"${#TestSuite#password}"}}}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${POST - Authenticate password - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def id = jsonObj."access"."token".id
log.info id
//store admin token
assert id != null || id != ""
def roleId = jsonObj."access"."user"."roles".id
log.info roleId[0]
def roleName = jsonObj."access"."user"."roles".name
log.info roleName[0]
def roleDesc = jsonObj."access"."user"."roles".description
log.info roleDesc[0]
//store admin role info
//assert roleId[0] == "1"
//assert roleDesc[0] == "Admin Role."
def name = jsonObj."access"."user".name
log.info name
def username = context.expand( '${#TestSuite#username}' )
assert name == username </scriptText></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="check service catalog name and type"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${POST - Authenticate password - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def serviceName = jsonObj."access"."serviceCatalog".name
log.info serviceName
def serviceType = jsonObj."access"."serviceCatalog".type
log.info serviceType
log.info serviceName.size()
for (i=0; i&lt;serviceName.size(); i++)
{
	log.info serviceName[i]
	log.info serviceType[i]
	assert serviceName[i] != null
	//assert serviceType[i] != null
}
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token and other info 1"><con:settings/><con:config><script>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${POST - Authenticate password - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def id = jsonObj."access"."token".id
log.info id
//store admin token
testRunner.testCase.testSuite.setPropertyValue("tokenId", id)
def userId = jsonObj."access"."user".id
//store admin user id
log.info userId
testRunner.testCase.testSuite.setPropertyValue("userId", userId)
def roleId = jsonObj."access"."user"."roles".id
log.info roleId[0]
def roleName = jsonObj."access"."user"."roles".name
log.info roleName[0]
def roleDesc = jsonObj."access"."user"."roles".description
log.info roleDesc[0]
//store admin role info
testRunner.testCase.testSuite.setPropertyValue("roleId", roleId[0])
testRunner.testCase.testSuite.setPropertyValue("roleName", roleName[0])
testRunner.testCase.testSuite.setPropertyValue("roleDesc", roleDesc[0])</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Authenticate user-key 1 - json"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Authenticate user-key 1 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"auth":{"RAX-KSKEY:apiKeyCredentials":{"username":"${#TestSuite#username}","apiKey":"${#TestSuite#key}"}}}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${POST - Authenticate user-key 1 - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def id = jsonObj."access"."token".id
log.info id
//store admin token
assert id != null || id != ""
def roleId = jsonObj."access"."user"."roles".id
log.info roleId[0]
def roleName = jsonObj."access"."user"."roles".name
log.info roleName[0]
def roleDesc = jsonObj."access"."user"."roles".description
log.info roleDesc[0]
//store admin role info
//assert roleId[0] == "1"
//assert roleDesc[0] == "Admin Role."
def name = jsonObj."access"."user".name
log.info name
def username = context.expand( '${#TestSuite#username}' )
assert name == username </scriptText></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="check service catalog name and type"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${POST - Authenticate user-key 1 - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def serviceName = jsonObj."access"."serviceCatalog".name
log.info serviceName
def serviceType = jsonObj."access"."serviceCatalog".type
log.info serviceType
log.info serviceName.size()
for (i=0; i&lt;serviceName.size(); i++)
{
	log.info serviceName[i]
	log.info serviceType[i]
	assert serviceName[i] != null
	//assert serviceType[i] != null
}
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="compare token"><con:settings/><con:config><script>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp2 = context.expand( '${POST - Authenticate user-key 1 - json#Response}' )
def jsonObj2 = new JsonSlurper().parseText(jsonResp2)
def id = jsonObj2."access"."token".id
log.info id
def tokenId = context.expand( '${#TestSuite#tokenId}' )
assert id == tokenId
//store admin token
//testRunner.testCase.testSuite.setPropertyValue("tokenId2", id)
def userId = jsonObj2."access"."user".id
//store admin user id
log.info userId
//testRunner.testCase.testSuite.setPropertyValue("userId2", userId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Authenticate password 2 - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Authenticate password 2 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;passwordCredentials password="${#TestSuite#password2}" username="${#TestSuite#username2}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion" disabled="true"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${POST - Authenticate user-key 2 - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def id = jsonObj."access"."token".id
log.info id
//store admin token
assert id != null || id != ""
def roleId = jsonObj."access"."user"."roles".id
log.info roleId[0]
def roleName = jsonObj."access"."user"."roles".name
log.info roleName[0]
def roleDesc = jsonObj."access"."user"."roles".description
log.info roleDesc[0]
//store admin role info
//assert roleId[0] == "1"
//assert roleDesc[0] == "Admin Role."
def name = jsonObj."access"."user".name
log.info name
def username = context.expand( '${#TestSuite#username2}' )
assert name == username </scriptText></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="check service catalog name and type" disabled="true"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${POST - Authenticate user-key 2 - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def serviceName = jsonObj."access"."serviceCatalog".name
log.info serviceName
def serviceType = jsonObj."access"."serviceCatalog".type
log.info serviceType
log.info serviceName.size()
for (i=0; i&lt;serviceName.size(); i++)
{
	log.info serviceName[i]
	log.info serviceType[i]
	assert serviceName[i] != null
	//assert serviceType[i] != null
}
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token and other info 2"><con:settings/><con:config><script>def token = context.expand( '${POST - Authenticate password 2 - xml#Response#declare namespace ns2=\'http://docs.openstack.org/identity/api/v2.0\'; //ns2:access[1]/ns2:token[1]/@id}' )
def id = context.expand( '${POST - Authenticate password 2 - xml#Response#declare namespace ns2=\'http://docs.openstack.org/identity/api/v2.0\'; //ns2:access[1]/ns2:user[1]/@id}' )
testRunner.testCase.testSuite.setPropertyValue("userId2", id)
testRunner.testCase.testSuite.setPropertyValue("tokenId2", token)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Authenticate user-key 2 - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Authenticate user-key 2 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;apiKeyCredentials apiKey="${#TestSuite#key2}" username="${#TestSuite#username2}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion" disabled="true"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${POST - Authenticate user-key 2 - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def id = jsonObj."access"."token".id
log.info id
//store admin token
assert id != null || id != ""
def roleId = jsonObj."access"."user"."roles".id
log.info roleId[0]
def roleName = jsonObj."access"."user"."roles".name
log.info roleName[0]
def roleDesc = jsonObj."access"."user"."roles".description
log.info roleDesc[0]
//store admin role info
//assert roleId[0] == "1"
//assert roleDesc[0] == "Admin Role."
def name = jsonObj."access"."user".name
log.info name
def username = context.expand( '${#TestSuite#username2}' )
assert name == username </scriptText></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="check service catalog name and type" disabled="true"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${POST - Authenticate user-key 2 - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def serviceName = jsonObj."access"."serviceCatalog".name
log.info serviceName
def serviceType = jsonObj."access"."serviceCatalog".type
log.info serviceType
log.info serviceName.size()
for (i=0; i&lt;serviceName.size(); i++)
{
	log.info serviceName[i]
	log.info serviceType[i]
	assert serviceName[i] != null
	//assert serviceType[i] != null
}
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="compare token 2"><con:settings/><con:config><script>def tokenId = context.expand( '${POST - Authenticate user-key 2 - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
def tokenId2 = context.expand( '${#TestSuite#tokenId2}' )
assert tokenId2 == tokenId</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - Validate Token - json"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens/{tokenId}" methodName="Validate Token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Validate Token - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Validate Token - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens/{tokenId}" methodName="Validate Token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Validate Token - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Authenticate password 1 wrong password - xml 401"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Authenticate password 1 wrong password - xml 401" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;passwordCredentials password="${#TestSuite#password2" username="${#TestSuite#username}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion" disabled="true"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${POST - Authenticate user-key 2 - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def id = jsonObj."access"."token".id
log.info id
//store admin token
assert id != null || id != ""
def roleId = jsonObj."access"."user"."roles".id
log.info roleId[0]
def roleName = jsonObj."access"."user"."roles".name
log.info roleName[0]
def roleDesc = jsonObj."access"."user"."roles".description
log.info roleDesc[0]
//store admin role info
//assert roleId[0] == "1"
//assert roleDesc[0] == "Admin Role."
def name = jsonObj."access"."user".name
log.info name
def username = context.expand( '${#TestSuite#username2}' )
assert name == username </scriptText></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="check service catalog name and type" disabled="true"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${POST - Authenticate user-key 2 - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def serviceName = jsonObj."access"."serviceCatalog".name
log.info serviceName
def serviceType = jsonObj."access"."serviceCatalog".type
log.info serviceType
log.info serviceName.size()
for (i=0; i&lt;serviceName.size(); i++)
{
	log.info serviceName[i]
	log.info serviceType[i]
	assert serviceName[i] != null
	//assert serviceType[i] != null
}
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Auth Ext update B-22418 &amp; B-22692" searchProperties="true" id="ef4c498b-f21d-4efd-bf36-e95eb0933530"><con:settings/><con:testStep type="restrequest" name="GET - listExtension - xml"><con:settings/><con:config service="identity-admin" methodName="List Extensions" resourcePath="/${#Project#path}/extensions" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listExtension - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listExtension - json"><con:settings/><con:config service="identity-admin" methodName="List Extensions" resourcePath="/${#Project#path}/extensions" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listExtension - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains"><con:configuration><token>"alias":"RAX-KSKEY"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains"><con:configuration><token>"alias":"RAX-KSGRP"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${GET - listExtension - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def listAlias = ['RAX-KSKEY','RAX-KSGRP','RAX-KSQA', 'RAX-GRPADM','OS-KSADM']
def namespaces = ['http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0','http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0','http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0','http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0','http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0']
def names = ['Rackspace API Key Authentication Service Extension','Rackspace Keystone Group Extensions','Rackspace Keystone Secret Question and Answer','Rackspace Keystone Group Admin Extension','OpenStack KSADM Extension']
def alias = jsonObj."extensions".alias
def getnames = jsonObj."extensions".name
def getnamespaces = jsonObj."extensions".namespace
for (i=0; i&lt;alias.size(); i++)
{
	assert alias[i] != null
	assert alias[i] == listAlias[i]
	assert getnames[i] == names[i]
	assert getnamespaces[i] == namespaces[i]
}

def links = jsonObj."extensions".links
log.info links.size()

for (i=0; i&lt;links.size(); i++)
{
	log.info links[i]
	for (link in links[i]) 
	{
		log.info link
		for (e in link)
		{
			//log.info e.key
			//log.info e.value
			if (e.value.toString().equals("null"))
			{
				log.info e.key
				assert false 
				//break
			}
		}
	}

}
</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script"><con:settings/><con:config><script>def extAlias = context.expand( '${GET - listExtension - xml#Response#declare namespace ns3=\'http://docs.openstack.org/common/api/v1.0\'; //ns3:extensions[1]/ns3:extension[1]/@alias}' )
log.info "extAlias: " + extAlias

if (extAlias == "" | extAlias == null)
{
	assert false;	
}
testRunner.testCase.testSuite.setPropertyValue("extAlias", extAlias)
</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - extension - xml"><con:settings/><con:config service="identity-admin" methodName="Get Extension Details" resourcePath="/${#Project#path}/extensions/{alias}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - extension - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestSuite#extAlias}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="alias" value="${#TestSuite#extAlias}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - extension - json"><con:settings/><con:config service="identity-admin" methodName="Get Extension Details" resourcePath="/${#Project#path}/extensions/{alias}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - extension - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestSuite#extAlias}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains"><con:configuration><token>"alias":"${#TestSuite#extAlias}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="alias" value="${#TestSuite#extAlias}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - extension - badAlias 404 - xml"><con:settings/><con:config service="identity-admin" methodName="Get Extension Details" resourcePath="/${#Project#path}/extensions/{alias}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - extension - badAlias 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="alias" value="${#TestCase#badAlias}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - extension - badAlias 404 - json"><con:settings/><con:config service="identity-admin" methodName="Get Extension Details" resourcePath="/${#Project#path}/extensions/{alias}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - extension - badAlias 404 - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="alias" value="${#TestCase#badAlias}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>badAlias</con:name><con:value>RAX-KSGRPADM</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:properties><con:property><con:name>auth-token</con:name><con:value>6dcae8bc-0043-4922-b62b-4e46772a937d</con:value></con:property><con:property><con:name>adminId</con:name><con:value>153345</con:value></con:property><con:property><con:name>adminKey</con:name><con:value>0f97f489c848438090250d50c7e1ea88</con:value></con:property><con:property><con:name>adminRoleId</con:name><con:value>1</con:value></con:property><con:property><con:name>adminRoleName</con:name><con:value>identity:admin</con:value></con:property><con:property><con:name>adminRoleDesc</con:name><con:value>Admin Role.</con:value></con:property><con:property><con:name>roleId</con:name><con:value>3</con:value></con:property><con:property><con:name>roleName</con:name><con:value>identity:user-admin</con:value></con:property><con:property><con:name>roleDesc</con:name><con:value>User Admin Role.</con:value></con:property><con:property><con:name>defaultRoleId</con:name><con:value>2</con:value></con:property><con:property><con:name>defaultRoleName</con:name><con:value>identity:default</con:value></con:property><con:property><con:name>defaultRoleDesc</con:name><con:value>Default Role.</con:value></con:property><con:property><con:name>credType1</con:name><con:value>RAX-KSKEY:apiKeyCredentials</con:value></con:property><con:property><con:name>credType2</con:name><con:value>KEYSTONE:passwordCredentials</con:value></con:property><con:property><con:name>username</con:name><con:value>carlostest1</con:value></con:property><con:property><con:name>password</con:name><con:value>Password57</con:value></con:property><con:property><con:name>key</con:name><con:value>0f97f489c848438090250d50c7e1ea88</con:value></con:property><con:property><con:name>tokenId</con:name><con:value>1a20251d-6c01-492d-8f71-82399911e050</con:value></con:property><con:property><con:name>userId</con:name><con:value>175015</con:value></con:property><con:property><con:name>nastId</con:name><con:value>StagingUS_36842ef1-1fd0-45b5-8056-fa16145ac37d</con:value></con:property><con:property><con:name>mossoId</con:name><con:value>5820075</con:value></con:property><con:property><con:name>u1SubUserId1</con:name><con:value>185954</con:value></con:property><con:property><con:name>u1SubUserName1</con:name><con:value>ga1subuser1</con:value></con:property><con:property><con:name>u1SubUserPassword1</con:name><con:value>hCtn1zG9</con:value></con:property><con:property><con:name>u1SubUserPwd1</con:name><con:value>Password0</con:value></con:property><con:property><con:name>u1SubUserEmail1</con:name><con:value>test@rackspace.com</con:value></con:property><con:property><con:name>u1SubUserKey1</con:name><con:value>newKey1234567890</con:value></con:property><con:property><con:name>u1SubUserTokenId1</con:name><con:value>1c2f3b8d-eaea-4625-b4d0-0796dee6074f</con:value></con:property><con:property><con:name>u1SubUserId2</con:name><con:value>185950</con:value></con:property><con:property><con:name>u1SubUserName2</con:name><con:value>ga1subuser2</con:value></con:property><con:property><con:name>u1SubUserPassword2</con:name><con:value/></con:property><con:property><con:name>u1SubUserPwd2</con:name><con:value>Password2</con:value></con:property><con:property><con:name>u1SubUserEmail2</con:name><con:value>test@rackspace.com</con:value></con:property><con:property><con:name>u1SubUserKey2</con:name><con:value>u2testkey1234567890</con:value></con:property><con:property><con:name>u1SubUserTokenId2</con:name><con:value/></con:property><con:property><con:name>username2</con:name><con:value>carlostest2</con:value></con:property><con:property><con:name>password2</con:name><con:value>Pass1234</con:value></con:property><con:property><con:name>key2</con:name><con:value>0f97f489c848438090250d50c7e1ea88</con:value></con:property><con:property><con:name>tokenId2</con:name><con:value>c293f996-f2c3-44f6-b6ff-f13d408666d2</con:value></con:property><con:property><con:name>userId2</con:name><con:value>175016</con:value></con:property><con:property><con:name>nastId2</con:name><con:value>StagingUS_0418d8a5-d454-4a57-b6df-ba501933bd80</con:value></con:property><con:property><con:name>mossoId2</con:name><con:value>5820093</con:value></con:property><con:property><con:name>u2SubUserEmail1</con:name><con:value>auth.test@example.org</con:value></con:property><con:property><con:name>u2SubUserId1</con:name><con:value>185956</con:value></con:property><con:property><con:name>u2SubUserNewName</con:name><con:value>ga2SubUser1</con:value></con:property><con:property><con:name>u2SubUserName1</con:name><con:value>ga2SubUser1</con:value></con:property><con:property><con:name>u2SubUserPwd1</con:name><con:value>Password0</con:value></con:property><con:property><con:name>u2SubUserKey1</con:name><con:value>u2subkey1234567890</con:value></con:property><con:property><con:name>u2SubUserTokenId1</con:name><con:value>b7987023-a99b-4d45-9cae-fa31a4c3697d</con:value></con:property><con:property><con:name>u2SubUserKey1update</con:name><con:value>0f97f489c848438090250d50c7e1ea99</con:value></con:property><con:property><con:name>u2SubUserPassword1</con:name><con:value>QXB33aCD</con:value></con:property><con:property><con:name>invalidToken</con:name><con:value>0123456789</con:value></con:property><con:property><con:name>username3</con:name><con:value>carlostest3</con:value></con:property><con:property><con:name>nastId3</con:name><con:value>StagingUS_ea26e7d6-7f9a-40f0-add8-c84f346eb2df</con:value></con:property><con:property><con:name>mossoId3</con:name><con:value>5820095</con:value></con:property><con:property><con:name>password3</con:name><con:value>Password1</con:value></con:property><con:property><con:name>key3</con:name><con:value>0f97f489c848438090250d50c7e1ea88</con:value></con:property><con:property><con:name>userId3</con:name><con:value>175017</con:value></con:property><con:property><con:name>tokenId3</con:name><con:value>dea62f1c-9047-49bf-8e0f-f2b61b61561c</con:value></con:property><con:property><con:name>username4</con:name><con:value/></con:property><con:property><con:name>nastId4</con:name><con:value>StagingUS_fba7063c-4469-4857-856a-2931906cf0a6</con:value></con:property><con:property><con:name>mossoId4</con:name><con:value/></con:property><con:property><con:name>password4</con:name><con:value>Password4</con:value></con:property><con:property><con:name>key4</con:name><con:value>82d228a756b4bea9877331433c0fb408</con:value></con:property><con:property><con:name>userId4</con:name><con:value/></con:property><con:property><con:name>tokenId4</con:name><con:value/></con:property><con:property><con:name>newKey</con:name><con:value>newKey1234567890</con:value></con:property><con:property><con:name>idtodelete</con:name><con:value>174895</con:value></con:property><con:property><con:name>question</con:name><con:value>What is your pet name?</con:value></con:property><con:property><con:name>answer</con:name><con:value>Tom</con:value></con:property><con:property><con:name>newAddedId1</con:name><con:value>185955</con:value></con:property><con:property><con:name>email</con:name><con:value/></con:property><con:property><con:name>email2</con:name><con:value/></con:property><con:property><con:name>email3</con:name><con:value>test@rackspace.com</con:value></con:property><con:property><con:name>extAlias</con:name><con:value>RAX-KSKEY</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:requirements/><con:properties><con:property><con:name>Endpoint</con:name><con:value>http://localhost:8080</con:value></con:property><con:property><con:name>path</con:name><con:value>idm/cloud/v2.0</con:value></con:property><con:property><con:name>usStagingEndpoint</con:name><con:value>https://auth.staging.us.ccp.rackspace.net</con:value></con:property><con:property><con:name>ukStagingEndpoint</con:name><con:value>https://auth.staging.ord1.uk.ccp.rackspace.net</con:value></con:property><con:property><con:name>usProdEndpoint</con:name><con:value>https://auth.api.rackspacecloud.com</con:value></con:property><con:property><con:name>ukProdEndpoint</con:name><con:value/></con:property><con:property><con:name>devEndpoint</con:name><con:value>http://auth-n02.dev.us.ccp.rackspace.net</con:value></con:property><con:property><con:name>badpassword</con:name><con:value>badpassword</con:value></con:property><con:property><con:name>auth-user</con:name><con:value>auth</con:value></con:property><con:property><con:name>auth-pass</con:name><con:value>Auth1234</con:value></con:property><con:property><con:name>auth-token</con:name><con:value>e08c5001-0289-4ad0-a33a-c37178a5db97</con:value></con:property><con:property><con:name>adminId</con:name><con:value>173189</con:value></con:property><con:property><con:name>adminKey</con:name><con:value>0f97f489c848438090250d50c7e1ea88</con:value></con:property><con:property><con:name>adminRoleId</con:name><con:value>1</con:value></con:property><con:property><con:name>adminRoleName</con:name><con:value>identity:admin</con:value></con:property><con:property><con:name>adminRoleDesc</con:name><con:value>Admin Role.</con:value></con:property><con:property><con:name>roleId</con:name><con:value>3</con:value></con:property><con:property><con:name>roleName</con:name><con:value>identity:user-admin</con:value></con:property><con:property><con:name>roleDesc</con:name><con:value>User Admin Role.</con:value></con:property><con:property><con:name>defaultRoleId</con:name><con:value>2</con:value></con:property><con:property><con:name>defaultRoleName</con:name><con:value>identity:default</con:value></con:property><con:property><con:name>defaultRoleDesc</con:name><con:value>Default Role.</con:value></con:property><con:property><con:name>credType1</con:name><con:value>RAX-KSKEY:apiKeyCredentials</con:value></con:property><con:property><con:name>credType2</con:name><con:value>KEYSTONE:passwordCredentials</con:value></con:property><con:property><con:name>username</con:name><con:value>jvtest1</con:value></con:property><con:property><con:name>password</con:name><con:value>Password1</con:value></con:property><con:property><con:name>key</con:name><con:value>dd069008c4395dd584410194b112feb8</con:value></con:property><con:property><con:name>tokenId</con:name><con:value>eb61ced5-b296-40f1-a744-79cf6d7f6b9b</con:value></con:property><con:property><con:name>userId</con:name><con:value>174241</con:value></con:property><con:property><con:name>nastId</con:name><con:value>StagingUS_d261d24b-6028-4fdb-a2eb-c101122e9b76</con:value></con:property><con:property><con:name>mossoId</con:name><con:value>5819431</con:value></con:property><con:property><con:name>u1SubUserId1</con:name><con:value>175086</con:value></con:property><con:property><con:name>u1SubUserName1</con:name><con:value>jv1subuser1</con:value></con:property><con:property><con:name>u1SubUserPassword1</con:name><con:value>V1lGb37R</con:value></con:property><con:property><con:name>u1SubUserPwd1</con:name><con:value>Password0</con:value></con:property><con:property><con:name>u1SubUserEmail1</con:name><con:value/></con:property><con:property><con:name>u1SubUserKey1</con:name><con:value>newKey1234567890</con:value></con:property><con:property><con:name>u1SubUserTokenId1</con:name><con:value>3d45e59a-bd5a-4426-aa69-32af42277a9e</con:value></con:property><con:property><con:name>u1SubUserId2</con:name><con:value>175085</con:value></con:property><con:property><con:name>u1SubUserName2</con:name><con:value>jv1subuser2</con:value></con:property><con:property><con:name>u1SubUserPassword2</con:name><con:value/></con:property><con:property><con:name>u1SubUserPwd2</con:name><con:value>Password2</con:value></con:property><con:property><con:name>u1SubUserEmail2</con:name><con:value>test@rackspace.com</con:value></con:property><con:property><con:name>u1SubUserKey2</con:name><con:value>u2testkey1234567890</con:value></con:property><con:property><con:name>u1SubUserTokenId2</con:name><con:value/></con:property><con:property><con:name>username2</con:name><con:value>jvtest2</con:value></con:property><con:property><con:name>password2</con:name><con:value>Password2</con:value></con:property><con:property><con:name>key2</con:name><con:value>e2089400847ab2152a4aacf93a716d23</con:value></con:property><con:property><con:name>tokenId2</con:name><con:value>22ca3afd-114a-4919-86dc-bdc23b91d8ce</con:value></con:property><con:property><con:name>userId2</con:name><con:value>174242</con:value></con:property><con:property><con:name>nastId2</con:name><con:value>StagingUS_09fb3396-fa44-4ab0-8382-88ebfbd0f10b</con:value></con:property><con:property><con:name>mossoId2</con:name><con:value>5819432</con:value></con:property><con:property><con:name>u2SubUserEmail1</con:name><con:value>auth.test@example.org</con:value></con:property><con:property><con:name>u2SubUserId1</con:name><con:value>175088</con:value></con:property><con:property><con:name>u2SubUserNewName</con:name><con:value>jv2SubUser1</con:value></con:property><con:property><con:name>u2SubUserName1</con:name><con:value>jv2SubUser1</con:value></con:property><con:property><con:name>u2SubUserPwd1</con:name><con:value>Password0</con:value></con:property><con:property><con:name>u2SubUserKey1</con:name><con:value>u2subkey1234567890</con:value></con:property><con:property><con:name>u2SubUserTokenId1</con:name><con:value>0cf7e521-4396-4f0d-8e05-432aa6381a1b</con:value></con:property><con:property><con:name>u2SubUserKey1update</con:name><con:value>0f97f489c848438090250d50c7e1ea99</con:value></con:property><con:property><con:name>u2SubUserPassword1</con:name><con:value>P3VSS9lv</con:value></con:property><con:property><con:name>invalidToken</con:name><con:value>0123456789</con:value></con:property><con:property><con:name>username3</con:name><con:value>jvtest3</con:value></con:property><con:property><con:name>nastId3</con:name><con:value>StagingUS_17b1beff-663e-41c1-8335-408fc44b3198</con:value></con:property><con:property><con:name>mossoId3</con:name><con:value>5819433</con:value></con:property><con:property><con:name>password3</con:name><con:value>Password3</con:value></con:property><con:property><con:name>key3</con:name><con:value>0f97f489c848438090250d50c7e1ea88</con:value></con:property><con:property><con:name>userId3</con:name><con:value>174243</con:value></con:property><con:property><con:name>tokenId3</con:name><con:value>eca4ce4e-22fb-49ec-bd9f-ae7b2c05656b</con:value></con:property><con:property><con:name>username4</con:name><con:value>jvtest4</con:value></con:property><con:property><con:name>nastId4</con:name><con:value>StagingUS_fba7063c-4469-4857-856a-2931906cf0a6</con:value></con:property><con:property><con:name>mossoId4</con:name><con:value>5819434</con:value></con:property><con:property><con:name>password4</con:name><con:value>Password4</con:value></con:property><con:property><con:name>key4</con:name><con:value>f243125617cda0e7d8adc6575d2ae8f8</con:value></con:property><con:property><con:name>userId4</con:name><con:value/></con:property><con:property><con:name>tokenId4</con:name><con:value/></con:property><con:property><con:name>newKey</con:name><con:value>newKey1234567890</con:value></con:property><con:property><con:name>idtodelete</con:name><con:value>174895</con:value></con:property><con:property><con:name>question</con:name><con:value>What is your favorite color?</con:value></con:property><con:property><con:name>answer</con:name><con:value/></con:property><con:property><con:name>newAddedId1</con:name><con:value>175087</con:value></con:property></con:properties><con:wssContainer/><con:databaseConnectionContainer/><con:reporting><con:xmlTemplates/><con:parameters/></con:reporting><con:sensitiveInformation/></con:soapui-project>