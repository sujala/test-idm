<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project name="Auth2.0US" resourceRoot="" soapui-version="3.6.1" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.TestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Global Properties" value=""/>
  <con:entry key="TestSuite" value="&lt;all>"/>
  <con:entry key="Report to Generate" value=""/>
  <con:entry key="Password" value=""/>
  <con:entry key="soapui-setings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Save Project" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Export JUnit Results" value="false"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Project Properties" value="EndPointJson=http://mylocalhost"/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Export All" value="true"/>
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="TestCase" value="&lt;all>"/>
  <con:entry key="Print Report" value="false"/>
  <con:entry key="Username" value=""/>
  <con:entry key="Root Folder" value=""/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="Endpoint" value=""/>
</xml-fragment>]]></con:setting></con:settings><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="identity-admin" type="rest" basePath="" definitionUrl="file:/home/jorge/projects/keystone/keystone/content/admin/auth2.0.wadl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/home/jorge/projects/keystone/keystone/content/admin/auth2.0.wadl"><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/admin/auth2.0.wadl</con:url><con:content><![CDATA[<!--*******************************************************-->
<!--Import Common XML Entities-->
<!---->
<!--You can resolve the entites with xmllint-->
<!---->
<!--xmllint -noent identity-admin.wadl-->
<!--*******************************************************-->
<!--A collection of common faults, these are pretty much expected
         in every request.-->
<!--Faults on GET-->
<!--Faults on POST/PUT-->
<application xsi:schemaLocation="http://docs.openstack.org/identity/api/v2.0 ../common/xsd/api.xsd   http://docs.openstack.org/common/api/v1.0 ../common/xsd/api-common.xsd   http://wadl.dev.java.net/2009/02 http://www.w3.org/Submission/wadl/wadl.xsd   " xmlns="http://wadl.dev.java.net/2009/02" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:capi="http://docs.openstack.org/common/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <grammars>
    <include href="../common/xsd/api.xsd"/>
    <include href="../common/xsd/api-common.xsd"/>
  </grammars>
  <!--*******************************************************-->
  <!--All Resoruces-->
  <!--*******************************************************-->
  <!--We should use SSL in production-->
  <resources base="http://localhost:5001">
    <resource id="version" path="v2.0">
      <method href="#getVersionInfo"/>
      <resource id="extensions" path="extensions">
        <method href="#listExtensions"/>
        <resource id="extension" path="{alias}">
          <param name="alias" style="template" type="xsd:string"/>
          <method href="#getExtension"/>
        </resource>
      </resource>
      <resource id="tokens" path="tokens">
        <method href="#authenticate"/>
        <resource id="tokenById" path="{tokenId}">
          <param name="X-Auth-Token" style="header" type="xsd:string" required="true">
            <doc>You need a valid admin token for access.</doc>
          </param>
          <param name="tokenId" style="template" type="xsd:string" required="true"/>
          <param name="belongsTo" style="query" type="xsd:string" required="false"/>
          <method href="#validateToken"/>
          <method href="#checkToken"/>
          <resource id="endpointsForToken" path="endpoints">
            <method href="#listEndpointsForToken"/>
          </resource>
        </resource>
      </resource>
      <resource id="users" path="users">
        <param name="X-Auth-Token" style="header" type="xsd:string" required="true">
          <doc>You need a valid admin token for access.</doc>
        </param>
        <method href="#getUserByName"/>
        <resource id="userid" path="{user_id}">
          <param name="user_id" style="template" type="xsd:string" required="true"/>
          <method href="#getUserById"/>
          <resource id="userRoles" path="roles">
            <method href="#listUserGlobalRoles"/>
          </resource>
        </resource>
      </resource>
      <resource id="tenants" path="tenants">
        <param name="X-Auth-Token" style="header" type="xsd:string" required="true">
          <doc>
            <p xmlns="http://www.w3.org/1999/xhtml">You need a valid admin token for access.</p>
          </doc>
        </param>
        <method href="#listTenants"/>
        <method href="#getTenantByName"/>
        <resource id="tenantById" path="{tenantId}">
          <param name="tenantId" style="template" type="xsd:string" required="true"/>
          <method href="#getTenantById"/>
          <resource id="usersForTenant" path="users">
            <resource id="getTenantUser" path="{user_id}">
              <param name="user_id" style="template" type="xsd:string" required="true"/>
              <resource id="userRolesForTenant" path="roles">
                <method href="#listRolesForUserOnTenant"/>
              </resource>
            </resource>
          </resource>
        </resource>
      </resource>
    </resource>
  </resources>
  <!--*******************************************************-->
  <!--Resource Types-->
  <!--*******************************************************-->
  <resource_type id="VersionDetails">
    <method href="#getVersionInfo"/>
  </resource_type>
  <resource_type id="ExtensionList">
    <doc xml:lang="EN" title="Extension List">
      <p xmlns="http://www.w3.org/1999/xhtml">A list of supported extensions.</p>
    </doc>
    <method href="#listExtensions"/>
  </resource_type>
  <!--*******************************************************-->
  <!--All Methods-->
  <!--*******************************************************-->
  <!--Version-->
  <method name="GET" id="getVersionInfo">
    <doc xml:lang="EN" title="Version Details">
      <p xmlns="http://www.w3.org/1999/xhtml">Returns detailed information about this specific version of the API.</p>
    </doc>
    <response status="200 203">
      <representation mediaType="application/xml" element="capi:version">
        <param name="location" style="plain" type="xsd:anyURI" required="true" path="/capi:version/atom:link[@rel='self']/@href">
          <link resource_type="#VersionDetails" rel="self"/>
        </param>
      </representation>
      <representation mediaType="application/json"/>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <!--Extensions-->
  <method name="GET" id="listExtensions">
    <doc xml:lang="EN" title="List Extensions">
      <p xmlns="http://www.w3.org/1999/xhtml">Lists supported extensions.</p>
    </doc>
    <response status="200 203">
      <representation mediaType="application/xml" element="capi:extensions">
        <param name="next" style="plain" type="xsd:anyURI" path="/capi:extensions/atom:link[@rel='next']/@href">
          <link resource_type="#ExtensionList" rel="next"/>
        </param>
        <param name="previous" style="plain" type="xsd:anyURI" path="/capi:extensions/atom:link[@rel='previous']/@href">
          <link resource_type="#ExtensionList" rel="previous"/>
        </param>
      </representation>
      <representation mediaType="application/json"/>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getExtension">
    <doc xml:lang="EN" title="Get Extension Details">
      <p xmlns="http://www.w3.org/1999/xhtml">Gets details about a specific extension.</p>
    </doc>
    <response status="200 203">
      <representation mediaType="application/xml" element="capi:extension"/>
      <representation mediaType="application/json"/>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <!--Token Operations-->
  <method name="POST" id="authenticate">
    <doc xml:lang="EN" title="Authenticate for Service API">
      <p class="shortdesc" xmlns="http://www.w3.org/1999/xhtml">Authenticate to generate a token.</p>
      <p xmlns="http://www.w3.org/1999/xhtml">This call will return a token if successful. Each ReST request against other services (or other
	      calls on Keystone such as the GET /tenants call)
	      requires the inclusion of a specific authorization token HTTP x-header, defined as X-Auth-Token.
	      Clients obtain
	      this token, along with the URL to other service APIs, by first authenticating against the
	      Keystone Service and supplying valid credentials.</p>
      <p xmlns="http://www.w3.org/1999/xhtml">Client authentication is provided via a ReST interface using the POST method,
	      with v2.0/tokens supplied as the path. A payload of credentials must be included
	      in the body.</p>
      <p xmlns="http://www.w3.org/1999/xhtml">The Keystone Service is a ReSTful web service. It is the entry point to all service APIs.
	      To access the Keystone Service, you must know URL of the Keystone service.</p>
      <examples title="Auth Request" xmlns="http://docs.rackspace.com/api">
        <example href="../common/samples/auth_credentials.xml" language="xml"/>
        <example href="../common/samples/auth_credentials.json" language="javascript"/>
      </examples>
      <examples title="Auth Response" xmlns="http://docs.rackspace.com/api">
        <example href="../common/samples/auth.xml" language="xml"/>
        <example href="../common/samples/auth.json" language="javascript"/>
      </examples>
    </doc>
    <request>
      <representation mediaType="application/xml" element="identity:auth"/>
      <representation mediaType="application/json"/>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:access"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:userDisabled"/>
      <representation mediaType="application/json"/>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="validateToken">
    <doc xml:lang="EN" title="Validate Token">
      <p class="shortdesc" xmlns="http://www.w3.org/1999/xhtml">Check that a token is valid and that it belongs to a supplied tenant
                and return the permissions relevant to a particular client.</p>
      <p xmlns="http://www.w3.org/1999/xhtml">
        Valid tokens will exist in the
        <code>/tokens/{tokenId}</code>
        path and invalid
                tokens will not.  In other words, a user should expect an
                itemNotFound (
        <code>404</code>
        ) fault for an
                invalid token.
      </p>
      <examples title="Validate Token Response" xmlns="http://docs.rackspace.com/api">
        <example href="../common/samples/validatetoken.xml" language="xml"/>
        <example href="../common/samples/validatetoken.json" language="javascript"/>
      </examples>
    </doc>
    <request>
      <param name="belongsTo" style="query" required="false" type="xsd:string">
        <doc xml:lang="EN">
          <p xmlns="http://www.w3.org/1999/xhtml">Validates a token has the supplied tenant in scope.</p>
        </doc>
      </param>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:access"/>
      <representation mediaType="application/json"/>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="HEAD" id="checkToken">
    <doc xml:lang="EN" title="Check Token">
      <p class="shortdesc" xmlns="http://www.w3.org/1999/xhtml">Check that a token is valid and that it belongs to a particular tenant
                (For performance).</p>
    </doc>
    <request>
      <param name="belongsTo" style="query" required="false" type="xsd:string">
        <doc xml:lang="EN">
          <p xmlns="http://www.w3.org/1999/xhtml">Validates a token has the supplied tenant in scope. (for performance).</p>
          <p xmlns="http://www.w3.org/1999/xhtml">
            Valid tokens will exist in the
            <code>/tokens/{tokenId}</code>
            path and invalid
                        tokens will not.  In other words, a user should expect an
                        itemNotFound (
            <code>404</code>
            ) fault for an
                        invalid token.
          </p>
          <p xmlns="http://www.w3.org/1999/xhtml">If `belongsTo` is provided, validates that a token has a specific tenant in scope.</p>
          <p xmlns="http://www.w3.org/1999/xhtml">No response body is returned for this method.</p>
        </doc>
      </param>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:access"/>
      <representation mediaType="application/json"/>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <!--User Operations-->
  <method name="GET" id="getUserByName">
    <doc xml:lang="EN" title="Get a User by Name">
      <p xmlns="http://www.w3.org/1999/xhtml">Returns detailed information about a specific user, by user name.</p>
      <examples title="User Response" xmlns="http://docs.rackspace.com/api">
        <example href="../common/samples/user.xml" language="xml"/>
        <example href="../common/samples/user.json" language="javascript"/>
      </examples>
    </doc>
    <request>
      <param name="name" style="query" type="xsd:string" required="true"/>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:user"/>
      <representation mediaType="application/json"/>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getUserById">
    <doc xml:lang="EN" title="Get a User by ID">
      <p xmlns="http://www.w3.org/1999/xhtml">Returns detailed information about a specific user, by user id.</p>
      <examples title="User Response" xmlns="http://docs.rackspace.com/api">
        <example href="../common/samples/user.xml" language="xml"/>
        <example href="../common/samples/user.json" language="javascript"/>
      </examples>
    </doc>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:user"/>
      <representation mediaType="application/json"/>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="listUserGlobalRoles">
    <doc xml:lang="EN" title="List User Global Roles">
      <p class="shortdesc" xmlns="http://www.w3.org/1999/xhtml">Returns global roles for a specific user (excludes tenant roles).</p>
      <p xmlns="http://www.w3.org/1999/xhtml">Returns a list of global roles associated with a specific
            	    user (excludes tenant roles).</p>
      <examples title="User Response" xmlns="http://docs.rackspace.com/api">
        <example href="../common/samples/roles.xml" language="xml"/>
        <example href="../common/samples/roles.json" language="javascript"/>
      </examples>
    </doc>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:roles"/>
      <representation mediaType="application/json"/>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <!--Tenant Operations-->
  <method name="GET" id="listTenants">
    <doc xml:lang="EN" title="Get Tenants">
      <p class="shortdesc" xmlns="http://www.w3.org/1999/xhtml">Get a list of tenants.</p>
      <p xmlns="http://www.w3.org/1999/xhtml">The operation returns a list of tenants which the supplied token provides
	      access to. This call must be authenticated, so a valid token must
	      be passed in as a header.</p>
      <examples title="Tenants Request with Auth Token" xmlns="http://docs.rackspace.com/api">
        <example href="../common/samples/tenants-request.txt" language="text"/>
      </examples>
      <examples title="Tenants Response" xmlns="http://docs.rackspace.com/api">
        <example href="../common/samples/tenants.xml" language="xml"/>
        <example href="../common/samples/tenants.json" language="javascript"/>
      </examples>
    </doc>
    <request>
      <param name="marker" style="query" required="false" type="xsd:string"/>
      <param name="limit" style="query" required="false" type="xsd:int"/>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:tenants"/>
      <representation mediaType="application/json"/>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getTenantByName">
    <doc xml:lang="EN" title="Get tenants by name">
      <p class="shortdesc" xmlns="http://www.w3.org/1999/xhtml">Returns detailed information about a tenant, by name.</p>
      <examples title="Tenant Response" xmlns="http://docs.rackspace.com/api">
        <example href="../common/samples/tenant.xml" language="xml"/>
        <example href="../common/samples/tenant.json" language="javascript"/>
      </examples>
    </doc>
    <request>
      <param name="name" style="query" type="xsd:string" required="true"/>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:tenant"/>
      <representation mediaType="application/json"/>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getTenantById">
    <doc xml:lang="EN" title="Get Tenants by ID">
      <p class="shortdesc" xmlns="http://www.w3.org/1999/xhtml">Returns detailed information about a tenant, by id.</p>
      <examples title="Tenant Response" xmlns="http://docs.rackspace.com/api">
        <example href="../common/samples/tenant.xml" language="xml"/>
        <example href="../common/samples/tenant.json" language="javascript"/>
      </examples>
    </doc>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:tenant"/>
      <representation mediaType="application/json"/>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="listEndpointsForToken">
    <doc xml:lang="EN" title="List Endoints for a Token">
      <p xmlns="http://www.w3.org/1999/xhtml">Returns a list of endpoints associated with a specific token.</p>
      <examples title="Tenant Endpoint Response" xmlns="http://docs.rackspace.com/api">
        <example href="../common/samples/endpoints.xml" language="xml"/>
        <example href="../common/samples/endpoints.json" language="javascript"/>
      </examples>
    </doc>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:endpoints"/>
      <representation mediaType="application/json"/>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="listRolesForUserOnTenant">
    <doc xml:lang="EN" title="List Roles for User on Tenant">
      <p xmlns="http://www.w3.org/1999/xhtml">Returns roles for a specific user on a specific tenant (excludes global roles).</p>
      <examples title="Tenant Roles Response" xmlns="http://docs.rackspace.com/api">
        <example href="../common/samples/roles.xml" language="xml"/>
        <example href="../common/samples/roles.json" language="javascript"/>
      </examples>
    </doc>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:roles"/>
      <representation mediaType="application/json"/>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
</application>]]></con:content><con:type>http://wadl.dev.java.net/2009/02</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/api.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <include schemaLocation="token.xsd"/>
  <include schemaLocation="tenant.xsd"/>
  <include schemaLocation="fault.xsd"/>
  <include schemaLocation="endpoints.xsd"/>
  <include schemaLocation="roles.xsd"/>
  <include schemaLocation="user.xsd"/>
  <include schemaLocation="credentials.xsd"/>
  <include schemaLocation="services.xsd"/>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/token.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <include schemaLocation="roles.xsd"/>
  <include schemaLocation="services.xsd"/>
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Elements-->
  <element name="access" type="identity:AuthenticateResponse"/>
  <!--Complex Types-->
  <complexType name="Token">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A token is an arbitrary bit of text that is used to access
                    resources. Each token has a scope which describes which
                    resources are accessible with it. A token may be
                    revoked at anytime and is valid for a finite duration.</p>
        <p>While Keystone supports token-based authentication in this release,
                    the intention is for it to support additional protocols in the
                    future. The desire is for it to be an integration service, and not
                    a full-fledged identity store and management solution.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/token.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/token.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
    <sequence>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="expires" type="xsd:dateTime" use="required"/>
    <attribute name="id" type="xsd:string" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="AuthenticateResponse">
    <sequence>
      <element name="token" type="identity:Token"/>
      <element name="user" type="identity:UserForAuthenticateResponse"/>
      <element name="serviceCatalog" type="identity:ServiceCatalog" minOccurs="0"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="UserForAuthenticateResponse">
    <sequence>
      <element name="roles" type="identity:RoleList"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:string"/>
    <attribute name="name" type="xsd:string"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="ServiceCatalog">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>The service catalog lists the services you have access to</p>
        <div class="design">
          <p>We optimized for future flexibility around the hierarchy. So we
                    left the design as a flat list of endpoints with attributes and the
                    consumer can categorize as they need.
                    This results in potential duplication (such as with the version/@list)
                    but we acceopt that normalization cost in order to not force an
                    artificial hierarchy (suchas on region, which can be optional).</p>
        </div>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/xml" href="../samples/services.xml"/>
                     
          </xsdxt:sample>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/json" href="../samples/services.json"/>
                     
          </xsdxt:sample>
                 
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
    <sequence>
      <element name="service" type="identity:ServiceForCatalog" minOccurs="1" maxOccurs="unbounded">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>A list of services.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="ServiceForCatalog">
    <sequence>
      <element name="endpoint" type="identity:EndpointForService" minOccurs="1" maxOccurs="unbounded">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>A list of endpoints.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="type" type="identity:ExtensibleServiceType" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The OpenStack-registered type (e.g. 'compute', 'object-store', etc).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The commercial service name (e.g. 'My Nova Cloud Servers').</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <!--EndpointForService-->
  <complexType name="EndpointForService">
    <sequence>
      <element name="version" type="identity:VersionForService" maxOccurs="1" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>Version details.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="region" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The name of the region where the endpoint
                        lives. Example: airport codes; LHR (UK),
                        STL (Saint Louis)</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="tenantId" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>Tenant id to which the endpoints belong.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="publicURL" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>Public accessible service URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="internalURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A service URL, accessible only locally within that
                        cloud (generally over a high bandwidth, low latency,
                        free of charge link).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="adminURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>An Admin URL (used for administration using privileged
                        calls). This may expose
                        additional functionality not found in the public and
                        internal URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <!--VersionForService-->
  <complexType name="VersionForService">
    <attribute name="id" type="xsd:string" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>Id of the version.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="info" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>URI to get the information specific to this version.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="list" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>URI to get the information about all versions.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/atom/atom.xsd</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://www.w3.org/2005/Atom" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd"/>
  <xs:simpleType name="relation">
    <xs:restriction base="xs:string">
      <xs:enumeration value="alternate"/>
      <xs:enumeration value="appendix"/>
      <xs:enumeration value="archives"/>
      <xs:enumeration value="author"/>
      <xs:enumeration value="bookmark"/>
      <xs:enumeration value="chapter"/>
      <xs:enumeration value="contents"/>
      <xs:enumeration value="copyright"/>
      <xs:enumeration value="current"/>
      <xs:enumeration value="describedby"/>
      <xs:enumeration value="edit"/>
      <xs:enumeration value="edit-media"/>
      <xs:enumeration value="first"/>
      <xs:enumeration value="glossary"/>
      <xs:enumeration value="help"/>
      <xs:enumeration value="hub"/>
      <xs:enumeration value="icon"/>
      <xs:enumeration value="index"/>
      <xs:enumeration value="last"/>
      <xs:enumeration value="latest-version"/>
      <xs:enumeration value="license"/>
      <xs:enumeration value="monitor"/>
      <xs:enumeration value="monitor-group"/>
      <xs:enumeration value="next"/>
      <xs:enumeration value="next-arvhice"/>
      <xs:enumeration value="nofollow"/>
      <xs:enumeration value="payment"/>
      <xs:enumeration value="predecessor-version"/>
      <xs:enumeration value="prefetch"/>
      <xs:enumeration value="prev"/>
      <xs:enumeration value="previous"/>
      <xs:enumeration value="prev-archive"/>
      <xs:enumeration value="replies"/>
      <xs:enumeration value="search"/>
      <xs:enumeration value="section"/>
      <xs:enumeration value="self"/>
      <xs:enumeration value="service"/>
      <xs:enumeration value="start"/>
      <xs:enumeration value="stylesheet"/>
      <xs:enumeration value="subsection"/>
      <xs:enumeration value="successor-version"/>
      <xs:enumeration value="up"/>
      <xs:enumeration value="version-history"/>
      <xs:enumeration value="via"/>
      <xs:enumeration value="working-copy"/>
      <xs:enumeration value="working-copy-of"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="link" type="atom:link"/>
  <xs:complexType name="link">
    <xs:annotation>
      <xs:documentation>
        <html:p>
          See section 3.4 of the ATOM RFC
          <html:a href="http://tools.ietf.org/html/rfc4287">RFC4287</html:a>
        </html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="rel" use="required" type="atom:relation">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="type" use="optional" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="href" use="required" type="xs:anyURI">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="hreflang" use="optional" type="xs:NMTOKEN">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="title" use="optional" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/atom/xml.xsd</con:url><con:content><![CDATA[<?xml-stylesheet href="../2008/09/xsd.xsl" type="text/xsl"?>
<xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
  <xs:annotation>
    <xs:documentation>
      <div>
        <h1>About the XML namespace</h1>
        <div class="bodytext">
          <p>This schema document describes the XML namespace, in a form
      suitable for import by other schema documents.</p>
          <p>
            See
            <a href="http://www.w3.org/XML/1998/namespace.html">http://www.w3.org/XML/1998/namespace.html</a>
            and
            <a href="http://www.w3.org/TR/REC-xml">http://www.w3.org/TR/REC-xml</a>
            for information 
      about this namespace.
          </p>
          <p>Note that local names in this namespace are intended to be
      defined only by the World Wide Web Consortium or its subgroups.
      The names currently defined in this namespace are listed below.
      They should not be used with conflicting semantics by any Working
      Group, specification, or document instance.</p>
          <p>
            See further below in this document for more information about
            <a href="#usage">how to refer to this schema document from your own
      XSD schema documents</a>
            and about
            <a href="#nsversioning">the
      namespace-versioning policy governing this schema document</a>
            .
          </p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>lang (as an attribute name)</h3>
          <p>denotes an attribute whose value
       is a language code for the natural language of the content of
       any element; its value is inherited.  This name is reserved
       by virtue of its definition in the XML specification.</p>
        </div>
        <div>
          <h4>Notes</h4>
          <p>Attempting to install the relevant ISO 2- and 3-letter
      codes as the enumerated possible values is probably never
      going to be a realistic possibility.</p>
          <p>
            See BCP 47 at
            <a href="http://www.rfc-editor.org/rfc/bcp/bcp47.txt">http://www.rfc-editor.org/rfc/bcp/bcp47.txt</a>
            and the IANA language subtag registry at
            <a href="http://www.iana.org/assignments/language-subtag-registry">http://www.iana.org/assignments/language-subtag-registry</a>
            for further information.
          </p>
          <p>The union allows for the 'un-declaration' of xml:lang with
      the empty string.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:union memberTypes="xs:language">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value=""/>
          </xs:restriction>
        </xs:simpleType>
      </xs:union>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="space">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>space (as an attribute name)</h3>
          <p>denotes an attribute whose
       value is a keyword indicating what whitespace processing
       discipline is intended for the content of the element; its
       value is inherited.  This name is reserved by virtue of its
       definition in the XML specification.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>base (as an attribute name)</h3>
          <p>denotes an attribute whose value
       provides a URI to be used as the base for interpreting any
       relative URIs in the scope of the element on which it
       appears; its value is inherited.  This name is reserved
       by virtue of its definition in the XML Base specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xmlbase/">http://www.w3.org/TR/xmlbase/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="id" type="xs:ID">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>id (as an attribute name)</h3>
          <p>denotes an attribute whose value
       should be interpreted as if declared to be of type ID.
       This name is reserved by virtue of its definition in the
       xml:id specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xml-id/">http://www.w3.org/TR/xml-id/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
    <xs:attribute ref="xml:id"/>
  </xs:attributeGroup>
  <xs:annotation>
    <xs:documentation>
      <div>
        <h3>Father (in any context at all)</h3>
        <div class="bodytext">
          <p>denotes Jon Bosak, the chair of 
      the original XML Working Group.  This name is reserved by 
      the following decision of the W3C XML Plenary and 
      XML Coordination groups:</p>
          <blockquote>
            <p>In appreciation for his vision, leadership and
	dedication the W3C XML Plenary on this 10th day of
	February, 2000, reserves for Jon Bosak in perpetuity
	the XML name "xml:Father".</p>
          </blockquote>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>
      <div xml:id="usage" id="usage">
        <h2>
          <a name="usage">About this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            This schema defines attributes and an attribute group suitable
      for use by schemas wishing to allow
            <code>xml:base</code>
            ,
            <code>xml:lang</code>
            ,
            <code>xml:space</code>
            or
            <code>xml:id</code>
            attributes on elements they define.
          </p>
          <p>To enable this, such a schema must import this schema for
      the XML namespace, e.g. as follows:</p>
          <pre>&lt;schema . . .>
           . . .
           &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2001/xml.xsd"/></pre>
          <p>or</p>
          <pre>&lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2009/01/xml.xsd"/></pre>
          <p>Subsequently, qualified reference to any of the attributes or the
      group defined below will have the desired effect, e.g.</p>
          <pre>&lt;type . . .>
           . . .
           &lt;attributeGroup ref="xml:specialAttrs"/></pre>
          <p>will define a type which will schema-validate an instance element
      with any of those attributes.</p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>
      <div id="nsversioning" xml:id="nsversioning">
        <h2>
          <a name="nsversioning">Versioning policy for this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            In keeping with the XML Schema WG's standard versioning
      policy, this schema document will persist at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            .
          </p>
          <p>
            At the date of issue it can also be found at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            .
          </p>
          <p>
            The schema document at that URI may however change in the future,
      in order to remain compatible with the latest version of XML
      Schema itself, or with the XML namespace itself.  In other words,
      if the XML Schema or XML namespaces change, the version of this
      document at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            will change accordingly; the version at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            will not change.
          </p>
          <p>Previous dated (and unchanging) versions of this schema 
      document are at:</p>
          <ul>
            <li>
              <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2007/08/xml.xsd">http://www.w3.org/2007/08/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2004/10/xml.xsd">http://www.w3.org/2004/10/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2001/03/xml.xsd">http://www.w3.org/2001/03/xml.xsd</a>
            </li>
          </ul>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/roles.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Elements-->
  <element name="roles" type="identity:RoleList">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A list of roles.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="role" type="identity:Role">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A role.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="Role">
    <sequence>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:string" use="optional"/>
    <attribute name="name" type="xsd:string" use="required"/>
    <attribute name="description" type="xsd:string" use="optional"/>
    <attribute name="serviceId" type="xsd:string" use="optional"/>
    <attribute name="tenantId" type="xsd:string" use="optional"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="RoleList">
    <sequence>
      <element name="role" type="identity:Role" minOccurs="0" maxOccurs="unbounded"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/services.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Simple Types-->
  <simpleType name="ExtensibleServiceType">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>
          An extensible service type allows all of the
                    strings defined in
          <a href="#type_ServiceType" title="See definition of                         ServiceType">ServiceType</a>
          or an
                    alias prefixed status.
        </p>
      </xsd:documentation>
    </annotation>
    <union memberTypes="identity:ServiceType identity:ExtendedService"/>
  </simpleType>
  <simpleType name="ServiceType">
    <restriction base="xsd:string">
      <enumeration value="compute">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>The type for an OpenStack Compute API 1.1 compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="object-store">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>The type for a Swift-compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="image-service">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>The type for a Glance-compatible service</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="identity">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>The type for a Keystone-compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
    </restriction>
  </simpleType>
  <simpleType name="ExtendedService">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A non-core service type which must contain an extension prefix.</p>
      </xsd:documentation>
    </annotation>
    <restriction base="xsd:string">
      <pattern value="(\w|-)+:\w+"/>
    </restriction>
  </simpleType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/tenant.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Elements-->
  <element name="tenant" type="identity:Tenant">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A container used to group or isolate resources and/or identity
                  objects. Depending on the service operator, a tenant may map to a customer,
                  account, organization, or project.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/xml" href="../samples/tenant.xml"/>
                     
          </xsdxt:sample>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/json" href="../samples/tenant.json"/>
                     
          </xsdxt:sample>
                 
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="tenants" type="identity:Tenants">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A list of tenants.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="Tenants">
    <sequence>
      <element name="tenant" type="identity:Tenant" maxOccurs="100"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="Tenant">
    <sequence>
      <element name="description" type="xsd:string">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>An free text description of the tenant.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:ID" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>An ID uniquely identifying the tenant. This usually comes from the back-end store.
                        This value is guaranteed to be unique and immutable (it will never change).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="name" type="xsd:string" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The name of the tenant. This is guaranteed to be unique, but may change.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="enabled" type="xsd:boolean" use="optional" default="true">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>An boolean signifying if a tenant is enabled or not. A disabled tenant
                        cannot be authenticated against.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="display-name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A human-readable, friendly name for use in user interfaces.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute type="xsd:dateTime" name="updated" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A time-stamp identifying the modification time of the
                        tenant.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute type="xsd:dateTime" name="created" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A creation time-stamp for the tenant.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/fault.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!--Fault Elements-->
  <element name="identityFault" type="identity:IdentityFault"/>
  <element name="serviceUnavailable" type="identity:ServiceUnavailableFault"/>
  <element name="badRequest" type="identity:BadRequestFault"/>
  <element name="unauthorized" type="identity:UnauthorizedFault"/>
  <element name="overLimit" type="identity:OverLimitFault"/>
  <element name="userDisabled" type="identity:UserDisabledFault"/>
  <element name="forbidden" type="identity:ForbiddenFault"/>
  <element name="itemNotFound" type="identity:ItemNotFoundFault"/>
  <element name="tenantConflict" type="identity:TenantConflictFault"/>
  <!--Fault Types-->
  <complexType name="IdentityFault">
    <sequence>
      <element name="message" type="xsd:string">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>A human readable message that is appropriate for display
                            to the end user.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element name="details" type="xsd:string" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>The optional &lt;details> element may contain useful
                            information for tracking down errors (e.g a stack
                            trace).  This information may or may not be appropriate
                            for display to an end user.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="code" type="xsd:int" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The HTTP status code associated with the current fault.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="ServiceUnavailableFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="BadRequestFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="UnauthorizedFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="UserDisabledFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="ForbiddenFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="ItemNotFoundFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="TenantConflictFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="OverLimitFault">
    <complexContent>
      <extension base="identity:IdentityFault">
        <attribute name="retryAt" type="xsd:dateTime" use="optional">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
              <p>An optional dateTime denoting when an operation should
                                be retried.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
      </extension>
    </complexContent>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/endpoints.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <element name="endpoint" type="identity:Endpoint">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>An Endpoint.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="endpoints" type="identity:EndpointList">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A list of Endpoints.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="Endpoint">
    <sequence>
      <element name="version" type="identity:VersionForService" maxOccurs="1" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>Version details.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:int" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>An ID uniquely identifying the Endpoint.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="type" type="identity:ExtensibleServiceType" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The OpenStack-registered type (e.g. 'compute', 'object-store', etc).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The commercial service name (e.g. 'My Nova Cloud Servers').</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="region" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The region of Endpoint Template.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="publicURL" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The public URL to access represented service.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="internalURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The internal version of the public URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="adminURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The admin URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="EndpointList">
    <sequence>
      <element name="endpoint" type="identity:Endpoint" minOccurs="0" maxOccurs="unbounded"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/user.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:atom="http://www.w3.org/2005/Atom">
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Elements-->
  <element name="users" type="identity:UserList">
    <annotation>
      <xsd:documentation xml:lang="EN">
        <p>A list of Users.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="user" type="identity:User">
    <annotation>
      <xsd:documentation xml:lang="EN">
        <p>A Keystone User.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="User">
    <attribute name="id" type="xsd:ID" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>An automatically generated, unique, immutable (it will never change) identifier
                        for the user. This is generated by the backend this user is stored in.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="username" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A unique, mutable (it can change) user name that may be used by the user
                        an identifier when presenting credentials.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="email" type="xsd:string" use="optional"/>
    <attribute name="enabled" type="xsd:boolean" default="true" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A true/false value that determines if the user may authenticate or not.
                        If enabled is false, the user will not be able to authenticate.
                        How this value is stored or generated is dependent on the backend in use.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="display-name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A human-readable, friendly name for use in user interfaces.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="updated" type="xsd:dateTime" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A time-stamp identifying the modification time of the
                        user.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="created" type="xsd:dateTime" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A creation time-stamp for the user.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="UserList">
    <sequence>
      <element name="user" type="identity:User" minOccurs="0" maxOccurs="unbounded"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/credentials.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Elements-->
  <element name="auth" type="identity:AuthenticationRequest"/>
  <element name="credential" type="identity:CredentialType"/>
  <element name="credentials" type="identity:CredentialListType"/>
  <element name="passwordCredentials" type="identity:PasswordCredentialsRequiredUsername" substitutionGroup="identity:credential"/>
  <!--Complex Types-->
  <complexType name="CredentialType" abstract="true">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>Base type for credential in Keystone.</p>
      </xsd:documentation>
    </annotation>
    <sequence>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="AuthenticationRequest">
    <sequence>
      <element ref="identity:credential" minOccurs="1"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="tenantId" type="xsd:string" use="optional"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="PasswordCredentialsBase">
    <complexContent>
      <extension base="identity:CredentialType">
        <attribute name="username" type="xsd:string" use="optional"/>
        <attribute name="password" type="xsd:string" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="PasswordCredentialsWithoutUsername">
    <complexContent>
      <restriction base="identity:PasswordCredentialsBase">
        <attribute name="username" type="xsd:string" use="prohibited"/>
        <attribute name="password" type="xsd:string" use="required"/>
      </restriction>
    </complexContent>
  </complexType>
  <complexType name="PasswordCredentialsRequiredUsername">
    <complexContent>
      <restriction base="identity:PasswordCredentialsBase">
        <attribute name="username" type="xsd:string" use="required"/>
        <attribute name="password" type="xsd:string" use="required"/>
      </restriction>
    </complexContent>
  </complexType>
  <complexType name="CredentialListType">
    <sequence>
      <element ref="identity:credential" minOccurs="1" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/api-common.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/common/api/v1.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <annotation>
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xsdxt:title>Open Stack Common API Schema Types 1.0</xsdxt:title>
      <xsdxt:link rev="index" href="extensions.xsd"/>
      <xsdxt:link rev="index" href="limits.xsd"/>
      <xsdxt:link rev="index" href="version.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <p>This is the main index XML Schema document
                for Common API Schema Types Version 1.0.</p>
    </xsd:documentation>
  </annotation>
  <include schemaLocation="extensions.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>Types related to extensions.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <include schemaLocation="version.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>Types related to API version details.</p>
      </xsd:documentation>
    </annotation>
  </include>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/extensions.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<xsd:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/common/api/v1.0" xmlns:ext="http://docs.openstack.org/common/api/v1.0" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!--Import ATOM specific schema definitions-->
  <xsd:import namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <xsd:element name="extensions" type="ext:Extensions"/>
  <xsd:element name="extension" type="ext:Extension"/>
  <xsd:complexType name="Extensions">
    <xsd:sequence>
      <xsd:element name="extension" type="ext:Extension" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
  </xsd:complexType>
  <xsd:complexType name="Extension">
    <xsd:sequence>
      <xsd:element name="description" type="xsd:string" minOccurs="1"/>
      <!--<xsd:element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded" />-->
      <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="name" type="xsd:string" use="required"/>
    <xsd:attribute name="namespace" type="xsd:anyURI" use="required"/>
    <xsd:attribute name="alias" type="ext:Alias" use="required"/>
    <xsd:attribute name="updated" type="xsd:dateTime" use="optional"/>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
    <!--TODO(Ziad)resolve asser issue
            <xsd:assert vc:minVersion="1.1" test="atom:link[@rel='describedby']">
            <xsd:annotation>
                <xsd:documentation
                    xml:lang="EN"
                    xmlns="http://www.w3.org/1999/xhtml">
                    <p>
                        There should be at least one atom link
                        with a describedby relation.
                    </p>
                </xsd:documentation>
            </xsd:annotation>
        </xsd:assert>-->
  </xsd:complexType>
  <xsd:simpleType name="Alias">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="\w+\-\w+"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/version.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<xs:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/common/api/v1.0" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:annotation>
    <xs:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Version Types</xsdxt:title>
      <xsdxt:link rel="index" href="api-common.xsd"/>
    </xs:appinfo>
    <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>This schema file defines all types related to versioning.</p>
    </xs:documentation>
  </xs:annotation>
  <!--Import ATOM specific schema definitions-->
  <xs:import namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Multiple choices-->
  <xs:element name="choices" type="vers:VersionChoiceList">
    <xs:annotation>
      <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>This element is returned when the version of the
                    resource cannot be determined. The element
                    provides a list of choices for the resource.</p>
      </xs:documentation>
      <xs:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/choices.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/choices.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <!--Versioning-->
  <xs:element name="versions" type="vers:VersionChoiceList">
    <xs:annotation>
      <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Provides a list of supported versions.</p>
      </xs:documentation>
      <xs:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/versions.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/versions.json"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/atom+xml" href="../samples/versions-atom.xml"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <xs:element name="version" type="vers:VersionChoice" vc:minVersion="1.0" vc:maxVersion="1.1">
    <xs:annotation>
      <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>This element provides detailed meta information
                    regarding the status of the current API version.
                    This is the XSD 1.0 compatible element definition.</p>
      </xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="version2" type="vers:VersionChoiceRoot" vc:minVersion="1.1">
    <xs:annotation>
      <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>This element provides detailed meta information
                    regarding the status of the current API
                    version. The description should include a pointer
                    to both a human readable and a machine processable
                    description of the API service.</p>
      </xs:documentation>
      <xs:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/version.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/version.json"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/atom+xml" href="../samples/version-atom.xml"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <!--Types-->
  <xs:simpleType name="VersionStatus">
    <xs:annotation>
      <xs:documentation>
        <html:p>The VersionStatus type describes a service's operational status.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="ALPHA">
        <xs:annotation>
          <xs:documentation>
            <html:p>This is a new service the API. Thi API
                            contract may be set, but the implementaiton
                            may not be 100% complient with it. Developers
                            are encouraged to begin testing aganst an
                            ALPHA version to provide feedback.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BETA">
        <xs:annotation>
          <xs:documentation>
            <html:p>A status of BETA indicates that this
                            version is a candidate for the next major
                            release and may feature functionality not
                            available in the current
                            version. Developers are encouraged to test
                            and begin the migration processes to a
                            BETA version. Note that a BETA version is
                            undergoing testing, it has not been
                            officially released, and my not be stable.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CURRENT">
        <xs:annotation>
          <xs:documentation>
            <html:p>The API version is stable and has been
                            tested. Developers are encouraged to
                            develop against this API version. The
                            current released version of the API will
                            always be marked as CURRENT.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="DEPRECATED">
        <xs:annotation>
          <xs:documentation>
            <html:p>A status of DEPRECATED indicates that a
                            newer version of the API is
                            available. Application developers are
                            discouraged from using this version and
                            should instead develop against the latest
                            current version of the API.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="VersionChoiceList">
    <xs:annotation>
      <xs:documentation>
        <html:p>A version choice list outlines a collection of
                    resources at various versions.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="version" type="vers:VersionChoice" minOccurs="1" maxOccurs="unbounded"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
    <!--TODO(Ziad)resolve assert issue
            <xs:assert vc:minVersion="1.1" test="every $v in vers:version satisfies $v/atom:link[@rel='self']">
            <xs:annotation>
                <xs:documentation>
                    <html:p>
                        In version lists, every single version must
                        contain at least one self link.
                    </html:p>
                </xs:documentation>
            </xs:annotation>
        </xs:assert>-->
  </xs:complexType>
  <xs:complexType name="VersionChoiceRoot" vc:minVersion="1.1">
    <xs:complexContent>
      <xs:extension base="vers:VersionChoice">
        <!--TODO(Ziad)resolve asser issue
                    <xs:assert test="atom:link[@rel='describedby']">
                    <xs:annotation>
                        <xs:documentation>
                            <html:p>
                                When used as a root element, a version choice
                                must contain at least one describedby link.
                            </html:p>
                        </xs:documentation>
                    </xs:annotation>
                </xs:assert>-->
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="VersionChoice">
    <xs:annotation>
      <xs:documentation>
        <html:p>A version choice contains relevant information
                    about an available service that a user can then
                    use to target a specific version of the service.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="media-types" type="vers:MediaTypeList" minOccurs="0" maxOccurs="1"/>
      <!--<xs:element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded" />-->
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>
          <html:p>The ID of a version choice represents the service version's unique 
                        identifier. This ID is guaranteed to be unique only among the
                        service version choices outlined in the VersionChoiceList.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="status" type="vers:VersionStatus" use="required">
      <xs:annotation>
        <xs:documentation>
          <html:p>A version choice's status describes the current operational state of
                        the given service version. The operational status is captured in a
                        simple type enumeration called VersionStatus.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="updated" type="xs:dateTime" use="optional">
      <xs:annotation>
        <xs:documentation>
          <html:p>
            A version choice's updated attribute describes
                        the time when the version was updated. The
                        time should be updated anytime
            <html:strong>anything</html:strong>
            in the
                        version has changed: documentation,
                        extensions, bug fixes.
          </html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:complexType name="MediaTypeList">
    <xs:annotation>
      <xs:documentation>
        <html:p>A MediaTypeList outlines a collection of valid media types for a given 
                    service version.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="media-type" type="vers:MediaType" minOccurs="1" maxOccurs="unbounded"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:complexType name="MediaType">
    <xs:annotation>
      <xs:documentation>
        <html:p>A MediaType describes what content types the service version understands.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="base" type="xs:string" use="optional" default="">
      <xs:annotation>
        <xs:documentation>
          <html:p>The base of a given media type describes the
                        simple MIME type that then a more complicated
                        media type can be derived from. These types
                        are basic and provide no namespace or version
                        specific data are are only provided as a
                        convenience.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="type" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>
          <html:p>The type attribute of a MediaType describes
                        the MIME specific identifier of the media type
                        in question.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>${#Project#Endpoint}</con:endpoint></con:endpoints><con:resource name="v2.0" path="${#Project#path}"><con:settings/><con:parameters/><con:resource name="extensions" path="extensions"><con:settings/><con:parameters/><con:resource name="{alias}" path="{alias}"><con:settings/><con:parameters><con:parameter><con:name>alias</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Get Extension Details - getExtension" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/common/api/v2.0">v2:extension</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="List Extensions - listExtensions" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/common/api/v2.0">v2:extensions</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="tokens" path="tokens"><con:settings/><con:parameters/><con:resource name="{tokenId}" path="{tokenId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter required="true"><con:name>tokenId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>belongsTo</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="endpoints" path="endpoints"><con:settings/><con:parameters/><con:method name="List Endoints for a Token - listEndpointsForToken" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:endpoints</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Validate Token - validateToken" method="GET"><con:settings/><con:parameters><con:parameter><con:name>belongsTo</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:access</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Check Token - checkToken" method="HEAD"><con:settings/><con:parameters><con:parameter><con:name>belongsTo</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:access</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Authenticate for Service API - authenticate" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:auth</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:access</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:userDisabled</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:5001</con:endpoint><con:request>{
"auth":{
"passwordCredentials":{
"username":"${#TestSuite#username}",
"password":"${#TestSuite#password}"
}
}
}</con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="users" path="users"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="{user_id}" path="{user_id}"><con:settings/><con:parameters><con:parameter required="true"><con:name>user_id</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="roles" path="roles"><con:settings/><con:parameters/><con:method name="List User Global Roles - listUserGlobalRoles" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:roles</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:method name="Get a User by ID - getUserById" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get a User by Name - getUserByName" method="GET"><con:settings/><con:parameters><con:parameter required="true"><con:name>name</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="tenants" path="tenants"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="{tenantId}" path="{tenantId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>tenantId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="users" path="users"><con:settings/><con:parameters/><con:resource name="{user_id}" path="{user_id}"><con:settings/><con:parameters><con:parameter required="true"><con:name>user_id</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="roles" path="roles"><con:settings/><con:parameters/><con:method name="List Roles for User on Tenant - listRolesForUserOnTenant" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:roles</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource><con:method name="Get Tenants by ID - getTenantById" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:tenant</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get Tenants - listTenants" method="GET"><con:settings/><con:parameters><con:parameter><con:name>marker</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:tenants</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Get tenants by name - getTenantByName" method="GET"><con:settings/><con:parameters><con:parameter required="true"><con:name>name</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:tenant</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Version Details - getVersionInfo" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/common/api/v2.0">v2:version</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="OS-KSADM-admin" type="rest" basePath="" definitionUrl="/home/jorge/projects/keystone/keystone/content/admin/OS-KSADM-admin-auth2.0.wadl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/home/jorge/projects/keystone/keystone/content/admin/OS-KSADM-admin-auth2.0.wadl"><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/admin/OS-KSADM-admin-auth2.0.wadl</con:url><con:content><![CDATA[<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<!--*******************************************************-->
<!--Import Common XML Entities-->
<!---->
<!--You can resolve the entites with xmllint-->
<!---->
<!--xmllint -noent OS-KSADM-admin.wadl-->
<!--*******************************************************-->
<!--A collection of common faults, these are pretty much expected
         in every request.-->
<!--Faults on GET-->
<!--Faults on POST/PUT-->
<application xsi:schemaLocation="http://docs.openstack.org/identity/api/v2.0 ../common/xsd/api.xsd   http://docs.openstack.org/common/api/v1.0 ../common/xsd/api-common.xsd   http://wadl.dev.java.net/2009/02 http://www.w3.org/Submission/wadl/wadl.xsd   http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0 ../common/xsd/OS-KSADM.xsd   " xmlns="http://wadl.dev.java.net/2009/02" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:OS-KSADM="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0" xmlns:capi="http://docs.openstack.org/common/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0">
  <grammars>
    <include href="../common/xsd/api.xsd"/>
    <include href="../common/xsd/api-common.xsd"/>
    <include href="../common/xsd/OS-KSADM.xsd"/>
  </grammars>
  <!--*******************************************************-->
  <!--All Resoruces-->
  <!--*******************************************************-->
  <!--We should use SSL in production-->
  <resources base="http://localhost:5001">
    <resource id="version" path="v2.0">
      <param name="X-Auth-Token" style="header" type="xsd:string" required="true">
        <doc>You need a valid admin token for access.</doc>
      </param>
      <resource id="users" path="users">
        <method href="#listUsers"/>
        <method href="#addUser"/>
        <resource id="userById" path="{userId}">
          <param name="userId" style="template" required="true" type="xsd:string"/>
          <method href="#updateUser"/>
          <method href="#deleteUser"/>
          <resource id="userRoles" path="roles">
            <method href="#listUserRoles"/>
            <resource id="user-roles-OS-KSADM" path="OS-KSADM">
              <resource id="userRoleById" path="{roleId}">
                <param name="roleId" style="template" type="xsd:string"/>
                <method href="#addUserRole"/>
                <method href="#getUserRole"/>
                <method href="#deleteUserRole"/>
              </resource>
            </resource>
          </resource>
          <resource id="user-OS-KSADM" path="OS-KSADM">
            <resource id="enabled" path="enabled">
              <method href="#setUserEnabled"/>
            </resource>
            <resource id="userCredentials" path="credentials">
              <method href="#addUserCredential"/>
              <method href="#listCredentials"/>
              <resource id="userCredentialsByType" path="{credential-type}">
                <param name="credentialType" style="template" type="OS-KSADM:extensibleCredentialsType" required="true"/>
                <method href="#updateUserCredential"/>
                <method href="#deleteUserCredential"/>
                <method href="#getUserCredential"/>
              </resource>
            </resource>
          </resource>
        </resource>
      </resource>
      <resource id="tenants" path="tenants">
        <method href="#addTenant"/>
        <resource id="tenantById" path="{tenantId}">
          <param name="tenantId" style="template" type="xsd:string"/>
          <method href="#updateTenant"/>
          <method href="#deleteTenant"/>
          <resource id="tenant-OS-KSADM" path="OS-KSADM">
            <resource id="rolesForTenant" path="roles">
              <method href="#listRolesForTenant"/>
            </resource>
          </resource>
          <resource id="usersForTenant" path="users">
            <method href="#listUsersForTenant"/>
            <method href="#listUsersWithRoleForTenant"/>
            <resource id="userForTenant" path="{userId}">
              <param name="userId" style="template" type="xsd:string"/>
              <resource id="userRolesForTenant" path="roles">
                <resource id="tenant-user-role-OS-KSADM" path="OS-KSADM">
                  <resource id="userSpecificRoleForTenant" path="{roleId}">
                    <param name="roleId" style="template" type="xsd:string"/>
                    <method href="#addRolesToUserOnTenant"/>
                    <method href="#deleteRoleFromUserOnTenant"/>
                  </resource>
                </resource>
              </resource>
            </resource>
          </resource>
        </resource>
      </resource>
      <resource id="role-service-OS-KSADM" path="OS-KSADM">
        <resource id="roles" path="roles">
          <method href="#listRoles"/>
          <method href="#addRole"/>
          <resource id="roleId" path="{roleId}">
            <param name="roleId" style="template" type="xsd:string"/>
            <method href="#getRole"/>
            <method href="#deleteRole"/>
          </resource>
        </resource>
        <resource id="services" path="services">
          <method href="#listServices"/>
          <method href="#addService"/>
          <resource id="serviceId" path="{serviceId}">
            <param name="serviceId" style="template" type="xsd:int"/>
            <method href="#getService"/>
            <method href="#deleteService"/>
          </resource>
        </resource>
      </resource>
    </resource>
  </resources>
  <!--*******************************************************-->
  <!--All Methods-->
  <!--*******************************************************-->
  <!--Tenant Operations-->
  <method name="POST" id="addTenant">
    <doc xml:lang="EN" title="Add Tenant">
      <p class="shortdesc" xmlns="http://www.w3.org/1999/xhtml">Creates a tenant.</p>
      <p xmlns="http://www.w3.org/1999/xhtml">This call creates a tenant.</p>
    </doc>
    <request>
      <representation mediaType="application/xml" element="identity:tenant">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/tenantwithoutid.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/tenantwithoutid.json"/>
        </doc>
      </representation>
    </request>
    <response status="201">
      <representation mediaType="application/xml" element="identity:tenant">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/tenant.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/tenant.json"/>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="POST" id="updateTenant">
    <doc xml:lang="EN" title="Update Tenant">
      <p class="shortdesc" xmlns="http://www.w3.org/1999/xhtml">Updates a tenant.</p>
      <p xmlns="http://www.w3.org/1999/xhtml">This call updates a tenant.</p>
    </doc>
    <request>
      <representation mediaType="application/xml" element="identity:tenant">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/tenant.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/tenant.json"/>
        </doc>
      </representation>
    </request>
    <response status="200">
      <representation mediaType="application/xml" element="identity:tenant">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/tenant.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/tenant.json"/>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="DELETE" id="deleteTenant">
    <doc xml:lang="EN" title="Delete a Tenant">
      <p class="shortdesc" xmlns="http://www.w3.org/1999/xhtml">Deletes a tenant.</p>
      <p xmlns="http://www.w3.org/1999/xhtml">This call deletes a tenant.</p>
    </doc>
    <response status="204"/>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="listRolesForTenant">
    <doc xml:lang="EN" title="List roles for a Tenant.">
      <p class="shortdesc" xmlns="http://www.w3.org/1999/xhtml">Lists all the roles for a tenant.</p>
      <p xmlns="http://www.w3.org/1999/xhtml">Lists all the roles for a tenant.</p>
    </doc>
    <request>
      <param name="marker" style="query" required="false" type="xsd:string"/>
      <param name="limit" style="query" required="false" type="xsd:int"/>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:roles">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/roles.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/roles.json"/>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="listUsersForTenant">
    <doc xml:lang="EN" title="List users for a Tenant.">
      <p class="shortdesc" xmlns="http://www.w3.org/1999/xhtml">Lists all the users for a tenant.</p>
      <p xmlns="http://www.w3.org/1999/xhtml">Lists all the users for a tenant.</p>
    </doc>
    <request>
      <param name="marker" style="query" required="false" type="xsd:string"/>
      <param name="limit" style="query" required="false" type="xsd:int"/>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:users">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/users.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/users.json"/>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="listUsersWithRoleForTenant">
    <doc xml:lang="EN" title="List user with role for tenant.">
      <p xmlns="http://www.w3.org/1999/xhtml">Lists all the users with a specific role for a tenant.</p>
    </doc>
    <request>
      <param name="roleId" style="query" required="true" type="xsd:string"/>
      <param name="marker" style="query" required="false" type="xsd:string"/>
      <param name="limit" style="query" required="false" type="xsd:int"/>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:users">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/users.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/users.json"/>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="PUT" id="addRolesToUserOnTenant">
    <doc xml:lang="EN" title="Add roles to a user on a tenant.">
      <p xmlns="http://www.w3.org/1999/xhtml">Adds a specific role to a user for a tenant.</p>
    </doc>
    <response status="201"/>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="DELETE" id="deleteRoleFromUserOnTenant">
    <doc xml:lang="EN" title="Delete roles from a user on tenant.">
      <p xmlns="http://www.w3.org/1999/xhtml">Deletes a specific role from a user for a tenant.</p>
    </doc>
    <response status="204"/>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <!--User Operations-->
  <method name="GET" id="listUsers">
    <doc xml:lang="EN" title="List users">
      <p xmlns="http://www.w3.org/1999/xhtml">List users.</p>
    </doc>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:userss">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/users.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/users.json"/>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="POST" id="addUser">
    <doc xml:lang="EN" title="Add user">
      <p xmlns="http://www.w3.org/1999/xhtml">Adds a user.</p>
    </doc>
    <request>
      <representation mediaType="application/xml" element="identity:user">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/userwithoutid.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/userwithoutid.json"/>
        </doc>
      </representation>
    </request>
    <response status="201">
      <representation mediaType="application/xml" element="identity:user">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/user.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/user.json"/>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="POST" id="updateUser">
    <doc xml:lang="EN" title="Update user">
      <p xmlns="http://www.w3.org/1999/xhtml">Update a user.</p>
    </doc>
    <request>
      <representation mediaType="application/xml" element="identity:user">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/user.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/user.json"/>
        </doc>
      </representation>
    </request>
    <response status="200">
      <representation mediaType="application/xml" element="identity:user">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/user.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/user.json"/>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="DELETE" id="deleteUser">
    <doc xml:lang="EN" title="Delete user">
      <p xmlns="http://www.w3.org/1999/xhtml">Delete a user.</p>
    </doc>
    <response status="204"/>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="PUT" id="setUserEnabled">
    <doc xml:lang="EN" title="Set user enabled.">
      <p xmlns="http://www.w3.org/1999/xhtml">Enable user.</p>
    </doc>
    <request>
      <representation mediaType="application/xml" element="identity:user">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/userwithenabledonly.xml"/>
        </doc>
        <param name="user" style="plain" path="/" type="OS-KSADM:UserWithOnlyEnabled"/>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/userwithenabledonly.json"/>
        </doc>
      </representation>
    </request>
    <response status="200">
      <representation mediaType="application/xml" element="identity:user">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/user.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/user.json"/>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <!--User Roles-->
  <method name="GET" id="listUserRoles">
    <doc xml:lang="EN" title="List Global Roles for a User">
      <p xmlns="http://www.w3.org/1999/xhtml">List all the global roles for a user.</p>
    </doc>
    <request>
      <param name="serviceId" style="query" required="false" type="xsd:string"/>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:roles">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/roles.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/roles.json"/>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="PUT" id="addUserRole">
    <doc xml:lang="EN" title="Add Global roles to a user.">
      <p xmlns="http://www.w3.org/1999/xhtml">Adds a specific global role to a user.</p>
    </doc>
    <response status="201"/>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getUserRole">
    <doc xml:lang="EN" title="Get user Role">
      <p xmlns="http://www.w3.org/1999/xhtml">Get information about a global role that belongs to a user.</p>
    </doc>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:role">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/role.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/role.json"/>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="DELETE" id="deleteUserRole">
    <doc xml:lang="EN" title="Delete Global Roles on User.">
      <p xmlns="http://www.w3.org/1999/xhtml">Deletes a specific global role from a user.</p>
    </doc>
    <response status="204"/>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <!--User Credentials-->
  <method name="POST" id="addUserCredential">
    <doc xml:lang="EN" title="Add user Credential.">
      <p xmlns="http://www.w3.org/1999/xhtml">Adds a credential to a user.</p>
    </doc>
    <request>
      <representation mediaType="application/xml" element="identity:credentials">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/passwordcredentials.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/passwordcredentials.json"/>
        </doc>
      </representation>
    </request>
    <response status="201">
      <representation mediaType="application/xml" element="identity:credentials">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/passwordcredentials.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/passwordcredentials.json"/>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="listCredentials">
    <doc xml:lang="EN" title="List Credentials">
      <p xmlns="http://www.w3.org/1999/xhtml">List credentials.</p>
    </doc>
    <request>
      <param name="marker" style="query" required="false" type="xsd:string"/>
      <param name="limit" style="query" required="false" type="xsd:int"/>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:credentials">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/credentials.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/credentials.json"/>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="listCredentialsByType">
    <doc xml:lang="EN" title="List Credentials by type">
      <p xmlns="http://www.w3.org/1999/xhtml">List credentials by type.</p>
    </doc>
    <request>
      <param name="marker" style="query" required="false" type="xsd:string"/>
      <param name="limit" style="query" required="false" type="xsd:int"/>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:credentials">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/credentials.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/credentials.json"/>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="POST" id="updateUserCredential">
    <doc xml:lang="EN" title="Update user credential">
      <p xmlns="http://www.w3.org/1999/xhtml">Update credentials.</p>
    </doc>
    <request>
      <representation mediaType="application/xml" element="identity:credentials">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/passwordcredentials.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/passwordcredentials.json"/>
        </doc>
      </representation>
    </request>
    <response status="200">
      <representation mediaType="application/xml" element="identity:credentials">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/passwordcredentials.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/passwordcredentials.json"/>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="DELETE" id="deleteUserCredential">
    <doc xml:lang="EN" title="Delete user credential">
      <p xmlns="http://www.w3.org/1999/xhtml">Delete User credentials.</p>
    </doc>
    <response status="204"/>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getUserCredential">
    <doc xml:lang="EN" title="Get user Credentials">
      <p xmlns="http://www.w3.org/1999/xhtml">Get user credentials.</p>
    </doc>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:credentials">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/passwordcredentials.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/passwordcredentials.json"/>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <!--Roles-->
  <method name="GET" id="listRoles">
    <doc xml:lang="EN" title="List Roles">
      <p xmlns="http://www.w3.org/1999/xhtml">List roles.</p>
    </doc>
    <request>
      <param name="serviceId" style="query" required="false" type="xsd:string"/>
      <param name="marker" style="query" required="false" type="xsd:string"/>
      <param name="limit" style="query" required="false" type="xsd:int"/>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:roles">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/roles.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/roles.json"/>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="POST" id="addRole">
    <doc xml:lang="EN" title="Add Role">
      <p xmlns="http://www.w3.org/1999/xhtml">Add a Role.</p>
    </doc>
    <request>
      <representation mediaType="application/xml" element="identity:role">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/role.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/role.json"/>
        </doc>
      </representation>
    </request>
    <response status="201">
      <representation mediaType="application/xml" element="identity:role">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/role.xml"/>
        </doc>
        <param name="Location" type="xsd:anyURI" style="header"/>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/role.json"/>
        </doc>
        <param name="Location" type="xsd:anyURI" style="header"/>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getRole">
    <doc xml:lang="EN" title="Get Role">
      <p xmlns="http://www.w3.org/1999/xhtml">Get a role.</p>
    </doc>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:role"/>
      <representation mediaType="application/json"/>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="DELETE" id="deleteRole">
    <doc xml:lang="EN" title="Delete Role">
      <p xmlns="http://www.w3.org/1999/xhtml">Delete a role.</p>
    </doc>
    <response status="204"/>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <!--Service Operations-->
  <method name="GET" id="listServices">
    <doc xml:lang="EN" title="List Services">
      <p xmlns="http://www.w3.org/1999/xhtml">List services.</p>
    </doc>
    <request>
      <param name="marker" style="query" required="false" type="xsd:string"/>
      <param name="limit" style="query" required="false" type="xsd:int"/>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="OS-KSADM:services">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/services.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/services.json"/>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getService">
    <doc xml:lang="EN" title="Get Service">
      <p xmlns="http://www.w3.org/1999/xhtml">Get a service.</p>
    </doc>
    <response status="200 203">
      <representation mediaType="application/xml" element="OS-KSADM:service">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/service.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/service.json"/>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="POST" id="addService">
    <doc xml:lang="EN" title="Add Service">
      <p xmlns="http://www.w3.org/1999/xhtml">Add a service.</p>
    </doc>
    <request>
      <representation mediaType="application/xml" element="OS-KSADM:service">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/service.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/service.json"/>
        </doc>
      </representation>
    </request>
    <response status="201">
      <representation mediaType="application/xml" element="OS-KSADM:service">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/service.xml"/>
        </doc>
        <param name="Location" type="xsd:anyURI" style="header"/>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/service.json"/>
        </doc>
        <param name="Location" type="xsd:anyURI" style="header"/>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="DELETE" id="deleteService">
    <doc xml:lang="EN" title="Delete Service">
      <p xmlns="http://www.w3.org/1999/xhtml">Delete a service.</p>
    </doc>
    <response status="204"/>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
</application>]]></con:content><con:type>http://wadl.dev.java.net/2009/02</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/api.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <include schemaLocation="token.xsd"/>
  <include schemaLocation="tenant.xsd"/>
  <include schemaLocation="fault.xsd"/>
  <include schemaLocation="endpoints.xsd"/>
  <include schemaLocation="roles.xsd"/>
  <include schemaLocation="user.xsd"/>
  <include schemaLocation="credentials.xsd"/>
  <include schemaLocation="services.xsd"/>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/token.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <include schemaLocation="roles.xsd"/>
  <include schemaLocation="services.xsd"/>
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Elements-->
  <element name="access" type="identity:AuthenticateResponse"/>
  <!--Complex Types-->
  <complexType name="Token">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A token is an arbitrary bit of text that is used to access
                    resources. Each token has a scope which describes which
                    resources are accessible with it. A token may be
                    revoked at anytime and is valid for a finite duration.</p>
        <p>While Keystone supports token-based authentication in this release,
                    the intention is for it to support additional protocols in the
                    future. The desire is for it to be an integration service, and not
                    a full-fledged identity store and management solution.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/token.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/token.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
    <sequence>
      <element name="tenant" type="identity:TenantForAuthenticateResponse"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:string" use="required"/>
    <attribute name="expires" type="xsd:dateTime" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="AuthenticateResponse">
    <sequence>
      <element name="token" type="identity:Token"/>
      <element name="user" type="identity:UserForAuthenticateResponse"/>
      <element name="serviceCatalog" type="identity:ServiceCatalog" minOccurs="0"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="UserForAuthenticateResponse">
    <sequence>
      <element name="roles" type="identity:RoleList"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:string"/>
    <attribute name="name" type="xsd:string"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="TenantForAuthenticateResponse">
    <attribute name="id" type="xsd:string"/>
    <attribute name="name" type="xsd:string"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="ServiceCatalog">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>The service catalog lists the services you have access to</p>
        <div class="design">
          <p>We optimized for future flexibility around the hierarchy. So we
                    left the design as a flat list of endpoints with attributes and the
                    consumer can categorize as they need.
                    This results in potential duplication (such as with the version/@list)
                    but we acceopt that normalization cost in order to not force an
                    artificial hierarchy (suchas on region, which can be optional).</p>
        </div>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/xml" href="../samples/services.xml"/>
                     
          </xsdxt:sample>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/json" href="../samples/services.json"/>
                     
          </xsdxt:sample>
                 
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
    <sequence>
      <element name="service" type="identity:ServiceForCatalog" minOccurs="1" maxOccurs="unbounded">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>A list of services.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="ServiceForCatalog">
    <sequence>
      <element name="endpoint" type="identity:EndpointForService" minOccurs="1" maxOccurs="unbounded">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>A list of endpoints.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="type" type="identity:ExtensibleServiceType" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The OpenStack-registered type (e.g. 'compute', 'object-store', etc).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The commercial service name (e.g. 'My Nova Cloud Servers').</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <!--EndpointForService-->
  <complexType name="EndpointForService">
    <sequence>
      <element name="version" type="identity:VersionForService" maxOccurs="1" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>Version details.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="region" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The name of the region where the endpoint
                        lives. Example: airport codes; LHR (UK),
                        STL (Saint Louis)</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="tenantId" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>Tenant id to which the endpoints belong.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="publicURL" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>Public accessible service URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="internalURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A service URL, accessible only locally within that
                        cloud (generally over a high bandwidth, low latency,
                        free of charge link).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="adminURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>An Admin URL (used for administration using privileged
                        calls). This may expose
                        additional functionality not found in the public and
                        internal URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <!--VersionForService-->
  <complexType name="VersionForService">
    <attribute name="id" type="xsd:string" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>Id of the version.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="info" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>URI to get the information specific to this version.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="list" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>URI to get the information about all versions.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/atom/atom.xsd</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://www.w3.org/2005/Atom" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd"/>
  <xs:simpleType name="relation">
    <xs:restriction base="xs:string">
      <xs:enumeration value="alternate"/>
      <xs:enumeration value="appendix"/>
      <xs:enumeration value="archives"/>
      <xs:enumeration value="author"/>
      <xs:enumeration value="bookmark"/>
      <xs:enumeration value="chapter"/>
      <xs:enumeration value="contents"/>
      <xs:enumeration value="copyright"/>
      <xs:enumeration value="current"/>
      <xs:enumeration value="describedby"/>
      <xs:enumeration value="edit"/>
      <xs:enumeration value="edit-media"/>
      <xs:enumeration value="first"/>
      <xs:enumeration value="glossary"/>
      <xs:enumeration value="help"/>
      <xs:enumeration value="hub"/>
      <xs:enumeration value="icon"/>
      <xs:enumeration value="index"/>
      <xs:enumeration value="last"/>
      <xs:enumeration value="latest-version"/>
      <xs:enumeration value="license"/>
      <xs:enumeration value="monitor"/>
      <xs:enumeration value="monitor-group"/>
      <xs:enumeration value="next"/>
      <xs:enumeration value="next-arvhice"/>
      <xs:enumeration value="nofollow"/>
      <xs:enumeration value="payment"/>
      <xs:enumeration value="predecessor-version"/>
      <xs:enumeration value="prefetch"/>
      <xs:enumeration value="prev"/>
      <xs:enumeration value="previous"/>
      <xs:enumeration value="prev-archive"/>
      <xs:enumeration value="replies"/>
      <xs:enumeration value="search"/>
      <xs:enumeration value="section"/>
      <xs:enumeration value="self"/>
      <xs:enumeration value="service"/>
      <xs:enumeration value="start"/>
      <xs:enumeration value="stylesheet"/>
      <xs:enumeration value="subsection"/>
      <xs:enumeration value="successor-version"/>
      <xs:enumeration value="up"/>
      <xs:enumeration value="version-history"/>
      <xs:enumeration value="via"/>
      <xs:enumeration value="working-copy"/>
      <xs:enumeration value="working-copy-of"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="link" type="atom:link"/>
  <xs:complexType name="link">
    <xs:annotation>
      <xs:documentation>
        <html:p>
          See section 3.4 of the ATOM RFC
          <html:a href="http://tools.ietf.org/html/rfc4287">RFC4287</html:a>
        </html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="rel" use="required" type="atom:relation">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="type" use="optional" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="href" use="required" type="xs:anyURI">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="hreflang" use="optional" type="xs:NMTOKEN">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="title" use="optional" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/atom/xml.xsd</con:url><con:content><![CDATA[<?xml-stylesheet href="../2008/09/xsd.xsl" type="text/xsl"?>
<xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
  <xs:annotation>
    <xs:documentation>
      <div>
        <h1>About the XML namespace</h1>
        <div class="bodytext">
          <p>This schema document describes the XML namespace, in a form
      suitable for import by other schema documents.</p>
          <p>
            See
            <a href="http://www.w3.org/XML/1998/namespace.html">http://www.w3.org/XML/1998/namespace.html</a>
            and
            <a href="http://www.w3.org/TR/REC-xml">http://www.w3.org/TR/REC-xml</a>
            for information 
      about this namespace.
          </p>
          <p>Note that local names in this namespace are intended to be
      defined only by the World Wide Web Consortium or its subgroups.
      The names currently defined in this namespace are listed below.
      They should not be used with conflicting semantics by any Working
      Group, specification, or document instance.</p>
          <p>
            See further below in this document for more information about
            <a href="#usage">how to refer to this schema document from your own
      XSD schema documents</a>
            and about
            <a href="#nsversioning">the
      namespace-versioning policy governing this schema document</a>
            .
          </p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>lang (as an attribute name)</h3>
          <p>denotes an attribute whose value
       is a language code for the natural language of the content of
       any element; its value is inherited.  This name is reserved
       by virtue of its definition in the XML specification.</p>
        </div>
        <div>
          <h4>Notes</h4>
          <p>Attempting to install the relevant ISO 2- and 3-letter
      codes as the enumerated possible values is probably never
      going to be a realistic possibility.</p>
          <p>
            See BCP 47 at
            <a href="http://www.rfc-editor.org/rfc/bcp/bcp47.txt">http://www.rfc-editor.org/rfc/bcp/bcp47.txt</a>
            and the IANA language subtag registry at
            <a href="http://www.iana.org/assignments/language-subtag-registry">http://www.iana.org/assignments/language-subtag-registry</a>
            for further information.
          </p>
          <p>The union allows for the 'un-declaration' of xml:lang with
      the empty string.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:union memberTypes="xs:language">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value=""/>
          </xs:restriction>
        </xs:simpleType>
      </xs:union>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="space">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>space (as an attribute name)</h3>
          <p>denotes an attribute whose
       value is a keyword indicating what whitespace processing
       discipline is intended for the content of the element; its
       value is inherited.  This name is reserved by virtue of its
       definition in the XML specification.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>base (as an attribute name)</h3>
          <p>denotes an attribute whose value
       provides a URI to be used as the base for interpreting any
       relative URIs in the scope of the element on which it
       appears; its value is inherited.  This name is reserved
       by virtue of its definition in the XML Base specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xmlbase/">http://www.w3.org/TR/xmlbase/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="id" type="xs:ID">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>id (as an attribute name)</h3>
          <p>denotes an attribute whose value
       should be interpreted as if declared to be of type ID.
       This name is reserved by virtue of its definition in the
       xml:id specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xml-id/">http://www.w3.org/TR/xml-id/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
    <xs:attribute ref="xml:id"/>
  </xs:attributeGroup>
  <xs:annotation>
    <xs:documentation>
      <div>
        <h3>Father (in any context at all)</h3>
        <div class="bodytext">
          <p>denotes Jon Bosak, the chair of 
      the original XML Working Group.  This name is reserved by 
      the following decision of the W3C XML Plenary and 
      XML Coordination groups:</p>
          <blockquote>
            <p>In appreciation for his vision, leadership and
	dedication the W3C XML Plenary on this 10th day of
	February, 2000, reserves for Jon Bosak in perpetuity
	the XML name "xml:Father".</p>
          </blockquote>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>
      <div xml:id="usage" id="usage">
        <h2>
          <a name="usage">About this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            This schema defines attributes and an attribute group suitable
      for use by schemas wishing to allow
            <code>xml:base</code>
            ,
            <code>xml:lang</code>
            ,
            <code>xml:space</code>
            or
            <code>xml:id</code>
            attributes on elements they define.
          </p>
          <p>To enable this, such a schema must import this schema for
      the XML namespace, e.g. as follows:</p>
          <pre>&lt;schema . . .>
           . . .
           &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2001/xml.xsd"/></pre>
          <p>or</p>
          <pre>&lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2009/01/xml.xsd"/></pre>
          <p>Subsequently, qualified reference to any of the attributes or the
      group defined below will have the desired effect, e.g.</p>
          <pre>&lt;type . . .>
           . . .
           &lt;attributeGroup ref="xml:specialAttrs"/></pre>
          <p>will define a type which will schema-validate an instance element
      with any of those attributes.</p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>
      <div id="nsversioning" xml:id="nsversioning">
        <h2>
          <a name="nsversioning">Versioning policy for this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            In keeping with the XML Schema WG's standard versioning
      policy, this schema document will persist at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            .
          </p>
          <p>
            At the date of issue it can also be found at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            .
          </p>
          <p>
            The schema document at that URI may however change in the future,
      in order to remain compatible with the latest version of XML
      Schema itself, or with the XML namespace itself.  In other words,
      if the XML Schema or XML namespaces change, the version of this
      document at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            will change accordingly; the version at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            will not change.
          </p>
          <p>Previous dated (and unchanging) versions of this schema 
      document are at:</p>
          <ul>
            <li>
              <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2007/08/xml.xsd">http://www.w3.org/2007/08/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2004/10/xml.xsd">http://www.w3.org/2004/10/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2001/03/xml.xsd">http://www.w3.org/2001/03/xml.xsd</a>
            </li>
          </ul>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/roles.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Elements-->
  <element name="roles" type="identity:RoleList">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A list of roles.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="role" type="identity:Role">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A role.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="Role">
    <sequence>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:string" use="optional"/>
    <attribute name="name" type="xsd:string" use="required"/>
    <attribute name="description" type="xsd:string" use="optional"/>
    <attribute name="serviceId" type="xsd:string" use="optional"/>
    <attribute name="tenantId" type="xsd:string" use="optional"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="RoleList">
    <sequence>
      <element name="role" type="identity:Role" minOccurs="0" maxOccurs="unbounded"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/services.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Simple Types-->
  <simpleType name="ExtensibleServiceType">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>
          An extensible service type allows all of the
                    strings defined in
          <a href="#type_ServiceType" title="See definition of                         ServiceType">ServiceType</a>
          or an
                    alias prefixed status.
        </p>
      </xsd:documentation>
    </annotation>
    <union memberTypes="identity:ServiceType identity:ExtendedService"/>
  </simpleType>
  <simpleType name="ServiceType">
    <restriction base="xsd:string">
      <enumeration value="compute">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>The type for an OpenStack Compute API 1.1 compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="object-store">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>The type for a Swift-compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="image-service">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>The type for a Glance-compatible service</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="identity">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>The type for a Keystone-compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
    </restriction>
  </simpleType>
  <simpleType name="ExtendedService">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A non-core service type which must contain an extension prefix.</p>
      </xsd:documentation>
    </annotation>
    <restriction base="xsd:string">
      <pattern value="(\w|-)+:\w+"/>
    </restriction>
  </simpleType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/tenant.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Elements-->
  <element name="tenant" type="identity:Tenant">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A container used to group or isolate resources and/or identity
                  objects. Depending on the service operator, a tenant may map to a customer,
                  account, organization, or project.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/xml" href="../samples/tenant.xml"/>
                     
          </xsdxt:sample>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/json" href="../samples/tenant.json"/>
                     
          </xsdxt:sample>
                 
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="tenants" type="identity:Tenants">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A list of tenants.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="Tenants">
    <sequence>
      <element name="tenant" type="identity:Tenant" maxOccurs="100"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="Tenant">
    <sequence>
      <element name="description" type="xsd:string">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>An free text description of the tenant.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:ID" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>An ID uniquely identifying the tenant. This usually comes from the back-end store.
                        This value is guaranteed to be unique and immutable (it will never change).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="name" type="xsd:string" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The name of the tenant. This is guaranteed to be unique, but may change.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="enabled" type="xsd:boolean" use="optional" default="true">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>An boolean signifying if a tenant is enabled or not. A disabled tenant
                        cannot be authenticated against.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="display-name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A human-readable, friendly name for use in user interfaces.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute type="xsd:dateTime" name="updated" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A time-stamp identifying the modification time of the
                        tenant.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute type="xsd:dateTime" name="created" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A creation time-stamp for the tenant.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/fault.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!--Fault Elements-->
  <element name="identityFault" type="identity:IdentityFault"/>
  <element name="serviceUnavailable" type="identity:ServiceUnavailableFault"/>
  <element name="badRequest" type="identity:BadRequestFault"/>
  <element name="unauthorized" type="identity:UnauthorizedFault"/>
  <element name="overLimit" type="identity:OverLimitFault"/>
  <element name="userDisabled" type="identity:UserDisabledFault"/>
  <element name="forbidden" type="identity:ForbiddenFault"/>
  <element name="itemNotFound" type="identity:ItemNotFoundFault"/>
  <element name="tenantConflict" type="identity:TenantConflictFault"/>
  <!--Fault Types-->
  <complexType name="IdentityFault">
    <sequence>
      <element name="message" type="xsd:string">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>A human readable message that is appropriate for display
                            to the end user.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element name="details" type="xsd:string" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>The optional &lt;details> element may contain useful
                            information for tracking down errors (e.g a stack
                            trace).  This information may or may not be appropriate
                            for display to an end user.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="code" type="xsd:int" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The HTTP status code associated with the current fault.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="ServiceUnavailableFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="BadRequestFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="UnauthorizedFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="UserDisabledFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="ForbiddenFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="ItemNotFoundFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="TenantConflictFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="OverLimitFault">
    <complexContent>
      <extension base="identity:IdentityFault">
        <attribute name="retryAt" type="xsd:dateTime" use="optional">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
              <p>An optional dateTime denoting when an operation should
                                be retried.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
      </extension>
    </complexContent>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/endpoints.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <include schemaLocation="api.xsd"/>
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <element name="endpoint" type="identity:Endpoint">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>An Endpoint.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="endpoints" type="identity:EndpointList">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A list of Endpoints.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="Endpoint">
    <sequence>
      <element name="version" type="identity:VersionForService" maxOccurs="1" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>Version details.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:int" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>An ID uniquely identifying the Endpoint.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="type" type="identity:ExtensibleServiceType" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The OpenStack-registered type (e.g. 'compute', 'object-store', etc).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The commercial service name (e.g. 'My Nova Cloud Servers').</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="region" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The region of Endpoint Template.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="publicURL" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The public URL to access represented service.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="internalURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The internal version of the public URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="adminURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The admin URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="tenantId" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>Tenant id to which the endpoints belong.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="EndpointList">
    <sequence>
      <element name="endpoint" type="identity:Endpoint" minOccurs="0" maxOccurs="unbounded"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/user.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:atom="http://www.w3.org/2005/Atom">
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Elements-->
  <element name="users" type="identity:UserList">
    <annotation>
      <xsd:documentation xml:lang="EN">
        <p>A list of Users.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="user" type="identity:User">
    <annotation>
      <xsd:documentation xml:lang="EN">
        <p>A Keystone User.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="User">
    <attribute name="id" type="xsd:ID" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>An automatically generated, unique, immutable (it will never change) identifier
                        for the user. This is generated by the backend this user is stored in.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="username" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A unique, mutable (it can change) user name that may be used by the user
                        an identifier when presenting credentials.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="email" type="xsd:string" use="optional"/>
    <attribute name="enabled" type="xsd:boolean" default="true" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A true/false value that determines if the user may authenticate or not.
                        If enabled is false, the user will not be able to authenticate.
                        How this value is stored or generated is dependent on the backend in use.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="display-name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A human-readable, friendly name for use in user interfaces.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="updated" type="xsd:dateTime" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A time-stamp identifying the modification time of the
                        user.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="created" type="xsd:dateTime" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A creation time-stamp for the user.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="UserList">
    <sequence>
      <element name="user" type="identity:User" minOccurs="0" maxOccurs="unbounded"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/credentials.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Elements-->
  <element name="auth" type="identity:AuthenticationRequest"/>
  <element name="credential" type="identity:CredentialType"/>
  <element name="credentials" type="identity:CredentialListType"/>
  <element name="passwordCredentials" type="identity:PasswordCredentialsRequiredUsername" substitutionGroup="identity:credential"/>
  <!--Complex Types-->
  <complexType name="CredentialType" abstract="true">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>Base type for credential in Keystone.</p>
      </xsd:documentation>
    </annotation>
    <sequence>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="AuthenticationRequest">
    <sequence>
      <choice>
        <element ref="identity:credential" minOccurs="1"/>
        <element name="token" type="identity:TokenForAuthenticationRequest"/>
      </choice>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="tenantId" type="xsd:string" use="optional"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="TokenForAuthenticationRequest">
    <attribute name="id" type="xsd:string" use="required"/>
  </complexType>
  <complexType name="PasswordCredentialsBase">
    <complexContent>
      <extension base="identity:CredentialType">
        <attribute name="username" type="xsd:string" use="optional"/>
        <attribute name="password" type="xsd:string" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="PasswordCredentialsWithoutUsername">
    <complexContent>
      <restriction base="identity:PasswordCredentialsBase">
        <attribute name="username" type="xsd:string" use="prohibited"/>
        <attribute name="password" type="xsd:string" use="required"/>
      </restriction>
    </complexContent>
  </complexType>
  <complexType name="PasswordCredentialsRequiredUsername">
    <complexContent>
      <restriction base="identity:PasswordCredentialsBase">
        <attribute name="username" type="xsd:string" use="required"/>
        <attribute name="password" type="xsd:string" use="required"/>
      </restriction>
    </complexContent>
  </complexType>
  <complexType name="CredentialListType">
    <sequence>
      <element ref="identity:credential" minOccurs="1" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/api-common.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/common/api/v1.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <annotation>
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xsdxt:title>Open Stack Common API Schema Types 1.0</xsdxt:title>
      <xsdxt:link rev="index" href="extensions.xsd"/>
      <xsdxt:link rev="index" href="limits.xsd"/>
      <xsdxt:link rev="index" href="version.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <p>This is the main index XML Schema document
                for Common API Schema Types Version 1.0.</p>
    </xsd:documentation>
  </annotation>
  <include schemaLocation="extensions.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>Types related to extensions.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <include schemaLocation="version.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>Types related to API version details.</p>
      </xsd:documentation>
    </annotation>
  </include>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/extensions.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<xsd:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/common/api/v1.0" xmlns:ext="http://docs.openstack.org/common/api/v1.0" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!--Import ATOM specific schema definitions-->
  <xsd:import namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <xsd:element name="extensions" type="ext:Extensions"/>
  <xsd:element name="extension" type="ext:Extension"/>
  <xsd:complexType name="Extensions">
    <xsd:sequence>
      <xsd:element name="extension" type="ext:Extension" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
  </xsd:complexType>
  <xsd:complexType name="Extension">
    <xsd:sequence>
      <xsd:element name="description" type="xsd:string" minOccurs="1"/>
      <!--<xsd:element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded" />-->
      <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="name" type="xsd:string" use="required"/>
    <xsd:attribute name="namespace" type="xsd:anyURI" use="required"/>
    <xsd:attribute name="alias" type="ext:Alias" use="required"/>
    <xsd:attribute name="updated" type="xsd:dateTime" use="optional"/>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
    <!--TODO(Ziad)resolve asser issue
            <xsd:assert vc:minVersion="1.1" test="atom:link[@rel='describedby']">
            <xsd:annotation>
                <xsd:documentation
                    xml:lang="EN"
                    xmlns="http://www.w3.org/1999/xhtml">
                    <p>
                        There should be at least one atom link
                        with a describedby relation.
                    </p>
                </xsd:documentation>
            </xsd:annotation>
        </xsd:assert>-->
  </xsd:complexType>
  <xsd:simpleType name="Alias">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="\w+\-\w+"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/version.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<xs:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/common/api/v1.0" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:annotation>
    <xs:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Version Types</xsdxt:title>
      <xsdxt:link rel="index" href="api-common.xsd"/>
    </xs:appinfo>
    <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>This schema file defines all types related to versioning.</p>
    </xs:documentation>
  </xs:annotation>
  <!--Import ATOM specific schema definitions-->
  <xs:import namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Multiple choices-->
  <xs:element name="choices" type="vers:VersionChoiceList">
    <xs:annotation>
      <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>This element is returned when the version of the
                    resource cannot be determined. The element
                    provides a list of choices for the resource.</p>
      </xs:documentation>
      <xs:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/choices.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/choices.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <!--Versioning-->
  <xs:element name="versions" type="vers:VersionChoiceList">
    <xs:annotation>
      <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Provides a list of supported versions.</p>
      </xs:documentation>
      <xs:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/versions.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/versions.json"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/atom+xml" href="../samples/versions-atom.xml"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <xs:element name="version" type="vers:VersionChoice" vc:minVersion="1.0" vc:maxVersion="1.1">
    <xs:annotation>
      <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>This element provides detailed meta information
                    regarding the status of the current API version.
                    This is the XSD 1.0 compatible element definition.</p>
      </xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="version2" type="vers:VersionChoiceRoot" vc:minVersion="1.1">
    <xs:annotation>
      <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>This element provides detailed meta information
                    regarding the status of the current API
                    version. The description should include a pointer
                    to both a human readable and a machine processable
                    description of the API service.</p>
      </xs:documentation>
      <xs:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/version.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/version.json"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/atom+xml" href="../samples/version-atom.xml"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <!--Types-->
  <xs:simpleType name="VersionStatus">
    <xs:annotation>
      <xs:documentation>
        <html:p>The VersionStatus type describes a service's operational status.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="ALPHA">
        <xs:annotation>
          <xs:documentation>
            <html:p>This is a new service the API. Thi API
                            contract may be set, but the implementaiton
                            may not be 100% complient with it. Developers
                            are encouraged to begin testing aganst an
                            ALPHA version to provide feedback.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BETA">
        <xs:annotation>
          <xs:documentation>
            <html:p>A status of BETA indicates that this
                            version is a candidate for the next major
                            release and may feature functionality not
                            available in the current
                            version. Developers are encouraged to test
                            and begin the migration processes to a
                            BETA version. Note that a BETA version is
                            undergoing testing, it has not been
                            officially released, and my not be stable.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CURRENT">
        <xs:annotation>
          <xs:documentation>
            <html:p>The API version is stable and has been
                            tested. Developers are encouraged to
                            develop against this API version. The
                            current released version of the API will
                            always be marked as CURRENT.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="DEPRECATED">
        <xs:annotation>
          <xs:documentation>
            <html:p>A status of DEPRECATED indicates that a
                            newer version of the API is
                            available. Application developers are
                            discouraged from using this version and
                            should instead develop against the latest
                            current version of the API.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="VersionChoiceList">
    <xs:annotation>
      <xs:documentation>
        <html:p>A version choice list outlines a collection of
                    resources at various versions.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="version" type="vers:VersionChoice" minOccurs="1" maxOccurs="unbounded"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
    <!--TODO(Ziad)resolve assert issue
            <xs:assert vc:minVersion="1.1" test="every $v in vers:version satisfies $v/atom:link[@rel='self']">
            <xs:annotation>
                <xs:documentation>
                    <html:p>
                        In version lists, every single version must
                        contain at least one self link.
                    </html:p>
                </xs:documentation>
            </xs:annotation>
        </xs:assert>-->
  </xs:complexType>
  <xs:complexType name="VersionChoiceRoot" vc:minVersion="1.1">
    <xs:complexContent>
      <xs:extension base="vers:VersionChoice">
        <!--TODO(Ziad)resolve asser issue
                    <xs:assert test="atom:link[@rel='describedby']">
                    <xs:annotation>
                        <xs:documentation>
                            <html:p>
                                When used as a root element, a version choice
                                must contain at least one describedby link.
                            </html:p>
                        </xs:documentation>
                    </xs:annotation>
                </xs:assert>-->
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="VersionChoice">
    <xs:annotation>
      <xs:documentation>
        <html:p>A version choice contains relevant information
                    about an available service that a user can then
                    use to target a specific version of the service.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="media-types" type="vers:MediaTypeList" minOccurs="0" maxOccurs="1"/>
      <!--<xs:element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded" />-->
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>
          <html:p>The ID of a version choice represents the service version's unique 
                        identifier. This ID is guaranteed to be unique only among the
                        service version choices outlined in the VersionChoiceList.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="status" type="vers:VersionStatus" use="required">
      <xs:annotation>
        <xs:documentation>
          <html:p>A version choice's status describes the current operational state of
                        the given service version. The operational status is captured in a
                        simple type enumeration called VersionStatus.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="updated" type="xs:dateTime" use="optional">
      <xs:annotation>
        <xs:documentation>
          <html:p>
            A version choice's updated attribute describes
                        the time when the version was updated. The
                        time should be updated anytime
            <html:strong>anything</html:strong>
            in the
                        version has changed: documentation,
                        extensions, bug fixes.
          </html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:complexType name="MediaTypeList">
    <xs:annotation>
      <xs:documentation>
        <html:p>A MediaTypeList outlines a collection of valid media types for a given 
                    service version.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="media-type" type="vers:MediaType" minOccurs="1" maxOccurs="unbounded"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:complexType name="MediaType">
    <xs:annotation>
      <xs:documentation>
        <html:p>A MediaType describes what content types the service version understands.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="base" type="xs:string" use="optional" default="">
      <xs:annotation>
        <xs:documentation>
          <html:p>The base of a given media type describes the
                        simple MIME type that then a more complicated
                        media type can be derived from. These types
                        are basic and provide no namespace or version
                        specific data are are only provided as a
                        convenience.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="type" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>
          <html:p>The type attribute of a MediaType describes
                        the MIME specific identifier of the media type
                        in question.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/OS-KSADM.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:OS-KSADM="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <import namespace="http://docs.openstack.org/identity/api/v2.0" schemaLocation="api.xsd"/>
  <!--Elements-->
  <element name="services" type="OS-KSADM:ServiceList">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A list of services.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="service" type="OS-KSADM:Service">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A service.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="extensibleCredentialsType" type="OS-KSADM:ExtensibleCredentialsType">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>An extensible credentials type.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="Service">
    <attribute name="id" type="xsd:string" use="required"/>
    <attribute name="type" type="identity:ExtensibleServiceType" use="required"/>
    <attribute name="description" type="xsd:string" use="optional"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="ServiceList">
    <sequence>
      <element name="service" type="OS-KSADM:Service" minOccurs="0" maxOccurs="unbounded"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <simpleType name="PasswordCredentialsType">
    <restriction base="xsd:string">
      <enumeration value="password"/>
    </restriction>
  </simpleType>
  <simpleType name="ExtensionCredentialsType">
    <restriction base="xsd:string">
      <pattern value="(\w|-)+-\w+"/>
    </restriction>
  </simpleType>
  <simpleType name="ExtensibleCredentialsType">
    <union memberTypes="OS-KSADM:PasswordCredentialsType OS-KSADM:ExtensionCredentialsType"/>
  </simpleType>
  <!--Complex Types-->
  <complexType name="UserWithOnlyEnabled">
    <complexContent>
      <restriction base="identity:User">
        <attribute name="id" type="xsd:ID" use="prohibited"/>
        <attribute name="email" type="xsd:string" use="prohibited"/>
        <attribute name="username" type="xsd:ID" use="prohibited"/>
        <attribute name="enabled" type="xsd:boolean" use="required"/>
      </restriction>
    </complexContent>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>${#Project#Endpoint}</con:endpoint></con:endpoints><con:resource name="v2.0" path="${#Project#path}"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="users" path="users"><con:settings/><con:parameters/><con:resource name="{userId}" path="{userId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>userId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="roles" path="roles"><con:settings/><con:parameters/><con:resource name="OS-KSADM" path="OS-KSADM"><con:settings/><con:parameters/><con:resource name="{roleId}" path="{roleId}"><con:settings/><con:parameters><con:parameter><con:name>roleId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Add Global roles to a user. - addUserRole" method="PUT"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Get user Role - getUserRole" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:role</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete Global Roles on User. - deleteUserRole" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource><con:method name="List Global Roles for a User - listUserRoles" method="GET"><con:settings/><con:parameters><con:parameter><con:name>serviceId</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:roles</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="OS-KSADM" path="OS-KSADM"><con:settings/><con:parameters/><con:resource name="enabled" path="enabled"><con:settings/><con:parameters/><con:method name="Set user enabled. - setUserEnabled" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="credentials" path="credentials"><con:settings/><con:parameters/><con:resource name="{credential-type}" path="{credential-type}"><con:settings/><con:parameters><con:parameter><con:name>credential-type</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="Update user credential - updateUserCredential" method="POST"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/xml" postQueryString="false"><con:settings/><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="Delete user credential - deleteUserCredential" method="DELETE"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/xml"><con:settings/><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="Get user Credentials - getUserCredential" method="GET"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/xml"><con:settings/><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:method name="Add user Credential. - addUserCredential" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:5001</con:endpoint><con:request>&lt;v2:credentials xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="List Credentials - listCredentials" method="GET"><con:settings/><con:parameters><con:parameter><con:name>marker</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource><con:method name="Update user - updateUser" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:5001</con:endpoint><con:request>&lt;v2:user xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="Delete user - deleteUser" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="Update user w/ password" method="POST"><con:settings/><con:parameters><con:parameter><con:name>X-Auth-Token</con:name><con:value/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:request name="Request 1" mediaType="application/xml" postQueryString="false"><con:settings/><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:method name="List users - listUsers" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:userss</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Add user - addUser" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:5001</con:endpoint><con:request>&lt;v2:user xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="Add User w/ password" method="POST"><con:settings/><con:parameters><con:parameter><con:name>X-Auth-Token</con:name><con:value/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:request name="Request 1" mediaType="application/xml" postQueryString="false"><con:settings/><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="tenants" path="tenants"><con:settings/><con:parameters/><con:resource name="{tenantId}" path="{tenantId}"><con:settings/><con:parameters><con:parameter><con:name>tenantId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="OS-KSADM" path="OS-KSADM"><con:settings/><con:parameters/><con:resource name="roles" path="roles"><con:settings/><con:parameters/><con:method name="List roles for a Tenant. - listRolesForTenant" method="GET"><con:settings/><con:parameters><con:parameter><con:name>marker</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:roles</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource><con:resource name="users" path="users"><con:settings/><con:parameters/><con:resource name="{userId}" path="{userId}"><con:settings/><con:parameters><con:parameter><con:name>userId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="roles" path="roles"><con:settings/><con:parameters/><con:resource name="OS-KSADM" path="OS-KSADM"><con:settings/><con:parameters/><con:resource name="{roleId}" path="{roleId}"><con:settings/><con:parameters><con:parameter><con:name>roleId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Add roles to a user on a tenant. - addRolesToUserOnTenant" method="PUT"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete roles from a user on tenant. - deleteRoleFromUserOnTenant" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource></con:resource><con:method name="List users for a Tenant. - listUsersForTenant" method="GET"><con:settings/><con:parameters><con:parameter><con:name>marker</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:users</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="List user with role for tenant. - listUsersWithRoleForTenant" method="GET"><con:settings/><con:parameters><con:parameter required="true"><con:name>roleId</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>marker</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:users</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Update Tenant - updateTenant" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:tenant</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:tenant</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete a Tenant - deleteTenant" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Add Tenant - addTenant" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:tenant</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:tenant</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="OS-KSADM" path="OS-KSADM"><con:settings/><con:parameters/><con:resource name="roles" path="roles"><con:settings/><con:parameters/><con:resource name="{roleId}" path="{roleId}"><con:settings/><con:parameters><con:parameter><con:name>roleId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Get Role - getRole" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:role</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete Role - deleteRole" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="List Roles - listRoles" method="GET"><con:settings/><con:parameters><con:parameter><con:name>serviceId</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>marker</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:roles</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Add Role - addRole" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:role</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:role</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:5001</con:endpoint><con:request>&lt;v2:role xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="services" path="services"><con:settings/><con:parameters/><con:resource name="{serviceId}" path="{serviceId}"><con:settings/><con:parameters><con:parameter><con:name>serviceId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Get Service - getService" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0">v1:service</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete Service - deleteService" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="List Services - listServices" method="GET"><con:settings/><con:parameters><con:parameter><con:name>marker</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0">v1:services</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Add Service - addService" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0">v1:service</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0">v1:service</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="RAX-KSKEY-admin" type="rest" basePath="" definitionUrl="/home/jorge/projects/keystone/keystone/content/admin/RAX-KSKEY-admin-auth2.0.wadl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/home/jorge/projects/keystone/keystone/content/admin/RAX-KSKEY-admin-auth2.0.wadl"><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/admin/RAX-KSKEY-admin-auth2.0.wadl</con:url><con:content><![CDATA[<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<!--*******************************************************-->
<!--Import Common XML Entities-->
<!---->
<!--You can resolve the entites with xmllint-->
<!---->
<!--xmllint -noent RAX-KSKEY-admin.wadl-->
<!--*******************************************************-->
<!--A collection of common faults, these are pretty much expected
         in every request.-->
<!--Faults on GET-->
<!--Faults on POST/PUT-->
<application xsi:schemaLocation="http://docs.openstack.org/identity/api/v2.0 ../common/xsd/api.xsd   http://docs.openstack.org/common/api/v1.0 ../common/xsd/api-common.xsd   http://wadl.dev.java.net/2009/02 http://www.w3.org/Submission/wadl/wadl.xsd   http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0 ../common/xsd/RAX-KSKEY-credentials.xsd   " xmlns="http://wadl.dev.java.net/2009/02" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:RAX-KSKEY="http://docs.openstack.org/identity/api/ext/RAX-KSKEY/v1.0" xmlns:capi="http://docs.openstack.org/common/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0">
  <grammars>
    <include href="../common/xsd/api.xsd"/>
    <include href="../common/xsd/api-common.xsd"/>
    <include href="../common/xsd/RAX-KSKEY-credentials.xsd"/>
  </grammars>
  <!--*******************************************************-->
  <!--All Resoruces-->
  <!--*******************************************************-->
  <!--We should use SSL in production-->
  <resources base="http://localhost:5001">
    <resource id="version" path="v2.0">
      <param name="X-Auth-Token" style="header" type="xsd:string" required="true">
        <doc>You need a valid admin token for access.</doc>
      </param>
      <resource id="users" path="users">
        <resource id="userById" path="{userId}">
          <param name="userId" style="template" required="true" type="xsd:string"/>
          <resource id="user-OS-KSADM" path="OS-KSADM">
            <resource id="userCredentials" path="credentials">
              <method href="#addUserCredential"/>
              <method href="#listCredentials"/>
              <resource id="userCredentialsByType" path="RAX-KSKEY:apiKeyCredentials">
                <method href="#updateUserCredential"/>
                <method href="#deleteUserCredential"/>
                <method href="#getUserCredential"/>
              </resource>
            </resource>
          </resource>
        </resource>
      </resource>
    </resource>
  </resources>
  <!--*******************************************************-->
  <!--All Methods-->
  <!--*******************************************************-->
  <!--User Credentials-->
  <method name="POST" id="addUserCredential">
    <doc xml:lang="EN" title="Add user Credential.">
      <p xmlns="http://www.w3.org/1999/xhtml">Adds a credential to a user.</p>
    </doc>
    <request>
      <representation mediaType="application/xml" element="identity:credentials">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/apiKeyCredentials.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/apiKeyCredentials.json"/>
        </doc>
      </representation>
    </request>
    <response status="201">
      <representation mediaType="application/xml" element="identity:credentials">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/apiKeyCredentials.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/apiKeyCredentials.json"/>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="listCredentials">
    <doc xml:lang="EN" title="List Credentials">
      <p xmlns="http://www.w3.org/1999/xhtml">List credentials.</p>
    </doc>
    <request>
      <param name="marker" style="query" required="false" type="xsd:string"/>
      <param name="limit" style="query" required="false" type="xsd:int"/>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:credentials">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/credentialswithapikey.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/credentialswithapikey.json"/>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="listCredentialsByType">
    <doc xml:lang="EN" title="List Credentials by type">
      <p xmlns="http://www.w3.org/1999/xhtml">List credentials by type.</p>
    </doc>
    <request>
      <param name="marker" style="query" required="false" type="xsd:string"/>
      <param name="limit" style="query" required="false" type="xsd:int"/>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:credentials">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/credentials.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/credentials.json"/>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="POST" id="updateUserCredential">
    <doc xml:lang="EN" title="Update user credential">
      <p xmlns="http://www.w3.org/1999/xhtml">Update credentials.</p>
    </doc>
    <request>
      <representation mediaType="application/xml" element="identity:credentials">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/apiKeyCredentials.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/apiKeyCredentials.json"/>
        </doc>
      </representation>
    </request>
    <response status="200">
      <representation mediaType="application/xml" element="identity:credentials">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/apiKeyCredentials.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/apiKeyCredentials.json"/>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="DELETE" id="deleteUserCredential">
    <doc xml:lang="EN" title="Delete user credential">
      <p xmlns="http://www.w3.org/1999/xhtml">Delete User credentials.</p>
    </doc>
    <response status="204"/>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getUserCredential">
    <doc xml:lang="EN" title="Get user Credentials">
      <p xmlns="http://www.w3.org/1999/xhtml">Get user credentials.</p>
    </doc>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:credentials">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/apiKeyCredentials.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/apiKeyCredentials.json"/>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
</application>]]></con:content><con:type>http://wadl.dev.java.net/2009/02</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/api.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <include schemaLocation="token.xsd"/>
  <include schemaLocation="tenant.xsd"/>
  <include schemaLocation="fault.xsd"/>
  <include schemaLocation="endpoints.xsd"/>
  <include schemaLocation="roles.xsd"/>
  <include schemaLocation="user.xsd"/>
  <include schemaLocation="credentials.xsd"/>
  <include schemaLocation="services.xsd"/>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/token.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <include schemaLocation="roles.xsd"/>
  <include schemaLocation="services.xsd"/>
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Elements-->
  <element name="access" type="identity:AuthenticateResponse"/>
  <!--Complex Types-->
  <complexType name="Token">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A token is an arbitrary bit of text that is used to access
                    resources. Each token has a scope which describes which
                    resources are accessible with it. A token may be
                    revoked at anytime and is valid for a finite duration.</p>
        <p>While Keystone supports token-based authentication in this release,
                    the intention is for it to support additional protocols in the
                    future. The desire is for it to be an integration service, and not
                    a full-fledged identity store and management solution.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/token.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/token.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
    <sequence>
      <element name="tenant" type="identity:TenantForAuthenticateResponse"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:string" use="required"/>
    <attribute name="expires" type="xsd:dateTime" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="AuthenticateResponse">
    <sequence>
      <element name="token" type="identity:Token"/>
      <element name="user" type="identity:UserForAuthenticateResponse"/>
      <element name="serviceCatalog" type="identity:ServiceCatalog" minOccurs="0"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="UserForAuthenticateResponse">
    <sequence>
      <element name="roles" type="identity:RoleList"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:string"/>
    <attribute name="name" type="xsd:string"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="TenantForAuthenticateResponse">
    <attribute name="id" type="xsd:string"/>
    <attribute name="name" type="xsd:string"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="ServiceCatalog">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>The service catalog lists the services you have access to</p>
        <div class="design">
          <p>We optimized for future flexibility around the hierarchy. So we
                    left the design as a flat list of endpoints with attributes and the
                    consumer can categorize as they need.
                    This results in potential duplication (such as with the version/@list)
                    but we acceopt that normalization cost in order to not force an
                    artificial hierarchy (suchas on region, which can be optional).</p>
        </div>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/xml" href="../samples/services.xml"/>
                     
          </xsdxt:sample>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/json" href="../samples/services.json"/>
                     
          </xsdxt:sample>
                 
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
    <sequence>
      <element name="service" type="identity:ServiceForCatalog" minOccurs="1" maxOccurs="unbounded">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>A list of services.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="ServiceForCatalog">
    <sequence>
      <element name="endpoint" type="identity:EndpointForService" minOccurs="1" maxOccurs="unbounded">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>A list of endpoints.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="type" type="identity:ExtensibleServiceType" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The OpenStack-registered type (e.g. 'compute', 'object-store', etc).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The commercial service name (e.g. 'My Nova Cloud Servers').</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <!--EndpointForService-->
  <complexType name="EndpointForService">
    <sequence>
      <element name="version" type="identity:VersionForService" maxOccurs="1" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>Version details.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="region" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The name of the region where the endpoint
                        lives. Example: airport codes; LHR (UK),
                        STL (Saint Louis)</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="tenantId" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>Tenant id to which the endpoints belong.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="publicURL" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>Public accessible service URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="internalURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A service URL, accessible only locally within that
                        cloud (generally over a high bandwidth, low latency,
                        free of charge link).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="adminURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>An Admin URL (used for administration using privileged
                        calls). This may expose
                        additional functionality not found in the public and
                        internal URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <!--VersionForService-->
  <complexType name="VersionForService">
    <attribute name="id" type="xsd:string" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>Id of the version.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="info" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>URI to get the information specific to this version.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="list" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>URI to get the information about all versions.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/atom/atom.xsd</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://www.w3.org/2005/Atom" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd"/>
  <xs:simpleType name="relation">
    <xs:restriction base="xs:string">
      <xs:enumeration value="alternate"/>
      <xs:enumeration value="appendix"/>
      <xs:enumeration value="archives"/>
      <xs:enumeration value="author"/>
      <xs:enumeration value="bookmark"/>
      <xs:enumeration value="chapter"/>
      <xs:enumeration value="contents"/>
      <xs:enumeration value="copyright"/>
      <xs:enumeration value="current"/>
      <xs:enumeration value="describedby"/>
      <xs:enumeration value="edit"/>
      <xs:enumeration value="edit-media"/>
      <xs:enumeration value="first"/>
      <xs:enumeration value="glossary"/>
      <xs:enumeration value="help"/>
      <xs:enumeration value="hub"/>
      <xs:enumeration value="icon"/>
      <xs:enumeration value="index"/>
      <xs:enumeration value="last"/>
      <xs:enumeration value="latest-version"/>
      <xs:enumeration value="license"/>
      <xs:enumeration value="monitor"/>
      <xs:enumeration value="monitor-group"/>
      <xs:enumeration value="next"/>
      <xs:enumeration value="next-arvhice"/>
      <xs:enumeration value="nofollow"/>
      <xs:enumeration value="payment"/>
      <xs:enumeration value="predecessor-version"/>
      <xs:enumeration value="prefetch"/>
      <xs:enumeration value="prev"/>
      <xs:enumeration value="previous"/>
      <xs:enumeration value="prev-archive"/>
      <xs:enumeration value="replies"/>
      <xs:enumeration value="search"/>
      <xs:enumeration value="section"/>
      <xs:enumeration value="self"/>
      <xs:enumeration value="service"/>
      <xs:enumeration value="start"/>
      <xs:enumeration value="stylesheet"/>
      <xs:enumeration value="subsection"/>
      <xs:enumeration value="successor-version"/>
      <xs:enumeration value="up"/>
      <xs:enumeration value="version-history"/>
      <xs:enumeration value="via"/>
      <xs:enumeration value="working-copy"/>
      <xs:enumeration value="working-copy-of"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="link" type="atom:link"/>
  <xs:complexType name="link">
    <xs:annotation>
      <xs:documentation>
        <html:p>
          See section 3.4 of the ATOM RFC
          <html:a href="http://tools.ietf.org/html/rfc4287">RFC4287</html:a>
        </html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="rel" use="required" type="atom:relation">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="type" use="optional" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="href" use="required" type="xs:anyURI">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="hreflang" use="optional" type="xs:NMTOKEN">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="title" use="optional" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/atom/xml.xsd</con:url><con:content><![CDATA[<?xml-stylesheet href="../2008/09/xsd.xsl" type="text/xsl"?>
<xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
  <xs:annotation>
    <xs:documentation>
      <div>
        <h1>About the XML namespace</h1>
        <div class="bodytext">
          <p>This schema document describes the XML namespace, in a form
      suitable for import by other schema documents.</p>
          <p>
            See
            <a href="http://www.w3.org/XML/1998/namespace.html">http://www.w3.org/XML/1998/namespace.html</a>
            and
            <a href="http://www.w3.org/TR/REC-xml">http://www.w3.org/TR/REC-xml</a>
            for information 
      about this namespace.
          </p>
          <p>Note that local names in this namespace are intended to be
      defined only by the World Wide Web Consortium or its subgroups.
      The names currently defined in this namespace are listed below.
      They should not be used with conflicting semantics by any Working
      Group, specification, or document instance.</p>
          <p>
            See further below in this document for more information about
            <a href="#usage">how to refer to this schema document from your own
      XSD schema documents</a>
            and about
            <a href="#nsversioning">the
      namespace-versioning policy governing this schema document</a>
            .
          </p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>lang (as an attribute name)</h3>
          <p>denotes an attribute whose value
       is a language code for the natural language of the content of
       any element; its value is inherited.  This name is reserved
       by virtue of its definition in the XML specification.</p>
        </div>
        <div>
          <h4>Notes</h4>
          <p>Attempting to install the relevant ISO 2- and 3-letter
      codes as the enumerated possible values is probably never
      going to be a realistic possibility.</p>
          <p>
            See BCP 47 at
            <a href="http://www.rfc-editor.org/rfc/bcp/bcp47.txt">http://www.rfc-editor.org/rfc/bcp/bcp47.txt</a>
            and the IANA language subtag registry at
            <a href="http://www.iana.org/assignments/language-subtag-registry">http://www.iana.org/assignments/language-subtag-registry</a>
            for further information.
          </p>
          <p>The union allows for the 'un-declaration' of xml:lang with
      the empty string.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:union memberTypes="xs:language">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value=""/>
          </xs:restriction>
        </xs:simpleType>
      </xs:union>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="space">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>space (as an attribute name)</h3>
          <p>denotes an attribute whose
       value is a keyword indicating what whitespace processing
       discipline is intended for the content of the element; its
       value is inherited.  This name is reserved by virtue of its
       definition in the XML specification.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>base (as an attribute name)</h3>
          <p>denotes an attribute whose value
       provides a URI to be used as the base for interpreting any
       relative URIs in the scope of the element on which it
       appears; its value is inherited.  This name is reserved
       by virtue of its definition in the XML Base specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xmlbase/">http://www.w3.org/TR/xmlbase/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="id" type="xs:ID">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>id (as an attribute name)</h3>
          <p>denotes an attribute whose value
       should be interpreted as if declared to be of type ID.
       This name is reserved by virtue of its definition in the
       xml:id specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xml-id/">http://www.w3.org/TR/xml-id/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
    <xs:attribute ref="xml:id"/>
  </xs:attributeGroup>
  <xs:annotation>
    <xs:documentation>
      <div>
        <h3>Father (in any context at all)</h3>
        <div class="bodytext">
          <p>denotes Jon Bosak, the chair of 
      the original XML Working Group.  This name is reserved by 
      the following decision of the W3C XML Plenary and 
      XML Coordination groups:</p>
          <blockquote>
            <p>In appreciation for his vision, leadership and
	dedication the W3C XML Plenary on this 10th day of
	February, 2000, reserves for Jon Bosak in perpetuity
	the XML name "xml:Father".</p>
          </blockquote>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>
      <div xml:id="usage" id="usage">
        <h2>
          <a name="usage">About this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            This schema defines attributes and an attribute group suitable
      for use by schemas wishing to allow
            <code>xml:base</code>
            ,
            <code>xml:lang</code>
            ,
            <code>xml:space</code>
            or
            <code>xml:id</code>
            attributes on elements they define.
          </p>
          <p>To enable this, such a schema must import this schema for
      the XML namespace, e.g. as follows:</p>
          <pre>&lt;schema . . .>
           . . .
           &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2001/xml.xsd"/></pre>
          <p>or</p>
          <pre>&lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2009/01/xml.xsd"/></pre>
          <p>Subsequently, qualified reference to any of the attributes or the
      group defined below will have the desired effect, e.g.</p>
          <pre>&lt;type . . .>
           . . .
           &lt;attributeGroup ref="xml:specialAttrs"/></pre>
          <p>will define a type which will schema-validate an instance element
      with any of those attributes.</p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>
      <div id="nsversioning" xml:id="nsversioning">
        <h2>
          <a name="nsversioning">Versioning policy for this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            In keeping with the XML Schema WG's standard versioning
      policy, this schema document will persist at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            .
          </p>
          <p>
            At the date of issue it can also be found at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            .
          </p>
          <p>
            The schema document at that URI may however change in the future,
      in order to remain compatible with the latest version of XML
      Schema itself, or with the XML namespace itself.  In other words,
      if the XML Schema or XML namespaces change, the version of this
      document at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            will change accordingly; the version at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            will not change.
          </p>
          <p>Previous dated (and unchanging) versions of this schema 
      document are at:</p>
          <ul>
            <li>
              <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2007/08/xml.xsd">http://www.w3.org/2007/08/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2004/10/xml.xsd">http://www.w3.org/2004/10/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2001/03/xml.xsd">http://www.w3.org/2001/03/xml.xsd</a>
            </li>
          </ul>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/roles.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Elements-->
  <element name="roles" type="identity:RoleList">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A list of roles.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="role" type="identity:Role">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A role.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="Role">
    <sequence>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:string" use="optional"/>
    <attribute name="name" type="xsd:string" use="required"/>
    <attribute name="description" type="xsd:string" use="optional"/>
    <attribute name="serviceId" type="xsd:string" use="optional"/>
    <attribute name="tenantId" type="xsd:string" use="optional"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="RoleList">
    <sequence>
      <element name="role" type="identity:Role" minOccurs="0" maxOccurs="unbounded"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/services.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Simple Types-->
  <simpleType name="ExtensibleServiceType">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>
          An extensible service type allows all of the
                    strings defined in
          <a href="#type_ServiceType" title="See definition of                         ServiceType">ServiceType</a>
          or an
                    alias prefixed status.
        </p>
      </xsd:documentation>
    </annotation>
    <union memberTypes="identity:ServiceType identity:ExtendedService"/>
  </simpleType>
  <simpleType name="ServiceType">
    <restriction base="xsd:string">
      <enumeration value="compute">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>The type for an OpenStack Compute API 1.1 compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="object-store">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>The type for a Swift-compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="image-service">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>The type for a Glance-compatible service</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="identity">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>The type for a Keystone-compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
    </restriction>
  </simpleType>
  <simpleType name="ExtendedService">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A non-core service type which must contain an extension prefix.</p>
      </xsd:documentation>
    </annotation>
    <restriction base="xsd:string">
      <pattern value="(\w|-)+:\w+"/>
    </restriction>
  </simpleType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/tenant.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Elements-->
  <element name="tenant" type="identity:Tenant">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A container used to group or isolate resources and/or identity
                  objects. Depending on the service operator, a tenant may map to a customer,
                  account, organization, or project.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/xml" href="../samples/tenant.xml"/>
                     
          </xsdxt:sample>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/json" href="../samples/tenant.json"/>
                     
          </xsdxt:sample>
                 
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="tenants" type="identity:Tenants">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A list of tenants.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="Tenants">
    <sequence>
      <element name="tenant" type="identity:Tenant" maxOccurs="100"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="Tenant">
    <sequence>
      <element name="description" type="xsd:string">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>An free text description of the tenant.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:ID" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>An ID uniquely identifying the tenant. This usually comes from the back-end store.
                        This value is guaranteed to be unique and immutable (it will never change).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="name" type="xsd:string" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The name of the tenant. This is guaranteed to be unique, but may change.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="enabled" type="xsd:boolean" use="optional" default="true">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>An boolean signifying if a tenant is enabled or not. A disabled tenant
                        cannot be authenticated against.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="display-name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A human-readable, friendly name for use in user interfaces.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute type="xsd:dateTime" name="updated" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A time-stamp identifying the modification time of the
                        tenant.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute type="xsd:dateTime" name="created" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A creation time-stamp for the tenant.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/fault.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!--Fault Elements-->
  <element name="identityFault" type="identity:IdentityFault"/>
  <element name="serviceUnavailable" type="identity:ServiceUnavailableFault"/>
  <element name="badRequest" type="identity:BadRequestFault"/>
  <element name="unauthorized" type="identity:UnauthorizedFault"/>
  <element name="overLimit" type="identity:OverLimitFault"/>
  <element name="userDisabled" type="identity:UserDisabledFault"/>
  <element name="forbidden" type="identity:ForbiddenFault"/>
  <element name="itemNotFound" type="identity:ItemNotFoundFault"/>
  <element name="tenantConflict" type="identity:TenantConflictFault"/>
  <!--Fault Types-->
  <complexType name="IdentityFault">
    <sequence>
      <element name="message" type="xsd:string">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>A human readable message that is appropriate for display
                            to the end user.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element name="details" type="xsd:string" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>The optional &lt;details> element may contain useful
                            information for tracking down errors (e.g a stack
                            trace).  This information may or may not be appropriate
                            for display to an end user.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="code" type="xsd:int" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The HTTP status code associated with the current fault.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="ServiceUnavailableFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="BadRequestFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="UnauthorizedFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="UserDisabledFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="ForbiddenFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="ItemNotFoundFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="TenantConflictFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="OverLimitFault">
    <complexContent>
      <extension base="identity:IdentityFault">
        <attribute name="retryAt" type="xsd:dateTime" use="optional">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
              <p>An optional dateTime denoting when an operation should
                                be retried.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
      </extension>
    </complexContent>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/endpoints.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <include schemaLocation="api.xsd"/>
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <element name="endpoint" type="identity:Endpoint">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>An Endpoint.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="endpoints" type="identity:EndpointList">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A list of Endpoints.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="Endpoint">
    <sequence>
      <element name="version" type="identity:VersionForService" maxOccurs="1" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>Version details.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:int" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>An ID uniquely identifying the Endpoint.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="type" type="identity:ExtensibleServiceType" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The OpenStack-registered type (e.g. 'compute', 'object-store', etc).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The commercial service name (e.g. 'My Nova Cloud Servers').</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="region" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The region of Endpoint Template.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="publicURL" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The public URL to access represented service.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="internalURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The internal version of the public URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="adminURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The admin URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="tenantId" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>Tenant id to which the endpoints belong.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="EndpointList">
    <sequence>
      <element name="endpoint" type="identity:Endpoint" minOccurs="0" maxOccurs="unbounded"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/user.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:atom="http://www.w3.org/2005/Atom">
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Elements-->
  <element name="users" type="identity:UserList">
    <annotation>
      <xsd:documentation xml:lang="EN">
        <p>A list of Users.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="user" type="identity:User">
    <annotation>
      <xsd:documentation xml:lang="EN">
        <p>A Keystone User.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="User">
    <attribute name="id" type="xsd:ID" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>An automatically generated, unique, immutable (it will never change) identifier
                        for the user. This is generated by the backend this user is stored in.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="username" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A unique, mutable (it can change) user name that may be used by the user
                        an identifier when presenting credentials.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="email" type="xsd:string" use="optional"/>
    <attribute name="enabled" type="xsd:boolean" default="true" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A true/false value that determines if the user may authenticate or not.
                        If enabled is false, the user will not be able to authenticate.
                        How this value is stored or generated is dependent on the backend in use.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="display-name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A human-readable, friendly name for use in user interfaces.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="updated" type="xsd:dateTime" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A time-stamp identifying the modification time of the
                        user.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="created" type="xsd:dateTime" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A creation time-stamp for the user.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="UserList">
    <sequence>
      <element name="user" type="identity:User" minOccurs="0" maxOccurs="unbounded"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/credentials.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Elements-->
  <element name="auth" type="identity:AuthenticationRequest"/>
  <element name="credential" type="identity:CredentialType"/>
  <element name="credentials" type="identity:CredentialListType"/>
  <element name="passwordCredentials" type="identity:PasswordCredentialsRequiredUsername" substitutionGroup="identity:credential"/>
  <!--Complex Types-->
  <complexType name="CredentialType" abstract="true">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>Base type for credential in Keystone.</p>
      </xsd:documentation>
    </annotation>
    <sequence>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="AuthenticationRequest">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>Both the tenantId and tenantName are optional, but should not be specified together. If both attributes are specified, the server SHOULD respond with a 400 Bad Request.</p>
      </xsd:documentation>
    </annotation>
    <sequence>
      <choice>
        <element ref="identity:credential" minOccurs="1"/>
        <element name="token" type="identity:TokenForAuthenticationRequest"/>
      </choice>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="tenantId" type="xsd:string" use="optional"/>
    <attribute name="tenantName" type="xsd:string" use="optional"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="TokenForAuthenticationRequest">
    <attribute name="id" type="xsd:string" use="required"/>
  </complexType>
  <complexType name="PasswordCredentialsBase">
    <complexContent>
      <extension base="identity:CredentialType">
        <attribute name="username" type="xsd:string" use="optional"/>
        <attribute name="password" type="xsd:string" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="PasswordCredentialsWithoutUsername">
    <complexContent>
      <restriction base="identity:PasswordCredentialsBase">
        <attribute name="username" type="xsd:string" use="prohibited"/>
        <attribute name="password" type="xsd:string" use="required"/>
      </restriction>
    </complexContent>
  </complexType>
  <complexType name="PasswordCredentialsRequiredUsername">
    <complexContent>
      <restriction base="identity:PasswordCredentialsBase">
        <attribute name="username" type="xsd:string" use="required"/>
        <attribute name="password" type="xsd:string" use="required"/>
      </restriction>
    </complexContent>
  </complexType>
  <complexType name="CredentialListType">
    <sequence>
      <element ref="identity:credential" minOccurs="1" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/api-common.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/common/api/v1.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <annotation>
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xsdxt:title>Open Stack Common API Schema Types 1.0</xsdxt:title>
      <xsdxt:link rev="index" href="extensions.xsd"/>
      <xsdxt:link rev="index" href="limits.xsd"/>
      <xsdxt:link rev="index" href="version.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <p>This is the main index XML Schema document
                for Common API Schema Types Version 1.0.</p>
    </xsd:documentation>
  </annotation>
  <include schemaLocation="extensions.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>Types related to extensions.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <include schemaLocation="version.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>Types related to API version details.</p>
      </xsd:documentation>
    </annotation>
  </include>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/extensions.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<xsd:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/common/api/v1.0" xmlns:ext="http://docs.openstack.org/common/api/v1.0" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!--Import ATOM specific schema definitions-->
  <xsd:import namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <xsd:element name="extensions" type="ext:Extensions"/>
  <xsd:element name="extension" type="ext:Extension"/>
  <xsd:complexType name="Extensions">
    <xsd:sequence>
      <xsd:element name="extension" type="ext:Extension" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
  </xsd:complexType>
  <xsd:complexType name="Extension">
    <xsd:sequence>
      <xsd:element name="description" type="xsd:string" minOccurs="1"/>
      <!--<xsd:element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded" />-->
      <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="name" type="xsd:string" use="required"/>
    <xsd:attribute name="namespace" type="xsd:anyURI" use="required"/>
    <xsd:attribute name="alias" type="ext:Alias" use="required"/>
    <xsd:attribute name="updated" type="xsd:dateTime" use="optional"/>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
    <!--TODO(Ziad)resolve asser issue
            <xsd:assert vc:minVersion="1.1" test="atom:link[@rel='describedby']">
            <xsd:annotation>
                <xsd:documentation
                    xml:lang="EN"
                    xmlns="http://www.w3.org/1999/xhtml">
                    <p>
                        There should be at least one atom link
                        with a describedby relation.
                    </p>
                </xsd:documentation>
            </xsd:annotation>
        </xsd:assert>-->
  </xsd:complexType>
  <xsd:simpleType name="Alias">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="\w+\-\w+"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/version.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<xs:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/common/api/v1.0" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:annotation>
    <xs:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Version Types</xsdxt:title>
      <xsdxt:link rel="index" href="api-common.xsd"/>
    </xs:appinfo>
    <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>This schema file defines all types related to versioning.</p>
    </xs:documentation>
  </xs:annotation>
  <!--Import ATOM specific schema definitions-->
  <xs:import namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Multiple choices-->
  <xs:element name="choices" type="vers:VersionChoiceList">
    <xs:annotation>
      <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>This element is returned when the version of the
                    resource cannot be determined. The element
                    provides a list of choices for the resource.</p>
      </xs:documentation>
      <xs:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/choices.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/choices.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <!--Versioning-->
  <xs:element name="versions" type="vers:VersionChoiceList">
    <xs:annotation>
      <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Provides a list of supported versions.</p>
      </xs:documentation>
      <xs:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/versions.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/versions.json"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/atom+xml" href="../samples/versions-atom.xml"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <xs:element name="version" type="vers:VersionChoice" vc:minVersion="1.0" vc:maxVersion="1.1">
    <xs:annotation>
      <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>This element provides detailed meta information
                    regarding the status of the current API version.
                    This is the XSD 1.0 compatible element definition.</p>
      </xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="version2" type="vers:VersionChoiceRoot" vc:minVersion="1.1">
    <xs:annotation>
      <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>This element provides detailed meta information
                    regarding the status of the current API
                    version. The description should include a pointer
                    to both a human readable and a machine processable
                    description of the API service.</p>
      </xs:documentation>
      <xs:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/version.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/version.json"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/atom+xml" href="../samples/version-atom.xml"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <!--Types-->
  <xs:simpleType name="VersionStatus">
    <xs:annotation>
      <xs:documentation>
        <html:p>The VersionStatus type describes a service's operational status.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="ALPHA">
        <xs:annotation>
          <xs:documentation>
            <html:p>This is a new service the API. Thi API
                            contract may be set, but the implementaiton
                            may not be 100% complient with it. Developers
                            are encouraged to begin testing aganst an
                            ALPHA version to provide feedback.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BETA">
        <xs:annotation>
          <xs:documentation>
            <html:p>A status of BETA indicates that this
                            version is a candidate for the next major
                            release and may feature functionality not
                            available in the current
                            version. Developers are encouraged to test
                            and begin the migration processes to a
                            BETA version. Note that a BETA version is
                            undergoing testing, it has not been
                            officially released, and my not be stable.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CURRENT">
        <xs:annotation>
          <xs:documentation>
            <html:p>The API version is stable and has been
                            tested. Developers are encouraged to
                            develop against this API version. The
                            current released version of the API will
                            always be marked as CURRENT.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="DEPRECATED">
        <xs:annotation>
          <xs:documentation>
            <html:p>A status of DEPRECATED indicates that a
                            newer version of the API is
                            available. Application developers are
                            discouraged from using this version and
                            should instead develop against the latest
                            current version of the API.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="VersionChoiceList">
    <xs:annotation>
      <xs:documentation>
        <html:p>A version choice list outlines a collection of
                    resources at various versions.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="version" type="vers:VersionChoice" minOccurs="1" maxOccurs="unbounded"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
    <!--TODO(Ziad)resolve assert issue
            <xs:assert vc:minVersion="1.1" test="every $v in vers:version satisfies $v/atom:link[@rel='self']">
            <xs:annotation>
                <xs:documentation>
                    <html:p>
                        In version lists, every single version must
                        contain at least one self link.
                    </html:p>
                </xs:documentation>
            </xs:annotation>
        </xs:assert>-->
  </xs:complexType>
  <xs:complexType name="VersionChoiceRoot" vc:minVersion="1.1">
    <xs:complexContent>
      <xs:extension base="vers:VersionChoice">
        <!--TODO(Ziad)resolve asser issue
                    <xs:assert test="atom:link[@rel='describedby']">
                    <xs:annotation>
                        <xs:documentation>
                            <html:p>
                                When used as a root element, a version choice
                                must contain at least one describedby link.
                            </html:p>
                        </xs:documentation>
                    </xs:annotation>
                </xs:assert>-->
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="VersionChoice">
    <xs:annotation>
      <xs:documentation>
        <html:p>A version choice contains relevant information
                    about an available service that a user can then
                    use to target a specific version of the service.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="media-types" type="vers:MediaTypeList" minOccurs="0" maxOccurs="1"/>
      <!--<xs:element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded" />-->
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>
          <html:p>The ID of a version choice represents the service version's unique 
                        identifier. This ID is guaranteed to be unique only among the
                        service version choices outlined in the VersionChoiceList.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="status" type="vers:VersionStatus" use="required">
      <xs:annotation>
        <xs:documentation>
          <html:p>A version choice's status describes the current operational state of
                        the given service version. The operational status is captured in a
                        simple type enumeration called VersionStatus.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="updated" type="xs:dateTime" use="optional">
      <xs:annotation>
        <xs:documentation>
          <html:p>
            A version choice's updated attribute describes
                        the time when the version was updated. The
                        time should be updated anytime
            <html:strong>anything</html:strong>
            in the
                        version has changed: documentation,
                        extensions, bug fixes.
          </html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:complexType name="MediaTypeList">
    <xs:annotation>
      <xs:documentation>
        <html:p>A MediaTypeList outlines a collection of valid media types for a given 
                    service version.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="media-type" type="vers:MediaType" minOccurs="1" maxOccurs="unbounded"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:complexType name="MediaType">
    <xs:annotation>
      <xs:documentation>
        <html:p>A MediaType describes what content types the service version understands.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="base" type="xs:string" use="optional" default="">
      <xs:annotation>
        <xs:documentation>
          <html:p>The base of a given media type describes the
                        simple MIME type that then a more complicated
                        media type can be derived from. These types
                        are basic and provide no namespace or version
                        specific data are are only provided as a
                        convenience.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="type" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>
          <html:p>The type attribute of a MediaType describes
                        the MIME specific identifier of the media type
                        in question.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/RAX-KSKEY-credentials.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:RAX-KSKEY="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <!--Import schema we are extending-->
  <import namespace="http://docs.openstack.org/identity/api/v2.0" schemaLocation="credentials.xsd"/>
  <!--Elements-->
  <element name="apiKeyCredentials" type="RAX-KSKEY:apiKeyCredentialsType" substitutionGroup="identity:credential"/>
  <!--Complex Types-->
  <complexType name="apiKeyCredentialsType">
    <complexContent>
      <extension base="identity:CredentialType">
        <attribute name="username" type="xsd:string" use="optional"/>
        <attribute name="apiKey" type="xsd:string" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="apiKeyCredentialsWithOnlyApiKey">
    <complexContent>
      <restriction base="RAX-KSKEY:apiKeyCredentials">
        <attribute name="username" type="xsd:string" use="prohibited"/>
        <attribute name="apiKey" type="xsd:string" use="required">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
              <p>The user's API Key.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
      </restriction>
    </complexContent>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>${#Project#Endpoint}</con:endpoint></con:endpoints><con:resource name="v2.0" path="${#Project#path}"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="users" path="users"><con:settings/><con:parameters/><con:resource name="{userId}" path="{userId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>userId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="OS-KSADM" path="OS-KSADM"><con:settings/><con:parameters/><con:resource name="credentials" path="credentials"><con:settings/><con:parameters/><con:resource name="RAX-KSKEY:apiKeyCredentials" path="RAX-KSKEY:apiKeyCredentials"><con:settings/><con:parameters/><con:method name="Update user credential - updateUserCredential" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete user credential - deleteUserCredential" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Get user Credentials - getUserCredential" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Add user Credential. - addUserCredential" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="List Credentials - listCredentials" method="GET"><con:settings/><con:parameters><con:parameter><con:name>marker</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource></con:resource></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="OS-KSCATALOG-admin" type="rest" basePath="" definitionUrl="/home/jorge/projects/keystone/keystone/content/admin/OS-KSCATALOG-admin-auth2.0.wadl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/home/jorge/projects/keystone/keystone/content/admin/OS-KSCATALOG-admin-auth2.0.wadl"><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/admin/OS-KSCATALOG-admin-auth2.0.wadl</con:url><con:content><![CDATA[<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<!--*******************************************************-->
<!--Import Common XML Entities-->
<!---->
<!--You can resolve the entites with xmllint-->
<!---->
<!--xmllint -noent OS-KSCATALOG-admin.wadl-->
<!--*******************************************************-->
<!--A collection of common faults, these are pretty much expected
         in every request.-->
<!--Faults on GET-->
<!--Faults on POST/PUT-->
<application xsi:schemaLocation="http://docs.openstack.org/identity/api/v2.0 ../common/xsd/api.xsd   http://docs.openstack.org/common/api/v1.0 ../common/xsd/api-common.xsd   http://wadl.dev.java.net/2009/02 http://www.w3.org/Submission/wadl/wadl.xsd   http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0 ../common/xsd/OS-KSCATALOG.xsd   " xmlns="http://wadl.dev.java.net/2009/02" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:OS-KSCATALOG="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0">
  <grammars>
    <include href="../common/xsd/api.xsd"/>
    <include href="../common/xsd/api-common.xsd"/>
    <include href="../common/xsd/OS-KSCATALOG.xsd"/>
  </grammars>
  <!--*******************************************************-->
  <!--All Resoruces-->
  <!--*******************************************************-->
  <!--We should use SSL in production-->
  <resources base="http://localhost:35357">
    <resource id="version" path="v2.0">
      <resource id="tenants" path="tenants">
        <param name="X-Auth-Token" style="header" type="xsd:string" required="true"/>
        <resource id="tenantId" path="{tenantId}">
          <param name="tenantId" style="template" type="xsd:string"/>
          <resource id="endpoints-OS-KSCATALOG" path="OS-KSCATALOG">
            <resource id="endpoints" path="endpoints">
              <method href="#listEndpoints"/>
              <method href="#addEndpoint"/>
              <resource id="endpoint" path="{endpointId}">
                <param name="endpointId" style="template" type="xsd:string"/>
                <method href="#getEndpoint"/>
                <method href="#deleteEndpoint"/>
              </resource>
            </resource>
          </resource>
        </resource>
      </resource>
      <resource id="role-service-OS-KSCATALOG" path="OS-KSCATALOG">
        <resource id="endpointTemplates" path="endpointTemplates">
          <param name="X-Auth-Token" style="header" type="xsd:string" required="true"/>
          <method href="#listEndpointTemplates"/>
          <method href="#addEndpointTemplate"/>
          <resource id="endpointTemplateId" path="{endpointTemplateId}">
            <param name="X-Auth-Token" style="header" type="xsd:string" required="true"/>
            <param name="endpointTemplateId" style="template" type="xsd:int"/>
            <method href="#getEndpointTemplate"/>
            <method href="#deleteEndpointTemplate"/>
          </resource>
        </resource>
      </resource>
    </resource>
  </resources>
  <!--*******************************************************-->
  <!--All Methods-->
  <!--*******************************************************-->
  <!--EndPoint Templates-->
  <method name="GET" id="listEndpointTemplates">
    <doc xml:lang="EN" title="List Endpoint Templates">
      <p xmlns="http://www.w3.org/1999/xhtml">List Endpoint Templates.</p>
    </doc>
    <request>
      <param name="serviceId" style="query" required="false" type="xsd:string"/>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="OS-KSCATALOG:endpointTemplates">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/endpointTemplates.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/endpointTemplates.json"/>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getEndpointTemplate">
    <doc xml:lang="EN" title="Get Endpoint Template">
      <p xmlns="http://www.w3.org/1999/xhtml">Get Endpoint Template.</p>
    </doc>
    <response status="200 203">
      <representation mediaType="application/xml" element="OS-KSCATALOG:endpointTemplate">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/endpointTemplate.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/endpointTemplate.json"/>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="POST" id="addEndpointTemplate">
    <doc xml:lang="EN" title="Add Endpoint Template">
      <p xmlns="http://www.w3.org/1999/xhtml">Add Endpoint Template.</p>
    </doc>
    <request>
      <representation mediaType="application/xml" element="OS-KSCATALOG:endpointTemplate">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/endpointTemplate.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/endpointTemplate.json"/>
        </doc>
      </representation>
    </request>
    <response status="201">
      <representation mediaType="application/xml" element="OS-KSCATALOG:endpointTemplate">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/endpointTemplate.xml"/>
        </doc>
        <param name="Location" type="xsd:anyURI" style="header"/>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/endpointTemplate.json"/>
        </doc>
        <param name="Location" type="xsd:anyURI" style="header"/>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="DELETE" id="deleteEndpointTemplate">
    <doc xml:lang="EN" title="Delete Endpoint Template.">
      <p xmlns="http://www.w3.org/1999/xhtml">Delete a Endpoint Template.</p>
    </doc>
    <response status="204"/>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="POST" id="addEndpoint">
    <doc xml:lang="EN" title="Add Endpoint">
      <p xmlns="http://www.w3.org/1999/xhtml">Add Endpoint to a tenant.</p>
    </doc>
    <request>
      <representation mediaType="application/xml" element="OS-KSCATALOG:endpointTemplate">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/endpointTemplateWithOnlyId.xml"/>
        </doc>
        <param name="endpoint" style="plain" path="/" type="OS-KSCATALOG:EndpointTemplateWithOnlyId"/>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/endpointTemplateWithOnlyId.json"/>
        </doc>
      </representation>
    </request>
    <response status="201">
      <representation mediaType="application/xml" element="identity:endpoint">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/endpoint.xml"/>
        </doc>
        <param name="Location" type="xsd:anyURI" style="header"/>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/endpoint.json"/>
        </doc>
        <param name="Location" type="xsd:anyURI" style="header"/>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="listEndpoints">
    <doc xml:lang="EN" title="List Endpoints">
      <p xmlns="http://www.w3.org/1999/xhtml">List Endpoints of a Tenant.</p>
    </doc>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:endpoints">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/endpoints.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/endpoints.json"/>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getEndpoint">
    <doc xml:lang="EN" title="Get Endpoint">
      <p xmlns="http://www.w3.org/1999/xhtml">Get Endpoint of a Tenant.</p>
    </doc>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:endpoint">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/endpoint.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/endpoint.json"/>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="DELETE" id="deleteEndpoint">
    <doc xml:lang="EN" title="Delete Endpoint.">
      <p xmlns="http://www.w3.org/1999/xhtml">Delete a Endpoint from a Tenant.</p>
    </doc>
    <response status="204"/>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
</application>]]></con:content><con:type>http://wadl.dev.java.net/2009/02</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/api.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <include schemaLocation="token.xsd"/>
  <include schemaLocation="tenant.xsd"/>
  <include schemaLocation="fault.xsd"/>
  <include schemaLocation="endpoints.xsd"/>
  <include schemaLocation="roles.xsd"/>
  <include schemaLocation="user.xsd"/>
  <include schemaLocation="credentials.xsd"/>
  <include schemaLocation="services.xsd"/>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/token.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <include schemaLocation="roles.xsd"/>
  <include schemaLocation="services.xsd"/>
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Elements-->
  <element name="access" type="identity:AuthenticateResponse"/>
  <!--Complex Types-->
  <complexType name="Token">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A token is an arbitrary bit of text that is used to access
                    resources. Each token has a scope which describes which
                    resources are accessible with it. A token may be
                    revoked at anytime and is valid for a finite duration.</p>
        <p>While Keystone supports token-based authentication in this release,
                    the intention is for it to support additional protocols in the
                    future. The desire is for it to be an integration service, and not
                    a full-fledged identity store and management solution.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/token.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/token.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
    <sequence>
      <element name="tenant" type="identity:TenantForAuthenticateResponse"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:string" use="required"/>
    <attribute name="expires" type="xsd:dateTime" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="AuthenticateResponse">
    <sequence>
      <element name="token" type="identity:Token"/>
      <element name="user" type="identity:UserForAuthenticateResponse"/>
      <element name="serviceCatalog" type="identity:ServiceCatalog" minOccurs="0"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="UserForAuthenticateResponse">
    <sequence>
      <element name="roles" type="identity:RoleList"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:string"/>
    <attribute name="name" type="xsd:string"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="TenantForAuthenticateResponse">
    <attribute name="id" type="xsd:string"/>
    <attribute name="name" type="xsd:string"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="ServiceCatalog">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>The service catalog lists the services you have access to</p>
        <div class="design">
          <p>We optimized for future flexibility around the hierarchy. So we
                    left the design as a flat list of endpoints with attributes and the
                    consumer can categorize as they need.
                    This results in potential duplication (such as with the version/@list)
                    but we acceopt that normalization cost in order to not force an
                    artificial hierarchy (suchas on region, which can be optional).</p>
        </div>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/xml" href="../samples/services.xml"/>
                     
          </xsdxt:sample>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/json" href="../samples/services.json"/>
                     
          </xsdxt:sample>
                 
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
    <sequence>
      <element name="service" type="identity:ServiceForCatalog" minOccurs="1" maxOccurs="unbounded">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>A list of services.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="ServiceForCatalog">
    <sequence>
      <element name="endpoint" type="identity:EndpointForService" minOccurs="1" maxOccurs="unbounded">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>A list of endpoints.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="type" type="identity:ExtensibleServiceType" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The OpenStack-registered type (e.g. 'compute', 'object-store', etc).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The commercial service name (e.g. 'My Nova Cloud Servers').</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <!--EndpointForService-->
  <complexType name="EndpointForService">
    <sequence>
      <element name="version" type="identity:VersionForService" maxOccurs="1" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>Version details.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="region" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The name of the region where the endpoint
                        lives. Example: airport codes; LHR (UK),
                        STL (Saint Louis)</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="tenantId" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>Tenant id to which the endpoints belong.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="publicURL" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>Public accessible service URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="internalURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A service URL, accessible only locally within that
                        cloud (generally over a high bandwidth, low latency,
                        free of charge link).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="adminURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>An Admin URL (used for administration using privileged
                        calls). This may expose
                        additional functionality not found in the public and
                        internal URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <!--VersionForService-->
  <complexType name="VersionForService">
    <attribute name="id" type="xsd:string" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>Id of the version.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="info" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>URI to get the information specific to this version.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="list" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>URI to get the information about all versions.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/atom/atom.xsd</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://www.w3.org/2005/Atom" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd"/>
  <xs:simpleType name="relation">
    <xs:restriction base="xs:string">
      <xs:enumeration value="alternate"/>
      <xs:enumeration value="appendix"/>
      <xs:enumeration value="archives"/>
      <xs:enumeration value="author"/>
      <xs:enumeration value="bookmark"/>
      <xs:enumeration value="chapter"/>
      <xs:enumeration value="contents"/>
      <xs:enumeration value="copyright"/>
      <xs:enumeration value="current"/>
      <xs:enumeration value="describedby"/>
      <xs:enumeration value="edit"/>
      <xs:enumeration value="edit-media"/>
      <xs:enumeration value="first"/>
      <xs:enumeration value="glossary"/>
      <xs:enumeration value="help"/>
      <xs:enumeration value="hub"/>
      <xs:enumeration value="icon"/>
      <xs:enumeration value="index"/>
      <xs:enumeration value="last"/>
      <xs:enumeration value="latest-version"/>
      <xs:enumeration value="license"/>
      <xs:enumeration value="monitor"/>
      <xs:enumeration value="monitor-group"/>
      <xs:enumeration value="next"/>
      <xs:enumeration value="next-arvhice"/>
      <xs:enumeration value="nofollow"/>
      <xs:enumeration value="payment"/>
      <xs:enumeration value="predecessor-version"/>
      <xs:enumeration value="prefetch"/>
      <xs:enumeration value="prev"/>
      <xs:enumeration value="previous"/>
      <xs:enumeration value="prev-archive"/>
      <xs:enumeration value="replies"/>
      <xs:enumeration value="search"/>
      <xs:enumeration value="section"/>
      <xs:enumeration value="self"/>
      <xs:enumeration value="service"/>
      <xs:enumeration value="start"/>
      <xs:enumeration value="stylesheet"/>
      <xs:enumeration value="subsection"/>
      <xs:enumeration value="successor-version"/>
      <xs:enumeration value="up"/>
      <xs:enumeration value="version-history"/>
      <xs:enumeration value="via"/>
      <xs:enumeration value="working-copy"/>
      <xs:enumeration value="working-copy-of"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="link" type="atom:link"/>
  <xs:complexType name="link">
    <xs:annotation>
      <xs:documentation>
        <html:p>
          See section 3.4 of the ATOM RFC
          <html:a href="http://tools.ietf.org/html/rfc4287">RFC4287</html:a>
        </html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="rel" use="required" type="atom:relation">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="type" use="optional" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="href" use="required" type="xs:anyURI">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="hreflang" use="optional" type="xs:NMTOKEN">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="title" use="optional" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/atom/xml.xsd</con:url><con:content><![CDATA[<?xml-stylesheet href="../2008/09/xsd.xsl" type="text/xsl"?>
<xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
  <xs:annotation>
    <xs:documentation>
      <div>
        <h1>About the XML namespace</h1>
        <div class="bodytext">
          <p>This schema document describes the XML namespace, in a form
      suitable for import by other schema documents.</p>
          <p>
            See
            <a href="http://www.w3.org/XML/1998/namespace.html">http://www.w3.org/XML/1998/namespace.html</a>
            and
            <a href="http://www.w3.org/TR/REC-xml">http://www.w3.org/TR/REC-xml</a>
            for information 
      about this namespace.
          </p>
          <p>Note that local names in this namespace are intended to be
      defined only by the World Wide Web Consortium or its subgroups.
      The names currently defined in this namespace are listed below.
      They should not be used with conflicting semantics by any Working
      Group, specification, or document instance.</p>
          <p>
            See further below in this document for more information about
            <a href="#usage">how to refer to this schema document from your own
      XSD schema documents</a>
            and about
            <a href="#nsversioning">the
      namespace-versioning policy governing this schema document</a>
            .
          </p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>lang (as an attribute name)</h3>
          <p>denotes an attribute whose value
       is a language code for the natural language of the content of
       any element; its value is inherited.  This name is reserved
       by virtue of its definition in the XML specification.</p>
        </div>
        <div>
          <h4>Notes</h4>
          <p>Attempting to install the relevant ISO 2- and 3-letter
      codes as the enumerated possible values is probably never
      going to be a realistic possibility.</p>
          <p>
            See BCP 47 at
            <a href="http://www.rfc-editor.org/rfc/bcp/bcp47.txt">http://www.rfc-editor.org/rfc/bcp/bcp47.txt</a>
            and the IANA language subtag registry at
            <a href="http://www.iana.org/assignments/language-subtag-registry">http://www.iana.org/assignments/language-subtag-registry</a>
            for further information.
          </p>
          <p>The union allows for the 'un-declaration' of xml:lang with
      the empty string.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:union memberTypes="xs:language">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value=""/>
          </xs:restriction>
        </xs:simpleType>
      </xs:union>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="space">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>space (as an attribute name)</h3>
          <p>denotes an attribute whose
       value is a keyword indicating what whitespace processing
       discipline is intended for the content of the element; its
       value is inherited.  This name is reserved by virtue of its
       definition in the XML specification.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>base (as an attribute name)</h3>
          <p>denotes an attribute whose value
       provides a URI to be used as the base for interpreting any
       relative URIs in the scope of the element on which it
       appears; its value is inherited.  This name is reserved
       by virtue of its definition in the XML Base specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xmlbase/">http://www.w3.org/TR/xmlbase/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="id" type="xs:ID">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>id (as an attribute name)</h3>
          <p>denotes an attribute whose value
       should be interpreted as if declared to be of type ID.
       This name is reserved by virtue of its definition in the
       xml:id specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xml-id/">http://www.w3.org/TR/xml-id/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
    <xs:attribute ref="xml:id"/>
  </xs:attributeGroup>
  <xs:annotation>
    <xs:documentation>
      <div>
        <h3>Father (in any context at all)</h3>
        <div class="bodytext">
          <p>denotes Jon Bosak, the chair of 
      the original XML Working Group.  This name is reserved by 
      the following decision of the W3C XML Plenary and 
      XML Coordination groups:</p>
          <blockquote>
            <p>In appreciation for his vision, leadership and
	dedication the W3C XML Plenary on this 10th day of
	February, 2000, reserves for Jon Bosak in perpetuity
	the XML name "xml:Father".</p>
          </blockquote>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>
      <div xml:id="usage" id="usage">
        <h2>
          <a name="usage">About this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            This schema defines attributes and an attribute group suitable
      for use by schemas wishing to allow
            <code>xml:base</code>
            ,
            <code>xml:lang</code>
            ,
            <code>xml:space</code>
            or
            <code>xml:id</code>
            attributes on elements they define.
          </p>
          <p>To enable this, such a schema must import this schema for
      the XML namespace, e.g. as follows:</p>
          <pre>&lt;schema . . .>
           . . .
           &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2001/xml.xsd"/></pre>
          <p>or</p>
          <pre>&lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2009/01/xml.xsd"/></pre>
          <p>Subsequently, qualified reference to any of the attributes or the
      group defined below will have the desired effect, e.g.</p>
          <pre>&lt;type . . .>
           . . .
           &lt;attributeGroup ref="xml:specialAttrs"/></pre>
          <p>will define a type which will schema-validate an instance element
      with any of those attributes.</p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>
      <div id="nsversioning" xml:id="nsversioning">
        <h2>
          <a name="nsversioning">Versioning policy for this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            In keeping with the XML Schema WG's standard versioning
      policy, this schema document will persist at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            .
          </p>
          <p>
            At the date of issue it can also be found at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            .
          </p>
          <p>
            The schema document at that URI may however change in the future,
      in order to remain compatible with the latest version of XML
      Schema itself, or with the XML namespace itself.  In other words,
      if the XML Schema or XML namespaces change, the version of this
      document at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            will change accordingly; the version at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            will not change.
          </p>
          <p>Previous dated (and unchanging) versions of this schema 
      document are at:</p>
          <ul>
            <li>
              <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2007/08/xml.xsd">http://www.w3.org/2007/08/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2004/10/xml.xsd">http://www.w3.org/2004/10/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2001/03/xml.xsd">http://www.w3.org/2001/03/xml.xsd</a>
            </li>
          </ul>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/roles.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Elements-->
  <element name="roles" type="identity:RoleList">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A list of roles.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="role" type="identity:Role">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A role.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="Role">
    <sequence>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:string" use="optional"/>
    <attribute name="name" type="xsd:string" use="required"/>
    <attribute name="description" type="xsd:string" use="optional"/>
    <attribute name="serviceId" type="xsd:string" use="optional"/>
    <attribute name="tenantId" type="xsd:string" use="optional"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="RoleList">
    <sequence>
      <element name="role" type="identity:Role" minOccurs="0" maxOccurs="unbounded"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/services.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Simple Types-->
  <simpleType name="ExtensibleServiceType">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>
          An extensible service type allows all of the
                    strings defined in
          <a href="#type_ServiceType" title="See definition of                         ServiceType">ServiceType</a>
          or an
                    alias prefixed status.
        </p>
      </xsd:documentation>
    </annotation>
    <union memberTypes="identity:ServiceType identity:ExtendedService"/>
  </simpleType>
  <simpleType name="ServiceType">
    <restriction base="xsd:string">
      <enumeration value="compute">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>The type for an OpenStack Compute API 1.1 compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="object-store">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>The type for a Swift-compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="image-service">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>The type for a Glance-compatible service</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="identity">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>The type for a Keystone-compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
    </restriction>
  </simpleType>
  <simpleType name="ExtendedService">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A non-core service type which must contain an extension prefix.</p>
      </xsd:documentation>
    </annotation>
    <restriction base="xsd:string">
      <pattern value="(\w|-)+:\w+"/>
    </restriction>
  </simpleType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/tenant.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Elements-->
  <element name="tenant" type="identity:Tenant">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A container used to group or isolate resources and/or identity
                  objects. Depending on the service operator, a tenant may map to a customer,
                  account, organization, or project.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/xml" href="../samples/tenant.xml"/>
                     
          </xsdxt:sample>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/json" href="../samples/tenant.json"/>
                     
          </xsdxt:sample>
                 
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="tenants" type="identity:Tenants">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A list of tenants.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="Tenants">
    <sequence>
      <element name="tenant" type="identity:Tenant" maxOccurs="100"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="Tenant">
    <sequence>
      <element name="description" type="xsd:string">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>An free text description of the tenant.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:ID" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>An ID uniquely identifying the tenant. This usually comes from the back-end store.
                        This value is guaranteed to be unique and immutable (it will never change).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="name" type="xsd:string" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The name of the tenant. This is guaranteed to be unique, but may change.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="enabled" type="xsd:boolean" use="optional" default="true">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>An boolean signifying if a tenant is enabled or not. A disabled tenant
                        cannot be authenticated against.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="display-name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A human-readable, friendly name for use in user interfaces.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute type="xsd:dateTime" name="updated" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A time-stamp identifying the modification time of the
                        tenant.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute type="xsd:dateTime" name="created" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A creation time-stamp for the tenant.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/fault.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!--Fault Elements-->
  <element name="identityFault" type="identity:IdentityFault"/>
  <element name="serviceUnavailable" type="identity:ServiceUnavailableFault"/>
  <element name="badRequest" type="identity:BadRequestFault"/>
  <element name="unauthorized" type="identity:UnauthorizedFault"/>
  <element name="overLimit" type="identity:OverLimitFault"/>
  <element name="userDisabled" type="identity:UserDisabledFault"/>
  <element name="forbidden" type="identity:ForbiddenFault"/>
  <element name="itemNotFound" type="identity:ItemNotFoundFault"/>
  <element name="tenantConflict" type="identity:TenantConflictFault"/>
  <!--Fault Types-->
  <complexType name="IdentityFault">
    <sequence>
      <element name="message" type="xsd:string">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>A human readable message that is appropriate for display
                            to the end user.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element name="details" type="xsd:string" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>The optional &lt;details> element may contain useful
                            information for tracking down errors (e.g a stack
                            trace).  This information may or may not be appropriate
                            for display to an end user.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="code" type="xsd:int" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The HTTP status code associated with the current fault.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="ServiceUnavailableFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="BadRequestFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="UnauthorizedFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="UserDisabledFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="ForbiddenFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="ItemNotFoundFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="TenantConflictFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="OverLimitFault">
    <complexContent>
      <extension base="identity:IdentityFault">
        <attribute name="retryAt" type="xsd:dateTime" use="optional">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
              <p>An optional dateTime denoting when an operation should
                                be retried.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
      </extension>
    </complexContent>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/endpoints.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <include schemaLocation="api.xsd"/>
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <element name="endpoint" type="identity:Endpoint">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>An Endpoint.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="endpoints" type="identity:EndpointList">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A list of Endpoints.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="Endpoint">
    <sequence>
      <element name="version" type="identity:VersionForService" maxOccurs="1" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>Version details.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:int" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>An ID uniquely identifying the Endpoint.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="type" type="identity:ExtensibleServiceType" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The OpenStack-registered type (e.g. 'compute', 'object-store', etc).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The commercial service name (e.g. 'My Nova Cloud Servers').</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="region" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The region of Endpoint Template.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="publicURL" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The public URL to access represented service.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="internalURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The internal version of the public URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="adminURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The admin URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="tenantId" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>Tenant id to which the endpoints belong.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="EndpointList">
    <sequence>
      <element name="endpoint" type="identity:Endpoint" minOccurs="0" maxOccurs="unbounded"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/user.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:atom="http://www.w3.org/2005/Atom">
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Elements-->
  <element name="users" type="identity:UserList">
    <annotation>
      <xsd:documentation xml:lang="EN">
        <p>A list of Users.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="user" type="identity:User">
    <annotation>
      <xsd:documentation xml:lang="EN">
        <p>A Keystone User.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="User">
    <attribute name="id" type="xsd:ID" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>An automatically generated, unique, immutable (it will never change) identifier
                        for the user. This is generated by the backend this user is stored in.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="username" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A unique, mutable (it can change) user name that may be used by the user
                        an identifier when presenting credentials.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="email" type="xsd:string" use="optional"/>
    <attribute name="enabled" type="xsd:boolean" default="true" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A true/false value that determines if the user may authenticate or not.
                        If enabled is false, the user will not be able to authenticate.
                        How this value is stored or generated is dependent on the backend in use.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="display-name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A human-readable, friendly name for use in user interfaces.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="updated" type="xsd:dateTime" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A time-stamp identifying the modification time of the
                        user.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="created" type="xsd:dateTime" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A creation time-stamp for the user.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="UserList">
    <sequence>
      <element name="user" type="identity:User" minOccurs="0" maxOccurs="unbounded"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/credentials.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Elements-->
  <element name="auth" type="identity:AuthenticationRequest"/>
  <element name="credential" type="identity:CredentialType"/>
  <element name="credentials" type="identity:CredentialListType"/>
  <element name="passwordCredentials" type="identity:PasswordCredentialsRequiredUsername" substitutionGroup="identity:credential"/>
  <!--Complex Types-->
  <complexType name="CredentialType" abstract="true">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>Base type for credential in Keystone.</p>
      </xsd:documentation>
    </annotation>
    <sequence>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="AuthenticationRequest">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>Both the tenantId and tenantName are optional, but should not be specified together. If both attributes are specified, the server SHOULD respond with a 400 Bad Request.</p>
      </xsd:documentation>
    </annotation>
    <sequence>
      <choice>
        <element ref="identity:credential" minOccurs="1"/>
        <element name="token" type="identity:TokenForAuthenticationRequest"/>
      </choice>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="tenantId" type="xsd:string" use="optional"/>
    <attribute name="tenantName" type="xsd:string" use="optional"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="TokenForAuthenticationRequest">
    <attribute name="id" type="xsd:string" use="required"/>
  </complexType>
  <complexType name="PasswordCredentialsBase">
    <complexContent>
      <extension base="identity:CredentialType">
        <attribute name="username" type="xsd:string" use="optional"/>
        <attribute name="password" type="xsd:string" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="PasswordCredentialsWithoutUsername">
    <complexContent>
      <restriction base="identity:PasswordCredentialsBase">
        <attribute name="username" type="xsd:string" use="prohibited"/>
        <attribute name="password" type="xsd:string" use="required"/>
      </restriction>
    </complexContent>
  </complexType>
  <complexType name="PasswordCredentialsRequiredUsername">
    <complexContent>
      <restriction base="identity:PasswordCredentialsBase">
        <attribute name="username" type="xsd:string" use="required"/>
        <attribute name="password" type="xsd:string" use="required"/>
      </restriction>
    </complexContent>
  </complexType>
  <complexType name="CredentialListType">
    <sequence>
      <element ref="identity:credential" minOccurs="1" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/api-common.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/common/api/v1.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <annotation>
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xsdxt:title>Open Stack Common API Schema Types 1.0</xsdxt:title>
      <xsdxt:link rev="index" href="extensions.xsd"/>
      <xsdxt:link rev="index" href="limits.xsd"/>
      <xsdxt:link rev="index" href="version.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <p>This is the main index XML Schema document
                for Common API Schema Types Version 1.0.</p>
    </xsd:documentation>
  </annotation>
  <include schemaLocation="extensions.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>Types related to extensions.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <include schemaLocation="version.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>Types related to API version details.</p>
      </xsd:documentation>
    </annotation>
  </include>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/extensions.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<xsd:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/common/api/v1.0" xmlns:ext="http://docs.openstack.org/common/api/v1.0" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!--Import ATOM specific schema definitions-->
  <xsd:import namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <xsd:element name="extensions" type="ext:Extensions"/>
  <xsd:element name="extension" type="ext:Extension"/>
  <xsd:complexType name="Extensions">
    <xsd:sequence>
      <xsd:element name="extension" type="ext:Extension" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
  </xsd:complexType>
  <xsd:complexType name="Extension">
    <xsd:sequence>
      <xsd:element name="description" type="xsd:string" minOccurs="1"/>
      <!--<xsd:element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded" />-->
      <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="name" type="xsd:string" use="required"/>
    <xsd:attribute name="namespace" type="xsd:anyURI" use="required"/>
    <xsd:attribute name="alias" type="ext:Alias" use="required"/>
    <xsd:attribute name="updated" type="xsd:dateTime" use="optional"/>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
    <!--TODO(Ziad)resolve asser issue
            <xsd:assert vc:minVersion="1.1" test="atom:link[@rel='describedby']">
            <xsd:annotation>
                <xsd:documentation
                    xml:lang="EN"
                    xmlns="http://www.w3.org/1999/xhtml">
                    <p>
                        There should be at least one atom link
                        with a describedby relation.
                    </p>
                </xsd:documentation>
            </xsd:annotation>
        </xsd:assert>-->
  </xsd:complexType>
  <xsd:simpleType name="Alias">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="\w+\-\w+"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/version.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<xs:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/common/api/v1.0" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:annotation>
    <xs:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Version Types</xsdxt:title>
      <xsdxt:link rel="index" href="api-common.xsd"/>
    </xs:appinfo>
    <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>This schema file defines all types related to versioning.</p>
    </xs:documentation>
  </xs:annotation>
  <!--Import ATOM specific schema definitions-->
  <xs:import namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Multiple choices-->
  <xs:element name="choices" type="vers:VersionChoiceList">
    <xs:annotation>
      <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>This element is returned when the version of the
                    resource cannot be determined. The element
                    provides a list of choices for the resource.</p>
      </xs:documentation>
      <xs:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/choices.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/choices.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <!--Versioning-->
  <xs:element name="versions" type="vers:VersionChoiceList">
    <xs:annotation>
      <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Provides a list of supported versions.</p>
      </xs:documentation>
      <xs:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/versions.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/versions.json"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/atom+xml" href="../samples/versions-atom.xml"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <xs:element name="version" type="vers:VersionChoice" vc:minVersion="1.0" vc:maxVersion="1.1">
    <xs:annotation>
      <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>This element provides detailed meta information
                    regarding the status of the current API version.
                    This is the XSD 1.0 compatible element definition.</p>
      </xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="version2" type="vers:VersionChoiceRoot" vc:minVersion="1.1">
    <xs:annotation>
      <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>This element provides detailed meta information
                    regarding the status of the current API
                    version. The description should include a pointer
                    to both a human readable and a machine processable
                    description of the API service.</p>
      </xs:documentation>
      <xs:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/version.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/version.json"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/atom+xml" href="../samples/version-atom.xml"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <!--Types-->
  <xs:simpleType name="VersionStatus">
    <xs:annotation>
      <xs:documentation>
        <html:p>The VersionStatus type describes a service's operational status.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="ALPHA">
        <xs:annotation>
          <xs:documentation>
            <html:p>This is a new service the API. Thi API
                            contract may be set, but the implementaiton
                            may not be 100% complient with it. Developers
                            are encouraged to begin testing aganst an
                            ALPHA version to provide feedback.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BETA">
        <xs:annotation>
          <xs:documentation>
            <html:p>A status of BETA indicates that this
                            version is a candidate for the next major
                            release and may feature functionality not
                            available in the current
                            version. Developers are encouraged to test
                            and begin the migration processes to a
                            BETA version. Note that a BETA version is
                            undergoing testing, it has not been
                            officially released, and my not be stable.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CURRENT">
        <xs:annotation>
          <xs:documentation>
            <html:p>The API version is stable and has been
                            tested. Developers are encouraged to
                            develop against this API version. The
                            current released version of the API will
                            always be marked as CURRENT.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="DEPRECATED">
        <xs:annotation>
          <xs:documentation>
            <html:p>A status of DEPRECATED indicates that a
                            newer version of the API is
                            available. Application developers are
                            discouraged from using this version and
                            should instead develop against the latest
                            current version of the API.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="VersionChoiceList">
    <xs:annotation>
      <xs:documentation>
        <html:p>A version choice list outlines a collection of
                    resources at various versions.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="version" type="vers:VersionChoice" minOccurs="1" maxOccurs="unbounded"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
    <!--TODO(Ziad)resolve assert issue
            <xs:assert vc:minVersion="1.1" test="every $v in vers:version satisfies $v/atom:link[@rel='self']">
            <xs:annotation>
                <xs:documentation>
                    <html:p>
                        In version lists, every single version must
                        contain at least one self link.
                    </html:p>
                </xs:documentation>
            </xs:annotation>
        </xs:assert>-->
  </xs:complexType>
  <xs:complexType name="VersionChoiceRoot" vc:minVersion="1.1">
    <xs:complexContent>
      <xs:extension base="vers:VersionChoice">
        <!--TODO(Ziad)resolve asser issue
                    <xs:assert test="atom:link[@rel='describedby']">
                    <xs:annotation>
                        <xs:documentation>
                            <html:p>
                                When used as a root element, a version choice
                                must contain at least one describedby link.
                            </html:p>
                        </xs:documentation>
                    </xs:annotation>
                </xs:assert>-->
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="VersionChoice">
    <xs:annotation>
      <xs:documentation>
        <html:p>A version choice contains relevant information
                    about an available service that a user can then
                    use to target a specific version of the service.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="media-types" type="vers:MediaTypeList" minOccurs="0" maxOccurs="1"/>
      <!--<xs:element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded" />-->
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>
          <html:p>The ID of a version choice represents the service version's unique 
                        identifier. This ID is guaranteed to be unique only among the
                        service version choices outlined in the VersionChoiceList.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="status" type="vers:VersionStatus" use="required">
      <xs:annotation>
        <xs:documentation>
          <html:p>A version choice's status describes the current operational state of
                        the given service version. The operational status is captured in a
                        simple type enumeration called VersionStatus.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="updated" type="xs:dateTime" use="optional">
      <xs:annotation>
        <xs:documentation>
          <html:p>
            A version choice's updated attribute describes
                        the time when the version was updated. The
                        time should be updated anytime
            <html:strong>anything</html:strong>
            in the
                        version has changed: documentation,
                        extensions, bug fixes.
          </html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:complexType name="MediaTypeList">
    <xs:annotation>
      <xs:documentation>
        <html:p>A MediaTypeList outlines a collection of valid media types for a given 
                    service version.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="media-type" type="vers:MediaType" minOccurs="1" maxOccurs="unbounded"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:complexType name="MediaType">
    <xs:annotation>
      <xs:documentation>
        <html:p>A MediaType describes what content types the service version understands.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="base" type="xs:string" use="optional" default="">
      <xs:annotation>
        <xs:documentation>
          <html:p>The base of a given media type describes the
                        simple MIME type that then a more complicated
                        media type can be derived from. These types
                        are basic and provide no namespace or version
                        specific data are are only provided as a
                        convenience.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="type" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>
          <html:p>The type attribute of a MediaType describes
                        the MIME specific identifier of the media type
                        in question.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/OS-KSCATALOG.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:OS-KSCATALOG="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <import namespace="http://docs.openstack.org/identity/api/v2.0" schemaLocation="api.xsd"/>
  <element name="endpointTemplates" type="OS-KSCATALOG:EndpointTemplateList">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A list of Endpoint Templates.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="endpointTemplate" type="OS-KSCATALOG:EndpointTemplate">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>An Endpoint Template.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="EndpointTemplate">
    <sequence>
      <element name="version" type="identity:VersionForService" maxOccurs="1" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>Version details.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:string" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>An ID uniquely identifying the Endpoint Template.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="type" type="identity:ExtensibleServiceType" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The OpenStack-registered type (e.g. 'compute', 'object-store', etc).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The commercial service name (e.g. 'My Nova Cloud Servers').</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="region" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The region of Endpoint Template.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="publicURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The public URL to access represented service.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="internalURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The internal version of the public URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="adminURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The admin URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="global" type="xsd:boolean" default="false" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>If true the Endpoint Template is automatically part of every account.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="enabled" type="xsd:boolean" default="true" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>True if the Endpoint Template is enabled (active). 
                        A Endpoint Template cannot be added if it's disabled or inactive (false).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="EndpointTemplateList">
    <sequence>
      <element name="endpointTemplate" type="OS-KSCATALOG:EndpointTemplate" minOccurs="0" maxOccurs="unbounded"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="EndpointTemplateWithOnlyId">
    <complexContent>
      <restriction base="OS-KSCATALOG:EndpointTemplate">
        <attribute name="id" type="xsd:string" use="required"/>
        <attribute name="type" type="identity:ExtensibleServiceType" use="prohibited"/>
        <attribute name="name" type="xsd:string" use="prohibited"/>
        <attribute name="region" type="xsd:string" use="prohibited"/>
        <attribute name="publicURL" type="xsd:anyURI" use="prohibited"/>
        <attribute name="internalURL" type="xsd:anyURI" use="prohibited"/>
        <attribute name="adminURL" type="xsd:anyURI" use="prohibited"/>
        <attribute name="global" type="xsd:boolean" use="prohibited"/>
        <attribute name="enabled" type="xsd:boolean" use="prohibited"/>
      </restriction>
    </complexContent>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>${#Project#Endpoint}</con:endpoint></con:endpoints><con:resource name="v2.0" path="${#Project#path}"><con:settings/><con:parameters/><con:resource name="tenants" path="tenants"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="{tenantId}" path="{tenantId}"><con:settings/><con:parameters><con:parameter><con:name>tenantId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="OS-KSCATALOG" path="OS-KSCATALOG"><con:settings/><con:parameters/><con:resource name="endpoints" path="endpoints"><con:settings/><con:parameters/><con:resource name="{endpointId}" path="{endpointId}"><con:settings/><con:parameters><con:parameter><con:name>endpointId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Get Endpoint - getEndpoint" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:endpoint</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete Endpoint. - deleteEndpoint" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="List Endpoints - listEndpoints" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:endpoints</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Add Endpoint - addEndpoint" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0">v1:endpointTemplate</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:endpoint</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource></con:resource><con:resource name="OS-KSCATALOG" path="OS-KSCATALOG"><con:settings/><con:parameters/><con:resource name="endpointTemplates" path="endpointTemplates"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="{endpointTemplateId}" path="{endpointTemplateId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>endpointTemplateId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Get Endpoint Template - getEndpointTemplate" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0">v1:endpointTemplate</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete Endpoint Template. - deleteEndpointTemplate" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="List Endpoint Templates - listEndpointTemplates" method="GET"><con:settings/><con:parameters><con:parameter><con:name>serviceId</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0">v1:endpointTemplates</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Add Endpoint Template - addEndpointTemplate" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0">v1:endpointTemplate</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0">v1:endpointTemplate</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="RAX-KSGRP-admin" type="rest" basePath="" definitionUrl="/home/jorge/projects/keystone/keystone/content/admin/RAX-KSGRP-admin-auth2.0.wadl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/home/jorge/projects/keystone/keystone/content/admin/RAX-KSGRP-admin-auth2.0.wadl"><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/admin/RAX-KSGRP-admin-auth2.0.wadl</con:url><con:content><![CDATA[<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<!--*******************************************************-->
<!--Import Common XML Entities-->
<!---->
<!--You can resolve the entites with xmllint-->
<!---->
<!--xmllint -noent RAX-KSGRP-admin.wadl-->
<!--*******************************************************-->
<!--A collection of common faults, these are pretty much expected
         in every request.-->
<!--Faults on GET-->
<!--Faults on POST/PUT-->
<application xsi:schemaLocation="http://docs.openstack.org/identity/api/v2.0 ../common/xsd/api.xsd     http://docs.openstack.org/common/api/v1.0 ../common/xsd/api-common.xsd     http://wadl.dev.java.net/2009/02 http://www.w3.org/Submission/wadl/wadl.xsd     http://docs.openstack.org/identity/api/ext/RAX-KSGRP/v1.0 ../common/xsd/RAX-KSGRP-groups.xsd     " xmlns="http://wadl.dev.java.net/2009/02" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:RAX-KSGRP="http://docs.openstack.org/identity/api/ext/RAX-KSGRP/v1.0" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0">
  <grammars>
    <include href="../common/xsd/api.xsd"/>
    <include href="../common/xsd/api-common.xsd"/>
    <include href="../common/xsd/RAX-KSGRP-groups.xsd"/>
  </grammars>
  <!--*******************************************************-->
  <!--All Resoruces-->
  <!--*******************************************************-->
  <!--We should use SSL in production-->
  <resources base="http://localhost:35357">
    <resource id="version" path="v2.0">
      <param name="X-Auth-Token" style="header" type="xsd:string" required="true">
        <doc>You need a valid admin token for access.</doc>
      </param>
      <resource id="users" path="users">
        <resource id="userById" path="{userId}">
          <param name="userId" style="template" type="xsd:string"/>
          <resource id="user-groups-RAX-KSGRP" path="RAX-KSGRP">
            <method href="#listUserGroups"/>
          </resource>
        </resource>
      </resource>
    </resource>
  </resources>
  <method name="GET" id="listUserGroups">
    <doc xml:lang="EN" title="List Groups for a User">
      <p xmlns="http://www.w3.org/1999/xhtml">List all the groups for a user.</p>
    </doc>
    <response status="200 203">
      <representation mediaType="application/xml" element="RAX-KSGRP:groups">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/RAX-KSGRP-groups.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/RAX-KSGRP-groups.json"/>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
</application>]]></con:content><con:type>http://wadl.dev.java.net/2009/02</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/api.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <include schemaLocation="token.xsd"/>
  <include schemaLocation="tenant.xsd"/>
  <include schemaLocation="fault.xsd"/>
  <include schemaLocation="endpoints.xsd"/>
  <include schemaLocation="roles.xsd"/>
  <include schemaLocation="user.xsd"/>
  <include schemaLocation="credentials.xsd"/>
  <include schemaLocation="services.xsd"/>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/token.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <include schemaLocation="roles.xsd"/>
  <include schemaLocation="services.xsd"/>
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Elements-->
  <element name="access" type="identity:AuthenticateResponse"/>
  <!--Complex Types-->
  <complexType name="Token">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A token is an arbitrary bit of text that is used to access
                    resources. Each token has a scope which describes which
                    resources are accessible with it. A token may be
                    revoked at anytime and is valid for a finite duration.</p>
        <p>While Keystone supports token-based authentication in this release,
                    the intention is for it to support additional protocols in the
                    future. The desire is for it to be an integration service, and not
                    a full-fledged identity store and management solution.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/token.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/token.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
    <sequence>
      <element name="tenant" type="identity:TenantForAuthenticateResponse"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:string" use="required"/>
    <attribute name="expires" type="xsd:dateTime" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="AuthenticateResponse">
    <sequence>
      <element name="token" type="identity:Token"/>
      <element name="user" type="identity:UserForAuthenticateResponse"/>
      <element name="serviceCatalog" type="identity:ServiceCatalog" minOccurs="0"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="UserForAuthenticateResponse">
    <sequence>
      <element name="roles" type="identity:RoleList"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:string"/>
    <attribute name="name" type="xsd:string"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="TenantForAuthenticateResponse">
    <attribute name="id" type="xsd:string"/>
    <attribute name="name" type="xsd:string"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="ServiceCatalog">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>The service catalog lists the services you have access to</p>
        <div class="design">
          <p>We optimized for future flexibility around the hierarchy. So we
                    left the design as a flat list of endpoints with attributes and the
                    consumer can categorize as they need.
                    This results in potential duplication (such as with the version/@list)
                    but we acceopt that normalization cost in order to not force an
                    artificial hierarchy (suchas on region, which can be optional).</p>
        </div>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/xml" href="../samples/services.xml"/>
                     
          </xsdxt:sample>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/json" href="../samples/services.json"/>
                     
          </xsdxt:sample>
                 
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
    <sequence>
      <element name="service" type="identity:ServiceForCatalog" minOccurs="1" maxOccurs="unbounded">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>A list of services.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="ServiceForCatalog">
    <sequence>
      <element name="endpoint" type="identity:EndpointForService" minOccurs="1" maxOccurs="unbounded">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>A list of endpoints.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="type" type="identity:ExtensibleServiceType" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The OpenStack-registered type (e.g. 'compute', 'object-store', etc).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The commercial service name (e.g. 'My Nova Cloud Servers').</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <!--EndpointForService-->
  <complexType name="EndpointForService">
    <sequence>
      <element name="version" type="identity:VersionForService" maxOccurs="1" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>Version details.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="region" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The name of the region where the endpoint
                        lives. Example: airport codes; LHR (UK),
                        STL (Saint Louis)</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="tenantId" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>Tenant id to which the endpoints belong.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="publicURL" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>Public accessible service URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="internalURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A service URL, accessible only locally within that
                        cloud (generally over a high bandwidth, low latency,
                        free of charge link).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="adminURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>An Admin URL (used for administration using privileged
                        calls). This may expose
                        additional functionality not found in the public and
                        internal URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <!--VersionForService-->
  <complexType name="VersionForService">
    <attribute name="id" type="xsd:string" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>Id of the version.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="info" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>URI to get the information specific to this version.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="list" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>URI to get the information about all versions.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/atom/atom.xsd</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://www.w3.org/2005/Atom" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd"/>
  <xs:simpleType name="relation">
    <xs:restriction base="xs:string">
      <xs:enumeration value="alternate"/>
      <xs:enumeration value="appendix"/>
      <xs:enumeration value="archives"/>
      <xs:enumeration value="author"/>
      <xs:enumeration value="bookmark"/>
      <xs:enumeration value="chapter"/>
      <xs:enumeration value="contents"/>
      <xs:enumeration value="copyright"/>
      <xs:enumeration value="current"/>
      <xs:enumeration value="describedby"/>
      <xs:enumeration value="edit"/>
      <xs:enumeration value="edit-media"/>
      <xs:enumeration value="first"/>
      <xs:enumeration value="glossary"/>
      <xs:enumeration value="help"/>
      <xs:enumeration value="hub"/>
      <xs:enumeration value="icon"/>
      <xs:enumeration value="index"/>
      <xs:enumeration value="last"/>
      <xs:enumeration value="latest-version"/>
      <xs:enumeration value="license"/>
      <xs:enumeration value="monitor"/>
      <xs:enumeration value="monitor-group"/>
      <xs:enumeration value="next"/>
      <xs:enumeration value="next-arvhice"/>
      <xs:enumeration value="nofollow"/>
      <xs:enumeration value="payment"/>
      <xs:enumeration value="predecessor-version"/>
      <xs:enumeration value="prefetch"/>
      <xs:enumeration value="prev"/>
      <xs:enumeration value="previous"/>
      <xs:enumeration value="prev-archive"/>
      <xs:enumeration value="replies"/>
      <xs:enumeration value="search"/>
      <xs:enumeration value="section"/>
      <xs:enumeration value="self"/>
      <xs:enumeration value="service"/>
      <xs:enumeration value="start"/>
      <xs:enumeration value="stylesheet"/>
      <xs:enumeration value="subsection"/>
      <xs:enumeration value="successor-version"/>
      <xs:enumeration value="up"/>
      <xs:enumeration value="version-history"/>
      <xs:enumeration value="via"/>
      <xs:enumeration value="working-copy"/>
      <xs:enumeration value="working-copy-of"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="link" type="atom:link"/>
  <xs:complexType name="link">
    <xs:annotation>
      <xs:documentation>
        <html:p>
          See section 3.4 of the ATOM RFC
          <html:a href="http://tools.ietf.org/html/rfc4287">RFC4287</html:a>
        </html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="rel" use="required" type="atom:relation">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="type" use="optional" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="href" use="required" type="xs:anyURI">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="hreflang" use="optional" type="xs:NMTOKEN">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="title" use="optional" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/atom/xml.xsd</con:url><con:content><![CDATA[<?xml-stylesheet href="../2008/09/xsd.xsl" type="text/xsl"?>
<xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
  <xs:annotation>
    <xs:documentation>
      <div>
        <h1>About the XML namespace</h1>
        <div class="bodytext">
          <p>This schema document describes the XML namespace, in a form
      suitable for import by other schema documents.</p>
          <p>
            See
            <a href="http://www.w3.org/XML/1998/namespace.html">http://www.w3.org/XML/1998/namespace.html</a>
            and
            <a href="http://www.w3.org/TR/REC-xml">http://www.w3.org/TR/REC-xml</a>
            for information 
      about this namespace.
          </p>
          <p>Note that local names in this namespace are intended to be
      defined only by the World Wide Web Consortium or its subgroups.
      The names currently defined in this namespace are listed below.
      They should not be used with conflicting semantics by any Working
      Group, specification, or document instance.</p>
          <p>
            See further below in this document for more information about
            <a href="#usage">how to refer to this schema document from your own
      XSD schema documents</a>
            and about
            <a href="#nsversioning">the
      namespace-versioning policy governing this schema document</a>
            .
          </p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>lang (as an attribute name)</h3>
          <p>denotes an attribute whose value
       is a language code for the natural language of the content of
       any element; its value is inherited.  This name is reserved
       by virtue of its definition in the XML specification.</p>
        </div>
        <div>
          <h4>Notes</h4>
          <p>Attempting to install the relevant ISO 2- and 3-letter
      codes as the enumerated possible values is probably never
      going to be a realistic possibility.</p>
          <p>
            See BCP 47 at
            <a href="http://www.rfc-editor.org/rfc/bcp/bcp47.txt">http://www.rfc-editor.org/rfc/bcp/bcp47.txt</a>
            and the IANA language subtag registry at
            <a href="http://www.iana.org/assignments/language-subtag-registry">http://www.iana.org/assignments/language-subtag-registry</a>
            for further information.
          </p>
          <p>The union allows for the 'un-declaration' of xml:lang with
      the empty string.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:union memberTypes="xs:language">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value=""/>
          </xs:restriction>
        </xs:simpleType>
      </xs:union>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="space">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>space (as an attribute name)</h3>
          <p>denotes an attribute whose
       value is a keyword indicating what whitespace processing
       discipline is intended for the content of the element; its
       value is inherited.  This name is reserved by virtue of its
       definition in the XML specification.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>base (as an attribute name)</h3>
          <p>denotes an attribute whose value
       provides a URI to be used as the base for interpreting any
       relative URIs in the scope of the element on which it
       appears; its value is inherited.  This name is reserved
       by virtue of its definition in the XML Base specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xmlbase/">http://www.w3.org/TR/xmlbase/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="id" type="xs:ID">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>id (as an attribute name)</h3>
          <p>denotes an attribute whose value
       should be interpreted as if declared to be of type ID.
       This name is reserved by virtue of its definition in the
       xml:id specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xml-id/">http://www.w3.org/TR/xml-id/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
    <xs:attribute ref="xml:id"/>
  </xs:attributeGroup>
  <xs:annotation>
    <xs:documentation>
      <div>
        <h3>Father (in any context at all)</h3>
        <div class="bodytext">
          <p>denotes Jon Bosak, the chair of 
      the original XML Working Group.  This name is reserved by 
      the following decision of the W3C XML Plenary and 
      XML Coordination groups:</p>
          <blockquote>
            <p>In appreciation for his vision, leadership and
	dedication the W3C XML Plenary on this 10th day of
	February, 2000, reserves for Jon Bosak in perpetuity
	the XML name "xml:Father".</p>
          </blockquote>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>
      <div xml:id="usage" id="usage">
        <h2>
          <a name="usage">About this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            This schema defines attributes and an attribute group suitable
      for use by schemas wishing to allow
            <code>xml:base</code>
            ,
            <code>xml:lang</code>
            ,
            <code>xml:space</code>
            or
            <code>xml:id</code>
            attributes on elements they define.
          </p>
          <p>To enable this, such a schema must import this schema for
      the XML namespace, e.g. as follows:</p>
          <pre>&lt;schema . . .>
           . . .
           &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2001/xml.xsd"/></pre>
          <p>or</p>
          <pre>&lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2009/01/xml.xsd"/></pre>
          <p>Subsequently, qualified reference to any of the attributes or the
      group defined below will have the desired effect, e.g.</p>
          <pre>&lt;type . . .>
           . . .
           &lt;attributeGroup ref="xml:specialAttrs"/></pre>
          <p>will define a type which will schema-validate an instance element
      with any of those attributes.</p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>
      <div id="nsversioning" xml:id="nsversioning">
        <h2>
          <a name="nsversioning">Versioning policy for this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            In keeping with the XML Schema WG's standard versioning
      policy, this schema document will persist at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            .
          </p>
          <p>
            At the date of issue it can also be found at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            .
          </p>
          <p>
            The schema document at that URI may however change in the future,
      in order to remain compatible with the latest version of XML
      Schema itself, or with the XML namespace itself.  In other words,
      if the XML Schema or XML namespaces change, the version of this
      document at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            will change accordingly; the version at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            will not change.
          </p>
          <p>Previous dated (and unchanging) versions of this schema 
      document are at:</p>
          <ul>
            <li>
              <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2007/08/xml.xsd">http://www.w3.org/2007/08/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2004/10/xml.xsd">http://www.w3.org/2004/10/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2001/03/xml.xsd">http://www.w3.org/2001/03/xml.xsd</a>
            </li>
          </ul>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/roles.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Elements-->
  <element name="roles" type="identity:RoleList">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A list of roles.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="role" type="identity:Role">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A role.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="Role">
    <sequence>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:string" use="optional"/>
    <attribute name="name" type="xsd:string" use="required"/>
    <attribute name="description" type="xsd:string" use="optional"/>
    <attribute name="serviceId" type="xsd:string" use="optional"/>
    <attribute name="tenantId" type="xsd:string" use="optional"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="RoleList">
    <sequence>
      <element name="role" type="identity:Role" minOccurs="0" maxOccurs="unbounded"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/services.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Simple Types-->
  <simpleType name="ExtensibleServiceType">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>
          An extensible service type allows all of the
                    strings defined in
          <a href="#type_ServiceType" title="See definition of                         ServiceType">ServiceType</a>
          or an
                    alias prefixed status.
        </p>
      </xsd:documentation>
    </annotation>
    <union memberTypes="identity:ServiceType identity:ExtendedService"/>
  </simpleType>
  <simpleType name="ServiceType">
    <restriction base="xsd:string">
      <enumeration value="compute">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>The type for an OpenStack Compute API 1.1 compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="object-store">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>The type for a Swift-compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="image-service">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>The type for a Glance-compatible service</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="identity">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>The type for a Keystone-compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
    </restriction>
  </simpleType>
  <simpleType name="ExtendedService">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A non-core service type which must contain an extension prefix.</p>
      </xsd:documentation>
    </annotation>
    <restriction base="xsd:string">
      <pattern value="(\w|-)+:\w+"/>
    </restriction>
  </simpleType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/tenant.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Elements-->
  <element name="tenant" type="identity:Tenant">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A container used to group or isolate resources and/or identity
                  objects. Depending on the service operator, a tenant may map to a customer,
                  account, organization, or project.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/xml" href="../samples/tenant.xml"/>
                     
          </xsdxt:sample>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/json" href="../samples/tenant.json"/>
                     
          </xsdxt:sample>
                 
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="tenants" type="identity:Tenants">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A list of tenants.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="Tenants">
    <sequence>
      <element name="tenant" type="identity:Tenant" maxOccurs="100"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="Tenant">
    <sequence>
      <element name="description" type="xsd:string">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>An free text description of the tenant.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:ID" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>An ID uniquely identifying the tenant. This usually comes from the back-end store.
                        This value is guaranteed to be unique and immutable (it will never change).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="name" type="xsd:string" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The name of the tenant. This is guaranteed to be unique, but may change.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="enabled" type="xsd:boolean" use="optional" default="true">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>An boolean signifying if a tenant is enabled or not. A disabled tenant
                        cannot be authenticated against.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="display-name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A human-readable, friendly name for use in user interfaces.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute type="xsd:dateTime" name="updated" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A time-stamp identifying the modification time of the
                        tenant.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute type="xsd:dateTime" name="created" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A creation time-stamp for the tenant.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/fault.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!--Fault Elements-->
  <element name="identityFault" type="identity:IdentityFault"/>
  <element name="serviceUnavailable" type="identity:ServiceUnavailableFault"/>
  <element name="badRequest" type="identity:BadRequestFault"/>
  <element name="unauthorized" type="identity:UnauthorizedFault"/>
  <element name="overLimit" type="identity:OverLimitFault"/>
  <element name="userDisabled" type="identity:UserDisabledFault"/>
  <element name="forbidden" type="identity:ForbiddenFault"/>
  <element name="itemNotFound" type="identity:ItemNotFoundFault"/>
  <element name="tenantConflict" type="identity:TenantConflictFault"/>
  <!--Fault Types-->
  <complexType name="IdentityFault">
    <sequence>
      <element name="message" type="xsd:string">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>A human readable message that is appropriate for display
                            to the end user.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element name="details" type="xsd:string" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>The optional &lt;details> element may contain useful
                            information for tracking down errors (e.g a stack
                            trace).  This information may or may not be appropriate
                            for display to an end user.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="code" type="xsd:int" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The HTTP status code associated with the current fault.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="ServiceUnavailableFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="BadRequestFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="UnauthorizedFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="UserDisabledFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="ForbiddenFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="ItemNotFoundFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="TenantConflictFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="OverLimitFault">
    <complexContent>
      <extension base="identity:IdentityFault">
        <attribute name="retryAt" type="xsd:dateTime" use="optional">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
              <p>An optional dateTime denoting when an operation should
                                be retried.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
      </extension>
    </complexContent>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/endpoints.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <include schemaLocation="api.xsd"/>
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <element name="endpoint" type="identity:Endpoint">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>An Endpoint.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="endpoints" type="identity:EndpointList">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A list of Endpoints.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="Endpoint">
    <sequence>
      <element name="version" type="identity:VersionForService" maxOccurs="1" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>Version details.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:int" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>An ID uniquely identifying the Endpoint.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="type" type="identity:ExtensibleServiceType" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The OpenStack-registered type (e.g. 'compute', 'object-store', etc).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The commercial service name (e.g. 'My Nova Cloud Servers').</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="region" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The region of Endpoint Template.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="publicURL" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The public URL to access represented service.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="internalURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The internal version of the public URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="adminURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The admin URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="tenantId" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>Tenant id to which the endpoints belong.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="EndpointList">
    <sequence>
      <element name="endpoint" type="identity:Endpoint" minOccurs="0" maxOccurs="unbounded"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/user.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:atom="http://www.w3.org/2005/Atom">
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Elements-->
  <element name="users" type="identity:UserList">
    <annotation>
      <xsd:documentation xml:lang="EN">
        <p>A list of Users.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="user" type="identity:User">
    <annotation>
      <xsd:documentation xml:lang="EN">
        <p>A Keystone User.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="User">
    <attribute name="id" type="xsd:ID" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>An automatically generated, unique, immutable (it will never change) identifier
                        for the user. This is generated by the backend this user is stored in.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="username" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A unique, mutable (it can change) user name that may be used by the user
                        an identifier when presenting credentials.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="email" type="xsd:string" use="optional"/>
    <attribute name="enabled" type="xsd:boolean" default="true" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A true/false value that determines if the user may authenticate or not.
                        If enabled is false, the user will not be able to authenticate.
                        How this value is stored or generated is dependent on the backend in use.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="display-name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A human-readable, friendly name for use in user interfaces.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="updated" type="xsd:dateTime" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A time-stamp identifying the modification time of the
                        user.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="created" type="xsd:dateTime" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A creation time-stamp for the user.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="UserList">
    <sequence>
      <element name="user" type="identity:User" minOccurs="0" maxOccurs="unbounded"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/credentials.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Elements-->
  <element name="auth" type="identity:AuthenticationRequest"/>
  <element name="credential" type="identity:CredentialType"/>
  <element name="credentials" type="identity:CredentialListType"/>
  <element name="passwordCredentials" type="identity:PasswordCredentialsRequiredUsername" substitutionGroup="identity:credential"/>
  <!--Complex Types-->
  <complexType name="CredentialType" abstract="true">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>Base type for credential in Keystone.</p>
      </xsd:documentation>
    </annotation>
    <sequence>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="AuthenticationRequest">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>Both the tenantId and tenantName are optional, but should not be specified together. If both attributes are specified, the server SHOULD respond with a 400 Bad Request.</p>
      </xsd:documentation>
    </annotation>
    <sequence>
      <choice>
        <element ref="identity:credential" minOccurs="1"/>
        <element name="token" type="identity:TokenForAuthenticationRequest"/>
      </choice>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="tenantId" type="xsd:string" use="optional"/>
    <attribute name="tenantName" type="xsd:string" use="optional"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="TokenForAuthenticationRequest">
    <attribute name="id" type="xsd:string" use="required"/>
  </complexType>
  <complexType name="PasswordCredentialsBase">
    <complexContent>
      <extension base="identity:CredentialType">
        <attribute name="username" type="xsd:string" use="optional"/>
        <attribute name="password" type="xsd:string" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="PasswordCredentialsWithoutUsername">
    <complexContent>
      <restriction base="identity:PasswordCredentialsBase">
        <attribute name="username" type="xsd:string" use="prohibited"/>
        <attribute name="password" type="xsd:string" use="required"/>
      </restriction>
    </complexContent>
  </complexType>
  <complexType name="PasswordCredentialsRequiredUsername">
    <complexContent>
      <restriction base="identity:PasswordCredentialsBase">
        <attribute name="username" type="xsd:string" use="required"/>
        <attribute name="password" type="xsd:string" use="required"/>
      </restriction>
    </complexContent>
  </complexType>
  <complexType name="CredentialListType">
    <sequence>
      <element ref="identity:credential" minOccurs="1" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/api-common.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/common/api/v1.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <annotation>
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xsdxt:title>Open Stack Common API Schema Types 1.0</xsdxt:title>
      <xsdxt:link rev="index" href="extensions.xsd"/>
      <xsdxt:link rev="index" href="limits.xsd"/>
      <xsdxt:link rev="index" href="version.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <p>This is the main index XML Schema document
                for Common API Schema Types Version 1.0.</p>
    </xsd:documentation>
  </annotation>
  <include schemaLocation="extensions.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>Types related to extensions.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <include schemaLocation="version.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>Types related to API version details.</p>
      </xsd:documentation>
    </annotation>
  </include>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/extensions.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<xsd:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/common/api/v1.0" xmlns:ext="http://docs.openstack.org/common/api/v1.0" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!--Import ATOM specific schema definitions-->
  <xsd:import namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <xsd:element name="extensions" type="ext:Extensions"/>
  <xsd:element name="extension" type="ext:Extension"/>
  <xsd:complexType name="Extensions">
    <xsd:sequence>
      <xsd:element name="extension" type="ext:Extension" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
  </xsd:complexType>
  <xsd:complexType name="Extension">
    <xsd:sequence>
      <xsd:element name="description" type="xsd:string" minOccurs="1"/>
      <!--<xsd:element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded" />-->
      <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="name" type="xsd:string" use="required"/>
    <xsd:attribute name="namespace" type="xsd:anyURI" use="required"/>
    <xsd:attribute name="alias" type="ext:Alias" use="required"/>
    <xsd:attribute name="updated" type="xsd:dateTime" use="optional"/>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
    <!--TODO(Ziad)resolve asser issue
            <xsd:assert vc:minVersion="1.1" test="atom:link[@rel='describedby']">
            <xsd:annotation>
                <xsd:documentation
                    xml:lang="EN"
                    xmlns="http://www.w3.org/1999/xhtml">
                    <p>
                        There should be at least one atom link
                        with a describedby relation.
                    </p>
                </xsd:documentation>
            </xsd:annotation>
        </xsd:assert>-->
  </xsd:complexType>
  <xsd:simpleType name="Alias">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="\w+\-\w+"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/version.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<xs:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/common/api/v1.0" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:annotation>
    <xs:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Version Types</xsdxt:title>
      <xsdxt:link rel="index" href="api-common.xsd"/>
    </xs:appinfo>
    <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>This schema file defines all types related to versioning.</p>
    </xs:documentation>
  </xs:annotation>
  <!--Import ATOM specific schema definitions-->
  <xs:import namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Multiple choices-->
  <xs:element name="choices" type="vers:VersionChoiceList">
    <xs:annotation>
      <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>This element is returned when the version of the
                    resource cannot be determined. The element
                    provides a list of choices for the resource.</p>
      </xs:documentation>
      <xs:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/choices.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/choices.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <!--Versioning-->
  <xs:element name="versions" type="vers:VersionChoiceList">
    <xs:annotation>
      <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Provides a list of supported versions.</p>
      </xs:documentation>
      <xs:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/versions.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/versions.json"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/atom+xml" href="../samples/versions-atom.xml"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <xs:element name="version" type="vers:VersionChoice" vc:minVersion="1.0" vc:maxVersion="1.1">
    <xs:annotation>
      <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>This element provides detailed meta information
                    regarding the status of the current API version.
                    This is the XSD 1.0 compatible element definition.</p>
      </xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="version2" type="vers:VersionChoiceRoot" vc:minVersion="1.1">
    <xs:annotation>
      <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>This element provides detailed meta information
                    regarding the status of the current API
                    version. The description should include a pointer
                    to both a human readable and a machine processable
                    description of the API service.</p>
      </xs:documentation>
      <xs:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/version.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/version.json"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/atom+xml" href="../samples/version-atom.xml"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <!--Types-->
  <xs:simpleType name="VersionStatus">
    <xs:annotation>
      <xs:documentation>
        <html:p>The VersionStatus type describes a service's operational status.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="ALPHA">
        <xs:annotation>
          <xs:documentation>
            <html:p>This is a new service the API. Thi API
                            contract may be set, but the implementaiton
                            may not be 100% complient with it. Developers
                            are encouraged to begin testing aganst an
                            ALPHA version to provide feedback.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BETA">
        <xs:annotation>
          <xs:documentation>
            <html:p>A status of BETA indicates that this
                            version is a candidate for the next major
                            release and may feature functionality not
                            available in the current
                            version. Developers are encouraged to test
                            and begin the migration processes to a
                            BETA version. Note that a BETA version is
                            undergoing testing, it has not been
                            officially released, and my not be stable.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CURRENT">
        <xs:annotation>
          <xs:documentation>
            <html:p>The API version is stable and has been
                            tested. Developers are encouraged to
                            develop against this API version. The
                            current released version of the API will
                            always be marked as CURRENT.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="DEPRECATED">
        <xs:annotation>
          <xs:documentation>
            <html:p>A status of DEPRECATED indicates that a
                            newer version of the API is
                            available. Application developers are
                            discouraged from using this version and
                            should instead develop against the latest
                            current version of the API.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="VersionChoiceList">
    <xs:annotation>
      <xs:documentation>
        <html:p>A version choice list outlines a collection of
                    resources at various versions.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="version" type="vers:VersionChoice" minOccurs="1" maxOccurs="unbounded"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
    <!--TODO(Ziad)resolve assert issue
            <xs:assert vc:minVersion="1.1" test="every $v in vers:version satisfies $v/atom:link[@rel='self']">
            <xs:annotation>
                <xs:documentation>
                    <html:p>
                        In version lists, every single version must
                        contain at least one self link.
                    </html:p>
                </xs:documentation>
            </xs:annotation>
        </xs:assert>-->
  </xs:complexType>
  <xs:complexType name="VersionChoiceRoot" vc:minVersion="1.1">
    <xs:complexContent>
      <xs:extension base="vers:VersionChoice">
        <!--TODO(Ziad)resolve asser issue
                    <xs:assert test="atom:link[@rel='describedby']">
                    <xs:annotation>
                        <xs:documentation>
                            <html:p>
                                When used as a root element, a version choice
                                must contain at least one describedby link.
                            </html:p>
                        </xs:documentation>
                    </xs:annotation>
                </xs:assert>-->
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="VersionChoice">
    <xs:annotation>
      <xs:documentation>
        <html:p>A version choice contains relevant information
                    about an available service that a user can then
                    use to target a specific version of the service.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="media-types" type="vers:MediaTypeList" minOccurs="0" maxOccurs="1"/>
      <!--<xs:element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded" />-->
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>
          <html:p>The ID of a version choice represents the service version's unique 
                        identifier. This ID is guaranteed to be unique only among the
                        service version choices outlined in the VersionChoiceList.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="status" type="vers:VersionStatus" use="required">
      <xs:annotation>
        <xs:documentation>
          <html:p>A version choice's status describes the current operational state of
                        the given service version. The operational status is captured in a
                        simple type enumeration called VersionStatus.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="updated" type="xs:dateTime" use="optional">
      <xs:annotation>
        <xs:documentation>
          <html:p>
            A version choice's updated attribute describes
                        the time when the version was updated. The
                        time should be updated anytime
            <html:strong>anything</html:strong>
            in the
                        version has changed: documentation,
                        extensions, bug fixes.
          </html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:complexType name="MediaTypeList">
    <xs:annotation>
      <xs:documentation>
        <html:p>A MediaTypeList outlines a collection of valid media types for a given 
                    service version.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="media-type" type="vers:MediaType" minOccurs="1" maxOccurs="unbounded"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:complexType name="MediaType">
    <xs:annotation>
      <xs:documentation>
        <html:p>A MediaType describes what content types the service version understands.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="base" type="xs:string" use="optional" default="">
      <xs:annotation>
        <xs:documentation>
          <html:p>The base of a given media type describes the
                        simple MIME type that then a more complicated
                        media type can be derived from. These types
                        are basic and provide no namespace or version
                        specific data are are only provided as a
                        convenience.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="type" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>
          <html:p>The type attribute of a MediaType describes
                        the MIME specific identifier of the media type
                        in question.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/RAX-KSGRP-groups.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:RAX-KSGRP="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <!--Import schema we are extending-->
  <import namespace="http://docs.openstack.org/identity/api/v2.0" schemaLocation="token.xsd"/>
  <import namespace="http://docs.openstack.org/identity/api/v2.0" schemaLocation="api.xsd"/>
  <element name="groups" type="RAX-KSGRP:Groups"/>
  <complexType name="Groups">
    <sequence>
      <element name="group" type="RAX-KSGRP:Group" maxOccurs="100"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="Group">
    <sequence>
      <element name="description" type="xsd:string" maxOccurs="1"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:string" use="required"/>
    <attribute name="name" type="xsd:string" use="optional"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="TenantGroup">
    <complexContent>
      <extension base="RAX-KSGRP:Group">
        <attribute name="tenantId" type="xsd:string" use="required"/>
      </extension>
    </complexContent>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>${#Project#Endpoint}</con:endpoint></con:endpoints><con:resource name="v2.0" path="${#Project#path}"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="users" path="users"><con:settings/><con:parameters/><con:resource name="{userId}" path="{userId}"><con:settings/><con:parameters><con:parameter><con:name>userId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="RAX-KSGRP" path="RAX-KSGRP"><con:settings/><con:parameters/><con:method name="List Groups for a User - listUserGroups" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/RAX-KSGRP/v1.0">v1:groups</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="OS-KSEC2-admin" type="rest" basePath="" definitionUrl="/home/jorge/projects/keystone/keystone/content/admin/OS-KSEC2-admin-auth2.0.wadl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/home/jorge/projects/keystone/keystone/content/admin/OS-KSEC2-admin-auth2.0.wadl"><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/admin/OS-KSEC2-admin-auth2.0.wadl</con:url><con:content><![CDATA[<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<!--*******************************************************-->
<!--Import Common XML Entities-->
<!---->
<!--You can resolve the entites with xmllint-->
<!---->
<!--xmllint -noent OS-KSEC2-admin.wadl-->
<!--*******************************************************-->
<!--A collection of common faults, these are pretty much expected
         in every request.-->
<!--Faults on GET-->
<!--Faults on POST/PUT-->
<application xsi:schemaLocation="http://docs.openstack.org/identity/api/v2.0 ../common/xsd/api.xsd   http://docs.openstack.org/common/api/v1.0 ../common/xsd/api-common.xsd   http://wadl.dev.java.net/2009/02 http://www.w3.org/Submission/wadl/wadl.xsd   http://docs.openstack.org/identity/api/ext/OS-KSEC2/v1.0 ../common/xsd/OS-KSEC2-credentials.xsd   " xmlns="http://wadl.dev.java.net/2009/02" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:OS-KSEC2="http://docs.openstack.org/identity/api/ext/OS-KSEC2/v1.0" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0">
  <grammars>
    <include href="../common/xsd/api.xsd"/>
    <include href="../common/xsd/api-common.xsd"/>
    <include href="../common/xsd/OS-KSEC2-credentials.xsd"/>
  </grammars>
  <!--*******************************************************-->
  <!--All Resoruces-->
  <!--*******************************************************-->
  <!--We should use SSL in production-->
  <resources base="http://localhost:35357">
    <resource id="version" path="v2.0">
      <param name="X-Auth-Token" style="header" type="xsd:string" required="true">
        <doc>You need a valid admin token for access.</doc>
      </param>
      <resource id="users" path="users">
        <resource id="userById" path="{userId}">
          <param name="userId" style="template" required="true" type="xsd:string"/>
          <resource id="user-OS-KSADM" path="OS-KSADM">
            <resource id="userCredentials" path="credentials">
              <method href="#addUserCredential"/>
              <method href="#listCredentials"/>
              <resource id="userCredentialsByType" path="OS-KSEC2:ec2Credentials">
                <method href="#updateUserCredential"/>
                <method href="#deleteUserCredential"/>
                <method href="#getUserCredential"/>
              </resource>
            </resource>
          </resource>
        </resource>
      </resource>
    </resource>
  </resources>
  <!--*******************************************************-->
  <!--All Methods-->
  <!--*******************************************************-->
  <!--User Credentials-->
  <method name="POST" id="addUserCredential">
    <doc xml:lang="EN" title="Add user Credential.">
      <p xmlns="http://www.w3.org/1999/xhtml">Adds a credential to a user.</p>
    </doc>
    <request>
      <representation mediaType="application/xml" element="OS-KSEC2:ec2Credentials">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/ec2Credentials.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/ec2Credentials.json"/>
        </doc>
      </representation>
    </request>
    <response status="201">
      <representation mediaType="application/xml" element="OS-KSEC2:ec2Credentials">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/ec2Credentials.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/ec2Credentials.json"/>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="listCredentials">
    <doc xml:lang="EN" title="List Credentials">
      <p xmlns="http://www.w3.org/1999/xhtml">List credentials.</p>
    </doc>
    <request>
      <param name="marker" style="query" required="false" type="xsd:string"/>
      <param name="limit" style="query" required="false" type="xsd:int"/>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:credentials">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/credentialswithec2.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/credentialswithec2.json"/>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="listCredentialsByType">
    <doc xml:lang="EN" title="List Credentials by type">
      <p xmlns="http://www.w3.org/1999/xhtml">List credentials by type.</p>
    </doc>
    <request>
      <param name="marker" style="query" required="false" type="xsd:string"/>
      <param name="limit" style="query" required="false" type="xsd:int"/>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:credentials">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/credentials.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/credentials.json"/>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="POST" id="updateUserCredential">
    <doc xml:lang="EN" title="Update user credential">
      <p xmlns="http://www.w3.org/1999/xhtml">Update credentials.</p>
    </doc>
    <request>
      <representation mediaType="application/xml" element="OS-KSEC2:ec2Credentials">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/ec2Credentials.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/ec2Credentials.json"/>
        </doc>
      </representation>
    </request>
    <response status="200">
      <representation mediaType="application/xml" element="OS-KSEC2:ec2Credentials">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/ec2Credentials.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/ec2Credentials.json"/>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="DELETE" id="deleteUserCredential">
    <doc xml:lang="EN" title="Delete user credential">
      <p xmlns="http://www.w3.org/1999/xhtml">Delete User credentials.</p>
    </doc>
    <response status="204"/>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getUserCredential">
    <doc xml:lang="EN" title="Get user Credentials">
      <p xmlns="http://www.w3.org/1999/xhtml">Get user credentials.</p>
    </doc>
    <response status="200 203">
      <representation mediaType="application/xml" element="OS-KSEC2:ec2Credentials">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/ec2Credentials.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/ec2Credentials.json"/>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
</application>]]></con:content><con:type>http://wadl.dev.java.net/2009/02</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/api.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <include schemaLocation="token.xsd"/>
  <include schemaLocation="tenant.xsd"/>
  <include schemaLocation="fault.xsd"/>
  <include schemaLocation="endpoints.xsd"/>
  <include schemaLocation="roles.xsd"/>
  <include schemaLocation="user.xsd"/>
  <include schemaLocation="credentials.xsd"/>
  <include schemaLocation="services.xsd"/>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/token.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <include schemaLocation="roles.xsd"/>
  <include schemaLocation="services.xsd"/>
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Elements-->
  <element name="access" type="identity:AuthenticateResponse"/>
  <!--Complex Types-->
  <complexType name="Token">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A token is an arbitrary bit of text that is used to access
                    resources. Each token has a scope which describes which
                    resources are accessible with it. A token may be
                    revoked at anytime and is valid for a finite duration.</p>
        <p>While Keystone supports token-based authentication in this release,
                    the intention is for it to support additional protocols in the
                    future. The desire is for it to be an integration service, and not
                    a full-fledged identity store and management solution.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/token.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/token.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
    <sequence>
      <element name="tenant" type="identity:TenantForAuthenticateResponse"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:string" use="required"/>
    <attribute name="expires" type="xsd:dateTime" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="AuthenticateResponse">
    <sequence>
      <element name="token" type="identity:Token"/>
      <element name="user" type="identity:UserForAuthenticateResponse"/>
      <element name="serviceCatalog" type="identity:ServiceCatalog" minOccurs="0"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="UserForAuthenticateResponse">
    <sequence>
      <element name="roles" type="identity:RoleList"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:string"/>
    <attribute name="name" type="xsd:string"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="TenantForAuthenticateResponse">
    <attribute name="id" type="xsd:string"/>
    <attribute name="name" type="xsd:string"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="ServiceCatalog">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>The service catalog lists the services you have access to</p>
        <div class="design">
          <p>We optimized for future flexibility around the hierarchy. So we
                    left the design as a flat list of endpoints with attributes and the
                    consumer can categorize as they need.
                    This results in potential duplication (such as with the version/@list)
                    but we acceopt that normalization cost in order to not force an
                    artificial hierarchy (suchas on region, which can be optional).</p>
        </div>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/xml" href="../samples/services.xml"/>
                     
          </xsdxt:sample>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/json" href="../samples/services.json"/>
                     
          </xsdxt:sample>
                 
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
    <sequence>
      <element name="service" type="identity:ServiceForCatalog" minOccurs="1" maxOccurs="unbounded">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>A list of services.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="ServiceForCatalog">
    <sequence>
      <element name="endpoint" type="identity:EndpointForService" minOccurs="1" maxOccurs="unbounded">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>A list of endpoints.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="type" type="identity:ExtensibleServiceType" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The OpenStack-registered type (e.g. 'compute', 'object-store', etc).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The commercial service name (e.g. 'My Nova Cloud Servers').</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <!--EndpointForService-->
  <complexType name="EndpointForService">
    <sequence>
      <element name="version" type="identity:VersionForService" maxOccurs="1" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>Version details.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="region" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The name of the region where the endpoint
                        lives. Example: airport codes; LHR (UK),
                        STL (Saint Louis)</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="tenantId" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>Tenant id to which the endpoints belong.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="publicURL" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>Public accessible service URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="internalURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A service URL, accessible only locally within that
                        cloud (generally over a high bandwidth, low latency,
                        free of charge link).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="adminURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>An Admin URL (used for administration using privileged
                        calls). This may expose
                        additional functionality not found in the public and
                        internal URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <!--VersionForService-->
  <complexType name="VersionForService">
    <attribute name="id" type="xsd:string" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>Id of the version.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="info" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>URI to get the information specific to this version.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="list" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>URI to get the information about all versions.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/atom/atom.xsd</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://www.w3.org/2005/Atom" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd"/>
  <xs:simpleType name="relation">
    <xs:restriction base="xs:string">
      <xs:enumeration value="alternate"/>
      <xs:enumeration value="appendix"/>
      <xs:enumeration value="archives"/>
      <xs:enumeration value="author"/>
      <xs:enumeration value="bookmark"/>
      <xs:enumeration value="chapter"/>
      <xs:enumeration value="contents"/>
      <xs:enumeration value="copyright"/>
      <xs:enumeration value="current"/>
      <xs:enumeration value="describedby"/>
      <xs:enumeration value="edit"/>
      <xs:enumeration value="edit-media"/>
      <xs:enumeration value="first"/>
      <xs:enumeration value="glossary"/>
      <xs:enumeration value="help"/>
      <xs:enumeration value="hub"/>
      <xs:enumeration value="icon"/>
      <xs:enumeration value="index"/>
      <xs:enumeration value="last"/>
      <xs:enumeration value="latest-version"/>
      <xs:enumeration value="license"/>
      <xs:enumeration value="monitor"/>
      <xs:enumeration value="monitor-group"/>
      <xs:enumeration value="next"/>
      <xs:enumeration value="next-arvhice"/>
      <xs:enumeration value="nofollow"/>
      <xs:enumeration value="payment"/>
      <xs:enumeration value="predecessor-version"/>
      <xs:enumeration value="prefetch"/>
      <xs:enumeration value="prev"/>
      <xs:enumeration value="previous"/>
      <xs:enumeration value="prev-archive"/>
      <xs:enumeration value="replies"/>
      <xs:enumeration value="search"/>
      <xs:enumeration value="section"/>
      <xs:enumeration value="self"/>
      <xs:enumeration value="service"/>
      <xs:enumeration value="start"/>
      <xs:enumeration value="stylesheet"/>
      <xs:enumeration value="subsection"/>
      <xs:enumeration value="successor-version"/>
      <xs:enumeration value="up"/>
      <xs:enumeration value="version-history"/>
      <xs:enumeration value="via"/>
      <xs:enumeration value="working-copy"/>
      <xs:enumeration value="working-copy-of"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="link" type="atom:link"/>
  <xs:complexType name="link">
    <xs:annotation>
      <xs:documentation>
        <html:p>
          See section 3.4 of the ATOM RFC
          <html:a href="http://tools.ietf.org/html/rfc4287">RFC4287</html:a>
        </html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="rel" use="required" type="atom:relation">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="type" use="optional" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="href" use="required" type="xs:anyURI">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="hreflang" use="optional" type="xs:NMTOKEN">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="title" use="optional" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/atom/xml.xsd</con:url><con:content><![CDATA[<?xml-stylesheet href="../2008/09/xsd.xsl" type="text/xsl"?>
<xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
  <xs:annotation>
    <xs:documentation>
      <div>
        <h1>About the XML namespace</h1>
        <div class="bodytext">
          <p>This schema document describes the XML namespace, in a form
      suitable for import by other schema documents.</p>
          <p>
            See
            <a href="http://www.w3.org/XML/1998/namespace.html">http://www.w3.org/XML/1998/namespace.html</a>
            and
            <a href="http://www.w3.org/TR/REC-xml">http://www.w3.org/TR/REC-xml</a>
            for information 
      about this namespace.
          </p>
          <p>Note that local names in this namespace are intended to be
      defined only by the World Wide Web Consortium or its subgroups.
      The names currently defined in this namespace are listed below.
      They should not be used with conflicting semantics by any Working
      Group, specification, or document instance.</p>
          <p>
            See further below in this document for more information about
            <a href="#usage">how to refer to this schema document from your own
      XSD schema documents</a>
            and about
            <a href="#nsversioning">the
      namespace-versioning policy governing this schema document</a>
            .
          </p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>lang (as an attribute name)</h3>
          <p>denotes an attribute whose value
       is a language code for the natural language of the content of
       any element; its value is inherited.  This name is reserved
       by virtue of its definition in the XML specification.</p>
        </div>
        <div>
          <h4>Notes</h4>
          <p>Attempting to install the relevant ISO 2- and 3-letter
      codes as the enumerated possible values is probably never
      going to be a realistic possibility.</p>
          <p>
            See BCP 47 at
            <a href="http://www.rfc-editor.org/rfc/bcp/bcp47.txt">http://www.rfc-editor.org/rfc/bcp/bcp47.txt</a>
            and the IANA language subtag registry at
            <a href="http://www.iana.org/assignments/language-subtag-registry">http://www.iana.org/assignments/language-subtag-registry</a>
            for further information.
          </p>
          <p>The union allows for the 'un-declaration' of xml:lang with
      the empty string.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:union memberTypes="xs:language">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value=""/>
          </xs:restriction>
        </xs:simpleType>
      </xs:union>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="space">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>space (as an attribute name)</h3>
          <p>denotes an attribute whose
       value is a keyword indicating what whitespace processing
       discipline is intended for the content of the element; its
       value is inherited.  This name is reserved by virtue of its
       definition in the XML specification.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>base (as an attribute name)</h3>
          <p>denotes an attribute whose value
       provides a URI to be used as the base for interpreting any
       relative URIs in the scope of the element on which it
       appears; its value is inherited.  This name is reserved
       by virtue of its definition in the XML Base specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xmlbase/">http://www.w3.org/TR/xmlbase/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="id" type="xs:ID">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>id (as an attribute name)</h3>
          <p>denotes an attribute whose value
       should be interpreted as if declared to be of type ID.
       This name is reserved by virtue of its definition in the
       xml:id specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xml-id/">http://www.w3.org/TR/xml-id/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
    <xs:attribute ref="xml:id"/>
  </xs:attributeGroup>
  <xs:annotation>
    <xs:documentation>
      <div>
        <h3>Father (in any context at all)</h3>
        <div class="bodytext">
          <p>denotes Jon Bosak, the chair of 
      the original XML Working Group.  This name is reserved by 
      the following decision of the W3C XML Plenary and 
      XML Coordination groups:</p>
          <blockquote>
            <p>In appreciation for his vision, leadership and
	dedication the W3C XML Plenary on this 10th day of
	February, 2000, reserves for Jon Bosak in perpetuity
	the XML name "xml:Father".</p>
          </blockquote>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>
      <div xml:id="usage" id="usage">
        <h2>
          <a name="usage">About this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            This schema defines attributes and an attribute group suitable
      for use by schemas wishing to allow
            <code>xml:base</code>
            ,
            <code>xml:lang</code>
            ,
            <code>xml:space</code>
            or
            <code>xml:id</code>
            attributes on elements they define.
          </p>
          <p>To enable this, such a schema must import this schema for
      the XML namespace, e.g. as follows:</p>
          <pre>&lt;schema . . .>
           . . .
           &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2001/xml.xsd"/></pre>
          <p>or</p>
          <pre>&lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2009/01/xml.xsd"/></pre>
          <p>Subsequently, qualified reference to any of the attributes or the
      group defined below will have the desired effect, e.g.</p>
          <pre>&lt;type . . .>
           . . .
           &lt;attributeGroup ref="xml:specialAttrs"/></pre>
          <p>will define a type which will schema-validate an instance element
      with any of those attributes.</p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>
      <div id="nsversioning" xml:id="nsversioning">
        <h2>
          <a name="nsversioning">Versioning policy for this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            In keeping with the XML Schema WG's standard versioning
      policy, this schema document will persist at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            .
          </p>
          <p>
            At the date of issue it can also be found at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            .
          </p>
          <p>
            The schema document at that URI may however change in the future,
      in order to remain compatible with the latest version of XML
      Schema itself, or with the XML namespace itself.  In other words,
      if the XML Schema or XML namespaces change, the version of this
      document at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            will change accordingly; the version at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            will not change.
          </p>
          <p>Previous dated (and unchanging) versions of this schema 
      document are at:</p>
          <ul>
            <li>
              <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2007/08/xml.xsd">http://www.w3.org/2007/08/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2004/10/xml.xsd">http://www.w3.org/2004/10/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2001/03/xml.xsd">http://www.w3.org/2001/03/xml.xsd</a>
            </li>
          </ul>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/roles.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Elements-->
  <element name="roles" type="identity:RoleList">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A list of roles.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="role" type="identity:Role">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A role.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="Role">
    <sequence>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:string" use="optional"/>
    <attribute name="name" type="xsd:string" use="required"/>
    <attribute name="description" type="xsd:string" use="optional"/>
    <attribute name="serviceId" type="xsd:string" use="optional"/>
    <attribute name="tenantId" type="xsd:string" use="optional"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="RoleList">
    <sequence>
      <element name="role" type="identity:Role" minOccurs="0" maxOccurs="unbounded"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/services.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Simple Types-->
  <simpleType name="ExtensibleServiceType">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>
          An extensible service type allows all of the
                    strings defined in
          <a href="#type_ServiceType" title="See definition of                         ServiceType">ServiceType</a>
          or an
                    alias prefixed status.
        </p>
      </xsd:documentation>
    </annotation>
    <union memberTypes="identity:ServiceType identity:ExtendedService"/>
  </simpleType>
  <simpleType name="ServiceType">
    <restriction base="xsd:string">
      <enumeration value="compute">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>The type for an OpenStack Compute API 1.1 compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="object-store">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>The type for a Swift-compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="image-service">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>The type for a Glance-compatible service</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="identity">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>The type for a Keystone-compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
    </restriction>
  </simpleType>
  <simpleType name="ExtendedService">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A non-core service type which must contain an extension prefix.</p>
      </xsd:documentation>
    </annotation>
    <restriction base="xsd:string">
      <pattern value="(\w|-)+:\w+"/>
    </restriction>
  </simpleType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/tenant.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Elements-->
  <element name="tenant" type="identity:Tenant">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A container used to group or isolate resources and/or identity
                  objects. Depending on the service operator, a tenant may map to a customer,
                  account, organization, or project.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/xml" href="../samples/tenant.xml"/>
                     
          </xsdxt:sample>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/json" href="../samples/tenant.json"/>
                     
          </xsdxt:sample>
                 
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="tenants" type="identity:Tenants">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A list of tenants.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="Tenants">
    <sequence>
      <element name="tenant" type="identity:Tenant" maxOccurs="100"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="Tenant">
    <sequence>
      <element name="description" type="xsd:string">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>An free text description of the tenant.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:ID" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>An ID uniquely identifying the tenant. This usually comes from the back-end store.
                        This value is guaranteed to be unique and immutable (it will never change).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="name" type="xsd:string" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The name of the tenant. This is guaranteed to be unique, but may change.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="enabled" type="xsd:boolean" use="optional" default="true">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>An boolean signifying if a tenant is enabled or not. A disabled tenant
                        cannot be authenticated against.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="display-name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A human-readable, friendly name for use in user interfaces.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute type="xsd:dateTime" name="updated" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A time-stamp identifying the modification time of the
                        tenant.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute type="xsd:dateTime" name="created" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A creation time-stamp for the tenant.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/fault.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!--Fault Elements-->
  <element name="identityFault" type="identity:IdentityFault"/>
  <element name="serviceUnavailable" type="identity:ServiceUnavailableFault"/>
  <element name="badRequest" type="identity:BadRequestFault"/>
  <element name="unauthorized" type="identity:UnauthorizedFault"/>
  <element name="overLimit" type="identity:OverLimitFault"/>
  <element name="userDisabled" type="identity:UserDisabledFault"/>
  <element name="forbidden" type="identity:ForbiddenFault"/>
  <element name="itemNotFound" type="identity:ItemNotFoundFault"/>
  <element name="tenantConflict" type="identity:TenantConflictFault"/>
  <!--Fault Types-->
  <complexType name="IdentityFault">
    <sequence>
      <element name="message" type="xsd:string">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>A human readable message that is appropriate for display
                            to the end user.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element name="details" type="xsd:string" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>The optional &lt;details> element may contain useful
                            information for tracking down errors (e.g a stack
                            trace).  This information may or may not be appropriate
                            for display to an end user.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="code" type="xsd:int" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The HTTP status code associated with the current fault.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="ServiceUnavailableFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="BadRequestFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="UnauthorizedFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="UserDisabledFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="ForbiddenFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="ItemNotFoundFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="TenantConflictFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="OverLimitFault">
    <complexContent>
      <extension base="identity:IdentityFault">
        <attribute name="retryAt" type="xsd:dateTime" use="optional">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
              <p>An optional dateTime denoting when an operation should
                                be retried.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
      </extension>
    </complexContent>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/endpoints.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <include schemaLocation="api.xsd"/>
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <element name="endpoint" type="identity:Endpoint">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>An Endpoint.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="endpoints" type="identity:EndpointList">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A list of Endpoints.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="Endpoint">
    <sequence>
      <element name="version" type="identity:VersionForService" maxOccurs="1" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>Version details.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:int" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>An ID uniquely identifying the Endpoint.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="type" type="identity:ExtensibleServiceType" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The OpenStack-registered type (e.g. 'compute', 'object-store', etc).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The commercial service name (e.g. 'My Nova Cloud Servers').</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="region" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The region of Endpoint Template.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="publicURL" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The public URL to access represented service.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="internalURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The internal version of the public URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="adminURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The admin URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="tenantId" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>Tenant id to which the endpoints belong.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="EndpointList">
    <sequence>
      <element name="endpoint" type="identity:Endpoint" minOccurs="0" maxOccurs="unbounded"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/user.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:atom="http://www.w3.org/2005/Atom">
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Elements-->
  <element name="users" type="identity:UserList">
    <annotation>
      <xsd:documentation xml:lang="EN">
        <p>A list of Users.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="user" type="identity:User">
    <annotation>
      <xsd:documentation xml:lang="EN">
        <p>A Keystone User.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="User">
    <attribute name="id" type="xsd:ID" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>An automatically generated, unique, immutable (it will never change) identifier
                        for the user. This is generated by the backend this user is stored in.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="username" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A unique, mutable (it can change) user name that may be used by the user
                        an identifier when presenting credentials.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="email" type="xsd:string" use="optional"/>
    <attribute name="enabled" type="xsd:boolean" default="true" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A true/false value that determines if the user may authenticate or not.
                        If enabled is false, the user will not be able to authenticate.
                        How this value is stored or generated is dependent on the backend in use.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="display-name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A human-readable, friendly name for use in user interfaces.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="updated" type="xsd:dateTime" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A time-stamp identifying the modification time of the
                        user.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="created" type="xsd:dateTime" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A creation time-stamp for the user.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="UserList">
    <sequence>
      <element name="user" type="identity:User" minOccurs="0" maxOccurs="unbounded"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/credentials.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Elements-->
  <element name="auth" type="identity:AuthenticationRequest"/>
  <element name="credential" type="identity:CredentialType"/>
  <element name="credentials" type="identity:CredentialListType"/>
  <element name="passwordCredentials" type="identity:PasswordCredentialsRequiredUsername" substitutionGroup="identity:credential"/>
  <!--Complex Types-->
  <complexType name="CredentialType" abstract="true">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>Base type for credential in Keystone.</p>
      </xsd:documentation>
    </annotation>
    <sequence>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="AuthenticationRequest">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>Both the tenantId and tenantName are optional, but should not be specified together. If both attributes are specified, the server SHOULD respond with a 400 Bad Request.</p>
      </xsd:documentation>
    </annotation>
    <sequence>
      <choice>
        <element ref="identity:credential" minOccurs="1"/>
        <element name="token" type="identity:TokenForAuthenticationRequest"/>
      </choice>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="tenantId" type="xsd:string" use="optional"/>
    <attribute name="tenantName" type="xsd:string" use="optional"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="TokenForAuthenticationRequest">
    <attribute name="id" type="xsd:string" use="required"/>
  </complexType>
  <complexType name="PasswordCredentialsBase">
    <complexContent>
      <extension base="identity:CredentialType">
        <attribute name="username" type="xsd:string" use="optional"/>
        <attribute name="password" type="xsd:string" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="PasswordCredentialsWithoutUsername">
    <complexContent>
      <restriction base="identity:PasswordCredentialsBase">
        <attribute name="username" type="xsd:string" use="prohibited"/>
        <attribute name="password" type="xsd:string" use="required"/>
      </restriction>
    </complexContent>
  </complexType>
  <complexType name="PasswordCredentialsRequiredUsername">
    <complexContent>
      <restriction base="identity:PasswordCredentialsBase">
        <attribute name="username" type="xsd:string" use="required"/>
        <attribute name="password" type="xsd:string" use="required"/>
      </restriction>
    </complexContent>
  </complexType>
  <complexType name="CredentialListType">
    <sequence>
      <element ref="identity:credential" minOccurs="1" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/api-common.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/common/api/v1.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <annotation>
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xsdxt:title>Open Stack Common API Schema Types 1.0</xsdxt:title>
      <xsdxt:link rev="index" href="extensions.xsd"/>
      <xsdxt:link rev="index" href="limits.xsd"/>
      <xsdxt:link rev="index" href="version.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <p>This is the main index XML Schema document
                for Common API Schema Types Version 1.0.</p>
    </xsd:documentation>
  </annotation>
  <include schemaLocation="extensions.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>Types related to extensions.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <include schemaLocation="version.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>Types related to API version details.</p>
      </xsd:documentation>
    </annotation>
  </include>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/extensions.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<xsd:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/common/api/v1.0" xmlns:ext="http://docs.openstack.org/common/api/v1.0" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!--Import ATOM specific schema definitions-->
  <xsd:import namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <xsd:element name="extensions" type="ext:Extensions"/>
  <xsd:element name="extension" type="ext:Extension"/>
  <xsd:complexType name="Extensions">
    <xsd:sequence>
      <xsd:element name="extension" type="ext:Extension" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
  </xsd:complexType>
  <xsd:complexType name="Extension">
    <xsd:sequence>
      <xsd:element name="description" type="xsd:string" minOccurs="1"/>
      <!--<xsd:element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded" />-->
      <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="name" type="xsd:string" use="required"/>
    <xsd:attribute name="namespace" type="xsd:anyURI" use="required"/>
    <xsd:attribute name="alias" type="ext:Alias" use="required"/>
    <xsd:attribute name="updated" type="xsd:dateTime" use="optional"/>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
    <!--TODO(Ziad)resolve asser issue
            <xsd:assert vc:minVersion="1.1" test="atom:link[@rel='describedby']">
            <xsd:annotation>
                <xsd:documentation
                    xml:lang="EN"
                    xmlns="http://www.w3.org/1999/xhtml">
                    <p>
                        There should be at least one atom link
                        with a describedby relation.
                    </p>
                </xsd:documentation>
            </xsd:annotation>
        </xsd:assert>-->
  </xsd:complexType>
  <xsd:simpleType name="Alias">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="\w+\-\w+"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/version.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<xs:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/common/api/v1.0" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:annotation>
    <xs:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Version Types</xsdxt:title>
      <xsdxt:link rel="index" href="api-common.xsd"/>
    </xs:appinfo>
    <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>This schema file defines all types related to versioning.</p>
    </xs:documentation>
  </xs:annotation>
  <!--Import ATOM specific schema definitions-->
  <xs:import namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Multiple choices-->
  <xs:element name="choices" type="vers:VersionChoiceList">
    <xs:annotation>
      <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>This element is returned when the version of the
                    resource cannot be determined. The element
                    provides a list of choices for the resource.</p>
      </xs:documentation>
      <xs:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/choices.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/choices.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <!--Versioning-->
  <xs:element name="versions" type="vers:VersionChoiceList">
    <xs:annotation>
      <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Provides a list of supported versions.</p>
      </xs:documentation>
      <xs:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/versions.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/versions.json"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/atom+xml" href="../samples/versions-atom.xml"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <xs:element name="version" type="vers:VersionChoice" vc:minVersion="1.0" vc:maxVersion="1.1">
    <xs:annotation>
      <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>This element provides detailed meta information
                    regarding the status of the current API version.
                    This is the XSD 1.0 compatible element definition.</p>
      </xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="version2" type="vers:VersionChoiceRoot" vc:minVersion="1.1">
    <xs:annotation>
      <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>This element provides detailed meta information
                    regarding the status of the current API
                    version. The description should include a pointer
                    to both a human readable and a machine processable
                    description of the API service.</p>
      </xs:documentation>
      <xs:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/version.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/version.json"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/atom+xml" href="../samples/version-atom.xml"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <!--Types-->
  <xs:simpleType name="VersionStatus">
    <xs:annotation>
      <xs:documentation>
        <html:p>The VersionStatus type describes a service's operational status.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="ALPHA">
        <xs:annotation>
          <xs:documentation>
            <html:p>This is a new service the API. Thi API
                            contract may be set, but the implementaiton
                            may not be 100% complient with it. Developers
                            are encouraged to begin testing aganst an
                            ALPHA version to provide feedback.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BETA">
        <xs:annotation>
          <xs:documentation>
            <html:p>A status of BETA indicates that this
                            version is a candidate for the next major
                            release and may feature functionality not
                            available in the current
                            version. Developers are encouraged to test
                            and begin the migration processes to a
                            BETA version. Note that a BETA version is
                            undergoing testing, it has not been
                            officially released, and my not be stable.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CURRENT">
        <xs:annotation>
          <xs:documentation>
            <html:p>The API version is stable and has been
                            tested. Developers are encouraged to
                            develop against this API version. The
                            current released version of the API will
                            always be marked as CURRENT.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="DEPRECATED">
        <xs:annotation>
          <xs:documentation>
            <html:p>A status of DEPRECATED indicates that a
                            newer version of the API is
                            available. Application developers are
                            discouraged from using this version and
                            should instead develop against the latest
                            current version of the API.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="VersionChoiceList">
    <xs:annotation>
      <xs:documentation>
        <html:p>A version choice list outlines a collection of
                    resources at various versions.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="version" type="vers:VersionChoice" minOccurs="1" maxOccurs="unbounded"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
    <!--TODO(Ziad)resolve assert issue
            <xs:assert vc:minVersion="1.1" test="every $v in vers:version satisfies $v/atom:link[@rel='self']">
            <xs:annotation>
                <xs:documentation>
                    <html:p>
                        In version lists, every single version must
                        contain at least one self link.
                    </html:p>
                </xs:documentation>
            </xs:annotation>
        </xs:assert>-->
  </xs:complexType>
  <xs:complexType name="VersionChoiceRoot" vc:minVersion="1.1">
    <xs:complexContent>
      <xs:extension base="vers:VersionChoice">
        <!--TODO(Ziad)resolve asser issue
                    <xs:assert test="atom:link[@rel='describedby']">
                    <xs:annotation>
                        <xs:documentation>
                            <html:p>
                                When used as a root element, a version choice
                                must contain at least one describedby link.
                            </html:p>
                        </xs:documentation>
                    </xs:annotation>
                </xs:assert>-->
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="VersionChoice">
    <xs:annotation>
      <xs:documentation>
        <html:p>A version choice contains relevant information
                    about an available service that a user can then
                    use to target a specific version of the service.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="media-types" type="vers:MediaTypeList" minOccurs="0" maxOccurs="1"/>
      <!--<xs:element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded" />-->
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>
          <html:p>The ID of a version choice represents the service version's unique 
                        identifier. This ID is guaranteed to be unique only among the
                        service version choices outlined in the VersionChoiceList.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="status" type="vers:VersionStatus" use="required">
      <xs:annotation>
        <xs:documentation>
          <html:p>A version choice's status describes the current operational state of
                        the given service version. The operational status is captured in a
                        simple type enumeration called VersionStatus.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="updated" type="xs:dateTime" use="optional">
      <xs:annotation>
        <xs:documentation>
          <html:p>
            A version choice's updated attribute describes
                        the time when the version was updated. The
                        time should be updated anytime
            <html:strong>anything</html:strong>
            in the
                        version has changed: documentation,
                        extensions, bug fixes.
          </html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:complexType name="MediaTypeList">
    <xs:annotation>
      <xs:documentation>
        <html:p>A MediaTypeList outlines a collection of valid media types for a given 
                    service version.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="media-type" type="vers:MediaType" minOccurs="1" maxOccurs="unbounded"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:complexType name="MediaType">
    <xs:annotation>
      <xs:documentation>
        <html:p>A MediaType describes what content types the service version understands.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="base" type="xs:string" use="optional" default="">
      <xs:annotation>
        <xs:documentation>
          <html:p>The base of a given media type describes the
                        simple MIME type that then a more complicated
                        media type can be derived from. These types
                        are basic and provide no namespace or version
                        specific data are are only provided as a
                        convenience.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="type" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>
          <html:p>The type attribute of a MediaType describes
                        the MIME specific identifier of the media type
                        in question.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/OS-KSEC2-credentials.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/ext/OS-KSEC2/v1.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:OS-KSEC2="http://docs.openstack.org/identity/api/ext/OS-KSEC2/v1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <!--Import schema we are extending-->
  <import namespace="http://docs.openstack.org/identity/api/v2.0" schemaLocation="credentials.xsd"/>
  <!--Elements-->
  <element name="ec2Credentials" type="OS-KSEC2:ec2CredentialsType" substitutionGroup="identity:credential"/>
  <!--Complex Types-->
  <complexType name="ec2CredentialsType">
    <complexContent>
      <extension base="identity:CredentialType">
        <attribute name="username" type="xsd:string" use="required"/>
        <attribute name="key" type="xsd:string" use="required"/>
        <attribute name="signature" type="xsd:string" use="required"/>
      </extension>
    </complexContent>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>${#Project#Endpoint}</con:endpoint></con:endpoints><con:resource name="v2.0" path="${#Project#path}"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="users" path="users"><con:settings/><con:parameters/><con:resource name="{userId}" path="{userId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>userId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="OS-KSADM" path="OS-KSADM"><con:settings/><con:parameters/><con:resource name="credentials" path="credentials"><con:settings/><con:parameters/><con:resource name="OS-KSEC2:ec2Credentials" path="OS-KSEC2:ec2Credentials"><con:settings/><con:parameters/><con:method name="Update user credential - updateUserCredential" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSEC2/v1.0">v1:ec2Credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSEC2/v1.0">v1:ec2Credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete user credential - deleteUserCredential" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Get user Credentials - getUserCredential" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSEC2/v1.0">v1:ec2Credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Add user Credential. - addUserCredential" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSEC2/v1.0">v1:ec2Credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSEC2/v1.0">v1:ec2Credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="List Credentials - listCredentials" method="GET"><con:settings/><con:parameters><con:parameter><con:name>marker</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource></con:resource></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="RAX-KSQA-admin" type="rest" basePath="" definitionUrl="/home/jorge/projects/keystone/keystone/content/admin/RAX-KSQA-admin-auth2.0.wadl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/home/jorge/projects/keystone/keystone/content/admin/RAX-KSQA-admin-auth2.0.wadl"><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/admin/RAX-KSQA-admin-auth2.0.wadl</con:url><con:content><![CDATA[<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<!--*******************************************************-->
<!--Import Common XML Entities-->
<!---->
<!--You can resolve the entites with xmllint-->
<!---->
<!--xmllint -noent RAX-KSQA-admin.wadl-->
<!--*******************************************************-->
<!--A collection of common faults, these are pretty much expected
         in every request.-->
<!--Faults on GET-->
<!--Faults on POST/PUT-->
<application xsi:schemaLocation="http://docs.openstack.org/identity/api/v2.0 ../common/xsd/api.xsd     http://docs.openstack.org/common/api/v1.0 ../common/xsd/api-common.xsd     http://wadl.dev.java.net/2009/02 http://www.w3.org/Submission/wadl/wadl.xsd     http://docs.openstack.org/identity/api/ext/RAX-KSQA/v1.0 ../common/xsd/RAX-KSQA-secretQA.xsd     " xmlns="http://wadl.dev.java.net/2009/02" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:RAX-KSQA="http://docs.openstack.org/identity/api/ext/RAX-KSQA/v1.0" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0">
  <grammars>
    <include href="../common/xsd/api.xsd"/>
    <include href="../common/xsd/api-common.xsd"/>
    <include href="../common/xsd/RAX-KSQA-secretQA.xsd"/>
  </grammars>
  <!--*******************************************************-->
  <!--All Resoruces-->
  <!--*******************************************************-->
  <!--We should use SSL in production-->
  <resources base="http://localhost:35357">
    <resource id="version" path="v2.0">
      <param name="X-Auth-Token" style="header" type="xsd:string" required="true">
        <doc>You need a valid admin token for access.</doc>
      </param>
      <resource id="users" path="users">
        <resource id="userById" path="{userId}">
          <param name="userId" style="template" type="xsd:string"/>
          <resource id="user-RAX-KSQA" path="RAX-KSQA">
            <resource id="secretqa" path="secretqa">
              <method href="#getUserSecretQA"/>
              <method href="#updateUserSecretQA"/>
            </resource>
          </resource>
        </resource>
      </resource>
    </resource>
  </resources>
  <method name="GET" id="getUserSecretQA">
    <doc xml:lang="EN" title="Get User SecretQA">
      <p xmlns="http://www.w3.org/1999/xhtml">Gets a User secret Question and Answer.</p>
    </doc>
    <response status="200 203">
      <representation mediaType="application/xml" element="RAX-KSQA:secretQA">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/RAX-KSQA-secretQA.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/RAX-KSQA-secretQA.json"/>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="PUT" id="updateUserSecretQA">
    <doc xml:lang="EN" title="Update User SecretQA">
      <p xmlns="http://www.w3.org/1999/xhtml">Updates a User secret Question and Answer.</p>
    </doc>
    <request>
      <representation mediaType="application/xml" element="RAX-KSQA:secretQA">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/RAX-KSQA-secretQA.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/RAX-KSQA-secretQA.json"/>
        </doc>
      </representation>
    </request>
    <response status="200">
      <representation mediaType="application/xml" element="RAX-KSQA:secretQA">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/RAX-KSQA-secretQA.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/RAX-KSQA-secretQA.json"/>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
</application>]]></con:content><con:type>http://wadl.dev.java.net/2009/02</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/api.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <include schemaLocation="token.xsd"/>
  <include schemaLocation="tenant.xsd"/>
  <include schemaLocation="fault.xsd"/>
  <include schemaLocation="endpoints.xsd"/>
  <include schemaLocation="roles.xsd"/>
  <include schemaLocation="user.xsd"/>
  <include schemaLocation="credentials.xsd"/>
  <include schemaLocation="services.xsd"/>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/token.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <include schemaLocation="roles.xsd"/>
  <include schemaLocation="services.xsd"/>
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Elements-->
  <element name="access" type="identity:AuthenticateResponse"/>
  <!--Complex Types-->
  <complexType name="Token">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A token is an arbitrary bit of text that is used to access
                    resources. Each token has a scope which describes which
                    resources are accessible with it. A token may be
                    revoked at anytime and is valid for a finite duration.</p>
        <p>While Keystone supports token-based authentication in this release,
                    the intention is for it to support additional protocols in the
                    future. The desire is for it to be an integration service, and not
                    a full-fledged identity store and management solution.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/token.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/token.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
    <sequence>
      <element name="tenant" type="identity:TenantForAuthenticateResponse"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:string" use="required"/>
    <attribute name="expires" type="xsd:dateTime" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="AuthenticateResponse">
    <sequence>
      <element name="token" type="identity:Token"/>
      <element name="user" type="identity:UserForAuthenticateResponse"/>
      <element name="serviceCatalog" type="identity:ServiceCatalog" minOccurs="0"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="UserForAuthenticateResponse">
    <sequence>
      <element name="roles" type="identity:RoleList"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:string"/>
    <attribute name="name" type="xsd:string"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="TenantForAuthenticateResponse">
    <attribute name="id" type="xsd:string"/>
    <attribute name="name" type="xsd:string"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="ServiceCatalog">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>The service catalog lists the services you have access to</p>
        <div class="design">
          <p>We optimized for future flexibility around the hierarchy. So we
                    left the design as a flat list of endpoints with attributes and the
                    consumer can categorize as they need.
                    This results in potential duplication (such as with the version/@list)
                    but we acceopt that normalization cost in order to not force an
                    artificial hierarchy (suchas on region, which can be optional).</p>
        </div>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/xml" href="../samples/services.xml"/>
                     
          </xsdxt:sample>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/json" href="../samples/services.json"/>
                     
          </xsdxt:sample>
                 
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
    <sequence>
      <element name="service" type="identity:ServiceForCatalog" minOccurs="1" maxOccurs="unbounded">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>A list of services.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="ServiceForCatalog">
    <sequence>
      <element name="endpoint" type="identity:EndpointForService" minOccurs="1" maxOccurs="unbounded">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>A list of endpoints.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="type" type="identity:ExtensibleServiceType" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The OpenStack-registered type (e.g. 'compute', 'object-store', etc).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The commercial service name (e.g. 'My Nova Cloud Servers').</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <!--EndpointForService-->
  <complexType name="EndpointForService">
    <sequence>
      <element name="version" type="identity:VersionForService" maxOccurs="1" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>Version details.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="region" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The name of the region where the endpoint
                        lives. Example: airport codes; LHR (UK),
                        STL (Saint Louis)</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="tenantId" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>Tenant id to which the endpoints belong.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="publicURL" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>Public accessible service URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="internalURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A service URL, accessible only locally within that
                        cloud (generally over a high bandwidth, low latency,
                        free of charge link).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="adminURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>An Admin URL (used for administration using privileged
                        calls). This may expose
                        additional functionality not found in the public and
                        internal URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <!--VersionForService-->
  <complexType name="VersionForService">
    <attribute name="id" type="xsd:string" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>Id of the version.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="info" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>URI to get the information specific to this version.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="list" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>URI to get the information about all versions.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/atom/atom.xsd</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://www.w3.org/2005/Atom" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd"/>
  <xs:simpleType name="relation">
    <xs:restriction base="xs:string">
      <xs:enumeration value="alternate"/>
      <xs:enumeration value="appendix"/>
      <xs:enumeration value="archives"/>
      <xs:enumeration value="author"/>
      <xs:enumeration value="bookmark"/>
      <xs:enumeration value="chapter"/>
      <xs:enumeration value="contents"/>
      <xs:enumeration value="copyright"/>
      <xs:enumeration value="current"/>
      <xs:enumeration value="describedby"/>
      <xs:enumeration value="edit"/>
      <xs:enumeration value="edit-media"/>
      <xs:enumeration value="first"/>
      <xs:enumeration value="glossary"/>
      <xs:enumeration value="help"/>
      <xs:enumeration value="hub"/>
      <xs:enumeration value="icon"/>
      <xs:enumeration value="index"/>
      <xs:enumeration value="last"/>
      <xs:enumeration value="latest-version"/>
      <xs:enumeration value="license"/>
      <xs:enumeration value="monitor"/>
      <xs:enumeration value="monitor-group"/>
      <xs:enumeration value="next"/>
      <xs:enumeration value="next-arvhice"/>
      <xs:enumeration value="nofollow"/>
      <xs:enumeration value="payment"/>
      <xs:enumeration value="predecessor-version"/>
      <xs:enumeration value="prefetch"/>
      <xs:enumeration value="prev"/>
      <xs:enumeration value="previous"/>
      <xs:enumeration value="prev-archive"/>
      <xs:enumeration value="replies"/>
      <xs:enumeration value="search"/>
      <xs:enumeration value="section"/>
      <xs:enumeration value="self"/>
      <xs:enumeration value="service"/>
      <xs:enumeration value="start"/>
      <xs:enumeration value="stylesheet"/>
      <xs:enumeration value="subsection"/>
      <xs:enumeration value="successor-version"/>
      <xs:enumeration value="up"/>
      <xs:enumeration value="version-history"/>
      <xs:enumeration value="via"/>
      <xs:enumeration value="working-copy"/>
      <xs:enumeration value="working-copy-of"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="link" type="atom:link"/>
  <xs:complexType name="link">
    <xs:annotation>
      <xs:documentation>
        <html:p>
          See section 3.4 of the ATOM RFC
          <html:a href="http://tools.ietf.org/html/rfc4287">RFC4287</html:a>
        </html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="rel" use="required" type="atom:relation">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="type" use="optional" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="href" use="required" type="xs:anyURI">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="hreflang" use="optional" type="xs:NMTOKEN">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="title" use="optional" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/atom/xml.xsd</con:url><con:content><![CDATA[<?xml-stylesheet href="../2008/09/xsd.xsl" type="text/xsl"?>
<xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
  <xs:annotation>
    <xs:documentation>
      <div>
        <h1>About the XML namespace</h1>
        <div class="bodytext">
          <p>This schema document describes the XML namespace, in a form
      suitable for import by other schema documents.</p>
          <p>
            See
            <a href="http://www.w3.org/XML/1998/namespace.html">http://www.w3.org/XML/1998/namespace.html</a>
            and
            <a href="http://www.w3.org/TR/REC-xml">http://www.w3.org/TR/REC-xml</a>
            for information 
      about this namespace.
          </p>
          <p>Note that local names in this namespace are intended to be
      defined only by the World Wide Web Consortium or its subgroups.
      The names currently defined in this namespace are listed below.
      They should not be used with conflicting semantics by any Working
      Group, specification, or document instance.</p>
          <p>
            See further below in this document for more information about
            <a href="#usage">how to refer to this schema document from your own
      XSD schema documents</a>
            and about
            <a href="#nsversioning">the
      namespace-versioning policy governing this schema document</a>
            .
          </p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>lang (as an attribute name)</h3>
          <p>denotes an attribute whose value
       is a language code for the natural language of the content of
       any element; its value is inherited.  This name is reserved
       by virtue of its definition in the XML specification.</p>
        </div>
        <div>
          <h4>Notes</h4>
          <p>Attempting to install the relevant ISO 2- and 3-letter
      codes as the enumerated possible values is probably never
      going to be a realistic possibility.</p>
          <p>
            See BCP 47 at
            <a href="http://www.rfc-editor.org/rfc/bcp/bcp47.txt">http://www.rfc-editor.org/rfc/bcp/bcp47.txt</a>
            and the IANA language subtag registry at
            <a href="http://www.iana.org/assignments/language-subtag-registry">http://www.iana.org/assignments/language-subtag-registry</a>
            for further information.
          </p>
          <p>The union allows for the 'un-declaration' of xml:lang with
      the empty string.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:union memberTypes="xs:language">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value=""/>
          </xs:restriction>
        </xs:simpleType>
      </xs:union>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="space">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>space (as an attribute name)</h3>
          <p>denotes an attribute whose
       value is a keyword indicating what whitespace processing
       discipline is intended for the content of the element; its
       value is inherited.  This name is reserved by virtue of its
       definition in the XML specification.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>base (as an attribute name)</h3>
          <p>denotes an attribute whose value
       provides a URI to be used as the base for interpreting any
       relative URIs in the scope of the element on which it
       appears; its value is inherited.  This name is reserved
       by virtue of its definition in the XML Base specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xmlbase/">http://www.w3.org/TR/xmlbase/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="id" type="xs:ID">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>id (as an attribute name)</h3>
          <p>denotes an attribute whose value
       should be interpreted as if declared to be of type ID.
       This name is reserved by virtue of its definition in the
       xml:id specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xml-id/">http://www.w3.org/TR/xml-id/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
    <xs:attribute ref="xml:id"/>
  </xs:attributeGroup>
  <xs:annotation>
    <xs:documentation>
      <div>
        <h3>Father (in any context at all)</h3>
        <div class="bodytext">
          <p>denotes Jon Bosak, the chair of 
      the original XML Working Group.  This name is reserved by 
      the following decision of the W3C XML Plenary and 
      XML Coordination groups:</p>
          <blockquote>
            <p>In appreciation for his vision, leadership and
	dedication the W3C XML Plenary on this 10th day of
	February, 2000, reserves for Jon Bosak in perpetuity
	the XML name "xml:Father".</p>
          </blockquote>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>
      <div xml:id="usage" id="usage">
        <h2>
          <a name="usage">About this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            This schema defines attributes and an attribute group suitable
      for use by schemas wishing to allow
            <code>xml:base</code>
            ,
            <code>xml:lang</code>
            ,
            <code>xml:space</code>
            or
            <code>xml:id</code>
            attributes on elements they define.
          </p>
          <p>To enable this, such a schema must import this schema for
      the XML namespace, e.g. as follows:</p>
          <pre>&lt;schema . . .>
           . . .
           &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2001/xml.xsd"/></pre>
          <p>or</p>
          <pre>&lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2009/01/xml.xsd"/></pre>
          <p>Subsequently, qualified reference to any of the attributes or the
      group defined below will have the desired effect, e.g.</p>
          <pre>&lt;type . . .>
           . . .
           &lt;attributeGroup ref="xml:specialAttrs"/></pre>
          <p>will define a type which will schema-validate an instance element
      with any of those attributes.</p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>
      <div id="nsversioning" xml:id="nsversioning">
        <h2>
          <a name="nsversioning">Versioning policy for this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            In keeping with the XML Schema WG's standard versioning
      policy, this schema document will persist at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            .
          </p>
          <p>
            At the date of issue it can also be found at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            .
          </p>
          <p>
            The schema document at that URI may however change in the future,
      in order to remain compatible with the latest version of XML
      Schema itself, or with the XML namespace itself.  In other words,
      if the XML Schema or XML namespaces change, the version of this
      document at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            will change accordingly; the version at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            will not change.
          </p>
          <p>Previous dated (and unchanging) versions of this schema 
      document are at:</p>
          <ul>
            <li>
              <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2007/08/xml.xsd">http://www.w3.org/2007/08/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2004/10/xml.xsd">http://www.w3.org/2004/10/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2001/03/xml.xsd">http://www.w3.org/2001/03/xml.xsd</a>
            </li>
          </ul>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/roles.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Elements-->
  <element name="roles" type="identity:RoleList">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A list of roles.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="role" type="identity:Role">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A role.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="Role">
    <attribute name="id" type="xsd:string" use="optional"/>
    <attribute name="name" type="xsd:string" use="required"/>
    <attribute name="description" type="xsd:string" use="optional"/>
    <attribute name="serviceId" type="xsd:string" use="optional"/>
    <attribute name="tenantId" type="xsd:string" use="optional"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="RoleList">
    <sequence>
      <element name="role" type="identity:Role" minOccurs="0" maxOccurs="unbounded"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/services.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Simple Types-->
  <simpleType name="ExtensibleServiceType">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>
          An extensible service type allows all of the
                    strings defined in
          <a href="#type_ServiceType" title="See definition of                         ServiceType">ServiceType</a>
          or an
                    alias prefixed status.
        </p>
      </xsd:documentation>
    </annotation>
    <union memberTypes="identity:ServiceType identity:ExtendedService"/>
  </simpleType>
  <simpleType name="ServiceType">
    <restriction base="xsd:string">
      <enumeration value="compute">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>The type for an OpenStack Compute API 1.1 compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="object-store">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>The type for a Swift-compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="image-service">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>The type for a Glance-compatible service</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="identity">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>The type for a Keystone-compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
    </restriction>
  </simpleType>
  <simpleType name="ExtendedService">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A non-core service type which must contain an extension prefix.</p>
      </xsd:documentation>
    </annotation>
    <restriction base="xsd:string">
      <pattern value="(\w|-)+:\w+"/>
    </restriction>
  </simpleType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/tenant.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Elements-->
  <element name="tenant" type="identity:Tenant">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A container used to group or isolate resources and/or identity
                  objects. Depending on the service operator, a tenant may map to a customer,
                  account, organization, or project.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/xml" href="../samples/tenant.xml"/>
                     
          </xsdxt:sample>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/json" href="../samples/tenant.json"/>
                     
          </xsdxt:sample>
                 
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="tenants" type="identity:Tenants">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A list of tenants.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="Tenants">
    <sequence>
      <element name="tenant" type="identity:Tenant" maxOccurs="100"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="Tenant">
    <sequence>
      <element name="description" type="xsd:string">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>An free text description of the tenant.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:ID" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>An ID uniquely identifying the tenant. This usually comes from the back-end store.
                        This value is guaranteed to be unique and immutable (it will never change).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="name" type="xsd:string" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The name of the tenant. This is guaranteed to be unique, but may change.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="enabled" type="xsd:boolean" use="optional" default="true">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>An boolean signifying if a tenant is enabled or not. A disabled tenant
                        cannot be authenticated against.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="display-name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A human-readable, friendly name for use in user interfaces.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute type="xsd:dateTime" name="updated" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A time-stamp identifying the modification time of the
                        tenant.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute type="xsd:dateTime" name="created" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A creation time-stamp for the tenant.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/fault.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!--Fault Elements-->
  <element name="identityFault" type="identity:IdentityFault"/>
  <element name="serviceUnavailable" type="identity:ServiceUnavailableFault"/>
  <element name="badRequest" type="identity:BadRequestFault"/>
  <element name="unauthorized" type="identity:UnauthorizedFault"/>
  <element name="overLimit" type="identity:OverLimitFault"/>
  <element name="userDisabled" type="identity:UserDisabledFault"/>
  <element name="forbidden" type="identity:ForbiddenFault"/>
  <element name="itemNotFound" type="identity:ItemNotFoundFault"/>
  <element name="tenantConflict" type="identity:TenantConflictFault"/>
  <!--Fault Types-->
  <complexType name="IdentityFault">
    <sequence>
      <element name="message" type="xsd:string">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>A human readable message that is appropriate for display
                            to the end user.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element name="details" type="xsd:string" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>The optional &lt;details> element may contain useful
                            information for tracking down errors (e.g a stack
                            trace).  This information may or may not be appropriate
                            for display to an end user.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="code" type="xsd:int" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The HTTP status code associated with the current fault.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="ServiceUnavailableFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="BadRequestFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="UnauthorizedFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="UserDisabledFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="ForbiddenFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="ItemNotFoundFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="TenantConflictFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="OverLimitFault">
    <complexContent>
      <extension base="identity:IdentityFault">
        <attribute name="retryAt" type="xsd:dateTime" use="optional">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
              <p>An optional dateTime denoting when an operation should
                                be retried.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
      </extension>
    </complexContent>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/endpoints.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <include schemaLocation="api.xsd"/>
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <element name="endpoint" type="identity:Endpoint">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>An Endpoint.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="endpoints" type="identity:EndpointList">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A list of Endpoints.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="Endpoint">
    <sequence>
      <element name="version" type="identity:VersionForService" maxOccurs="1" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>Version details.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:int" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>An ID uniquely identifying the Endpoint.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="type" type="identity:ExtensibleServiceType" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The OpenStack-registered type (e.g. 'compute', 'object-store', etc).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The commercial service name (e.g. 'My Nova Cloud Servers').</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="region" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The region of Endpoint Template.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="publicURL" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The public URL to access represented service.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="internalURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The internal version of the public URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="adminURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The admin URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="tenantId" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>Tenant id to which the endpoints belong.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="EndpointList">
    <sequence>
      <element name="endpoint" type="identity:Endpoint" minOccurs="0" maxOccurs="unbounded"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/user.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:atom="http://www.w3.org/2005/Atom">
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Elements-->
  <element name="users" type="identity:UserList">
    <annotation>
      <xsd:documentation xml:lang="EN">
        <p>A list of Users.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="user" type="identity:User">
    <annotation>
      <xsd:documentation xml:lang="EN">
        <p>A Keystone User.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="User">
    <attribute name="id" type="xsd:ID" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>An automatically generated, unique, immutable (it will never change) identifier
                        for the user. This is generated by the backend this user is stored in.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="username" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A unique, mutable (it can change) user name that may be used by the user
                        an identifier when presenting credentials.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="email" type="xsd:string" use="optional"/>
    <attribute name="enabled" type="xsd:boolean" default="true" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A true/false value that determines if the user may authenticate or not.
                        If enabled is false, the user will not be able to authenticate.
                        How this value is stored or generated is dependent on the backend in use.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="display-name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A human-readable, friendly name for use in user interfaces.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="updated" type="xsd:dateTime" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A time-stamp identifying the modification time of the
                        user.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="created" type="xsd:dateTime" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A creation time-stamp for the user.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="UserList">
    <sequence>
      <element name="user" type="identity:User" minOccurs="0" maxOccurs="unbounded"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/credentials.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Elements-->
  <element name="auth" type="identity:AuthenticationRequest"/>
  <element name="credential" type="identity:CredentialType"/>
  <element name="credentials" type="identity:CredentialListType"/>
  <element name="passwordCredentials" type="identity:PasswordCredentialsRequiredUsername" substitutionGroup="identity:credential"/>
  <!--Complex Types-->
  <complexType name="CredentialType" abstract="true">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>Base type for credential in Keystone.</p>
      </xsd:documentation>
    </annotation>
    <sequence>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="AuthenticationRequest">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>Both the tenantId and tenantName are optional, but should not be specified together. If both attributes are specified, the server SHOULD respond with a 400 Bad Request.</p>
      </xsd:documentation>
    </annotation>
    <sequence>
      <choice>
        <element ref="identity:credential" minOccurs="1"/>
        <element name="token" type="identity:TokenForAuthenticationRequest"/>
      </choice>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="tenantId" type="xsd:string" use="optional"/>
    <attribute name="tenantName" type="xsd:string" use="optional"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="TokenForAuthenticationRequest">
    <attribute name="id" type="xsd:string" use="required"/>
  </complexType>
  <complexType name="PasswordCredentialsBase">
    <complexContent>
      <extension base="identity:CredentialType">
        <attribute name="username" type="xsd:string" use="optional"/>
        <attribute name="password" type="xsd:string" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="PasswordCredentialsWithoutUsername">
    <complexContent>
      <restriction base="identity:PasswordCredentialsBase">
        <attribute name="username" type="xsd:string" use="prohibited"/>
        <attribute name="password" type="xsd:string" use="required"/>
      </restriction>
    </complexContent>
  </complexType>
  <complexType name="PasswordCredentialsRequiredUsername">
    <complexContent>
      <restriction base="identity:PasswordCredentialsBase">
        <attribute name="username" type="xsd:string" use="required"/>
        <attribute name="password" type="xsd:string" use="required"/>
      </restriction>
    </complexContent>
  </complexType>
  <complexType name="CredentialListType">
    <sequence>
      <element ref="identity:credential" minOccurs="1" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/api-common.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/common/api/v1.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <annotation>
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xsdxt:title>Open Stack Common API Schema Types 1.0</xsdxt:title>
      <xsdxt:link rev="index" href="extensions.xsd"/>
      <xsdxt:link rev="index" href="limits.xsd"/>
      <xsdxt:link rev="index" href="version.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <p>This is the main index XML Schema document
                for Common API Schema Types Version 1.0.</p>
    </xsd:documentation>
  </annotation>
  <include schemaLocation="extensions.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>Types related to extensions.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <include schemaLocation="version.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>Types related to API version details.</p>
      </xsd:documentation>
    </annotation>
  </include>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/extensions.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<xsd:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/common/api/v1.0" xmlns:ext="http://docs.openstack.org/common/api/v1.0" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!--Import ATOM specific schema definitions-->
  <xsd:import namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <xsd:element name="extensions" type="ext:Extensions"/>
  <xsd:element name="extension" type="ext:Extension"/>
  <xsd:complexType name="Extensions">
    <xsd:sequence>
      <xsd:element name="extension" type="ext:Extension" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
  </xsd:complexType>
  <xsd:complexType name="Extension">
    <xsd:sequence>
      <xsd:element name="description" type="xsd:string" minOccurs="1"/>
      <!--<xsd:element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded" />-->
      <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="name" type="xsd:string" use="required"/>
    <xsd:attribute name="namespace" type="xsd:anyURI" use="required"/>
    <xsd:attribute name="alias" type="ext:Alias" use="required"/>
    <xsd:attribute name="updated" type="xsd:dateTime" use="optional"/>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
    <!--TODO(Ziad)resolve asser issue
            <xsd:assert vc:minVersion="1.1" test="atom:link[@rel='describedby']">
            <xsd:annotation>
                <xsd:documentation
                    xml:lang="EN"
                    xmlns="http://www.w3.org/1999/xhtml">
                    <p>
                        There should be at least one atom link
                        with a describedby relation.
                    </p>
                </xsd:documentation>
            </xsd:annotation>
        </xsd:assert>-->
  </xsd:complexType>
  <xsd:simpleType name="Alias">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="\w+\-\w+"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/version.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<xs:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/common/api/v1.0" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:annotation>
    <xs:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Version Types</xsdxt:title>
      <xsdxt:link rel="index" href="api-common.xsd"/>
    </xs:appinfo>
    <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>This schema file defines all types related to versioning.</p>
    </xs:documentation>
  </xs:annotation>
  <!--Import ATOM specific schema definitions-->
  <xs:import namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Multiple choices-->
  <xs:element name="choices" type="vers:VersionChoiceList">
    <xs:annotation>
      <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>This element is returned when the version of the
                    resource cannot be determined. The element
                    provides a list of choices for the resource.</p>
      </xs:documentation>
      <xs:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/choices.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/choices.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <!--Versioning-->
  <xs:element name="versions" type="vers:VersionChoiceList">
    <xs:annotation>
      <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Provides a list of supported versions.</p>
      </xs:documentation>
      <xs:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/versions.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/versions.json"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/atom+xml" href="../samples/versions-atom.xml"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <xs:element name="version" type="vers:VersionChoice" vc:minVersion="1.0" vc:maxVersion="1.1">
    <xs:annotation>
      <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>This element provides detailed meta information
                    regarding the status of the current API version.
                    This is the XSD 1.0 compatible element definition.</p>
      </xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="version2" type="vers:VersionChoiceRoot" vc:minVersion="1.1">
    <xs:annotation>
      <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>This element provides detailed meta information
                    regarding the status of the current API
                    version. The description should include a pointer
                    to both a human readable and a machine processable
                    description of the API service.</p>
      </xs:documentation>
      <xs:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/version.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/version.json"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/atom+xml" href="../samples/version-atom.xml"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <!--Types-->
  <xs:simpleType name="VersionStatus">
    <xs:annotation>
      <xs:documentation>
        <html:p>The VersionStatus type describes a service's operational status.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="ALPHA">
        <xs:annotation>
          <xs:documentation>
            <html:p>This is a new service the API. Thi API
                            contract may be set, but the implementaiton
                            may not be 100% complient with it. Developers
                            are encouraged to begin testing aganst an
                            ALPHA version to provide feedback.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BETA">
        <xs:annotation>
          <xs:documentation>
            <html:p>A status of BETA indicates that this
                            version is a candidate for the next major
                            release and may feature functionality not
                            available in the current
                            version. Developers are encouraged to test
                            and begin the migration processes to a
                            BETA version. Note that a BETA version is
                            undergoing testing, it has not been
                            officially released, and my not be stable.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CURRENT">
        <xs:annotation>
          <xs:documentation>
            <html:p>The API version is stable and has been
                            tested. Developers are encouraged to
                            develop against this API version. The
                            current released version of the API will
                            always be marked as CURRENT.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="DEPRECATED">
        <xs:annotation>
          <xs:documentation>
            <html:p>A status of DEPRECATED indicates that a
                            newer version of the API is
                            available. Application developers are
                            discouraged from using this version and
                            should instead develop against the latest
                            current version of the API.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="VersionChoiceList">
    <xs:annotation>
      <xs:documentation>
        <html:p>A version choice list outlines a collection of
                    resources at various versions.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="version" type="vers:VersionChoice" minOccurs="1" maxOccurs="unbounded"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
    <!--TODO(Ziad)resolve assert issue
            <xs:assert vc:minVersion="1.1" test="every $v in vers:version satisfies $v/atom:link[@rel='self']">
            <xs:annotation>
                <xs:documentation>
                    <html:p>
                        In version lists, every single version must
                        contain at least one self link.
                    </html:p>
                </xs:documentation>
            </xs:annotation>
        </xs:assert>-->
  </xs:complexType>
  <xs:complexType name="VersionChoiceRoot" vc:minVersion="1.1">
    <xs:complexContent>
      <xs:extension base="vers:VersionChoice">
        <!--TODO(Ziad)resolve asser issue
                    <xs:assert test="atom:link[@rel='describedby']">
                    <xs:annotation>
                        <xs:documentation>
                            <html:p>
                                When used as a root element, a version choice
                                must contain at least one describedby link.
                            </html:p>
                        </xs:documentation>
                    </xs:annotation>
                </xs:assert>-->
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="VersionChoice">
    <xs:annotation>
      <xs:documentation>
        <html:p>A version choice contains relevant information
                    about an available service that a user can then
                    use to target a specific version of the service.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="media-types" type="vers:MediaTypeList" minOccurs="0" maxOccurs="1"/>
      <!--<xs:element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded" />-->
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>
          <html:p>The ID of a version choice represents the service version's unique 
                        identifier. This ID is guaranteed to be unique only among the
                        service version choices outlined in the VersionChoiceList.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="status" type="vers:VersionStatus" use="required">
      <xs:annotation>
        <xs:documentation>
          <html:p>A version choice's status describes the current operational state of
                        the given service version. The operational status is captured in a
                        simple type enumeration called VersionStatus.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="updated" type="xs:dateTime" use="optional">
      <xs:annotation>
        <xs:documentation>
          <html:p>
            A version choice's updated attribute describes
                        the time when the version was updated. The
                        time should be updated anytime
            <html:strong>anything</html:strong>
            in the
                        version has changed: documentation,
                        extensions, bug fixes.
          </html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:complexType name="MediaTypeList">
    <xs:annotation>
      <xs:documentation>
        <html:p>A MediaTypeList outlines a collection of valid media types for a given 
                    service version.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="media-type" type="vers:MediaType" minOccurs="1" maxOccurs="unbounded"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:complexType name="MediaType">
    <xs:annotation>
      <xs:documentation>
        <html:p>A MediaType describes what content types the service version understands.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="base" type="xs:string" use="optional" default="">
      <xs:annotation>
        <xs:documentation>
          <html:p>The base of a given media type describes the
                        simple MIME type that then a more complicated
                        media type can be derived from. These types
                        are basic and provide no namespace or version
                        specific data are are only provided as a
                        convenience.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="type" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>
          <html:p>The type attribute of a MediaType describes
                        the MIME specific identifier of the media type
                        in question.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/RAX-KSQA-secretQA.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:RAX-KSQA="http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <!--Import schema we are extending-->
  <import namespace="http://docs.openstack.org/identity/api/v2.0" schemaLocation="credentials.xsd"/>
  <!--Elements-->
  <element name="secretQA" type="RAX-KSQA:SecretQA" substitutionGroup="identity:credential"/>
  <!--Complex Types-->
  <complexType name="SecretQA">
    <complexContent>
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A Secret Question and Answer. The answer shall serve to prove
                              the user's identity as it should only be able to be answered
                              by the user who proposed the question.</p>
        </xsd:documentation>
        <xsd:appinfo>
          <xsdxt:samples>
            <xsdxt:sample>
              <xsdxt:code type="application/xml" href="../samples/RAX-KSQA-secretQA.xml"/>
            </xsdxt:sample>
            <xsdxt:sample>
              <xsdxt:code type="application/json" href="../samples/RAX-KSQA-secretQA.json"/>
            </xsdxt:sample>
          </xsdxt:samples>
        </xsd:appinfo>
      </annotation>
      <extension base="identity:CredentialType">
        <attribute name="username" type="xsd:string" use="optional"/>
        <attribute name="question" type="xsd:string" use="optional"/>
        <attribute name="answer" type="xsd:string" use="optional"/>
        <anyAttribute namespace="##other" processContents="lax"/>
      </extension>
    </complexContent>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>${#Project#Endpoint}</con:endpoint></con:endpoints><con:resource name="v2.0" path="${#Project#path}"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="users" path="users"><con:settings/><con:parameters/><con:resource name="{userId}" path="{userId}"><con:settings/><con:parameters><con:parameter><con:name>userId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="RAX-KSQA" path="RAX-KSQA"><con:settings/><con:parameters/><con:resource name="secretqa" path="secretqa"><con:settings/><con:parameters/><con:method name="Get User SecretQA - getUserSecretQA" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/RAX-KSQA/v1.0">v1:secretQA</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Update User SecretQA - updateUserSecretQA" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/RAX-KSQA/v1.0">v1:secretQA</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/RAX-KSQA/v1.0">v1:secretQA</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource></con:resource></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="GA-softDeleted" type="rest" basePath="" definitionUrl="/home/jorge/projects/keystone/keystone/content/admin/GA-softDeleted.wadl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/home/jorge/projects/keystone/keystone/content/admin/GA-softDeleted.wadl"><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/admin/GA-softDeleted.wadl</con:url><con:content><![CDATA[<!--*******************************************************-->
<!--Import Common XML Entities-->
<!---->
<!--You can resolve the entites with xmllint-->
<!---->
<!--xmllint -noent identity-admin.wadl-->
<!--*******************************************************-->
<application xsi:schemaLocation="http://docs.openstack.org/identity/api/v2.0 ../common/xsd/api.xsd   http://docs.openstack.org/common/api/v1.0 ../common/xsd/api-common.xsd   http://wadl.dev.java.net/2009/02 http://www.w3.org/Submission/wadl/wadl.xsd" xmlns="http://wadl.dev.java.net/2009/02" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0">
  <grammars>
    <include href="../common/xsd/api.xsd"/>
    <include href="../common/xsd/api-common.xsd"/>
  </grammars>
  <!--*******************************************************-->
  <!--All Resources-->
  <!--*******************************************************-->
  <!--We should use SSL in production-->
  <resources base="http://localhost:35357">
    <resource id="version" path="v2.0">
      <method href="#getVersionInfo"/>
      <resource id="softDeleted" path="softDeleted">
        <resource id="users" path="users">
          <param name="X-Auth-Token" style="header" type="xsd:string" required="true">
            <doc>You need a valid admin token for access.</doc>
          </param>
          <resource id="userid" path="{user_id}">
            <param name="user_id" style="template" type="xsd:string" required="true"/>
            <method href="#softDeleted"/>
          </resource>
        </resource>
      </resource>
    </resource>
  </resources>
  <!--*******************************************************-->
  <!--All Methods-->
  <!--*******************************************************-->
  <!--Version-->
  <method name="GET" id="getVersionInfo">
    <doc xml:lang="EN" title="Version Details">
      <p xmlns="http://www.w3.org/1999/xhtml">Returns detailed information about this specific version of the API.</p>
    </doc>
    <response status="200 203">
      <representation mediaType="application/xml" element="capi:version">
        <param name="location" style="plain" type="xsd:anyURI" required="true" path="/capi:version/atom:link[@rel='self']/@href">
          <link resource_type="#VersionDetails" rel="self"/>
        </param>
      </representation>
      <representation mediaType="application/json"/>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="DELETE" id="softDeleted">
    <doc xml:lang="EN" title="Delete from soft delete">
      <p xmlns="http://www.w3.org/1999/xhtml">Deletes a user from the soft deleted tree</p>
    </doc>
    <request></request>
    <response status="200 203"></response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
</application>]]></con:content><con:type>http://wadl.dev.java.net/2009/02</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/api.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <include schemaLocation="token.xsd"/>
  <include schemaLocation="tenant.xsd"/>
  <include schemaLocation="fault.xsd"/>
  <include schemaLocation="endpoints.xsd"/>
  <include schemaLocation="roles.xsd"/>
  <include schemaLocation="user.xsd"/>
  <include schemaLocation="credentials.xsd"/>
  <include schemaLocation="services.xsd"/>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/token.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <include schemaLocation="roles.xsd"/>
  <include schemaLocation="services.xsd"/>
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Elements-->
  <element name="access" type="identity:AuthenticateResponse"/>
  <!--Complex Types-->
  <complexType name="Token">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A token is an arbitrary bit of text that is used to access
                    resources. Each token has a scope which describes which
                    resources are accessible with it. A token may be
                    revoked at anytime and is valid for a finite duration.</p>
        <p>While Keystone supports token-based authentication in this release,
                    the intention is for it to support additional protocols in the
                    future. The desire is for it to be an integration service, and not
                    a full-fledged identity store and management solution.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/token.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/token.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
    <sequence>
      <element name="tenant" type="identity:TenantForAuthenticateResponse"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:string" use="required"/>
    <attribute name="expires" type="xsd:dateTime" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="AuthenticateResponse">
    <sequence>
      <element name="token" type="identity:Token"/>
      <element name="user" type="identity:UserForAuthenticateResponse"/>
      <element name="serviceCatalog" type="identity:ServiceCatalog" minOccurs="0"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="UserForAuthenticateResponse">
    <sequence>
      <element name="roles" type="identity:RoleList"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:string"/>
    <attribute name="name" type="xsd:string"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="TenantForAuthenticateResponse">
    <attribute name="id" type="xsd:string"/>
    <attribute name="name" type="xsd:string"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="ServiceCatalog">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>The service catalog lists the services you have access to</p>
        <div class="design">
          <p>We optimized for future flexibility around the hierarchy. So we
                    left the design as a flat list of endpoints with attributes and the
                    consumer can categorize as they need.
                    This results in potential duplication (such as with the version/@list)
                    but we acceopt that normalization cost in order to not force an
                    artificial hierarchy (suchas on region, which can be optional).</p>
        </div>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/xml" href="../samples/services.xml"/>
                     
          </xsdxt:sample>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/json" href="../samples/services.json"/>
                     
          </xsdxt:sample>
                 
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
    <sequence>
      <element name="service" type="identity:ServiceForCatalog" minOccurs="1" maxOccurs="unbounded">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>A list of services.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="ServiceForCatalog">
    <sequence>
      <element name="endpoint" type="identity:EndpointForService" minOccurs="1" maxOccurs="unbounded">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>A list of endpoints.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="type" type="identity:ExtensibleServiceType" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The OpenStack-registered type (e.g. 'compute', 'object-store', etc).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The commercial service name (e.g. 'My Nova Cloud Servers').</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <!--EndpointForService-->
  <complexType name="EndpointForService">
    <sequence>
      <element name="version" type="identity:VersionForService" maxOccurs="1" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>Version details.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="region" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The name of the region where the endpoint
                        lives. Example: airport codes; LHR (UK),
                        STL (Saint Louis)</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="tenantId" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>Tenant id to which the endpoints belong.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="publicURL" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>Public accessible service URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="internalURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A service URL, accessible only locally within that
                        cloud (generally over a high bandwidth, low latency,
                        free of charge link).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="adminURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>An Admin URL (used for administration using privileged
                        calls). This may expose
                        additional functionality not found in the public and
                        internal URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <!--VersionForService-->
  <complexType name="VersionForService">
    <attribute name="id" type="xsd:string" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>Id of the version.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="info" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>URI to get the information specific to this version.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="list" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>URI to get the information about all versions.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/atom/atom.xsd</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://www.w3.org/2005/Atom" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd"/>
  <xs:simpleType name="relation">
    <xs:restriction base="xs:string">
      <xs:enumeration value="alternate"/>
      <xs:enumeration value="appendix"/>
      <xs:enumeration value="archives"/>
      <xs:enumeration value="author"/>
      <xs:enumeration value="bookmark"/>
      <xs:enumeration value="chapter"/>
      <xs:enumeration value="contents"/>
      <xs:enumeration value="copyright"/>
      <xs:enumeration value="current"/>
      <xs:enumeration value="describedby"/>
      <xs:enumeration value="edit"/>
      <xs:enumeration value="edit-media"/>
      <xs:enumeration value="first"/>
      <xs:enumeration value="glossary"/>
      <xs:enumeration value="help"/>
      <xs:enumeration value="hub"/>
      <xs:enumeration value="icon"/>
      <xs:enumeration value="index"/>
      <xs:enumeration value="last"/>
      <xs:enumeration value="latest-version"/>
      <xs:enumeration value="license"/>
      <xs:enumeration value="monitor"/>
      <xs:enumeration value="monitor-group"/>
      <xs:enumeration value="next"/>
      <xs:enumeration value="next-arvhice"/>
      <xs:enumeration value="nofollow"/>
      <xs:enumeration value="payment"/>
      <xs:enumeration value="predecessor-version"/>
      <xs:enumeration value="prefetch"/>
      <xs:enumeration value="prev"/>
      <xs:enumeration value="previous"/>
      <xs:enumeration value="prev-archive"/>
      <xs:enumeration value="replies"/>
      <xs:enumeration value="search"/>
      <xs:enumeration value="section"/>
      <xs:enumeration value="self"/>
      <xs:enumeration value="service"/>
      <xs:enumeration value="start"/>
      <xs:enumeration value="stylesheet"/>
      <xs:enumeration value="subsection"/>
      <xs:enumeration value="successor-version"/>
      <xs:enumeration value="up"/>
      <xs:enumeration value="version-history"/>
      <xs:enumeration value="via"/>
      <xs:enumeration value="working-copy"/>
      <xs:enumeration value="working-copy-of"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="link" type="atom:link"/>
  <xs:complexType name="link">
    <xs:annotation>
      <xs:documentation>
        <html:p>
          See section 3.4 of the ATOM RFC
          <html:a href="http://tools.ietf.org/html/rfc4287">RFC4287</html:a>
        </html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="rel" use="required" type="atom:relation">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="type" use="optional" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="href" use="required" type="xs:anyURI">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="hreflang" use="optional" type="xs:NMTOKEN">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="title" use="optional" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/atom/xml.xsd</con:url><con:content><![CDATA[<?xml-stylesheet href="../2008/09/xsd.xsl" type="text/xsl"?>
<xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
  <xs:annotation>
    <xs:documentation>
      <div>
        <h1>About the XML namespace</h1>
        <div class="bodytext">
          <p>This schema document describes the XML namespace, in a form
      suitable for import by other schema documents.</p>
          <p>
            See
            <a href="http://www.w3.org/XML/1998/namespace.html">http://www.w3.org/XML/1998/namespace.html</a>
            and
            <a href="http://www.w3.org/TR/REC-xml">http://www.w3.org/TR/REC-xml</a>
            for information 
      about this namespace.
          </p>
          <p>Note that local names in this namespace are intended to be
      defined only by the World Wide Web Consortium or its subgroups.
      The names currently defined in this namespace are listed below.
      They should not be used with conflicting semantics by any Working
      Group, specification, or document instance.</p>
          <p>
            See further below in this document for more information about
            <a href="#usage">how to refer to this schema document from your own
      XSD schema documents</a>
            and about
            <a href="#nsversioning">the
      namespace-versioning policy governing this schema document</a>
            .
          </p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>lang (as an attribute name)</h3>
          <p>denotes an attribute whose value
       is a language code for the natural language of the content of
       any element; its value is inherited.  This name is reserved
       by virtue of its definition in the XML specification.</p>
        </div>
        <div>
          <h4>Notes</h4>
          <p>Attempting to install the relevant ISO 2- and 3-letter
      codes as the enumerated possible values is probably never
      going to be a realistic possibility.</p>
          <p>
            See BCP 47 at
            <a href="http://www.rfc-editor.org/rfc/bcp/bcp47.txt">http://www.rfc-editor.org/rfc/bcp/bcp47.txt</a>
            and the IANA language subtag registry at
            <a href="http://www.iana.org/assignments/language-subtag-registry">http://www.iana.org/assignments/language-subtag-registry</a>
            for further information.
          </p>
          <p>The union allows for the 'un-declaration' of xml:lang with
      the empty string.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:union memberTypes="xs:language">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value=""/>
          </xs:restriction>
        </xs:simpleType>
      </xs:union>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="space">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>space (as an attribute name)</h3>
          <p>denotes an attribute whose
       value is a keyword indicating what whitespace processing
       discipline is intended for the content of the element; its
       value is inherited.  This name is reserved by virtue of its
       definition in the XML specification.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>base (as an attribute name)</h3>
          <p>denotes an attribute whose value
       provides a URI to be used as the base for interpreting any
       relative URIs in the scope of the element on which it
       appears; its value is inherited.  This name is reserved
       by virtue of its definition in the XML Base specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xmlbase/">http://www.w3.org/TR/xmlbase/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="id" type="xs:ID">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>id (as an attribute name)</h3>
          <p>denotes an attribute whose value
       should be interpreted as if declared to be of type ID.
       This name is reserved by virtue of its definition in the
       xml:id specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xml-id/">http://www.w3.org/TR/xml-id/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
    <xs:attribute ref="xml:id"/>
  </xs:attributeGroup>
  <xs:annotation>
    <xs:documentation>
      <div>
        <h3>Father (in any context at all)</h3>
        <div class="bodytext">
          <p>denotes Jon Bosak, the chair of 
      the original XML Working Group.  This name is reserved by 
      the following decision of the W3C XML Plenary and 
      XML Coordination groups:</p>
          <blockquote>
            <p>In appreciation for his vision, leadership and
	dedication the W3C XML Plenary on this 10th day of
	February, 2000, reserves for Jon Bosak in perpetuity
	the XML name "xml:Father".</p>
          </blockquote>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>
      <div xml:id="usage" id="usage">
        <h2>
          <a name="usage">About this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            This schema defines attributes and an attribute group suitable
      for use by schemas wishing to allow
            <code>xml:base</code>
            ,
            <code>xml:lang</code>
            ,
            <code>xml:space</code>
            or
            <code>xml:id</code>
            attributes on elements they define.
          </p>
          <p>To enable this, such a schema must import this schema for
      the XML namespace, e.g. as follows:</p>
          <pre>&lt;schema . . .>
           . . .
           &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2001/xml.xsd"/></pre>
          <p>or</p>
          <pre>&lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2009/01/xml.xsd"/></pre>
          <p>Subsequently, qualified reference to any of the attributes or the
      group defined below will have the desired effect, e.g.</p>
          <pre>&lt;type . . .>
           . . .
           &lt;attributeGroup ref="xml:specialAttrs"/></pre>
          <p>will define a type which will schema-validate an instance element
      with any of those attributes.</p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>
      <div id="nsversioning" xml:id="nsversioning">
        <h2>
          <a name="nsversioning">Versioning policy for this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            In keeping with the XML Schema WG's standard versioning
      policy, this schema document will persist at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            .
          </p>
          <p>
            At the date of issue it can also be found at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            .
          </p>
          <p>
            The schema document at that URI may however change in the future,
      in order to remain compatible with the latest version of XML
      Schema itself, or with the XML namespace itself.  In other words,
      if the XML Schema or XML namespaces change, the version of this
      document at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            will change accordingly; the version at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            will not change.
          </p>
          <p>Previous dated (and unchanging) versions of this schema 
      document are at:</p>
          <ul>
            <li>
              <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2007/08/xml.xsd">http://www.w3.org/2007/08/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2004/10/xml.xsd">http://www.w3.org/2004/10/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2001/03/xml.xsd">http://www.w3.org/2001/03/xml.xsd</a>
            </li>
          </ul>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/roles.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Elements-->
  <element name="roles" type="identity:RoleList">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A list of roles.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="role" type="identity:Role">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A role.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="Role">
    <attribute name="id" type="xsd:string" use="optional"/>
    <attribute name="name" type="xsd:string" use="required"/>
    <attribute name="description" type="xsd:string" use="optional"/>
    <attribute name="serviceId" type="xsd:string" use="optional"/>
    <attribute name="tenantId" type="xsd:string" use="optional"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="RoleList">
    <sequence>
      <element name="role" type="identity:Role" minOccurs="0" maxOccurs="unbounded"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/services.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Simple Types-->
  <simpleType name="ExtensibleServiceType">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>
          An extensible service type allows all of the
                    strings defined in
          <a href="#type_ServiceType" title="See definition of                         ServiceType">ServiceType</a>
          or an
                    alias prefixed status.
        </p>
      </xsd:documentation>
    </annotation>
    <union memberTypes="identity:ServiceType identity:ExtendedService"/>
  </simpleType>
  <simpleType name="ServiceType">
    <restriction base="xsd:string">
      <enumeration value="compute">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>The type for an OpenStack Compute API 1.1 compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="object-store">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>The type for a Swift-compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="image-service">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>The type for a Glance-compatible service</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="identity">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>The type for a Keystone-compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
    </restriction>
  </simpleType>
  <simpleType name="ExtendedService">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A non-core service type which must contain an extension prefix.</p>
      </xsd:documentation>
    </annotation>
    <restriction base="xsd:string">
      <pattern value="(\w|-)+:\w+"/>
    </restriction>
  </simpleType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/tenant.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Elements-->
  <element name="tenant" type="identity:Tenant">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A container used to group or isolate resources and/or identity
                  objects. Depending on the service operator, a tenant may map to a customer,
                  account, organization, or project.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/xml" href="../samples/tenant.xml"/>
                     
          </xsdxt:sample>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/json" href="../samples/tenant.json"/>
                     
          </xsdxt:sample>
                 
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="tenants" type="identity:Tenants">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A list of tenants.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="Tenants">
    <sequence>
      <element name="tenant" type="identity:Tenant" maxOccurs="100"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="Tenant">
    <sequence>
      <element name="description" type="xsd:string">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>An free text description of the tenant.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:ID" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>An ID uniquely identifying the tenant. This usually comes from the back-end store.
                        This value is guaranteed to be unique and immutable (it will never change).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="name" type="xsd:string" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The name of the tenant. This is guaranteed to be unique, but may change.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="enabled" type="xsd:boolean" use="optional" default="true">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>An boolean signifying if a tenant is enabled or not. A disabled tenant
                        cannot be authenticated against.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="display-name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A human-readable, friendly name for use in user interfaces.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute type="xsd:dateTime" name="updated" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A time-stamp identifying the modification time of the
                        tenant.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute type="xsd:dateTime" name="created" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A creation time-stamp for the tenant.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/fault.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!--Fault Elements-->
  <element name="identityFault" type="identity:IdentityFault"/>
  <element name="serviceUnavailable" type="identity:ServiceUnavailableFault"/>
  <element name="badRequest" type="identity:BadRequestFault"/>
  <element name="unauthorized" type="identity:UnauthorizedFault"/>
  <element name="overLimit" type="identity:OverLimitFault"/>
  <element name="userDisabled" type="identity:UserDisabledFault"/>
  <element name="forbidden" type="identity:ForbiddenFault"/>
  <element name="itemNotFound" type="identity:ItemNotFoundFault"/>
  <element name="tenantConflict" type="identity:TenantConflictFault"/>
  <!--Fault Types-->
  <complexType name="IdentityFault">
    <sequence>
      <element name="message" type="xsd:string">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>A human readable message that is appropriate for display
                            to the end user.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element name="details" type="xsd:string" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>The optional &lt;details> element may contain useful
                            information for tracking down errors (e.g a stack
                            trace).  This information may or may not be appropriate
                            for display to an end user.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="code" type="xsd:int" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The HTTP status code associated with the current fault.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="ServiceUnavailableFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="BadRequestFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="UnauthorizedFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="UserDisabledFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="ForbiddenFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="ItemNotFoundFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="TenantConflictFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="OverLimitFault">
    <complexContent>
      <extension base="identity:IdentityFault">
        <attribute name="retryAt" type="xsd:dateTime" use="optional">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
              <p>An optional dateTime denoting when an operation should
                                be retried.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
      </extension>
    </complexContent>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/endpoints.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <include schemaLocation="api.xsd"/>
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <element name="endpoint" type="identity:Endpoint">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>An Endpoint.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="endpoints" type="identity:EndpointList">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A list of Endpoints.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="Endpoint">
    <sequence>
      <element name="version" type="identity:VersionForService" maxOccurs="1" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>Version details.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:int" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>An ID uniquely identifying the Endpoint.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="type" type="identity:ExtensibleServiceType" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The OpenStack-registered type (e.g. 'compute', 'object-store', etc).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The commercial service name (e.g. 'My Nova Cloud Servers').</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="region" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The region of Endpoint Template.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="publicURL" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The public URL to access represented service.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="internalURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The internal version of the public URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="adminURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The admin URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="tenantId" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>Tenant id to which the endpoints belong.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="EndpointList">
    <sequence>
      <element name="endpoint" type="identity:Endpoint" minOccurs="0" maxOccurs="unbounded"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/user.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:atom="http://www.w3.org/2005/Atom">
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Elements-->
  <element name="users" type="identity:UserList">
    <annotation>
      <xsd:documentation xml:lang="EN">
        <p>A list of Users.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="user" type="identity:User">
    <annotation>
      <xsd:documentation xml:lang="EN">
        <p>A Keystone User.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="User">
    <attribute name="id" type="xsd:ID" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>An automatically generated, unique, immutable (it will never change) identifier
                        for the user. This is generated by the backend this user is stored in.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="username" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A unique, mutable (it can change) user name that may be used by the user
                        an identifier when presenting credentials.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="email" type="xsd:string" use="optional"/>
    <attribute name="enabled" type="xsd:boolean" default="true" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A true/false value that determines if the user may authenticate or not.
                        If enabled is false, the user will not be able to authenticate.
                        How this value is stored or generated is dependent on the backend in use.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="display-name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A human-readable, friendly name for use in user interfaces.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="updated" type="xsd:dateTime" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A time-stamp identifying the modification time of the
                        user.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="created" type="xsd:dateTime" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A creation time-stamp for the user.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="UserList">
    <sequence>
      <element name="user" type="identity:User" minOccurs="0" maxOccurs="unbounded"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/credentials.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Elements-->
  <element name="auth" type="identity:AuthenticationRequest"/>
  <element name="credential" type="identity:CredentialType"/>
  <element name="credentials" type="identity:CredentialListType"/>
  <element name="passwordCredentials" type="identity:PasswordCredentialsRequiredUsername" substitutionGroup="identity:credential"/>
  <!--Complex Types-->
  <complexType name="CredentialType" abstract="true">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>Base type for credential in Keystone.</p>
      </xsd:documentation>
    </annotation>
    <sequence>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="AuthenticationRequest">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>Both the tenantId and tenantName are optional, but should not be specified together. If both attributes are specified, the server SHOULD respond with a 400 Bad Request.</p>
      </xsd:documentation>
    </annotation>
    <sequence>
      <choice>
        <element ref="identity:credential" minOccurs="1"/>
        <element name="token" type="identity:TokenForAuthenticationRequest"/>
      </choice>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="tenantId" type="xsd:string" use="optional"/>
    <attribute name="tenantName" type="xsd:string" use="optional"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="TokenForAuthenticationRequest">
    <attribute name="id" type="xsd:string" use="required"/>
  </complexType>
  <complexType name="PasswordCredentialsBase">
    <complexContent>
      <extension base="identity:CredentialType">
        <attribute name="username" type="xsd:string" use="optional"/>
        <attribute name="password" type="xsd:string" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="PasswordCredentialsWithoutUsername">
    <complexContent>
      <restriction base="identity:PasswordCredentialsBase">
        <attribute name="username" type="xsd:string" use="prohibited"/>
        <attribute name="password" type="xsd:string" use="required"/>
      </restriction>
    </complexContent>
  </complexType>
  <complexType name="PasswordCredentialsRequiredUsername">
    <complexContent>
      <restriction base="identity:PasswordCredentialsBase">
        <attribute name="username" type="xsd:string" use="required"/>
        <attribute name="password" type="xsd:string" use="required"/>
      </restriction>
    </complexContent>
  </complexType>
  <complexType name="CredentialListType">
    <sequence>
      <element ref="identity:credential" minOccurs="1" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/api-common.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/common/api/v1.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <annotation>
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xsdxt:title>Open Stack Common API Schema Types 1.0</xsdxt:title>
      <xsdxt:link rev="index" href="extensions.xsd"/>
      <xsdxt:link rev="index" href="limits.xsd"/>
      <xsdxt:link rev="index" href="version.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <p>This is the main index XML Schema document
                for Common API Schema Types Version 1.0.</p>
    </xsd:documentation>
  </annotation>
  <include schemaLocation="extensions.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>Types related to extensions.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <include schemaLocation="version.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>Types related to API version details.</p>
      </xsd:documentation>
    </annotation>
  </include>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/extensions.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<xsd:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/common/api/v1.0" xmlns:ext="http://docs.openstack.org/common/api/v1.0" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!--Import ATOM specific schema definitions-->
  <xsd:import namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <xsd:element name="extensions" type="ext:Extensions"/>
  <xsd:element name="extension" type="ext:Extension"/>
  <xsd:complexType name="Extensions">
    <xsd:sequence>
      <xsd:element name="extension" type="ext:Extension" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
  </xsd:complexType>
  <xsd:complexType name="Extension">
    <xsd:sequence>
      <xsd:element name="description" type="xsd:string" minOccurs="1"/>
      <!--<xsd:element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded" />-->
      <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="name" type="xsd:string" use="required"/>
    <xsd:attribute name="namespace" type="xsd:anyURI" use="required"/>
    <xsd:attribute name="alias" type="ext:Alias" use="required"/>
    <xsd:attribute name="updated" type="xsd:dateTime" use="optional"/>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
    <!--TODO(Ziad)resolve asser issue
            <xsd:assert vc:minVersion="1.1" test="atom:link[@rel='describedby']">
            <xsd:annotation>
                <xsd:documentation
                    xml:lang="EN"
                    xmlns="http://www.w3.org/1999/xhtml">
                    <p>
                        There should be at least one atom link
                        with a describedby relation.
                    </p>
                </xsd:documentation>
            </xsd:annotation>
        </xsd:assert>-->
  </xsd:complexType>
  <xsd:simpleType name="Alias">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="\w+\-\w+"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:/home/jorge/projects/keystone/keystone/content/common/xsd/version.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<xs:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/common/api/v1.0" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:annotation>
    <xs:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Version Types</xsdxt:title>
      <xsdxt:link rel="index" href="api-common.xsd"/>
    </xs:appinfo>
    <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>This schema file defines all types related to versioning.</p>
    </xs:documentation>
  </xs:annotation>
  <!--Import ATOM specific schema definitions-->
  <xs:import namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Multiple choices-->
  <xs:element name="choices" type="vers:VersionChoiceList">
    <xs:annotation>
      <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>This element is returned when the version of the
                    resource cannot be determined. The element
                    provides a list of choices for the resource.</p>
      </xs:documentation>
      <xs:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/choices.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/choices.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <!--Versioning-->
  <xs:element name="versions" type="vers:VersionChoiceList">
    <xs:annotation>
      <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Provides a list of supported versions.</p>
      </xs:documentation>
      <xs:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/versions.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/versions.json"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/atom+xml" href="../samples/versions-atom.xml"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <xs:element name="version" type="vers:VersionChoice" vc:minVersion="1.0" vc:maxVersion="1.1">
    <xs:annotation>
      <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>This element provides detailed meta information
                    regarding the status of the current API version.
                    This is the XSD 1.0 compatible element definition.</p>
      </xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="version2" type="vers:VersionChoiceRoot" vc:minVersion="1.1">
    <xs:annotation>
      <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>This element provides detailed meta information
                    regarding the status of the current API
                    version. The description should include a pointer
                    to both a human readable and a machine processable
                    description of the API service.</p>
      </xs:documentation>
      <xs:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/version.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/version.json"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/atom+xml" href="../samples/version-atom.xml"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <!--Types-->
  <xs:simpleType name="VersionStatus">
    <xs:annotation>
      <xs:documentation>
        <html:p>The VersionStatus type describes a service's operational status.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="ALPHA">
        <xs:annotation>
          <xs:documentation>
            <html:p>This is a new service the API. Thi API
                            contract may be set, but the implementaiton
                            may not be 100% complient with it. Developers
                            are encouraged to begin testing aganst an
                            ALPHA version to provide feedback.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BETA">
        <xs:annotation>
          <xs:documentation>
            <html:p>A status of BETA indicates that this
                            version is a candidate for the next major
                            release and may feature functionality not
                            available in the current
                            version. Developers are encouraged to test
                            and begin the migration processes to a
                            BETA version. Note that a BETA version is
                            undergoing testing, it has not been
                            officially released, and my not be stable.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CURRENT">
        <xs:annotation>
          <xs:documentation>
            <html:p>The API version is stable and has been
                            tested. Developers are encouraged to
                            develop against this API version. The
                            current released version of the API will
                            always be marked as CURRENT.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="DEPRECATED">
        <xs:annotation>
          <xs:documentation>
            <html:p>A status of DEPRECATED indicates that a
                            newer version of the API is
                            available. Application developers are
                            discouraged from using this version and
                            should instead develop against the latest
                            current version of the API.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="VersionChoiceList">
    <xs:annotation>
      <xs:documentation>
        <html:p>A version choice list outlines a collection of
                    resources at various versions.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="version" type="vers:VersionChoice" minOccurs="1" maxOccurs="unbounded"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
    <!--TODO(Ziad)resolve assert issue
            <xs:assert vc:minVersion="1.1" test="every $v in vers:version satisfies $v/atom:link[@rel='self']">
            <xs:annotation>
                <xs:documentation>
                    <html:p>
                        In version lists, every single version must
                        contain at least one self link.
                    </html:p>
                </xs:documentation>
            </xs:annotation>
        </xs:assert>-->
  </xs:complexType>
  <xs:complexType name="VersionChoiceRoot" vc:minVersion="1.1">
    <xs:complexContent>
      <xs:extension base="vers:VersionChoice">
        <!--TODO(Ziad)resolve asser issue
                    <xs:assert test="atom:link[@rel='describedby']">
                    <xs:annotation>
                        <xs:documentation>
                            <html:p>
                                When used as a root element, a version choice
                                must contain at least one describedby link.
                            </html:p>
                        </xs:documentation>
                    </xs:annotation>
                </xs:assert>-->
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="VersionChoice">
    <xs:annotation>
      <xs:documentation>
        <html:p>A version choice contains relevant information
                    about an available service that a user can then
                    use to target a specific version of the service.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="media-types" type="vers:MediaTypeList" minOccurs="0" maxOccurs="1"/>
      <!--<xs:element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded" />-->
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>
          <html:p>The ID of a version choice represents the service version's unique 
                        identifier. This ID is guaranteed to be unique only among the
                        service version choices outlined in the VersionChoiceList.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="status" type="vers:VersionStatus" use="required">
      <xs:annotation>
        <xs:documentation>
          <html:p>A version choice's status describes the current operational state of
                        the given service version. The operational status is captured in a
                        simple type enumeration called VersionStatus.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="updated" type="xs:dateTime" use="optional">
      <xs:annotation>
        <xs:documentation>
          <html:p>
            A version choice's updated attribute describes
                        the time when the version was updated. The
                        time should be updated anytime
            <html:strong>anything</html:strong>
            in the
                        version has changed: documentation,
                        extensions, bug fixes.
          </html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:complexType name="MediaTypeList">
    <xs:annotation>
      <xs:documentation>
        <html:p>A MediaTypeList outlines a collection of valid media types for a given 
                    service version.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="media-type" type="vers:MediaType" minOccurs="1" maxOccurs="unbounded"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:complexType name="MediaType">
    <xs:annotation>
      <xs:documentation>
        <html:p>A MediaType describes what content types the service version understands.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="base" type="xs:string" use="optional" default="">
      <xs:annotation>
        <xs:documentation>
          <html:p>The base of a given media type describes the
                        simple MIME type that then a more complicated
                        media type can be derived from. These types
                        are basic and provide no namespace or version
                        specific data are are only provided as a
                        convenience.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="type" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>
          <html:p>The type attribute of a MediaType describes
                        the MIME specific identifier of the media type
                        in question.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>${#Project#Endpoint}</con:endpoint></con:endpoints><con:resource name="v2.0" path="${#Project#path}"><con:settings/><con:parameters/><con:resource name="softDeleted" path="softDeleted"><con:settings/><con:parameters/><con:resource name="users" path="users"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="{user_id}" path="{user_id}"><con:settings/><con:parameters><con:parameter required="true"><con:name>user_id</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Delete from soft delete - softDeleted" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource><con:method name="Version Details - getVersionInfo" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/common/api/v1.0">v1:version</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="RAX-GRPADM-admin" type="rest" basePath="" definitionUrl="C:\repoman\keystone\keystone\content\admin\RAX-GRPADM-GAv2.0.wadl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT"/><con:endpoints><con:endpoint>http://localhost:35357</con:endpoint><con:endpoint>${#Project#endpoint}</con:endpoint></con:endpoints><con:resource name="v2.0" path="${#Project#path}"><con:settings/><con:parameters/><con:resource name="RAX-GRPADM" path="RAX-GRPADM"><con:settings/><con:parameters/><con:resource name="groups" path="groups"><con:settings/><con:parameters/><con:resource name="{groupId}" path="{groupId}"><con:settings/><con:parameters><con:parameter><con:name>groupId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="users" path="users"><con:settings/><con:parameters/><con:resource name="{userId}" path="{userId}"><con:settings/><con:parameters><con:parameter><con:name>userId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Add User to Group - addUserToGroup" method="PUT"><con:settings/><con:parameters><con:parameter><con:name>X-Auth-Token</con:name><con:value/><con:style>HEADER</con:style><con:default/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Remove User From Group - removeUserFromGroup" method="DELETE"><con:settings/><con:parameters><con:parameter><con:name>X-Auth-Token</con:name><con:value/><con:style>HEADER</con:style><con:default/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get Users for Group" method="GET"><con:settings/><con:parameters><con:parameter><con:name>X-Auth-Token</con:name><con:value/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>groupId</con:name><con:value/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>marker</con:name><con:value/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:request name="Request 1" mediaType="application/xml"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:method name="Get Group - getGroup" method="GET"><con:settings/><con:parameters><con:parameter><con:name>X-Auth-Token</con:name><con:value/><con:style>HEADER</con:style><con:default/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">v1:group</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Update a Group - updateGroup" method="PUT"><con:settings/><con:parameters><con:parameter><con:name>X-Auth-Token</con:name><con:value/><con:style>HEADER</con:style><con:default/></con:parameter></con:parameters><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">v1:group</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">v1:group</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete Group - deleteGroup" method="DELETE"><con:settings/><con:parameters><con:parameter><con:name>X-Auth-Token</con:name><con:value/><con:style>HEADER</con:style><con:default/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Add a New Group - addGroup" method="POST"><con:settings/><con:parameters><con:parameter><con:name>X-Auth-Token</con:name><con:value/><con:style>HEADER</con:style><con:default/></con:parameter></con:parameters><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">v1:group</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v1="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">v1:group</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="Get Groups" method="GET"><con:settings/><con:parameters><con:parameter><con:name>marker</con:name><con:value/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>name</con:name><con:value/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>X-Auth-Token</con:name><con:style>HEADER</con:style></con:parameter></con:parameters><con:request name="Request 1" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource></con:interface><con:testSuite name="Functional - identity-admin"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="version" searchProperties="true" id="5df28986-4aef-4a50-a822-bd2260632d0c" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="GET - getVersion - xml"><con:settings/><con:config service="identity-admin" methodName="Version Details - getVersionInfo" resourcePath="/${#Project#path}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getVersion - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - getVersionInfo - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>id="v2.0"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/common/api/v1.0';
//ns1:version[1]/@id</path><content>v2.0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/common/api/v1.0';
declare namespace ns2='http://www.w3.org/2005/Atom';
//ns1:version[1]/ns2:link[1]/@href</path><content>${#Project#Endpoint}/${#Project#path}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getVersion - json"><con:settings/><con:config service="identity-admin" methodName="Version Details - getVersionInfo" resourcePath="/${#Project#path}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getVersion - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - getVersionInfo - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>"id":"v2.0"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>{"version":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}';
count(//ns1:Response[1]/ns1:version[1]/ns1:id[1])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='${#Project#EndpointJson}/${#Project#path}';
//ns1:Response[1]/ns1:version[1]/ns1:id[1]</path><content>v2.0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns1='${#Project#EndpointJson}/${#Project#path}';
//ns1:Response[1]/ns1:version[1]/ns1:link[1]/ns1:e[1]/ns1:href[1]</path><content>${#Project#Endpoint}/${#Project#path}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="tenants" searchProperties="true" id="efa3c2c2-aaf4-4d3d-b016-42497ff5c4ba" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="POST - token - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#password}" username="${#TestSuite#username}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XQuery Match" name="XQuery Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1])</path><content>1</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XQuery Match" name="XQuery Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token[1])</path><content>1</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XQuery Match" name="XQuery Match 2"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token[1]/@id)</path><content>1</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token info"><con:settings/><con:config><script>def tokenId = context.expand( '${POST - token - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info "get TokenId: " + tokenId
def userId = context.expand( '${POST - token - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/@id}' )
log.info "get UserId: " + userId

if (tokenId == "" | userId == "")
{
	assert false;	
}
testRunner.testCase.testSuite.setPropertyValue("tokenId", tokenId)
testRunner.testCase.testSuite.setPropertyValue("userId", userId)</script></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>body1</con:name><con:sourceType>addApikeyCredentialsResponse-xml</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addUserCredentials - xml</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUserCredentials - xml"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Add user Credential. - addUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUserCredentials - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;apiKeyCredentials username="${#TestSuite#username2}" apiKey="${#TestSuite#apiKey2}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>apiKey="${#TestSuite#apiKey2}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 2"><con:configuration><token>username="${#TestSuite#username2}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" disabled="true"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:RAX-KSKEY:apiKeyCredentials)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>apiKeyCredentials</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - nonAdmin - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - nonAdmin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0"> &lt;apiKeyCredentials apiKey="${#TestSuite#apiKey2}" username="${#TestSuite#username2}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/> &lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XQuery Match" name="XQuery Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access)</path><content>1</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XQuery Match" name="XQuery Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token[1])</path><content>1</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XQuery Match" name="XQuery Match 2"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token[1]/@id)</path><content>1</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token/><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:serviceCatalog[1]/ns1:service) >= 1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token info 2"><con:settings/><con:config><script>def tokenId = context.expand( '${POST - token - nonAdmin - xml#ResponseAsXml#declare namespace ns8=\'http://docs.openstack.org/identity/api/v2.0\'; //ns8:access[1]/ns8:token[1]/@id}' )
log.info "get TokenId: " + tokenId
def userId = context.expand( '${POST - token - nonAdmin - xml#ResponseAsXml#declare namespace ns8=\'http://docs.openstack.org/identity/api/v2.0\'; //ns8:access[1]/ns8:user[1]/@id}' )

log.info "get UserId: " + userId

if (tokenId == "" | userId == "")
{
	assert false;	
}
testRunner.testCase.testSuite.setPropertyValue("tokenId2", tokenId)
testRunner.testCase.testSuite.setPropertyValue("userId2", userId)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants - xml"><con:settings/><con:config service="identity-admin" methodName="Get Tenants - listTenants" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - tenants - xml - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>tenants</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:tenants[1]/ns1:tenant)>=1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store tenant info"><con:settings/><con:config><script>def tenantId = context.expand( '${GET - tenants - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:tenants[1]/ns1:tenant[1]/@id}' )
def tenantName = context.expand( '${GET - tenants - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:tenants[1]/ns1:tenant[1]/@name}' )
log.info "get tenantId: " + tenantId
log.info "get tenantName: " + tenantName
if (tenantId == "" || tenantName == "")
{
	assert false;	
}

testRunner.testCase.testSuite.setPropertyValue("tenantId", tenantId)
testRunner.testCase.testSuite.setPropertyValue("tenantName", tenantName)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants - json"><con:settings/><con:config service="identity-admin" methodName="Get Tenants - listTenants" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - tenants - xml - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>"tenants":[{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/tenants';
count(//ns1:Response[1]/ns1:tenants[1]/ns1:e)>=1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants by Name - xml"><con:settings/><con:config service="identity-admin" methodName="Get tenants by name - getTenantByName" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants by Name - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>name="${#TestSuite#tenantName}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:tenant) >=1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:tenant[1]/@id</path><content>${#TestSuite#tenantId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestSuite#tenantName}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants by Name - json"><con:settings/><con:config service="identity-admin" methodName="Get tenants by name - getTenantByName" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants by Name - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>"name":"${#TestSuite#tenantName}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#endpointjson}/${#Project#path}/tenants';
count(//ns1:tenant)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/tenants';
count(//ns1:Response[1]/ns1:tenant[1]/ns1:name) >=1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>{"tenant":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestSuite#tenantName}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants by Id - xml"><con:settings/><con:config service="identity-admin" methodName="Get Tenants by ID - getTenantById" resourcePath="/${#Project#path}/tenants/{tenantId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants by Id - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>id="${#TestSuite#tenantId}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:tenant[1]/@id</path><content>${#TestSuite#tenantId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants by Id - json"><con:settings/><con:config service="identity-admin" methodName="Get Tenants by ID - getTenantById" resourcePath="/${#Project#path}/tenants/{tenantId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants by Id - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>"id":"${#TestSuite#tenantId}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/tenants/${#TestSuite#tenantId}';
//ns1:Response[1]/ns1:tenant[1]/ns1:id</path><content>${#TestSuite#tenantId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/tenants/${#TestSuite#tenantId}'
count(//ns1:Response[1]/ns1:tenant[1]/ns1:id[1]) >=1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>{"tenant":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants- limit - xml" disabled="true"><con:settings/><con:config service="identity-admin" methodName="Get Tenants - listTenants" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants- limit - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - tenants - xml - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns2='http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0';
declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:tenant)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="limit" value="${#TestCase#limit}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants- limit - json" disabled="true"><con:settings/><con:config service="identity-admin" methodName="Get Tenants - listTenants" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants- limit - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - tenants - xml - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#endpointjson}/${#Project#path}/tenants';
count(//ns1:created)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="limit" value="${#TestCase#limit}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants - limit&amp;marker - xml" disabled="true"><con:settings/><con:config service="identity-admin" methodName="Get Tenants - listTenants" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants - limit&amp;marker - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - tenants - xml - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns2='http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0';
declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:tenant)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="limit" value="${#TestCase#limit}"/>
  <con:entry key="marker" value="${#TestCase#marker}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants- limit&amp;marker - json" disabled="true"><con:settings/><con:config service="identity-admin" methodName="Get Tenants - listTenants" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants- limit&amp;marker - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - tenants - xml - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#endpointjson}/${#Project#path}/tenants';
count(//ns1:created)</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="limit" value="${#TestCase#limit}"/>
  <con:entry key="marker" value="${#TestCase#marker}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants - wrong X-Auth-Token - xml"><con:settings/><con:config service="identity-admin" methodName="Get Tenants - listTenants" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants - wrong X-Auth-Token - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401
log.info "GET - tenants - Wrong X-Auth-Token - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains"><con:configuration><token>tenant </token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>tenants</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1" disabled="true"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="qwer" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants - wrong X-Auth-Token - json"><con:settings/><con:config service="identity-admin" methodName="Get Tenants - listTenants" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants - wrong X-Auth-Token - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401
log.info "GET - tenants - Wrong X-Auth-Token - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains"><con:configuration><token>tenant </token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" disabled="true"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/tenants';
count(//ns1:Response[1]/ns1:tenants[1])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>{"tenants":</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1" disabled="true"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 2" disabled="true"><con:configuration><token>tenants</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="qwer" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants by Name - badname 404 - xml"><con:settings/><con:config service="identity-admin" methodName="Get tenants by name - getTenantByName" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants by Name - badname 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>Tenant with id/name: 'badname' was not found</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>Tenant with id/name: 'badname' was not found.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:itemNotFound[1]/ns1:message[1]</path><content>Tenant with id/name: 'badname' was not found.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="badname"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants by Name - badname 404 - json"><con:settings/><con:config service="identity-admin" methodName="Get tenants by name - getTenantByName" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants by Name - badname 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Tenant with id/name: 'badname' was not found</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/tenants';
//ns1:Fault[1]/ns1:itemNotFound[1]/ns1:code[1]</path><content>404</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>{"itemNotFound":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/tenants';
count(//ns1:Fault[1]/ns1:itemNotFound[1]/ns1:code[1])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="badname"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants by Id - badId - xml"><con:settings/><con:config service="identity-admin" methodName="Get Tenants by ID - getTenantById" resourcePath="/${#Project#path}/tenants/{tenantId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants by Id - badId - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Tenant with id/name: '1212121' was not found.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:itemNotFound[1]/@code</path><content>404</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="1212121"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants by Id - badId - json"><con:settings/><con:config service="identity-admin" methodName="Get Tenants by ID - getTenantById" resourcePath="/${#Project#path}/tenants/{tenantId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants by Id - badId - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Tenant with id/name: '121212' was not found.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/tenants/121212';
//ns1:Fault[1]/ns1:itemNotFound[1]/ns1:code[1]</path><content>404</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>{"itemNotFound":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants- limit - zero - xml" disabled="true"><con:settings/><con:config service="identity-admin" methodName="Get Tenants - listTenants" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants- limit - zero - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - tenants - xml - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns2='http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0';
declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:tenant)</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="limit" value="0"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants- limit - zero - json" disabled="true"><con:settings/><con:config service="identity-admin" methodName="Get Tenants - listTenants" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants- limit - zero - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - tenants - xml - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#endpointjson}/${#Project#path}/tenants';
count(//ns1:created)</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="limit" value="0"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants - limit&amp;marker - out of range - xml" disabled="true"><con:settings/><con:config service="identity-admin" methodName="Get Tenants - listTenants" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants - limit&amp;marker - out of range - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - tenants - xml - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns2='http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0';
declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:tenant)</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="limit" value="${#TestCase#limit}"/>
  <con:entry key="marker" value="3"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants - limit&amp;marker - out of range - json" disabled="true"><con:settings/><con:config service="identity-admin" methodName="Get Tenants - listTenants" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants - limit&amp;marker - out of range - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - tenants - xml - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#endpointjson}/${#Project#path}/tenants';
count(//ns1:created)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="limit" value="${#TestSuite#limit}"/>
  <con:entry key="marker" value="3"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants - badLimit - xml" disabled="true"><con:settings/><con:config service="identity-admin" methodName="Get Tenants - listTenants" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants - badLimit - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - tenants - xml - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>tenants</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="limit" value="qw"/>
  <con:entry key="marker" value="${#TestCase#marker}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants - badLimit - json" disabled="true"><con:settings/><con:config service="identity-admin" methodName="Get Tenants - listTenants" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants - badLimit - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - tenants - xml - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>tenants</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="limit" value="qw"/>
  <con:entry key="marker" value="${#TestCase#marker}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants - non Admin token - xml"><con:settings/><con:config service="identity-admin" methodName="Get Tenants - listTenants" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants - non Admin token - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - tenants - Wrong X-Auth-Token - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>tenants </token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:tenants[1]/ns1:tenant) >=0</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants - non Admin token - json"><con:settings/><con:config service="identity-admin" methodName="Get Tenants - listTenants" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants - non Admin token - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - tenants - Wrong X-Auth-Token - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"tenants":[</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/tenants';
count(//ns1:Response[1]/ns1:tenants[1])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>limit</con:name><con:value>1</con:value></con:property><con:property><con:name>marker</con:name><con:value>1</con:value></con:property><con:property><con:name>addApikeyCredentialsResponse-xml</con:name><con:value>&lt;apiKeyCredentials username="${#TestSuite#username2}" apiKey="${#TestSuite#apiKey2}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/></con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="tokens" searchProperties="true" id="d4f7f665-0d1c-4b6d-a0a5-d1cfd3f08c4a" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="POST - token - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#password}" username="${#TestSuite#username}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>token</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access/ns1:token/@id)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="transfer request"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>body-json</con:name><con:sourceType>request1</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - token - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" transferChildNodes="false" useXQuery="false" ignoreEmpty="false"><con:name>bodyAuthjson</con:name><con:sourceType>requestjson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - token - w/ token Id - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false"><con:name>body1xml</con:name><con:sourceType>request1xml</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - token - apiKey -  xml</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body1json</con:name><con:sourceType>tokenApiKeyjson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - token - apiKey -  json</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - json"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="RecordRequestRepresentations">true</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@remove_empty_content">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "auth":{ "passwordCredentials":{ "username":"${#TestSuite#username}", "password":"${#TestSuite#password}" } } }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"access":{"token":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/tokens';
count(//ns1:Response[1]/ns1:access[1]/ns1:serviceCatalog) >=1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/tokens';
count(//ns1:Response[1]/ns1:access[1]/ns1:token) >=1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1" disabled="true"><con:configuration><token>"endpoints":[{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 2"><con:configuration><token>"roles":[{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 3"><con:configuration><token>"serviceCatalog"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains"><con:configuration><token>"version":</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:attachment><con:name>POST-token-json</con:name><con:contentType>application/octet-stream</con:contentType><con:size>113</con:size><con:contentId>POST-token-json</con:contentId><con:data>UEsDBBQACAAIADVaPT8AAAAAAAAAAAAAAAAPAAAAUE9TVC10b2tlbi1qc29uq+ZSSiwtyVCyquZSKkgsLi7PL0pxLkpNSc0ryUzMKQaLlxanFuUl5qYqWSmpVCuHpBaXBJdmlqQqw8RrlXQQmtEVwcRrlbhqQRAAUEsHCGdWAupLAAAAcQAAAFBLAQIUABQACAAIADVaPT9nVgLqSwAAAHEAAAAPAAAAAAAAAAAAAAAAAAAAAABQT1NULXRva2VuLWpzb25QSwUGAAAAAAEAAQA9AAAAiAAAAAAA</con:data></con:attachment><con:attachment><con:name>POST-token-json</con:name><con:contentType>application/octet-stream</con:contentType><con:size>113</con:size><con:contentId>POST-token-json</con:contentId><con:data>UEsDBBQACAAIAEFaPT8AAAAAAAAAAAAAAAAPAAAAUE9TVC10b2tlbi1qc29uq+ZSSiwtyVCyquZSKkgsLi7PL0pxLkpNSc0ryUzMKQaLlxanFuUl5qYqWSmpVCuHpBaXBJdmlqQqw8RrlXQQmtEVwcRrlbhqQRAAUEsHCGdWAupLAAAAcQAAAFBLAQIUABQACAAIAEFaPT9nVgLqSwAAAHEAAAAPAAAAAAAAAAAAAAAAAAAAAABQT1NULXRva2VuLWpzb25QSwUGAAAAAAEAAQA9AAAAiAAAAAAA</con:data></con:attachment><con:attachment><con:name>POST-token-json.xml</con:name><con:contentType>text/xml</con:contentType><con:size>113</con:size><con:contentId>POST-token-json.xml</con:contentId><con:data>UEsDBBQACAAIAEtaPT8AAAAAAAAAAAAAAAATAAAAUE9TVC10b2tlbi1qc29uLnhtbKvmUkosLclQsqrmUipILC4uzy9KcS5KTUnNK8lMzCkGi5cWpxblJeamKlkpqVQrh6QWlwSXZpakKsPEa5V0EJrRFcHEa5W4akEQAFBLBwhnVgLqSwAAAHEAAABQSwECFAAUAAgACABLWj0/Z1YC6ksAAABxAAAAEwAAAAAAAAAAAAAAAAAAAAAAUE9TVC10b2tlbi1qc29uLnhtbFBLBQYAAAAAAQABAEEAAACMAAAAAAA=</con:data></con:attachment><con:attachment><con:name>POST-token-json</con:name><con:contentType>application/octet-stream</con:contentType><con:size>113</con:size><con:contentId>POST-token-json</con:contentId><con:data>UEsDBBQACAAIANpdPT8AAAAAAAAAAAAAAAAPAAAAUE9TVC10b2tlbi1qc29uq+ZSSiwtyVCyquZSKkgsLi7PL0pxLkpNSc0ryUzMKQaLlxanFuUl5qYqWSmpVCuHpBaXBJdmlqQqw8RrlXQQmtEVwcRrlbhqQRAAUEsHCGdWAupLAAAAcQAAAFBLAQIUABQACAAIANpdPT9nVgLqSwAAAHEAAAAPAAAAAAAAAAAAAAAAAAAAAABQT1NULXRva2VuLWpzb25QSwUGAAAAAAEAAQA9AAAAiAAAAAAA</con:data></con:attachment><con:attachment><con:name>POST-token-json.xml</con:name><con:contentType>text/xml</con:contentType><con:size>113</con:size><con:contentId>POST-token-json.xml</con:contentId><con:data>UEsDBBQACAAIAEZfPT8AAAAAAAAAAAAAAAATAAAAUE9TVC10b2tlbi1qc29uLnhtbKvmUkosLclQsqrmUipILC4uzy9KcS5KTUnNK8lMzCkGi5cWpxblJeamKlkpqVQrh6QWlwSXZpakKsPEa5V0EJrRFcHEa5W4akEQAFBLBwhnVgLqSwAAAHEAAABQSwECFAAUAAgACABGXz0/Z1YC6ksAAABxAAAAEwAAAAAAAAAAAAAAAAAAAAAAUE9TVC10b2tlbi1qc29uLnhtbFBLBQYAAAAAAQABAEEAAACMAAAAAAA=</con:data></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - apiKey -  xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - apiKey -  xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0"> &lt;apiKeyCredentials xmlns= "http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0" username="${#TestSuite#username2}" apiKey="${#TestSuite#apiKey2}" /> &lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token/><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token) >=1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - apiKey -  json"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - apiKey -  json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "auth":{ "RAX-KSKEY:apiKeyCredentials":{ "username":"${#TestSuite#username2}", "apiKey":"${#TestSuite#apiKey2}" } } }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"access":{"token":{"id":</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/tokens';
count(/ns1:Response[1]/ns1:access[1]/ns1:token) >=1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - w/ token Id - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - w/ token Id - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantName="${#TestSuite#tenantName}" xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;token id="${#TestSuite#tokenId2}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>token</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:token[1]/@id</path><content>${#TestSuite#tokenId2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:serviceCatalog[1]) >= 1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - w/ token Id - json"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - w/ token Id - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"auth": { "tenantName": "${#TestSuite#tenantName}", "token": { "id": "${#TestSuite#tokenId2}" } } } </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"access":{"token":{"id":</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/tokens';
count(//ns1:Response[1]/ns1:access)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/tokens';
//ns1:Response[1]/ns1:access[1]/ns1:token[1]/ns1:id</path><content>${#TestSuite#tokenId2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - validate - xml"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - validate - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>token</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>roles</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:token[1]/@id</path><content>${#TestSuite#tokenId2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - validate - json"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - validate - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"access":{"token":{"id":</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/tokens/${#TestSuite#tokenId2}';
count(//ns1:Response[1]/ns1:access[1]/ns1:token)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1" disabled="true"><con:configuration><path>declare namespace ns1='${#Project#Endpoint}/${#Project#Path}/tokens/${#TestSuite#tokenId}';
//ns1:Response[1]/ns1:access[1]/ns1:token[1]/ns1:id</path><content>${#TestSuite#tokenId}
</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - validate - belongsTo - xml"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - validate - belongsTo - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestSuite#tokenId2}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:token[1]/@id</path><content>${#TestSuite#tokenId2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="belongsTo" value="${#TestSuite#tenantId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - validate - belongsTo - json"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - validate - belongsTo - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestSuite#tokenId2}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>{"access":{"token":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/tokens/${#TestSuite#tokenId2}';
//ns1:Response[1]/ns1:access[1]/ns1:token[1]/ns1:id[1]</path><content>${#TestSuite#tokenId2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="belongsTo" value="${#TestSuite#tenantId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - check - xml"><con:settings/><con:config service="identity-admin" methodName="Check Token - checkToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - check - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - check - json"><con:settings/><con:config service="identity-admin" methodName="Check Token - checkToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - check - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="HEAD - tokenById - check - belongsTo - xml"><con:settings/><con:config service="identity-admin" methodName="Check Token - checkToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="HEAD - tokenById - check - belongsTo - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="belongsTo" value="${#TestSuite#tenantId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="HEAD - tokenById - check - belongsTo - json"><con:settings/><con:config service="identity-admin" methodName="Check Token - checkToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="HEAD - tokenById - check - belongsTo - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="belongsTo" value="${#TestSuite#tenantId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - listEndPointsForToken - xml"><con:settings/><con:config service="identity-admin" methodName="List Endoints for a Token - listEndpointsForToken" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - listEndPointsForToken - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>endpoint</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:endpoints[1]/ns1:endpoint) >= 1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - listEndPointsForToken - json"><con:settings/><con:config service="identity-admin" methodName="List Endoints for a Token - listEndpointsForToken" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - listEndPointsForToken - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"endpoints":[{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/tokens/${#TestSuite#tokenId2}/endpoints';
count(//ns1:Response[1]/ns1:endpoints) >=1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - listEndPointsForToken - belongsTo - xml" disabled="true"><con:settings/><con:config service="identity-admin" methodName="List Endoints for a Token - listEndpointsForToken" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - listEndPointsForToken - belongsTo - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>endpoint id="</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="belongsTo" value="${#TestSuite#tenantId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - listEndPointsForToken - belongsTo - json" disabled="true"><con:settings/><con:config service="identity-admin" methodName="List Endoints for a Token - listEndpointsForToken" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - listEndPointsForToken - belongsTo - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>endpoint":[{"id":</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="belongsTo" value="${#TestSuite#tenantId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - bad user - 404 -xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - bad user - 404 -xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#password}" username="badUser"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404
</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User 'badUser' not found.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:itemNotFound[1]/@code</path><content>404</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="transfer bad request"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>body-json</con:name><con:sourceType>badrequest1</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - token - bad user - 404 - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>body-badpassword-json</con:name><con:sourceType>badrequest2</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - token - no password - 400 - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body2badpasswordjson</con:name><con:sourceType>request1badpassword</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - token - badpassword 401 - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body1nouserjson</con:name><con:sourceType>badrequest2nouser</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - token - no user- 400 - json</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - bad user - 404 - json"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - bad user - 404 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "auth":{ "passwordCredentials":{ "username":"badUser", "password":"${#TestSuite#password}" } } }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User 'badUser' not found.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/tokens';
//ns1:Fault[1]/ns1:itemNotFound[1]/ns1:code</path><content>404</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - badpassword 401 - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - badpassword 401 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="badpassword" username="${#TestSuite#username2}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Invalid username or password.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:unauthorized[1]/@code</path><content>401</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - badpassword 401 - json"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - badpassword 401 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "auth":{ "passwordCredentials":{ "username":"${#TestSuite#username2}", "password":"badpassword" } } }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Invalid username or password.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>Invalid username or password.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - no user- 400 - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - no user- 400 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="Password1"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400
log.info "POST - authentication - no user - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Expecting username</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:badRequest[1]/@code</path><content>400</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - no user- 400 - json"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - no user- 400 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "auth":{ "passwordCredentials":{ "password":"${#TestSuite#password}" } } }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400
log.info "POST - authentication - no user - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Expecting username</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - no password - 400 - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - no password - 400 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials username="cmarin1"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400
log.info "POST - authentication - no user - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Expecting password</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:badRequest[1]/@code</path><content>400</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - no password - 400 - json"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - no password - 400 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "auth":{ "passwordCredentials":{ "username":"${#TestSuite#username}" } } }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400
log.info "POST - authentication - no body - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Expecting password</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/tokens';
//ns1:Fault[1]/ns1:badRequest[1]/ns1:code</path><content>400</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - auth - no body - 400 - xml" disabled="true"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - auth - no body - 400 - xml" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:auth xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 405
log.info "POST - authentication - no body - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - validate - badId 404 - xml"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - validate - badId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Token not found</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:itemNotFound[1]/@code</path><content>404</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#badTokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - validate - badId 404 - json"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - validate - badId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Token not found</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/tokens/1010';
//ns1:Fault[1]/ns1:itemNotFound[1]/ns1:code[1]</path><content>404</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#badTokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - validate - badBelongsTo 404 - xml"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - validate - badBelongsTo 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Token doesn't belong to Tenant with Id/Name: '${#TestCase#badTenantId}'</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:itemNotFound[1]/@code</path><content>404</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="belongsTo" value="${#TestCase#badTenantId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - validate - badBelongsTo 404 - json"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - validate - badBelongsTo 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Token doesn't belong to Tenant with Id/Name: '${#TestCase#badTenantId}'</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/tokens/${#TestSuite#tokenId}';
//ns1:Fault[1]/ns1:itemNotFound[1]/ns1:code[1]</path><content>404</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="belongsTo" value="${#TestCase#badTenantId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - check - badId 404 - xml"><con:settings/><con:config service="identity-admin" methodName="Check Token - checkToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - check - badId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#badTokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - check - badId 404 - json"><con:settings/><con:config service="identity-admin" methodName="Check Token - checkToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - check - badId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#badTokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="HEAD - tokenById - check - badBelongsTo 404 - xml"><con:settings/><con:config service="identity-admin" methodName="Check Token - checkToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="HEAD - tokenById - check - badBelongsTo 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="belongsTo" value="${#TestCase#badTenantId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="HEAD - tokenById - check - badBelongsTo 404 - json"><con:settings/><con:config service="identity-admin" methodName="Check Token - checkToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="HEAD - tokenById - check - badBelongsTo 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="belongsTo" value="${#TestCase#badTenantId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - listEndPointsForToken - badId 404 - xml"><con:settings/><con:config service="identity-admin" methodName="List Endoints for a Token - listEndpointsForToken" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - listEndPointsForToken - badId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Token not found.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:itemNotFound[1]/@code</path><content>404</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#badTokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - listEndPointsForToken - badId 404 - json"><con:settings/><con:config service="identity-admin" methodName="List Endoints for a Token - listEndpointsForToken" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - listEndPointsForToken - badId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Token not found</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#badTokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - listEndPointsForToken - badBelongsTo 200 - xml"><con:settings/><con:config service="identity-admin" methodName="List Endoints for a Token - listEndpointsForToken" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - listEndPointsForToken - badBelongsTo 200 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token/><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="belongsTo" value="${#TestCase#badTenantId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - listEndPointsForToken - badBelongsTo 200 - json"><con:settings/><con:config service="identity-admin" methodName="List Endoints for a Token - listEndpointsForToken" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - listEndPointsForToken - badBelongsTo 200 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"endpoints":</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="belongsTo" value="${#TestCase#badTenantId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - validate - badAuthToken 401 - xml"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - validate - badAuthToken 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#badAuthToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - validate - badAuthToken 401 - json"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - validate - badAuthToken 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#badAuthToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="HEAD - tokenById - check - badAuthToken 401- xml"><con:settings/><con:config service="identity-admin" methodName="Check Token - checkToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="HEAD - tokenById - check - badAuthToken 401- xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#badAuthToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="HEAD - tokenById - check - badAuthToken 401- json"><con:settings/><con:config service="identity-admin" methodName="Check Token - checkToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="HEAD - tokenById - check - badAuthToken 401- json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#badAuthToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - listEndPointsForToken badAuthToken 401 - xml"><con:settings/><con:config service="identity-admin" methodName="List Endoints for a Token - listEndpointsForToken" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - listEndPointsForToken badAuthToken 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#badAuthToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - listEndPointsForToken badAuthToken 401 - json"><con:settings/><con:config service="identity-admin" methodName="List Endoints for a Token - listEndpointsForToken" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - listEndPointsForToken badAuthToken 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#badAuthToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - validate - not Admin 403 - xml"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - validate - not Admin 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Access is denied</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - validate - not Admin 403 - json"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - validate - not Admin 403 - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Access is denied</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - check - non Admin 403 - xml"><con:settings/><con:config service="identity-admin" methodName="Check Token - checkToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - check - non Admin 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - check - non Admin 403 - json"><con:settings/><con:config service="identity-admin" methodName="Check Token - checkToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - check - non Admin 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - listEndPointsForToken - non Admin 403 - xml"><con:settings/><con:config service="identity-admin" methodName="List Endoints for a Token - listEndpointsForToken" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - listEndPointsForToken - non Admin 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Access is denied</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - listEndPointsForToken - non Admin 403 - json"><con:settings/><con:config service="identity-admin" methodName="List Endoints for a Token - listEndpointsForToken" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - listEndPointsForToken - non Admin 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Access is denied</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>badTokenId</con:name><con:value>1010</con:value></con:property><con:property><con:name>badTenantId</con:name><con:value>1212</con:value></con:property><con:property><con:name>badAuthToken</con:name><con:value>badToken</con:value></con:property><con:property><con:name>validEndpoints</con:name><con:value>187011</con:value></con:property><con:property><con:name>request1</con:name><con:value>{ "auth":{ "passwordCredentials":{ "username":"${#TestSuite#username}", "password":"${#TestSuite#password}" } } }</con:value></con:property><con:property><con:name>badrequest1</con:name><con:value>{ "auth":{ "passwordCredentials":{ "username":"badUser", "password":"${#TestSuite#password}" } } }</con:value></con:property><con:property><con:name>badrequest2</con:name><con:value>{ "auth":{ "passwordCredentials":{ "username":"${#TestSuite#username}" } } }</con:value></con:property><con:property><con:name>requestjson</con:name><con:value>{"auth": { "tenantName": "${#TestSuite#tenantName}", "token": { "id": "${#TestSuite#tokenId2}" } } } </con:value></con:property><con:property><con:name>request1badpassword</con:name><con:value>{ "auth":{ "passwordCredentials":{ "username":"${#TestSuite#username2}", "password":"badpassword" } } }</con:value></con:property><con:property><con:name>request1baduserjson</con:name><con:value>{ "auth":{ "passwordCredentials":{ "username":"baduser", "password":"${#TestSuite#password}" } } }</con:value></con:property><con:property><con:name>badrequest2nouser</con:name><con:value>{ "auth":{ "passwordCredentials":{ "password":"${#TestSuite#password}" } } }</con:value></con:property><con:property><con:name>request1xml</con:name><con:value>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0"> &lt;apiKeyCredentials xmlns= "http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0" username="${#TestSuite#username2}" apiKey="${#TestSuite#apiKey2}" /> &lt;/auth></con:value></con:property><con:property><con:name>tokenApiKeyjson</con:name><con:value>{ "auth":{ "RAX-KSKEY:apiKeyCredentials":{ "username":"${#TestSuite#username2}", "apiKey":"${#TestSuite#apiKey2}" } } }</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="users" searchProperties="true" id="73f0da31-d190-4dbb-ab19-ab87fbc0ec28" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="GET - userByName- xml"><con:settings/><con:config service="identity-admin" methodName="Get a User by Name - getUserByName" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userByName- xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - userByName - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="UserId"><con:configuration><token>id="${#TestSuite#userId}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="UserName"><con:configuration><token> username="${#TestSuite#username}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:user[1]) >=1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestSuite#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userByName- json"><con:settings/><con:config service="identity-admin" methodName="Get a User by Name - getUserByName" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userByName- json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - userByName - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="UserId"><con:configuration><token>"id":"${#TestSuite#userId}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="username"><con:configuration><token>"username":"${#TestSuite#username}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 2"><con:configuration><token>{"user":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/users';
count(//ns1:Response[1]/ns1:user[1]/ns1:username)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestSuite#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userById - xml"><con:settings/><con:config service="identity-admin" methodName="Get a User by ID - getUserById" resourcePath="/${#Project#path}/users/{user_id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userById - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - userById - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>id="${#TestSuite#userId}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>username="${#TestSuite#username}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:user[1]/@id)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userById - json"><con:settings/><con:config service="identity-admin" methodName="Get a User by ID - getUserById" resourcePath="/${#Project#path}/users/{user_id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userById - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - userById - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>"id":"${#TestSuite#userId}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="username"><con:configuration><token>"username":"${#TestSuite#username}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 2"><con:configuration><token>{"user":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/users/${#TestSuite#userId}';
count(//ns1:Response[1]/ns1:user[1]/ns1:id)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userById - roles - xml"><con:settings/><con:config service="identity-admin" methodName="List User Global Roles - listUserGlobalRoles" resourcePath="/${#Project#path}/users/{user_id}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userById - roles - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - userById - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>id="identity:default"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token> name="identity:admin"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:roles)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:roles[1]/ns1:role) >=1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:roles/ns1:role/@id) >= 1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userById - roles - json"><con:settings/><con:config service="identity-admin" methodName="List User Global Roles - listUserGlobalRoles" resourcePath="/${#Project#path}/users/{user_id}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userById - roles - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - userById - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token/><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>"name":"identity:admin"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 2"><con:configuration><token>{"roles":[{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/users/${#TestSuite#userId}/roles';
count(//ns1:Response[1]/ns1:roles[1]/ns1:e/ns1:id) >=1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/users/${#TestSuite#userId}/roles';
count(//ns1:Response[1]/ns1:roles[1]/ns1:e[1]/ns1:id[1])</path><content>${GET - userById - roles - json#ResponseAsXml#declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/users/${#TestSuite#userId}/roles'; //ns1:Response[1]/ns1:roles[1]/ns1:e[1]/ns1:id[1]}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userById - tenant roles  - xml"><con:settings/><con:config service="identity-admin" methodName="List Roles for User on Tenant - listRolesForUserOnTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{user_id}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userById - tenant roles  - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token> tenantId="${#TestSuite#tenantId}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="user_id" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userById - tenant roles - json"><con:settings/><con:config service="identity-admin" methodName="List Roles for User on Tenant - listRolesForUserOnTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{user_id}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userById - tenant roles - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>"tenantId":"${#TestSuite#tenantId}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="user_id" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userByName - bad name 404 - xml"><con:settings/><con:config service="identity-admin" methodName="Get a User by Name - getUserByName" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userByName - bad name 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User not found: '${#TestCase#badname}'</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:itemNotFound[1]/@code</path><content>404</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestCase#badname}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userByName - bad name 404 - json"><con:settings/><con:config service="identity-admin" methodName="Get a User by Name - getUserByName" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userByName - bad name 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User not found: '${#TestCase#badname}'</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/users';
//ns1:Fault[1]/ns1:itemNotFound[1]/ns1:code</path><content>404</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestCase#badname}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userByName - badAuthToken 401 - xml"><con:settings/><con:config service="identity-admin" methodName="Get a User by Name - getUserByName" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userByName - badAuthToken 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:unauthorized[1]/@code</path><content>401</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestSuite#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#badAuthToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userByName - badAuthToken 401 - json"><con:settings/><con:config service="identity-admin" methodName="Get a User by Name - getUserByName" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userByName - badAuthToken 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/users';
//ns1:Fault[1]/ns1:unauthorized[1]/ns1:code</path><content>401</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestSuite#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#badAuthToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userById - badId 404 - xml"><con:settings/><con:config service="identity-admin" methodName="Get a User by ID - getUserById" resourcePath="/${#Project#path}/users/{user_id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userById - badId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404
</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User with id: '${#TestCase#badId}' was not found</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:itemNotFound[1]/@code</path><content>404</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestCase#badId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userById - badId 404 - json"><con:settings/><con:config service="identity-admin" methodName="Get a User by ID - getUserById" resourcePath="/${#Project#path}/users/{user_id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userById - badId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404
</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User with id: '${#TestCase#badId}' was not found</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/users/${#TestCase#badId}';
//ns1:Fault[1]/ns1:itemNotFound[1]/ns1:code</path><content>404</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestCase#badId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userById - badAuthToken 401 - xml"><con:settings/><con:config service="identity-admin" methodName="Get a User by ID - getUserById" resourcePath="/${#Project#path}/users/{user_id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userById - badAuthToken 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:unauthorized[1]/@code</path><content>401</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#badAuthToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userById - badAuthToken 401 - json"><con:settings/><con:config service="identity-admin" methodName="Get a User by ID - getUserById" resourcePath="/${#Project#path}/users/{user_id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userById - badAuthToken 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/users/${#TestSuite#userId}';
//ns1:Fault[1]/ns1:unauthorized[1]/ns1:code</path><content>401</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#badAuthToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userById - roles - badId 404 - xml"><con:settings/><con:config service="identity-admin" methodName="List User Global Roles - listUserGlobalRoles" resourcePath="/${#Project#path}/users/{user_id}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userById - roles - badId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404
</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No Roles found User with id: ${#TestCase#badId}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:itemNotFound[1]/@code</path><content>404</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestCase#badId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userById - roles - badId 404 - json"><con:settings/><con:config service="identity-admin" methodName="List User Global Roles - listUserGlobalRoles" resourcePath="/${#Project#path}/users/{user_id}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userById - roles - badId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404
</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No Roles found User with id: ${#TestCase#badId}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/users/${#TestCase#badId}/roles';
//ns1:Fault[1]/ns1:itemNotFound[1]/ns1:code</path><content>404</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestCase#badId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userById - roles - badAuthToken 401 - xml"><con:settings/><con:config service="identity-admin" methodName="List User Global Roles - listUserGlobalRoles" resourcePath="/${#Project#path}/users/{user_id}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userById - roles - badAuthToken 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401
</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:unauthorized[1]/@code</path><content>401</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#badAuthToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userById - roles - badAuthToken 401 - json"><con:settings/><con:config service="identity-admin" methodName="List User Global Roles - listUserGlobalRoles" resourcePath="/${#Project#path}/users/{user_id}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userById - roles - badAuthToken 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401
</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/users/${#TestSuite#userId}/roles';
//ns1:Fault[1]/ns1:unauthorized[1]/ns1:code</path><content>401</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#badAuthToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userByName - non Admin 403 - xml"><con:settings/><con:config service="identity-admin" methodName="Get a User by Name - getUserByName" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userByName - non Admin 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403
</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Access is denied</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestSuite#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userByName - non Admin 403 - json"><con:settings/><con:config service="identity-admin" methodName="Get a User by Name - getUserByName" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userByName - non Admin 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403
</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Access is denied</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestSuite#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userById - non Admin 403 - xml"><con:settings/><con:config service="identity-admin" methodName="Get a User by ID - getUserById" resourcePath="/${#Project#path}/users/{user_id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userById - non Admin 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Access is denied</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userById - non Admin 403 - json"><con:settings/><con:config service="identity-admin" methodName="Get a User by ID - getUserById" resourcePath="/${#Project#path}/users/{user_id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userById - non Admin 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Access is denied</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userById - roles - non Admin 403 - xml"><con:settings/><con:config service="identity-admin" methodName="List User Global Roles - listUserGlobalRoles" resourcePath="/${#Project#path}/users/{user_id}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userById - roles - non Admin 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403
log.info "GET - userById - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userById - roles - non Admin 403 - json"><con:settings/><con:config service="identity-admin" methodName="List User Global Roles - listUserGlobalRoles" resourcePath="/${#Project#path}/users/{user_id}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userById - roles - non Admin 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403
log.info "GET - userById - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userById - tenant roles - non Admin - xml"><con:settings/><con:config service="identity-admin" methodName="List Roles for User on Tenant - listRolesForUserOnTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{user_id}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userById - tenant roles - non Admin - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="user_id" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userById - tenant roles - non Admin - json"><con:settings/><con:config service="identity-admin" methodName="List Roles for User on Tenant - listRolesForUserOnTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{user_id}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userById - tenant roles - non Admin - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="user_id" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>badname</con:name><con:value>badname</con:value></con:property><con:property><con:name>badAuthToken</con:name><con:value>badToken</con:value></con:property><con:property><con:name>badId</con:name><con:value>11111111</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="extensions" searchProperties="true" id="97e31d54-9873-4958-9a99-773f4879aebd" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="GET - listExtension - xml"><con:settings/><con:config service="identity-admin" methodName="List Extensions - listExtensions" resourcePath="/${#Project#path}/extensions" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listExtension - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>RAX-KSKEY</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>RAX-KSGRP</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 2"><con:configuration><token>OS-KSADM</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 3"><con:configuration><token>OS-KSCATALOG-admin</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 4"><con:configuration><token>RAX-KSQA</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns4='http://docs.openstack.org/common/api/v1.0';
count(//ns4:extensions[1]/ns4:extension) >=1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns4='http://docs.openstack.org/common/api/v1.0';
count(//ns4:extensions)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listExtension - json"><con:settings/><con:config service="identity-admin" methodName="List Extensions - listExtensions" resourcePath="/${#Project#path}/extensions" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listExtension - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/extensions';
count(//ns1:Response[1]/ns1:extensions)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"extensions":[{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script"><con:settings/><con:config><script>def extAlias = context.expand( '${GET - listExtension - xml#Response#declare namespace ns3=\'http://docs.openstack.org/common/api/v1.0\'; //ns3:extensions[1]/ns3:extension[1]/@alias}' )
log.info "extAlias: " + extAlias

if (extAlias == "" | extAlias == null)
{
	assert false;	
}
testRunner.testCase.testSuite.setPropertyValue("extAlias", extAlias)
</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - extension - xml"><con:settings/><con:config service="identity-admin" methodName="Get Extension Details - getExtension" resourcePath="/${#Project#path}/extensions/{alias}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - extension - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestSuite#extAlias}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns4='http://docs.openstack.org/common/api/v1.0';
count(//ns4:extension) >=1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="alias" value="${#TestSuite#extAlias}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - extension - json"><con:settings/><con:config service="identity-admin" methodName="Get Extension Details - getExtension" resourcePath="/${#Project#path}/extensions/{alias}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - extension - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestSuite#extAlias}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/extensions/RAX-KSKEY';
count(//ns1:Response[1]/ns1:extension)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>{"extension":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 2"><con:configuration><token>"links":[{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="alias" value="${#TestSuite#extAlias}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - extension - badAlias 404 - xml"><con:settings/><con:config service="identity-admin" methodName="Get Extension Details - getExtension" resourcePath="/${#Project#path}/extensions/{alias}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - extension - badAlias 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Extension with alias '${#TestCase#badAlias}' is not available.</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:itemNotFound[1]/@code</path><content>404</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="alias" value="${#TestCase#badAlias}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - extension - badAlias 404 - json"><con:settings/><con:config service="identity-admin" methodName="Get Extension Details - getExtension" resourcePath="/${#Project#path}/extensions/{alias}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - extension - badAlias 404 - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:itemNotFound[1]/@code</path><content>404</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Extension with alias '${#TestCase#badAlias}' is not available.</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="alias" value="${#TestCase#badAlias}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>badAlias</con:name><con:value>badAlias</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:properties><con:property><con:name>username</con:name><con:value>auth</con:value></con:property><con:property><con:name>password</con:name><con:value>Auth1234</con:value></con:property><con:property><con:name>tokenId</con:name><con:value>172e164a-f17c-4965-80f3-d8ba5ac90c-A</con:value></con:property><con:property><con:name>userId</con:name><con:value>153345</con:value></con:property><con:property><con:name>tenantId</con:name><con:value>CloudFiles_as2d121-212asdf-asdf</con:value></con:property><con:property><con:name>tenantName</con:name><con:value>CloudFiles_as2d121-212asdf-asdf</con:value></con:property><con:property><con:name>extAlias</con:name><con:value>RAX-KSKEY</con:value></con:property><con:property><con:name>username2</con:name><con:value>jmunoz</con:value></con:property><con:property><con:name>tokenId2</con:name><con:value>27aaaf5eb1a3446f997aee3688103ce5</con:value></con:property><con:property><con:name>userId2</con:name><con:value>3</con:value></con:property><con:property><con:name>apiKey</con:name><con:value>0f97f489c848438090250d50c7e1ea88</con:value></con:property><con:property><con:name>password2</con:name><con:value>Password1</con:value></con:property><con:property><con:name>apiKey2</con:name><con:value>1234567890</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="Functional - RAX-KSKEY-admin"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="users" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="5f5fd375-6e9d-4efb-baa4-377209747c5a"><con:settings/><con:testStep type="restrequest" name="POST - token - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#password}" username="${#TestSuite#username}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1])>=1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>&lt;token id="${#TestSuite#tokenId}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token info"><con:settings/><con:config><script>def tokenId = context.expand( '${POST - token - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info "get TokenId: " + tokenId
def userId = context.expand( '${POST - token - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/@id}' )
log.info "get UserId: " + userId

if (tokenId == "" | userId == "")
{
	assert false;	
}
testRunner.testCase.testSuite.setPropertyValue("tokenId", tokenId)
testRunner.testCase.testSuite.setPropertyValue("userId", userId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - testToken - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - testToken - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0">
&lt;apiKeyCredentials apiKey="${#TestSuite#apiKey2}" username="${#TestSuite#testuser}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:user[1]/@name</path><content>${#TestSuite#testuser}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>&lt;token id="</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store testToken info"><con:settings/><con:config><script>def testTokenId = context.expand( '${POST - testToken - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info "get testTokenId: " + testTokenId
def testUserId = context.expand( '${POST - testToken - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/@id}' )
log.info "get testUserId: " + testUserId

if (testTokenId == "" | testUserId == "")
{
	assert false;	
}
testRunner.testCase.testSuite.setPropertyValue("testTokenId", testTokenId)
testRunner.testCase.testSuite.setPropertyValue("testUserId", testUserId)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - userCredentials - xml"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Get user Credentials - getUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userCredentials - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>apiKeyCredentials</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token> username="${#TestSuite#testuser}" </token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns2='http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0';
//ns2:apiKeyCredentials[1]/@username</path><content>${#TestSuite#testuser}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store  apikey"><con:settings/><con:config><script>def apiKey = context.expand( '${GET - userCredentials - xml#ResponseAsXml#declare namespace ns1=\'http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0\'; //ns1:apiKeyCredentials[1]/@apiKey}' )
log.info "get apiKey: " + apiKey

if (apiKey == "")
{
	assert false;	
}
testRunner.testCase.testSuite.setPropertyValue("apiKey", apiKey)
</script></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>body</con:name><con:sourceType>response</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - updateUserCredentials - xml</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>body2</con:name><con:sourceType>response2</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - updateUserCredentials - restore apiKey- xml</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body1badUser</con:name><con:sourceType>request1badUser</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - updateUserCredentials - baduser 404 - xml</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body1nonAdminxml</con:name><con:sourceType>response</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - updateUserCredentials - non Admin 403 - xml</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body2badIdxml</con:name><con:sourceType>request1badUser</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addUserCredentials - badId - xml</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>body</con:name><con:sourceType>responseJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - updateUserCredentials - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body2</con:name><con:sourceType>response2Json</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - updateUserCredentials - restore apiKey - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body3</con:name><con:sourceType>response2</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - updateUserCredentials - restore apiKey - xml</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>requestBody</con:name><con:sourceType>request1</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addUserCredentials - xml</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>requestBodyJson</con:name><con:sourceType>request1json</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addUserCredentials - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>credentialsDoNotExist</con:name><con:sourceType>response</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - updateUserCredentials - credentialsDoNot exist - xml</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body1baduserjson</con:name><con:sourceType>request1baduserjson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - updateUserCredentials - baduser 404 - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body1nonAdminjson</con:name><con:sourceType>response2Json</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - updateUserCredentials - non Admin 403 - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body2nonAdminxml</con:name><con:sourceType>request1</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addUserCredentials - non Admin 403 - xml</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body3nonadminjson</con:name><con:sourceType>request1json</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addUserCredentials - non Admin 403 - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>body2badidjson</con:name><con:sourceType>request1json</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addUserCredentials - badId - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>body4</con:name><con:sourceType>request1</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addUserCredentials - 409 - xml</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GET - userCredentials - json"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Get user Credentials - getUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userCredentials - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;apiKeyCredentials username="${#TestSuite#testuser}" apiKey="${#TestSuite#testApiKey}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"RAX-KSKEY:apiKeyCredentials":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>"username":"${#TestSuite#testuser}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 2"><con:configuration><token>"apiKey":"${#TestSuite#apiKey}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" disabled="true"><con:configuration><path>declare ns1=</path><content/><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUserCredentials - xml"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Update user credential - updateUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUserCredentials - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;apiKeyCredentials username="${#TestSuite#testuser}" apiKey="${#TestSuite#testApiKey}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns2='http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0';
//ns2:apiKeyCredentials[1]/@username</path><content>${#TestSuite#testuser}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>apiKeyCredentials </token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUserCredentials - restore apiKey- xml"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Update user credential - updateUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUserCredentials - restore apiKey- xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;apiKeyCredentials username="${#TestSuite#testuser}" apiKey="${#TestSuite#apiKey2}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns2='http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0';
//ns2:apiKeyCredentials/@apiKey</path><content>${#TestSuite#apiKey}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>apiKeyCredentials</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username/><con:password/><con:domain/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUserCredentials - json"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Update user credential - updateUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUserCredentials - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "RAX-KSKEY:apiKeyCredentials":{ "username":"${#TestSuite#testuser}", "apiKey":"${#TestSuite#testApiKey}" } } </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>:apiKeyCredentials</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>{"RAX-KSKEY:apiKeyCredentials":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUserCredentials - restore apiKey - json"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Update user credential - updateUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUserCredentials - restore apiKey - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "RAX-KSKEY:apiKeyCredentials":{ "username":"${#TestSuite#testuser}", "apiKey":"${#TestSuite#apiKey2}" } } </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>:apiKeyCredentials</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>{"RAX-KSKEY:apiKeyCredentials":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username/><con:password/><con:domain/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - userCredentials - xml"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Delete user credential - deleteUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - userCredentials - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUserCredentials - xml"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Add user Credential. - addUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUserCredentials - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;apiKeyCredentials xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0" username="${#TestSuite#testuser}" apiKey="${#TestSuite#apiKey2}"/> </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>apiKey="${#TestSuite#apiKey}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 2"><con:configuration><token>username="${#TestSuite#testuser}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0';
count(//ns1:apiKeyCredentials)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>apiKeyCredentials</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUserCredentials - 409 - xml" disabled="true"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Add user Credential. - addUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUserCredentials - 409 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;apiKeyCredentials xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0" username="${#TestSuite#testuser}" apiKey="${#TestSuite#apiKey2}"/> </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 409</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - credentials - xml"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="List Credentials - listCredentials" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - credentials - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:credentials[1]/ns1:passwordCredentials[1]/@username</path><content>${#TestSuite#testUser}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns2='http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0';
//ns2:apiKeyCredentials[1]/@username</path><content>${#TestSuite#testUser}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>passwordCredentials</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - userCredentials - json"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Delete user credential - deleteUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - userCredentials - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUserCredentials - json"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Add user Credential. - addUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUserCredentials - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "RAX-KSKEY:apiKeyCredentials":{ "username":"${#TestSuite#testuser}", "apiKey":"${#TestSuite#apiKey2}" } } </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201
</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - credentials - json"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="List Credentials - listCredentials" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - credentials - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"passwordCredentials</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>{"credentials":[{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUserCredentials - credentialsDoNot exist - xml" disabled="true"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Update user credential - updateUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUserCredentials - credentialsDoNot exist - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;apiKeyCredentials username="${#TestSuite#testuser}" apiKey="${#TestSuite#testApiKey}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUserCredentials - restore apiKey - xml"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Update user credential - updateUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUserCredentials - restore apiKey - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;apiKeyCredentials username="${#TestSuite#testuser}" apiKey="${#TestSuite#apiKey2}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns2='http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0';
//ns2:apiKeyCredentials[1]/@username</path><content>${#TestSuite#testuser}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns2='http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0';
//ns2:apiKeyCredentials[1]/@apiKey</path><content>${#TestSuite#apiKey}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>apiKeyCredentials</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username/><con:password/><con:domain/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userCredentials - badUserId 404 - xml"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Get user Credentials - getUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userCredentials - badUserId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Credential type RAX-KSKEY:apiKeyCredentials was not found for User with Id: ${#TestSuite#testid}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:itemNotFound[1]/@code</path><content>404</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="1212120000"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userCredentials - badUserId 404 - json"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Get user Credentials - getUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userCredentials - badUserId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Credential type RAX-KSKEY:apiKeyCredentials was not found for User with Id: ${#TestSuite#testid}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="12121200000"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userCredentials - badAuthToken 401 - xml"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Get user Credentials - getUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userCredentials - badAuthToken 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:unauthorized[1]/@code</path><content>401</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="qwerty"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userCredentials - badAuthToken 401 - json"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Get user Credentials - getUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userCredentials - badAuthToken 401 - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';

//ns1:unauthorized[1]/@code</path><content>401</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="qwerty"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userCredentials - 403 - xml"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Get user Credentials - getUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userCredentials - 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Access is denied</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:forbidden[1]/@code</path><content>403</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#testTokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userCredentials - 403 - json"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Get user Credentials - getUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userCredentials - 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Access is denied</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/users/${#TestSuite#testUserId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials';
//ns1:Fault[1]/ns1:forbidden[1]/ns1:code</path><content>403</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#testTokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUserCredentials - baduser 404 - xml"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Update user credential - updateUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUserCredentials - baduser 404 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;apiKeyCredentials username="badUser" apiKey="${#TestSuite#testApiKey}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User: 'badUser' not found.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:itemNotFound[1]/@code</path><content>404</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="1000000001"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUserCredentials - baduser 404 - json"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Update user credential - updateUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUserCredentials - baduser 404 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "RAX-KSKEY:apiKeyCredentials":{ "username":"baduser", "apiKey":"11111111222222223333333333" } }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User: 'baduser' not found.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/users/1000000001/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials';
//ns1:Fault[1]/ns1:itemNotFound[1]/ns1:code</path><content>404</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="1000000001"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUserCredentials - non Admin 403 - xml"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Update user credential - updateUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUserCredentials - non Admin 403 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;apiKeyCredentials username="${#TestSuite#testuser}" apiKey="${#TestSuite#testApiKey}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Access is denied</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:forbidden[1]/@code</path><content>403</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#testTokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUserCredentials - non Admin 403 - json"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Update user credential - updateUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUserCredentials - non Admin 403 - json" mediaType="application/json" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "RAX-KSKEY:apiKeyCredentials":{ "username":"${#TestSuite#testuser}", "apiKey":"${#TestSuite#apiKey2}" } } </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Access is denied</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:forbidden[1]/@code</path><content>403</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#testTokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - userCredentials - badId - xml"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Delete user credential - deleteUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - userCredentials - badId - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User not found</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="1000000001"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - userCredentials - badId - json"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Delete user credential - deleteUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - userCredentials - badId - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User not found</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="1000000001"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - userCredentials - badAuthToken 401 - xml"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Delete user credential - deleteUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - userCredentials - badAuthToken 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:unauthorized[1]/@code</path><content>401</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - userCredentials - badAuthToken 401 - json"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Delete user credential - deleteUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - userCredentials - badAuthToken 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/users/${#TestSuite#testUserId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials';
//ns1:Fault[1]/ns1:unauthorized[1]/ns1:code</path><content>401</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - userCredentials - non Admin 403 - xml"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Delete user credential - deleteUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - userCredentials - non Admin 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Access is denied</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:forbidden[1]/@code</path><content>403</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#testTokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - userCredentials - non Admin 403 - json"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Delete user credential - deleteUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - userCredentials - non Admin 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Access is denied</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/users/${#TestSuite#testUserId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials';
//ns1:Fault[1]/ns1:forbidden[1]/ns1:code</path><content>403</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#testTokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUserCredentials - non Admin 403 - xml"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Add user Credential. - addUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUserCredentials - non Admin 403 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;apiKeyCredentials xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0" username="${#TestSuite#testuser}" apiKey="${#TestSuite#apiKey2}"/> </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Access is denied</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:forbidden[1]/@code</path><content>403</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#testTokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUserCredentials - non Admin 403 - json"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Add user Credential. - addUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUserCredentials - non Admin 403 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "RAX-KSKEY:apiKeyCredentials":{ "username":"${#TestSuite#testuser}", "apiKey":"${#TestSuite#apiKey2}" } } </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Access is denied</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/users/${#TestSuite#testUserId}/OS-KSADM/credentials';
//ns1:Fault[1]/ns1:forbidden[1]/ns1:code</path><content>403</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#testTokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUserCredentials - badId - xml"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Add user Credential. - addUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUserCredentials - badId - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;apiKeyCredentials username="badUser" apiKey="${#TestSuite#testApiKey}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" disabled="true"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:RAX-KSKEY:apiKeyCredentials)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="1000000001"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUserCredentials - badId - json"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Add user Credential. - addUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUserCredentials - badId - json" mediaType="application/json" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "RAX-KSKEY:apiKeyCredentials":{ "username":"${#TestSuite#testuser}", "apiKey":"${#TestSuite#apiKey2}" } } </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" disabled="true"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:RAX-KSKEY:apiKeyCredentials)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User not found</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="1000000001"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>response</con:name><con:value>&lt;apiKeyCredentials username="${#TestSuite#testuser}" apiKey="${#TestSuite#testApiKey}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/></con:value></con:property><con:property><con:name>response2</con:name><con:value>&lt;apiKeyCredentials username="${#TestSuite#testuser}" apiKey="${#TestSuite#apiKey2}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/></con:value></con:property><con:property><con:name>responseJson</con:name><con:value>{ "RAX-KSKEY:apiKeyCredentials":{ "username":"${#TestSuite#testuser}", "apiKey":"${#TestSuite#testApiKey}" } } </con:value></con:property><con:property><con:name>response2Json</con:name><con:value>{ "RAX-KSKEY:apiKeyCredentials":{ "username":"${#TestSuite#testuser}", "apiKey":"${#TestSuite#apiKey2}" } } </con:value></con:property><con:property><con:name>request1</con:name><con:value>&lt;apiKeyCredentials xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0" username="${#TestSuite#testuser}" apiKey="${#TestSuite#apiKey2}"/> </con:value></con:property><con:property><con:name>request1json</con:name><con:value>{ "RAX-KSKEY:apiKeyCredentials":{ "username":"${#TestSuite#testuser}", "apiKey":"${#TestSuite#apiKey2}" } } </con:value></con:property><con:property><con:name>request1badUser</con:name><con:value>&lt;apiKeyCredentials username="badUser" apiKey="${#TestSuite#testApiKey}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/></con:value></con:property><con:property><con:name>request1baduserjson</con:name><con:value>{ "RAX-KSKEY:apiKeyCredentials":{ "username":"baduser", "apiKey":"11111111222222223333333333" } }</con:value></con:property><con:property><con:name>response1badpasswordxml</con:name><con:value>&lt;apiKeyCredentials username="${#TestSuite#testuser}" apiKey="${#TestSuite#apiKey2}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/></con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:properties><con:property><con:name>username</con:name><con:value>auth</con:value></con:property><con:property><con:name>password</con:name><con:value>Auth1234</con:value></con:property><con:property><con:name>tokenId</con:name><con:value>172e164a-f17c-4965-80f3-d8ba5ac90c-A</con:value></con:property><con:property><con:name>userId</con:name><con:value>153345</con:value></con:property><con:property><con:name>testuser</con:name><con:value>jmunoz</con:value></con:property><con:property><con:name>testTokenId</con:name><con:value>ca236019992f4593ad64e7171a838ab5</con:value></con:property><con:property><con:name>testUserId</con:name><con:value>3</con:value></con:property><con:property><con:name>apiKey</con:name><con:value>1234567890</con:value></con:property><con:property><con:name>testApiKey</con:name><con:value>11111111222222223333333333</con:value></con:property><con:property><con:name>newUser</con:name><con:value>jmunoz1</con:value></con:property><con:property><con:name>password2</con:name><con:value>Password1</con:value></con:property><con:property><con:name>apiKey2</con:name><con:value>1234567890</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="Functional - RAX-KSGRP-admin"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="groups" searchProperties="true" id="0411142d-203b-4998-9d1b-2dd79cd20ef6" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="POST - token - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#password}" username="${#TestSuite#username}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:user[1]/@name</path><content>${#TestSuite#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>token</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token info"><con:settings/><con:config><script>def tokenId = context.expand( '${POST - token - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info "get TokenId: " + tokenId
def userId = context.expand( '${POST - token - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/@id}' )
log.info "get UserId: " + userId

if (tokenId == "" | userId == "")
{
	assert false;	
}
testRunner.testCase.testSuite.setPropertyValue("tokenId", tokenId)
testRunner.testCase.testSuite.setPropertyValue("userId", userId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - nonAdmin - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - nonAdmin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0">
&lt;apiKeyCredentials apiKey="${#TestSuite#apiKey}" username="${#TestSuite#username2}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:user[1]/@name</path><content>${#TestSuite#username2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>id="</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token info 2"><con:settings/><con:config><script>def tokenId = context.expand( '${POST - token - nonAdmin - xml#ResponseAsXml#declare namespace ns8=\'http://docs.openstack.org/identity/api/v2.0\'; //ns8:access[1]/ns8:token[1]/@id}' )
log.info "get TokenId: " + tokenId
def userId = context.expand( '${POST - token - nonAdmin - xml#ResponseAsXml#declare namespace ns8=\'http://docs.openstack.org/identity/api/v2.0\'; //ns8:access[1]/ns8:user[1]/@id}' )

log.info "get UserId: " + userId

if (tokenId == "" | userId == "")
{
	assert false;	
}
testRunner.testCase.testSuite.setPropertyValue("tokenId2", tokenId)
testRunner.testCase.testSuite.setPropertyValue("userId2", userId)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - xml"><con:settings/><con:config service="RAX-KSGRP-admin" methodName="List Groups for a User - listUserGroups" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>group id="</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns3='http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0';
count(//ns3:groups)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns3='http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0';
count(//ns3:groups[1]/ns3:group) >=1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - json"><con:settings/><con:config service="RAX-KSGRP-admin" methodName="List Groups for a User - listUserGroups" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"RAX-KSGRP:groups":[{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>{"RAX-KSGRP:groups":[{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - badUserId 404 - xml"><con:settings/><con:config service="RAX-KSGRP-admin" methodName="List Groups for a User - listUserGroups" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - badUserId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User with id: '1212121' was not found.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:itemNotFound[1]/@code</path><content>404</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="1212121"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups badUserId 404 - json"><con:settings/><con:config service="RAX-KSGRP-admin" methodName="List Groups for a User - listUserGroups" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups badUserId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User with id: '1212121' was not found.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/users/1212121/RAX-KSGRP';
//ns1:Fault[1]/ns1:itemNotFound[1]/ns1:code</path><content>404</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="1212121"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - badAuth 401 -  xml"><con:settings/><con:config service="RAX-KSGRP-admin" methodName="List Groups for a User - listUserGroups" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - badAuth 401 -  xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:unauthorized[1]/@code</path><content>401</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - badAuth 401 - json"><con:settings/><con:config service="RAX-KSGRP-admin" methodName="List Groups for a User - listUserGroups" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - badAuth 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/users/${#TestSuite#userId}/RAX-KSGRP';
//ns1:Fault[1]/ns1:unauthorized[1]/ns1:code</path><content>401</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - non Admin 403 - xml"><con:settings/><con:config service="RAX-KSGRP-admin" methodName="List Groups for a User - listUserGroups" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - non Admin 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Access is denied</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:forbidden[1]/@code</path><content>403</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - non Admin 403 - json"><con:settings/><con:config service="RAX-KSGRP-admin" methodName="List Groups for a User - listUserGroups" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - non Admin 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Access is denied</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/users/${#TestSuite#userId2}/RAX-KSGRP';
//ns1:Fault[1]/ns1:forbidden[1]/ns1:code</path><content>403</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties><con:property><con:name>username</con:name><con:value>auth</con:value></con:property><con:property><con:name>password</con:name><con:value>Auth1234</con:value></con:property><con:property><con:name>tokenId</con:name><con:value>172e164a-f17c-4965-80f3-d8ba5ac90c-A</con:value></con:property><con:property><con:name>userId</con:name><con:value>153345</con:value></con:property><con:property><con:name>tenantId</con:name><con:value>103952</con:value></con:property><con:property><con:name>username2</con:name><con:value>cmarin2</con:value></con:property><con:property><con:name>tokenId2</con:name><con:value>a1d79627-3e17-4f90-81a4-2865f8f76818</con:value></con:property><con:property><con:name>userId2</con:name><con:value>104472</con:value></con:property><con:property><con:name>password2</con:name><con:value>Password1</con:value></con:property><con:property><con:name>apiKey</con:name><con:value>0f97f489c848438090250d50c7e1ea88</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="Functional - OS-KSADM-admin"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="users" searchProperties="true" id="cc6f4c12-79b8-4ea1-88fb-9f3f83b3bf99" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="POST - token - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#password}" username="${#TestSuite#username}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token info"><con:settings/><con:config><script>def tokenId = context.expand( '${POST - token - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info "get TokenId: " + tokenId
def userId = context.expand( '${POST - token - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/@id}' )
log.info "get UserId: " + userId

if (tokenId == "" | userId == "")
{
	assert false;	
}
testRunner.testCase.testSuite.setPropertyValue("tokenId", tokenId)
testRunner.testCase.testSuite.setPropertyValue("userId", userId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - nonAdmin - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - nonAdmin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#password2}" username="${#TestSuite#username2}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token info 2"><con:settings/><con:config><script>def tokenId = context.expand( '${POST - token - nonAdmin - xml#ResponseAsXml#declare namespace ns8=\'http://docs.openstack.org/identity/api/v2.0\'; //ns8:access[1]/ns8:token[1]/@id}' )
log.info "get TokenId: " + tokenId
def userId = context.expand( '${POST - token - nonAdmin - xml#ResponseAsXml#declare namespace ns8=\'http://docs.openstack.org/identity/api/v2.0\'; //ns8:access[1]/ns8:user[1]/@id}' )

log.info "get UserId: " + userId

if (tokenId == "" | userId == "")
{
	assert false;	
}
testRunner.testCase.testSuite.setPropertyValue("tokenId2", tokenId)
testRunner.testCase.testSuite.setPropertyValue("userId2", userId)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - listUsers - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List users - listUsers" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listUsers - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUser - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user - addUser" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:user display-name="${#TestCase#testuser}" email="${#TestCase#testemail}" enabled="true" id="" username="${#TestCase#testuser}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUser - 409 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user - addUser" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUser - 409 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:user display-name="${#TestCase#testuser}" email="${#TestCase#testemail}" enabled="true" id="" username="${#TestCase#testuser}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 409</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store user info"><con:settings/><con:config><script>def userId = context.expand( '${POST - addUser - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:user[1]/@id}' )
log.info "get userId: " + userId

if (userId == "")
{
	assert false;	
}
testRunner.testCase.setPropertyValue("testuserId", userId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUser - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user - updateUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:user email="${#TestCase#newemail}" id="${#TestCase#testUserId}" username="${#TestCase#testuser}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#newemail}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addRoles - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Global roles to a user. - addUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addRoles - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listUserRoles - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Global Roles for a User - listUserRoles" resourcePath="/${#Project#path}/users/{userId}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listUserRoles - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>role </token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="bde1268ebabeeabb70a0e702a4626977c331d5c4"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - infoGlobalUserRoles - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get Role - getRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - infoGlobalUserRoles - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addTenant - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Tenant - addTenant" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addTenant - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:tenant enabled="true" name="${#TestCase#tenantName}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0">&lt;v2:description>test a Tenant&lt;/v2:description>&lt;/v2:tenant></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>name="${#TestCase#tenantName}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store tenant info"><con:settings/><con:config><script>def tenantId = context.expand( '${POST - addTenant - xml#Response#declare namespace ns8=\'http://docs.openstack.org/identity/api/v2.0\'; //ns8:tenant[1]/@id}' )
log.info "get tenantID: " + tenantId

if (tenantId == "")
{
	assert false;	
}
testRunner.testCase.setPropertyValue("tenantId", tenantId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - addTenant - 409 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Tenant - addTenant" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addTenant - 409 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:tenant enabled="true" name="${#TestCase#tenantName}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0">&lt;v2:description>test a Tenant&lt;/v2:description>&lt;/v2:tenant></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 409</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addGlobalrole - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Global roles to a user. - addUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addGlobalrole - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userRole - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get user Role - getUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userRole - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - globalRole4User - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete Global Roles on User. - deleteUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - globalRole4User - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer xml"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>body1</con:name><con:sourceType>addUserCredentialsxml</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addUserCredentials - xml</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body2</con:name><con:sourceType>addUserCredentialsxml</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addUserCredentials - badUserId 404 - xml</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body3</con:name><con:sourceType>addUserCredentialsxml</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addUserCredentials - non Admin 403 - xml</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUserCredentials - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user Credential. - addUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUserCredentials - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;passwordCredentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://docs.openstack.org/identity/api/v2.0" username="${#TestCase#testuser}" password="${#TestCase#pwCred}"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>passwordCredentials</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listCredentials - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Credentials - listCredentials" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listCredentials - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#testuser}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store credentials info"><con:settings/><con:config><script>def pwCred = context.expand( '${GET - listCredentials - xml#ResponseAsXml#declare namespace ns8=\'http://docs.openstack.org/identity/api/v2.0\'; //ns8:credentials[1]/ns8:passwordCredentials[1]/@password}' )

log.info "get pwCred: " + pwCred

if (pwCred == "")
{
	assert false;	
}
testRunner.testCase.setPropertyValue("pwCred", pwCred)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateCredentials - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user credential - updateUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/{credential-type}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateCredentials - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;passwordCredentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns="http://docs.openstack.org/identity/api/v2.0" username="${#TestCase#testuser}"
password="${#TestCase#newPwCred}"/>
</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#newPwCred}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="credential-type" value="passwordCredentials"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userCredentials - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get user Credentials - getUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/{credential-type}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userCredentials - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#newPwCred}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="credential-type" value="passwordCredentials"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - userCredentials - 501 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user credential - deleteUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/{credential-type}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - userCredentials - 501 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 501</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="credential-type" value="passwordCredentials"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - tenant - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete a Tenant - deleteTenant" resourcePath="/${#Project#path}/tenants/{tenantId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - tenant - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - user - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="HARD Deleted - user - xml"><con:settings/><con:config service="GA-softDeleted" methodName="Delete from soft delete - softDeleted" resourcePath="/${#Project#path}/softDeleted/users/{user_id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="HARD Deleted - user - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>body1</con:name><con:sourceType>adduserRequestJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addUser - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body2</con:name><con:sourceType>updateUserjson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - updateUser - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false"><con:name>body3</con:name><con:sourceType>addUserCredentialsJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addUserCredentials - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body4</con:name><con:sourceType>updateUserCredentialsjson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - updateCredentials - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body5</con:name><con:sourceType>adduserRequestJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addUser - bad Auth 401 - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body6</con:name><con:sourceType>adduserRequestJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addUser - non Admin 403 - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body7</con:name><con:sourceType>updateUserjson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - updateUser - badId 404 - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body8</con:name><con:sourceType>updateUserjson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - updateUser - bad Auth 401 - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>body9</con:name><con:sourceType>adduserRequestJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addUser - 409 -json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body10</con:name><con:sourceType>addUserCredentialsJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addUserCredentials - badUserId 404 - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body11</con:name><con:sourceType>addUserCredentialsJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addUserCredentials - non Admin 403 - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>body12</con:name><con:sourceType>nullUserjson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addUser - null user 400 - json</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUser - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user - addUser" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUser - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "user": {"display-name":"${#TestCase#testuserjson}", "username": "${#TestCase#testuserjson}", "email": "john.smith@example.org", "enabled": true } } </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"user":{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUser - 409 -json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user - addUser" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUser - 409 -json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "user": {"display-name":"${#TestCase#testuserjson}", "username": "${#TestCase#testuserjson}", "email": "john.smith@example.org", "enabled": true } } </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 409</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Username ${#TestCase#testuserjson} already exists</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store user info json"><con:settings/><con:config><script>def userId = context.expand( '${POST - addUser - json#ResponseAsXml#declare namespace ns1=\'${#Project#endpointjson}/idm/cloud/v2.0/users\'; //ns1:Response[1]/ns1:user[1]/ns1:id[1]}' )


log.info "get userId: " + userId

if (userId == "")
{
	assert false;	
}
testRunner.testCase.setPropertyValue("testuserIdJson", userId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUser - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user - updateUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUser - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "user": { "id": "${#TestCase#testuserIdJson}", "username": "jqsmith", "email": "john.smith2@example.org", "enabled": true } }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>john.smith2@example.org</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>{"user":{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserIdjson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addRoles - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Global roles to a user. - addUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addRoles - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listUserRoles - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Global Roles for a User - listUserRoles" resourcePath="/${#Project#path}/users/{userId}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listUserRoles - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>"id":"${#TestCase#roleId}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>{"roles":[{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 2"><con:configuration><token>"id":"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 3"><con:configuration><token>"serviceId":"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 4"><con:configuration><token>"description":"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 5"><con:configuration><token>"name":"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - infoGlobalUserRoles - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get Role - getRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - infoGlobalUserRoles - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"role":</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addGlobalrole - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Global roles to a user. - addUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addGlobalrole - json" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userRole - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get user Role - getUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userRole - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>"id":"${#TestCase#roleId}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - globalRole4User - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete Global Roles on User. - deleteUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - globalRole4User - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUserCredentials - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user Credential. - addUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUserCredentials - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "passwordCredentials": { "username": "${#TestCase#testuserjson}", "password": "${#TestCase#pwCredjson}" } } </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#pwCredjson}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>{"passwordCredentials":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserIdjson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listCredentials - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Credentials - listCredentials" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listCredentials - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#testuserjson}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>{"credentials":[{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 2"><con:configuration><token>passwordCredentials":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 3"><con:configuration><token>{"credentials":[{"passwordCredentials":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store credentials info json"><con:settings/><con:config><script>def pwCredJson = context.expand( '${GET - listCredentials - json#ResponseAsXml#declare namespace ns1=\'${#Project#endpointjson}/idm/cloud/v2.0/users/${#TestCase#testuserIdJson}/OS-KSADM/credentials\'; //ns1:Response[1]/ns1:credentials[1]/ns1:e[1]/ns1:passwordCredentials[1]/ns1:password[1]}' )

log.info "get pwCredJson: " + pwCredJson

if (pwCredJson == "")
{
	assert false;	
}

testRunner.testCase.setPropertyValue("pwCredJson", pwCredJson)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateCredentials - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user credential - updateUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/{credential-type}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateCredentials - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "passwordCredentials": { "username": "${#TestCase#testuserjson}", "password": "${#TestCase#newPwCredjson}" } } </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#newPwCred2}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>{"passwordCredentials":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="credential-type" value="passwordCredentials"/>
  <con:entry key="userId" value="${#TestCase#testuserIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userCredentials - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get user Credentials - getUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/{credential-type}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userCredentials - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#newPwCred2}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>{"passwordCredentials":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="credential-type" value="passwordCredentials"/>
  <con:entry key="userId" value="${#TestCase#testuserIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - userCredentials - 501 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user credential - deleteUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/{credential-type}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - userCredentials - 501 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 501</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="credential-type" value="passwordCredentials"/>
  <con:entry key="userId" value="${#TestCase#testuserIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - user - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="HARD Delete - user - json"><con:settings/><con:config service="GA-softDeleted" methodName="Delete from soft delete - softDeleted" resourcePath="/${#Project#path}/softDeleted/users/{user_id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="HARD Delete - user - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestCase#testuserIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUser - bad Auth 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user - addUser" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUser - bad Auth 401 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:user display-name="${#TestCase#testuser}" email="${#TestCase#testemail}" enabled="true" id="" username="${#TestCase#testuser}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="badAuth" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUser - bad Auth 401 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user - addUser" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUser - bad Auth 401 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "user": {"display-name":"${#TestCase#testuserjson}", "username": "${#TestCase#testuserjson}", "email": "john.smith@example.org", "enabled": true } } </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="badAuth" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUser - non Admin 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user - addUser" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUser - non Admin 403 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:user display-name="${#TestCase#testuser}" email="${#TestCase#testemail}" enabled="true" id="" username="${#TestCase#testuser}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUser - non Admin 403 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user - addUser" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUser - non Admin 403 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "user": {"display-name":"${#TestCase#testuserjson}", "username": "${#TestCase#testuserjson}", "email": "john.smith@example.org", "enabled": true } } </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUser - badId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user - updateUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUser - badId 404 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:user email="${#TestCase#newemail}" id="${#TestCase#testUserId}" username="${#TestCase#testuser}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User not found</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="1212121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUser - badId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user - updateUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUser - badId 404 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "user": { "id": "${#TestCase#testuserIdJson}", "username": "jqsmith", "email": "john.smith2@example.org", "enabled": true } }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User not found</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="1212121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUser - bad Auth 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user - updateUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUser - bad Auth 401 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:user email="${#TestCase#newemail}" id="${#TestCase#testUserId}" username="${#TestCase#testuser}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="bad Auth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUser - bad Auth 401 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user - updateUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUser - bad Auth 401 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "user": { "id": "${#TestCase#testuserIdJson}", "username": "jqsmith", "email": "john.smith2@example.org", "enabled": true } }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="bad Auth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addRoles - badUserId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Global roles to a user. - addUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addRoles - badUserId 404 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="1212121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addRoles - badUserId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Global roles to a user. - addUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addRoles - badUserId 404 - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="1212121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listUserRoles - badUserId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Global Roles for a User - listUserRoles" resourcePath="/${#Project#path}/users/{userId}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listUserRoles - badUserId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="1212121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listUserRoles - badUserId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Global Roles for a User - listUserRoles" resourcePath="/${#Project#path}/users/{userId}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listUserRoles - badUserId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="1212121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listUserRoles - bad Auth 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Global Roles for a User - listUserRoles" resourcePath="/${#Project#path}/users/{userId}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listUserRoles - bad Auth 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listUserRoles - bad Auth 401 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Global Roles for a User - listUserRoles" resourcePath="/${#Project#path}/users/{userId}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listUserRoles - bad Auth 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listUserRoles - non Admin 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Global Roles for a User - listUserRoles" resourcePath="/${#Project#path}/users/{userId}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listUserRoles - non Admin 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="bde1268ebabeeabb70a0e702a4626977c331d5c4"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listUserRoles - non Admin 403 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Global Roles for a User - listUserRoles" resourcePath="/${#Project#path}/users/{userId}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listUserRoles - non Admin 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="bde1268ebabeeabb70a0e702a4626977c331d5c4"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - infoGlobalUserRoles - badId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get Role - getRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - infoGlobalUserRoles - badId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="12121212"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - infoGlobalUserRoles - badId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get Role - getRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - infoGlobalUserRoles - badId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="12121212"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - infoGlobalUserRoles - badAuth 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get Role - getRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - infoGlobalUserRoles - badAuth 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - infoGlobalUserRoles - badAuth 401 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get Role - getRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - infoGlobalUserRoles - badAuth 401 - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - infoGlobalUserRoles - non Admin 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get Role - getRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - infoGlobalUserRoles - non Admin 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - infoGlobalUserRoles - non Admin 403 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get Role - getRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - infoGlobalUserRoles - non Admin 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addGlobalrole - badRoleId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Global roles to a user. - addUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addGlobalrole - badRoleId 404 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="12121212"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addGlobalrole - badRoleId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Global roles to a user. - addUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addGlobalrole - badRoleId 404 - json" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="12121212"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addGlobalrole - badUserId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Global roles to a user. - addUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addGlobalrole - badUserId 404 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="12121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addGlobalrole - badUserId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Global roles to a user. - addUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addGlobalrole - badUserId 404 - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="12121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addGlobalrole - bad Auth 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Global roles to a user. - addUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addGlobalrole - bad Auth 401 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addGlobalrole - bad Auth 401 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Global roles to a user. - addUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addGlobalrole - bad Auth 401 - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addGlobalrole - non Admin 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Global roles to a user. - addUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addGlobalrole - non Admin 403 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addGlobalrole - non Admin 403 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Global roles to a user. - addUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addGlobalrole - non Admin 403 - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userRole - badRoleId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get user Role - getUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userRole - badRoleId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="12121212"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userRole - badRoleId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get user Role - getUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userRole - badRoleId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="12121212"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userRole - badUserId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get user Role - getUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userRole - badUserId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="1212121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userRole - badUserId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get user Role - getUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userRole - badUserId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="1212121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userRole - badAuth 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get user Role - getUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userRole - badAuth 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userRole - badAuth 401 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get user Role - getUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userRole - badAuth 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userRole - non Admin 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get user Role - getUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userRole - non Admin 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userRole - non Admin 403 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get user Role - getUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userRole - non Admin 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - globalRole4User - badRoleId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete Global Roles on User. - deleteUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - globalRole4User - badRoleId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="12121212"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - globalRole4User - badRoleId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete Global Roles on User. - deleteUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - globalRole4User - badRoleId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="12121212"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - globalRole4User - badUserId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete Global Roles on User. - deleteUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - globalRole4User - badUserId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="1212121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - globalRole4User - badUserId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete Global Roles on User. - deleteUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - globalRole4User - badUserId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="1212121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - globalRole4User - badAuth 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete Global Roles on User. - deleteUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - globalRole4User - badAuth 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - globalRole4User - badAuth 401 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete Global Roles on User. - deleteUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - globalRole4User - badAuth 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - globalRole4User - non Admin 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete Global Roles on User. - deleteUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - globalRole4User - non Admin 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - globalRole4User - non Admin 403 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete Global Roles on User. - deleteUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - globalRole4User - non Admin 403 - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUserCredentials - badUserId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user Credential. - addUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUserCredentials - badUserId 404 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;passwordCredentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://docs.openstack.org/identity/api/v2.0" username="${#TestCase#testuser}" password="${#TestCase#pwCred}"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="12121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUserCredentials - badUserId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user Credential. - addUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUserCredentials - badUserId 404 - json" mediaType="application/json" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "passwordCredentials": { "username": "${#TestCase#testuserjson}", "password": "${#TestCase#pwCredjson}" } } </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="12121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUserCredentials - non Admin 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user Credential. - addUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUserCredentials - non Admin 403 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;passwordCredentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://docs.openstack.org/identity/api/v2.0" username="${#TestCase#testuser}" password="${#TestCase#pwCred}"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUserCredentials - non Admin 403 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user Credential. - addUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUserCredentials - non Admin 403 - json" mediaType="application/json" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "passwordCredentials": { "username": "${#TestCase#testuserjson}", "password": "${#TestCase#pwCredjson}" } } </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listCredentials - badId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Credentials - listCredentials" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listCredentials - badId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listCredentials - badId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Credentials - listCredentials" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listCredentials - badId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listCredentials - bad Auth 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Credentials - listCredentials" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listCredentials - bad Auth 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listCredentials - bad Auth 401 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Credentials - listCredentials" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listCredentials - bad Auth 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listCredentials - non Admin 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Credentials - listCredentials" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listCredentials - non Admin 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listCredentials - non Admin 403 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Credentials - listCredentials" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listCredentials - non Admin 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateCredentials - badUserId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user credential - updateUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/{credential-type}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateCredentials - badUserId 404 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;passwordCredentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns="http://docs.openstack.org/identity/api/v2.0" username="${#TestCase#testuser}"
password="${#TestCase#newPwCred}"/>
</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="credential-type" value="passwordCredentials"/>
  <con:entry key="userId" value="12121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateCredentials - badUserId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user credential - updateUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/{credential-type}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateCredentials - badUserId 404 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "passwordCredentials": { "username": "${#TestCase#testuserjson}", "password": "${#TestCase#newPwCredjson}" } } </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="credential-type" value="passwordCredentials"/>
  <con:entry key="userId" value="12121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateCredentials - badAuth 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user credential - updateUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/{credential-type}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateCredentials - badAuth 401 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;passwordCredentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns="http://docs.openstack.org/identity/api/v2.0" username="${#TestCase#testuser}"
password="${#TestCase#newPwCred}"/>
</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="credential-type" value="passwordCredentials"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateCredentials - badAuth 401 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user credential - updateUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/{credential-type}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateCredentials - badAuth 401 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "passwordCredentials": { "username": "${#TestCase#testuserjson}", "password": "${#TestCase#newPwCredjson}" } } </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="credential-type" value="passwordCredentials"/>
  <con:entry key="userId" value="${#TestCase#testuserIdJson}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateCredentials - non Admin 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user credential - updateUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/{credential-type}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateCredentials - non Admin 403 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;passwordCredentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns="http://docs.openstack.org/identity/api/v2.0" username="${#TestCase#testuser}"
password="${#TestCase#newPwCred}"/>
</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="credential-type" value="passwordCredentials"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateCredentials - non Admin 403 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user credential - updateUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/{credential-type}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateCredentials - non Admin 403 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "passwordCredentials": { "username": "${#TestCase#testuserjson}", "password": "${#TestCase#newPwCredjson}" } } </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="credential-type" value="passwordCredentials"/>
  <con:entry key="userId" value="${#TestCase#testuserIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userCredentials - badId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get user Credentials - getUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/{credential-type}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userCredentials - badId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="credential-type" value="passwordCredentials"/>
  <con:entry key="userId" value="12121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userCredentials - badId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get user Credentials - getUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/{credential-type}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userCredentials - badId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="credential-type" value="passwordCredentials"/>
  <con:entry key="userId" value="1212121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userCredentials - badCredential 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get user Credentials - getUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/{credential-type}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userCredentials - badCredential 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="credential-type" value="passwordCredentialsss"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userCredentials - badCredential 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get user Credentials - getUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/{credential-type}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userCredentials - badCredential 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="credential-type" value="passwordCredentialsss"/>
  <con:entry key="userId" value="${#TestCase#testuserIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userCredentials - badAuth 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get user Credentials - getUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/{credential-type}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userCredentials - badAuth 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="credential-type" value="passwordCredentials"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userCredentials - badAuth 401 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get user Credentials - getUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/{credential-type}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userCredentials - badAuth 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="credential-type" value="passwordCredentials"/>
  <con:entry key="userId" value="${#TestCase#testuserIdJson}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userCredentials - non Admin 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get user Credentials - getUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/{credential-type}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userCredentials - non Admin 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="credential-type" value="passwordCredentials"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userCredentials - non Admin 403 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get user Credentials - getUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/{credential-type}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userCredentials - non Admin 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="credential-type" value="passwordCredentials"/>
  <con:entry key="userId" value="${#TestCase#testuserIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - user - badId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user - badId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="12121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - user - badId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user - badId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="12121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - user - badAuth 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user - badAuth 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - user - badAuth 401 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user - badAuth 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - user - non Admin 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user - non Admin 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Access is denied</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - user - non Admin 403 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user - non Admin 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUser - null user 400 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user - addUser" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUser - null user 400 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "user": {"display-name":"${#TestCase#testuserjson}", "username": null, "email": "john.smith@example.org", "enabled": true } } </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>testuser</con:name><con:value>testuser01</con:value></con:property><con:property><con:name>testemail</con:name><con:value>testuser@rackspace.com</con:value></con:property><con:property><con:name>testuserId</con:name><con:value>10002054</con:value></con:property><con:property><con:name>newemail</con:name><con:value>testuser1@rackspace.com</con:value></con:property><con:property><con:name>testTenantId</con:name><con:value>1111111</con:value></con:property><con:property><con:name>adduserRequestJson</con:name><con:value>{ "user": {"display-name":"${#TestCase#testuserjson}", "username": "${#TestCase#testuserjson}", "email": "john.smith@example.org", "enabled": true } } </con:value></con:property><con:property><con:name>roleId</con:name><con:value>1</con:value></con:property><con:property><con:name>tenantName</con:name><con:value>MossoCloudFS_f3b094b3-0185-45bf-9608-a853456gggg</con:value></con:property><con:property><con:name>tenantId</con:name><con:value>MossoCloudFS_f3b094b3-0185-45bf-9608-a853456gggg</con:value></con:property><con:property><con:name>pwCred</con:name><con:value>51m8N+8891</con:value></con:property><con:property><con:name>newPwCred</con:name><con:value>TestPassword1</con:value></con:property><con:property><con:name>testuserjson</con:name><con:value>testuser10001</con:value></con:property><con:property><con:name>testuserIdJson</con:name><con:value>10002055</con:value></con:property><con:property><con:name>updateUserjson</con:name><con:value>{ "user": { "id": "${#TestCase#testuserIdJson}", "username": "jqsmith", "email": "john.smith2@example.org", "enabled": true } }</con:value></con:property><con:property><con:name>addUserCredentialsJson</con:name><con:value>{ "passwordCredentials": { "username": "${#TestCase#testuserjson}", "password": "${#TestCase#pwCredjson}" } } </con:value></con:property><con:property><con:name>pwCredJson</con:name><con:value>51m8N+8892</con:value></con:property><con:property><con:name>newPwCredJson</con:name><con:value>TestPassword2</con:value></con:property><con:property><con:name>addUserCredentialsxml</con:name><con:value>&lt;passwordCredentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://docs.openstack.org/identity/api/v2.0" username="${#TestCase#testuser}" password="${#TestCase#pwCred}"/></con:value></con:property><con:property><con:name>updateUserCredentialsjson</con:name><con:value>{ "passwordCredentials": { "username": "${#TestCase#testuserjson}", "password": "${#TestCase#newPwCredjson}" } } </con:value></con:property><con:property><con:name>nullUserjson</con:name><con:value>{ "user": {"display-name":"${#TestCase#testuserjson}", "username": null, "email": "john.smith@example.org", "enabled": true } } </con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="roles" searchProperties="true" id="e976551b-f849-446c-8d67-c18e988acb73" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="GET - listRoles - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Roles - listRoles" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>serviceId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>description</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 2"><con:configuration><token>name</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 3"><con:configuration><token>id</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Roles - listRoles" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"roles":[{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>"description"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 2"><con:configuration><token>"name":</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 3"><con:configuration><token>"serviceId":</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 4"><con:configuration><token>"id":</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles - serviceId - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Roles - listRoles" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles - serviceId - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>bde1268ebabeeabb70a0e702a4626977c331d5c4</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains"><con:configuration><token>ee1ce025d3a4f6e35b481ce247dd61262381e1d8</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="bde1268ebabeeabb70a0e702a4626977c331d5c4"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles - serviceId - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Roles - listRoles" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles - serviceId - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>bde1268ebabeeabb70a0e702a4626977c331d5c4</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains"><con:configuration><token>ee1ce025d3a4f6e35b481ce247dd61262381e1d8</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="bde1268ebabeeabb70a0e702a4626977c331d5c4"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addRoles - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Role - addRole" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addRoles - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:role description="test a role" name="testRole" serviceId="bde1268ebabeeabb70a0e702a4626977c331d5c4" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>test a role</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addRoles - 409 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Role - addRole" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addRoles - 409 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:role description="test a role" name="testRole" serviceId="bde1268ebabeeabb70a0e702a4626977c331d5c4" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 409</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store role info"><con:settings/><con:config><script>def roleId = context.expand( '${POST - addRoles - xml#Response#declare namespace ns8=\'http://docs.openstack.org/identity/api/v2.0\'; //ns8:role[1]/@id}' )
log.info "get roleId: " + roleId

if (roleId == "")
{
	assert false;	
}
testRunner.testCase.setPropertyValue("roleId", roleId)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles - verify added role - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Roles - listRoles" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles - verify added role - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>test a role</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - role - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get Role - getRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - role - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>test a role</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - role - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete Role - deleteRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - role - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles - verify deleted role - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Roles - listRoles" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles - verify deleted role - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains"><con:configuration><token>test a role</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>body1json</con:name><con:sourceType>request1json</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addRoles - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body2json</con:name><con:sourceType>addRoleNoNamejson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addRoles - noName 400 - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body3</con:name><con:sourceType>request1json</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addRoles - badAuth 401 - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body4</con:name><con:sourceType>request1json</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addRoles - non Admin 403 - json</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST - addRoles - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Role - addRole" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addRoles - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "role": {"name": "Guest", "description": "test a role", "serviceId": "bde1268ebabeeabb70a0e702a4626977c331d5c4" } } </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>test a role</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>{"role":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store role info json"><con:settings/><con:config><script>def roleId = context.expand( '${POST - addRoles - json#ResponseAsXml#declare namespace ns1=\'${#Project#endpointjson}/idm/cloud/v2.0/OS-KSADM/roles\'; //ns1:Response[1]/ns1:role[1]/ns1:id[1]}' )

log.info "get roleId: " + roleId

if (roleId == "")
{
	assert false;	
}
testRunner.testCase.setPropertyValue("roleId", roleId)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles - verify added role - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Roles - listRoles" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles - verify added role - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>test a role</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - role - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get Role - getRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - role - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>test a role</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>{"role":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - role - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete Role - deleteRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - role - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles - verify deleted role - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Roles - listRoles" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles - verify deleted role - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains"><con:configuration><token>test a role</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles - badAuth - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Roles - listRoles" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles - badAuth - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="badAuth" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles - badAuth - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Roles - listRoles" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles - badAuth - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="badAuth" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addRoles - badAuth - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Role - addRole" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addRoles - badAuth - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:role description="test a role" name="testRole" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="badAuth" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addRoles - badAuth - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Role - addRole" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addRoles - badAuth - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:role description="test a role" name="testRole" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="badAuth" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - role - badAuth - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get Role - getRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - role - badAuth - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="badAuth"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - role - badAuth - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get Role - getRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - role - badAuth - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="badAuth"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - role - badId - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get Role - getRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - role - badId - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="10000000000"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - role - badId - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get Role - getRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - role - badId - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="10000000000"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - role - badAuth - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete Role - deleteRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - role - badAuth - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="badAuth"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - role - badAuth - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete Role - deleteRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - role - badAuth - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="badAuth"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - role - badId - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete Role - deleteRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - role - badId - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="100000000001"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - role - badId - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete Role - deleteRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - role - badId - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="100000000001"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles - badAuth 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Roles - listRoles" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles - badAuth 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="badAuth" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles - badAuth 401 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Roles - listRoles" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles - badAuth 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="badAuth" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles - nonAdmin 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Roles - listRoles" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles - nonAdmin 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles - nonAdmin 403 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Roles - listRoles" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles - nonAdmin 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addRoles - noName 400 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Role - addRole" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addRoles - noName 400 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:role description="test a role" name="" serviceId="bde1268ebabeeabb70a0e702a4626977c331d5c4" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addRoles - noName 400 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Role - addRole" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addRoles - noName 400 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "role": {"name": "", "description": "test a role", "serviceId": "bde1268ebabeeabb70a0e702a4626977c331d5c4" } } </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addRoles -  badAuth 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Role - addRole" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addRoles -  badAuth 401 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:role description="test a role" name="testRole" serviceId="bde1268ebabeeabb70a0e702a4626977c331d5c4" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="badAuth" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addRoles - badAuth 401 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Role - addRole" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addRoles - badAuth 401 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "role": {"name": "Guest", "description": "test a role", "serviceId": "bde1268ebabeeabb70a0e702a4626977c331d5c4" } } </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="badAuth" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addRoles - non Admin 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Role - addRole" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addRoles - non Admin 403 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:role description="test a role" name="testRole" serviceId="bde1268ebabeeabb70a0e702a4626977c331d5c4" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addRoles - non Admin 403 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Role - addRole" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addRoles - non Admin 403 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "role": {"name": "Guest", "description": "test a role", "serviceId": "bde1268ebabeeabb70a0e702a4626977c331d5c4" } } </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - role - badId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get Role - getRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - role - badId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="12121212"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - role - badId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get Role - getRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - role - badId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="12121212"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - role - badAuth 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get Role - getRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - role - badAuth 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="badAuth"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - role - badAuth 401 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get Role - getRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - role - badAuth 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="badAuth"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - role - non Admin 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get Role - getRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - role - non Admin 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - role - non Admin 403 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get Role - getRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - role - non Admin 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - role - badId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete Role - deleteRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - role - badId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="12121212"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - role - badId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete Role - deleteRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - role - badId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="12121212"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - role - badAuth 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete Role - deleteRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - role - badAuth 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="badAuth"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - role - badAuth 401 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete Role - deleteRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - role - badAuth 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="badAuth"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - role - non Admin 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete Role - deleteRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - role - non Admin 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - role - non Admin 403 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete Role - deleteRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - role - non Admin 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>roleId</con:name><con:value>10001790</con:value></con:property><con:property><con:name>request1json</con:name><con:value>{ "role": {"name": "Guest", "description": "test a role", "serviceId": "bde1268ebabeeabb70a0e702a4626977c331d5c4" } } </con:value></con:property><con:property><con:name>addRoleNoNamejson</con:name><con:value>{ "role": {"name": "", "description": "test a role", "serviceId": "bde1268ebabeeabb70a0e702a4626977c331d5c4" } } </con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="tenants" searchProperties="true" id="2d204d72-f158-48ff-97aa-da98e4724832" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="POST - addTenant - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Tenant - addTenant" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addTenant - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:tenant enabled="true" id="" name="${#TestCase#tenantName}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0">&lt;v2:description>test a Tenant&lt;/v2:description>&lt;/v2:tenant></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>name="${#TestCase#tenantName}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addTenant - 409 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Tenant - addTenant" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addTenant - 409 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:tenant enabled="true" name="${#TestCase#tenantName}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0">&lt;v2:description>test a Tenant&lt;/v2:description>&lt;/v2:tenant></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 409</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>name="${#TestCase#tenantName}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store tenant info"><con:settings/><con:config><script>def tenantId = context.expand( '${POST - addTenant - xml#Response#declare namespace ns8=\'http://docs.openstack.org/identity/api/v2.0\'; //ns8:tenant[1]/@id}' )
log.info "get tenantID: " + tenantId

if (tenantId == "")
{
	assert false;	
}
testRunner.testCase.setPropertyValue("tenantId", tenantId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateTenant - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update Tenant - updateTenant" resourcePath="/${#Project#path}/tenants/{tenantId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateTenant - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:tenant name="newName" xmlns:v2="http://docs.openstack.org/identity/api/v2.0">&lt;v2:description>new description&lt;/v2:description>&lt;/v2:tenant></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>name="newName"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>id="${#TestCase#tenantId}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUser - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user - addUser" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:user display-name="${#TestCase#testName}" email="${#TestCase#testemail}" enabled="true" id="" username="${#TestCase#testName}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store user info"><con:settings/><con:config><script>def userId = context.expand( '${POST - addUser - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:user[1]/@id}' )
log.info "get userId: " + userId

if (userId == "")
{
	assert false;	
}
testRunner.testCase.setPropertyValue("testuserId", userId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - addRoles - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Role - addRole" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addRoles - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:role description="test a role 2" name="testRole2" serviceId="bde1268ebabeeabb70a0e702a4626977c331d5c4" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>test a role</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store role info"><con:settings/><con:config><script>def roleId = context.expand( '${POST - addRoles - xml#Response#declare namespace ns8=\'http://docs.openstack.org/identity/api/v2.0\'; //ns8:role[1]/@id}' )
log.info "get roleId: " + roleId

if (roleId == "")
{
	assert false;	
}
testRunner.testCase.setPropertyValue("roleId", roleId)</script></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addRoleToUserOnTenant - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add roles to a user on a tenant. - addRolesToUserOnTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addRoleToUserOnTenant - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addRoleToUserOnTenant - 409 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add roles to a user on a tenant. - addRolesToUserOnTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addRoleToUserOnTenant - 409 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 409</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Tenant Role already exists</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listUsers4Tenant - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List users for a Tenant. - listUsersForTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listUsers4Tenant - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#testName}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - user w/ role4Tenant - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List user with role for tenant. - listUsersWithRoleForTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - user w/ role4Tenant - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#testName}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles4Tenant - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List roles for a Tenant. - listRolesForTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles4Tenant - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>id="${#TestCase#roleId}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - roles4UserOnTenant - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete roles from a user on tenant. - deleteRoleFromUserOnTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - roles4UserOnTenant - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles4Tenant - verify - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List roles for a Tenant. - listRolesForTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles4Tenant - verify - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains"><con:configuration><token>id="${#TestCase#roleId}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - tenant - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete a Tenant - deleteTenant" resourcePath="/${#Project#path}/tenants/{tenantId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - tenant - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - role - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete Role - deleteRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - role - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - user - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="HARD Delete - user - xml"><con:settings/><con:config service="GA-softDeleted" methodName="Delete from soft delete - softDeleted" resourcePath="/${#Project#path}/softDeleted/users/{user_id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="HARD Delete - user - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>json1body</con:name><con:sourceType>request1json</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addTenant - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body2json</con:name><con:sourceType>request2json</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - updateTenant - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body3</con:name><con:sourceType>addTenantNoNamejson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addTenant - noName 400 - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body4</con:name><con:sourceType>request1json</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addTenant - badAuth 401 - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body5</con:name><con:sourceType>request1json</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addTenant - non Admin 403 - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body6</con:name><con:sourceType>request1json</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - updateTenant - badTenantId 404 - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body7</con:name><con:sourceType>request2json</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - updateTenant - badAuth 401 - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body8</con:name><con:sourceType>request2json</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - updateTenant - non Admin 403 - json</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST - addTenant - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Tenant - addTenant" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addTenant - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "tenant": { "name": "${#TestCase#tenantName}", "description": "test a description", "enabled": true } }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>"name":"${#TestCase#tenantName}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store tenant info2"><con:settings/><con:config><script>def tenantId = context.expand( '${POST - addTenant - json#ResponseAsXml#declare namespace ns1=\'${#Project#endpointjson}/idm/cloud/v2.0/tenants\'; //ns1:Response[1]/ns1:tenant[1]/ns1:id[1]}' )

log.info "get tenantID: " + tenantId

if (tenantId == "")
{
	assert false;	
}
testRunner.testCase.setPropertyValue("tenantId2", tenantId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateTenant - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update Tenant - updateTenant" resourcePath="/${#Project#path}/tenants/{tenantId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateTenant - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "tenant": { "name": "newName", "description": "new description", "enabled": true } }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>"name":"newName"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>"id":"${#TestCase#tenantId}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUser - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user - addUser" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUser - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:user display-name="${#TestCase#testName2}" email="${#TestCase#testemail}" enabled="true" id="" username="${#TestCase#testName2}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#testName2}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store user info 2"><con:settings/><con:config><script>def userId = context.expand( '${POST - addUser - json#ResponseAsXml#declare namespace ns1=\'${#Project#endpointjson}/idm/cloud/v2.0/users\'; //ns1:Response[1]/ns1:user[1]/ns1:id[1]}' )
log.info "get userId: " + userId

if (userId == "")
{
	assert false;	
}
testRunner.testCase.setPropertyValue("testuserId2", userId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - addRoles - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Role - addRole" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addRoles - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:role description="test a role 2" name="testRole2" serviceId="bde1268ebabeeabb70a0e702a4626977c331d5c4" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>test a role</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store role info 2"><con:settings/><con:config><script>def roleId = context.expand( '${POST - addRoles - json#ResponseAsXml#declare namespace ns1=\'${#Project#endpointjson}/idm/cloud/v2.0/OS-KSADM/roles\'; //ns1:Response[1]/ns1:role[1]/ns1:id[1]}' )

log.info "get roleId: " + roleId

if (roleId == "")
{
	assert false;	
}
testRunner.testCase.setPropertyValue("roleId2", roleId)</script></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addRoleToUserOnTenant - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add roles to a user on a tenant. - addRolesToUserOnTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addRoleToUserOnTenant - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId2}"/>
  <con:entry key="userId" value="${#TestCase#testuserId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listUsers4Tenant - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List users for a Tenant. - listUsersForTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listUsers4Tenant - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#testName2}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - user w/ role4Tenant - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List user with role for tenant. - listUsersWithRoleForTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - user w/ role4Tenant - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#testName2}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles4Tenant - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List roles for a Tenant. - listRolesForTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles4Tenant - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>id":"${#TestCase#roleId2}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - roles4UserOnTenant - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete roles from a user on tenant. - deleteRoleFromUserOnTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - roles4UserOnTenant - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId2}"/>
  <con:entry key="userId" value="${#TestCase#testuserId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles4Tenant - verify - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List roles for a Tenant. - listRolesForTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles4Tenant - verify - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains"><con:configuration><token>id="${#TestCase#roleId}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - tenant - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete a Tenant - deleteTenant" resourcePath="/${#Project#path}/tenants/{tenantId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - tenant - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - role - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete Role - deleteRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - role - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - user - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="HARD Delete - user - json"><con:settings/><con:config service="GA-softDeleted" methodName="Delete from soft delete - softDeleted" resourcePath="/${#Project#path}/softDeleted/users/{user_id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="HARD Delete - user - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestCase#testuserId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addTenant - negativeTest - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Tenant - addTenant" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addTenant - negativeTest - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:tenant enabled="true" name="${#TestCase#tenantName}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0">&lt;v2:description>test a Tenant&lt;/v2:description>&lt;/v2:tenant></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>name="${#TestCase#tenantName}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store tenant info negative test"><con:settings/><con:config><script>def tenantId = context.expand( '${POST - addTenant - negativeTest - xml#Response#declare namespace ns8=\'http://docs.openstack.org/identity/api/v2.0\'; //ns8:tenant[1]/@id}' )
log.info "get tenantID: " + tenantId

if (tenantId == "")
{
	assert false;	
}
testRunner.testCase.setPropertyValue("tenantId", tenantId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - addTenant - noName 400 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Tenant - addTenant" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addTenant - noName 400 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:tenant enabled="true" name="" xmlns:v2="http://docs.openstack.org/identity/api/v2.0">&lt;v2:description>test a Tenant&lt;/v2:description>&lt;/v2:tenant></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addTenant - noName 400 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Tenant - addTenant" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addTenant - noName 400 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "tenant": { "name": "", "description": "test a description", "enabled": true } }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addTenant - badAuth 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Tenant - addTenant" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addTenant - badAuth 401 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:tenant enabled="true" name="${#TestCase#tenantName}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0">&lt;v2:description>test a Tenant&lt;/v2:description>&lt;/v2:tenant></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="badAuth" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addTenant - badAuth 401 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Tenant - addTenant" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addTenant - badAuth 401 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "tenant": { "name": "${#TestCase#tenantName}", "description": "test a description", "enabled": true } }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="badAuth" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addTenant - non Admin 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Tenant - addTenant" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addTenant - non Admin 403 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:tenant enabled="true" name="${#TestCase#tenantName}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0">&lt;v2:description>test a Tenant&lt;/v2:description>&lt;/v2:tenant></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addTenant - non Admin 403 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Tenant - addTenant" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addTenant - non Admin 403 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "tenant": { "name": "${#TestCase#tenantName}", "description": "test a description", "enabled": true } }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateTenant - badTenantId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update Tenant - updateTenant" resourcePath="/${#Project#path}/tenants/{tenantId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateTenant - badTenantId 404 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:tenant name="newName" xmlns:v2="http://docs.openstack.org/identity/api/v2.0">&lt;v2:description>new description&lt;/v2:description>&lt;/v2:tenant></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="12121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateTenant - badTenantId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update Tenant - updateTenant" resourcePath="/${#Project#path}/tenants/{tenantId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateTenant - badTenantId 404 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "tenant": { "name": "${#TestCase#tenantName}", "description": "test a description", "enabled": true } }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="12121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateTenant - badAuth 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update Tenant - updateTenant" resourcePath="/${#Project#path}/tenants/{tenantId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateTenant - badAuth 401 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:tenant name="newName" xmlns:v2="http://docs.openstack.org/identity/api/v2.0">&lt;v2:description>new description&lt;/v2:description>&lt;/v2:tenant></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateTenant - badAuth 401 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update Tenant - updateTenant" resourcePath="/${#Project#path}/tenants/{tenantId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateTenant - badAuth 401 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "tenant": { "name": "newName", "description": "new description", "enabled": true } }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateTenant - non Admin 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update Tenant - updateTenant" resourcePath="/${#Project#path}/tenants/{tenantId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateTenant - non Admin 403 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:tenant name="newName" xmlns:v2="http://docs.openstack.org/identity/api/v2.0">&lt;v2:description>new description&lt;/v2:description>&lt;/v2:tenant></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateTenant - non Admin 403 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update Tenant - updateTenant" resourcePath="/${#Project#path}/tenants/{tenantId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateTenant - non Admin 403 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "tenant": { "name": "newName", "description": "new description", "enabled": true } }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - tenant - badId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete a Tenant - deleteTenant" resourcePath="/${#Project#path}/tenants/{tenantId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - tenant - badId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="1212121221"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - tenant - badId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete a Tenant - deleteTenant" resourcePath="/${#Project#path}/tenants/{tenantId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - tenant - badId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="1212121221"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - tenant - badAuth 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete a Tenant - deleteTenant" resourcePath="/${#Project#path}/tenants/{tenantId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - tenant - badAuth 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - tenant - badAuth 401 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete a Tenant - deleteTenant" resourcePath="/${#Project#path}/tenants/{tenantId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - tenant - badAuth 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - tenant - non Admin 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete a Tenant - deleteTenant" resourcePath="/${#Project#path}/tenants/{tenantId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - tenant - non Admin 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - tenant - non Admin 403 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete a Tenant - deleteTenant" resourcePath="/${#Project#path}/tenants/{tenantId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - tenant - non Admin 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listUsers4Tenant - badId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List users for a Tenant. - listUsersForTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listUsers4Tenant - badId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="1212121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listUsers4Tenant - badId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List users for a Tenant. - listUsersForTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listUsers4Tenant - badId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="1212121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listUsers4Tenant - badAuth 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List users for a Tenant. - listUsersForTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listUsers4Tenant - badAuth 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listUsers4Tenant - badAuth 401 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List users for a Tenant. - listUsersForTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listUsers4Tenant - badAuth 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listUsers4Tenant - non Admin 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List users for a Tenant. - listUsersForTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listUsers4Tenant - non Admin 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listUsers4Tenant - non Admin 403 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List users for a Tenant. - listUsersForTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listUsers4Tenant - non Admin 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - user w/ role4Tenant - badRoleId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List user with role for tenant. - listUsersWithRoleForTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - user w/ role4Tenant - badRoleId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="121212122"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - user w/ role4Tenant - badRoleId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List user with role for tenant. - listUsersWithRoleForTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - user w/ role4Tenant - badRoleId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Role 121212122 not found</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="121212122"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - user w/ role4Tenant - badTenantId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List user with role for tenant. - listUsersWithRoleForTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - user w/ role4Tenant - badTenantId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Tenant with id/name: '12121212' was not found</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="12121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - user w/ role4Tenant - badTenantId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List user with role for tenant. - listUsersWithRoleForTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - user w/ role4Tenant - badTenantId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Tenant with id/name: '12121212' was not found</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="12121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - user w/ role4Tenant - badAuth 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List user with role for tenant. - listUsersWithRoleForTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - user w/ role4Tenant - badAuth 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - user w/ role4Tenant - badAuth 401 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List user with role for tenant. - listUsersWithRoleForTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - user w/ role4Tenant - badAuth 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - user w/ role4Tenant - non Admin 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List user with role for tenant. - listUsersWithRoleForTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - user w/ role4Tenant - non Admin 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - user w/ role4Tenant - non Admin 403 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List user with role for tenant. - listUsersWithRoleForTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - user w/ role4Tenant - non Admin 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles4Tenant - badId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List roles for a Tenant. - listRolesForTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles4Tenant - badId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="1212121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles4Tenant - badId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List roles for a Tenant. - listRolesForTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles4Tenant - badId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="1212121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles4Tenant - badAuth 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List roles for a Tenant. - listRolesForTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles4Tenant - badAuth 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles4Tenant - badAuth 401 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List roles for a Tenant. - listRolesForTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles4Tenant - badAuth 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles4Tenant - non Admin 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List roles for a Tenant. - listRolesForTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles4Tenant - non Admin 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles4Tenant - non Admin 403 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List roles for a Tenant. - listRolesForTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles4Tenant - non Admin 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addRoleToUserOnTenant - badRoleId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add roles to a user on a tenant. - addRolesToUserOnTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addRoleToUserOnTenant - badRoleId 404 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="12121212"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addRoleToUserOnTenant - badRoleId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add roles to a user on a tenant. - addRolesToUserOnTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addRoleToUserOnTenant - badRoleId 404 - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="12121212"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addRoleToUserOnTenant - badUserId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add roles to a user on a tenant. - addRolesToUserOnTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addRoleToUserOnTenant - badUserId 404 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="userId" value="1212121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addRoleToUserOnTenant - badUserId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add roles to a user on a tenant. - addRolesToUserOnTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addRoleToUserOnTenant - badUserId 404 - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="userId" value="1212121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addRoleToUserOnTenant - badTenantId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add roles to a user on a tenant. - addRolesToUserOnTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addRoleToUserOnTenant - badTenantId 404 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="1212121212"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addRoleToUserOnTenant - badTenantId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add roles to a user on a tenant. - addRolesToUserOnTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addRoleToUserOnTenant - badTenantId 404 - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="1212121212"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addRoleToUserOnTenant - badAuth 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add roles to a user on a tenant. - addRolesToUserOnTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addRoleToUserOnTenant - badAuth 401 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addRoleToUserOnTenant - badAuth 401 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add roles to a user on a tenant. - addRolesToUserOnTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addRoleToUserOnTenant - badAuth 401 - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addRoleToUserOnTenant - non Admin 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add roles to a user on a tenant. - addRolesToUserOnTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addRoleToUserOnTenant - non Admin 403 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addRoleToUserOnTenant - non Admin 403 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add roles to a user on a tenant. - addRolesToUserOnTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addRoleToUserOnTenant - non Admin 403 - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - roles4UserOnTenant - badRoleId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete roles from a user on tenant. - deleteRoleFromUserOnTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - roles4UserOnTenant - badRoleId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="12121212"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - roles4UserOnTenant - badRoleId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete roles from a user on tenant. - deleteRoleFromUserOnTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - roles4UserOnTenant - badRoleId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="12121212"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - roles4UserOnTenant - badUserId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete roles from a user on tenant. - deleteRoleFromUserOnTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - roles4UserOnTenant - badUserId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="userId" value="1212121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - roles4UserOnTenant - badUserId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete roles from a user on tenant. - deleteRoleFromUserOnTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - roles4UserOnTenant - badUserId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="userId" value="1212121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - roles4UserOnTenant - badTenantId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete roles from a user on tenant. - deleteRoleFromUserOnTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - roles4UserOnTenant - badTenantId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="1212121212"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - roles4UserOnTenant - badTenantId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete roles from a user on tenant. - deleteRoleFromUserOnTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - roles4UserOnTenant - badTenantId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="1212121212"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - roles4UserOnTenant - badAuth 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete roles from a user on tenant. - deleteRoleFromUserOnTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - roles4UserOnTenant - badAuth 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - roles4UserOnTenant - badAuth 401 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete roles from a user on tenant. - deleteRoleFromUserOnTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - roles4UserOnTenant - badAuth 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - roles4UserOnTenant - non Admin 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete roles from a user on tenant. - deleteRoleFromUserOnTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - roles4UserOnTenant - non Admin 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - roles4UserOnTenant - non Admin 403 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete roles from a user on tenant. - deleteRoleFromUserOnTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - roles4UserOnTenant - non Admin 403 - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - tenant - negativeTest - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete a Tenant - deleteTenant" resourcePath="/${#Project#path}/tenants/{tenantId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - tenant - negativeTest - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>tenantName</con:name><con:value>MossoCloudFS_f3b094b3-0185-45bf-9608-a853456ffff</con:value></con:property><con:property><con:name>tenantId</con:name><con:value>MossoCloudFS_f3b094b3-0185-45bf-9608-a853456ffff</con:value></con:property><con:property><con:name>request1json</con:name><con:value>{ "tenant": { "name": "${#TestCase#tenantName}", "description": "test a description", "enabled": true } }</con:value></con:property><con:property><con:name>testName</con:name><con:value>testuser200</con:value></con:property><con:property><con:name>testemail</con:name><con:value>testuser@rackspace.com</con:value></con:property><con:property><con:name>testuserId</con:name><con:value>10002056</con:value></con:property><con:property><con:name>roleId</con:name><con:value>10001791</con:value></con:property><con:property><con:name>tenantId2</con:name><con:value>MossoCloudFS_f3b094b3-0185-45bf-9608-a853456ffff</con:value></con:property><con:property><con:name>tenantName2</con:name><con:value>5701091</con:value></con:property><con:property><con:name>request2json</con:name><con:value>{ "tenant": { "name": "newName", "description": "new description", "enabled": true } }</con:value></con:property><con:property><con:name>testName2</con:name><con:value>testuser400</con:value></con:property><con:property><con:name>roleId2</con:name><con:value>10001792</con:value></con:property><con:property><con:name>testuserId2</con:name><con:value>10002057</con:value></con:property><con:property><con:name>addTenantNoNamejson</con:name><con:value>{ "tenant": { "name": "", "description": "test a description", "enabled": true } }</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="service" searchProperties="true" id="eaaad3ce-e3bf-49cf-a8a6-d28192009190" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="GET - listServices - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Services - listServices" resourcePath="/${#Project#path}/OS-KSADM/services" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listServices - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0';
count(//ns1:services[1]/ns1:service/@name) >= 1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listServices - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Services - listServices" resourcePath="/${#Project#path}/OS-KSADM/services" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listServices - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"OS-KSADM:services":[{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains"><con:configuration><token>"name":null</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addService - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Service - addService" resourcePath="/${#Project#path}/OS-KSADM/services" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addService - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:service description="OpenStack Compute Service" name="nova" type="compute" xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addService - 409 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Service - addService" resourcePath="/${#Project#path}/OS-KSADM/services" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addService - 409 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:service description="OpenStack Compute Service" name="nova" type="compute" xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 409</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store service info"><con:settings/><con:config><script>def serviceId = context.expand( '${POST - addService - xml#Response#declare namespace ns13=\'http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0\'; //ns13:service[1]/@id}' )
log.info "service Id = " + serviceId

if(serviceId == "")
{
	assert false
}
testRunner.testCase.setPropertyValue("serviceId", serviceId)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - service - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get Service - getService" resourcePath="/${#Project#path}/OS-KSADM/services/{serviceId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - service - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="${#TestCase#serviceId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - Service - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete Service - deleteService" resourcePath="/${#Project#path}/OS-KSADM/services/{serviceId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - Service - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="${#TestCase#serviceId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>body1json</con:name><con:sourceType>request1json</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addService - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body2</con:name><con:sourceType>addServiceNoTypejson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addService - noType 400 - json</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST - addService - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Service - addService" resourcePath="/${#Project#path}/OS-KSADM/services" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addService - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "OS-KSADM:service":{ "name":"nova", "type":"compute", "description":"OpenStack Compute Service" } } </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"OS-KSADM:service":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store service info 2"><con:settings/><con:config><script>def serviceId = context.expand( '${POST - addService - xml#Response#declare namespace ns13=\'http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0\'; //ns13:service[1]/@id}' )
log.info "service Id = " + serviceId

if(serviceId == "")
{
	assert false
}
testRunner.testCase.setPropertyValue("serviceId", serviceId)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - service - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get Service - getService" resourcePath="/${#Project#path}/OS-KSADM/services/{serviceId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - service - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"OS-KSADM:service":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="${#TestCase#serviceId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - Service - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete Service - deleteService" resourcePath="/${#Project#path}/OS-KSADM/services/{serviceId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - Service - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="${#TestCase#serviceId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listServices - badAuth 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Services - listServices" resourcePath="/${#Project#path}/OS-KSADM/services" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listServices - badAuth 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="badAuth" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listServices - badAuth 401 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Services - listServices" resourcePath="/${#Project#path}/OS-KSADM/services" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listServices - badAuth 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="badAuth" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listServices - non Admin 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Services - listServices" resourcePath="/${#Project#path}/OS-KSADM/services" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listServices - non Admin 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listServices - non Admin 403 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Services - listServices" resourcePath="/${#Project#path}/OS-KSADM/services" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listServices - non Admin 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addService - noType 400 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Service - addService" resourcePath="/${#Project#path}/OS-KSADM/services" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addService - noType 400 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:service description="OpenStack Compute Service" name="nova" type="" xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addService - noType 400 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Service - addService" resourcePath="/${#Project#path}/OS-KSADM/services" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addService - noType 400 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "OS-KSADM:service":{ "name":"nova", "type":"", "description":"OpenStack Compute Service" } } </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addService - badAuth 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Service - addService" resourcePath="/${#Project#path}/OS-KSADM/services" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addService - badAuth 401 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:service description="OpenStack Compute Service" name="nova" type="compute" xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="badAuth" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addService - badAuth 401 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Service - addService" resourcePath="/${#Project#path}/OS-KSADM/services" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addService - badAuth 401 - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:service description="OpenStack Compute Service" name="nova" type="compute" xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="badAuth" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addService - non Admin 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Service - addService" resourcePath="/${#Project#path}/OS-KSADM/services" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addService - non Admin 403 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:service description="OpenStack Compute Service" name="nova" type="compute" xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addService - non Admin 403 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Service - addService" resourcePath="/${#Project#path}/OS-KSADM/services" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addService - non Admin 403 - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:service description="OpenStack Compute Service" name="nova" type="compute" xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - service - badServiceId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get Service - getService" resourcePath="/${#Project#path}/OS-KSADM/services/{serviceId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - service - badServiceId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="12121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - service - badServiceId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get Service - getService" resourcePath="/${#Project#path}/OS-KSADM/services/{serviceId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - service - badServiceId 404 - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="12121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - service - badAuth 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get Service - getService" resourcePath="/${#Project#path}/OS-KSADM/services/{serviceId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - service - badAuth 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="${#TestCase#serviceId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - service - badAuth 401 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get Service - getService" resourcePath="/${#Project#path}/OS-KSADM/services/{serviceId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - service - badAuth 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="${#TestCase#serviceId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - service - non Admin 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get Service - getService" resourcePath="/${#Project#path}/OS-KSADM/services/{serviceId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - service - non Admin 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="${#TestCase#serviceId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - service - non Admin 403 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get Service - getService" resourcePath="/${#Project#path}/OS-KSADM/services/{serviceId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - service - non Admin 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="${#TestCase#serviceId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - Service - badServiceId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete Service - deleteService" resourcePath="/${#Project#path}/OS-KSADM/services/{serviceId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - Service - badServiceId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="1212121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - Service - badServiceId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete Service - deleteService" resourcePath="/${#Project#path}/OS-KSADM/services/{serviceId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - Service - badServiceId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="1212121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - Service - badAuth 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete Service - deleteService" resourcePath="/${#Project#path}/OS-KSADM/services/{serviceId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - Service - badAuth 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="1212121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>serviceId</con:name><con:value>e5daba832cd4dfbb3bc3a365ce5d12ab091686af</con:value></con:property><con:property><con:name>request1json</con:name><con:value>{ "OS-KSADM:service":{ "name":"nova", "type":"compute", "description":"OpenStack Compute Service" } } </con:value></con:property><con:property><con:name>addServiceNoTypejson</con:name><con:value>{ "OS-KSADM:service":{ "name":"nova", "type":"", "description":"OpenStack Compute Service" } } </con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="password validation" searchProperties="true" id="db3eaa39-c8a0-4948-a53c-d8f923cc3e19" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="POST - addUser - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user - addUser" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:user display-name="${#TestCase#testuser}" email="${#TestCase#testemail}" enabled="true" id="" username="${#TestCase#testuser}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store user info"><con:settings/><con:config><script>def userId = context.expand( '${POST - addUser - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:user[1]/@id}' )
log.info "get userId: " + userId

if (userId == "")
{
	assert false;	
}
testRunner.testCase.setPropertyValue("testuserId", userId)</script></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer xml"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>body1</con:name><con:sourceType>addUserCredentials-lowercase</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addUserCredentials - lowerCase 400 - xml</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body2</con:name><con:sourceType>addUserCredentials-uppercase</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addUserCredentials - upperCase 400 - xml</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body3</con:name><con:sourceType>addUserCredentials-numbers</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addUserCredentials - numbers 400 - xml</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body4</con:name><con:sourceType>addUserCredentials-lessThenLenght8</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addUserCredentials - lessThenLenght8 400 - xml</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body5</con:name><con:sourceType>addUserCredentials-twoRules</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addUserCredentials - twoRules 400 - xml</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body6</con:name><con:sourceType>addUserCredentials</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addUserCredentials - xml</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUserCredentials - lowerCase 400 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user Credential. - addUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUserCredentials - lowerCase 400 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;passwordCredentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://docs.openstack.org/identity/api/v2.0" username="${#TestCase#testuser}" password="thisisatest"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Password must be at least 8 characters in length, must contain at least one uppercase letter, one lowercase letter and one numeric character.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUserCredentials - upperCase 400 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user Credential. - addUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUserCredentials - upperCase 400 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;passwordCredentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://docs.openstack.org/identity/api/v2.0" username="${#TestCase#testuser}" password="THISISATEST"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Password must be at least 8 characters in length, must contain at least one uppercase letter, one lowercase letter and one numeric character.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUserCredentials - numbers 400 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user Credential. - addUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUserCredentials - numbers 400 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;passwordCredentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://docs.openstack.org/identity/api/v2.0" username="${#TestCase#testuser}" password="123456789"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Password must be at least 8 characters in length, must contain at least one uppercase letter, one lowercase letter and one numeric character.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUserCredentials - lessThenLenght8 400 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user Credential. - addUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUserCredentials - lessThenLenght8 400 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;passwordCredentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://docs.openstack.org/identity/api/v2.0" username="${#TestCase#testuser}" password="Th1sIs"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Password must be at least 8 characters in length, must contain at least one uppercase letter, one lowercase letter and one numeric character.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUserCredentials - twoRules 400 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user Credential. - addUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUserCredentials - twoRules 400 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;passwordCredentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://docs.openstack.org/identity/api/v2.0" username="${#TestCase#testuser}" password="ThisIsATest"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Password must be at least 8 characters in length, must contain at least one uppercase letter, one lowercase letter and one numeric character.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUserCredentials - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user Credential. - addUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUserCredentials - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;passwordCredentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://docs.openstack.org/identity/api/v2.0" username="${#TestCase#testuser}" password="ThisIsATest1"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>Password must contain at least one numeric character</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - user - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="HARD Deleted - user - xml"><con:settings/><con:config service="GA-softDeleted" methodName="Delete from soft delete - softDeleted" resourcePath="/${#Project#path}/softDeleted/users/{user_id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="HARD Deleted - user - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>testuser</con:name><con:value>testuser007</con:value></con:property><con:property><con:name>testemail</con:name><con:value>testuser@rackspace.com</con:value></con:property><con:property><con:name>testuserId</con:name><con:value>10002058</con:value></con:property><con:property><con:name>addUserCredentials-lowercase</con:name><con:value>&lt;passwordCredentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://docs.openstack.org/identity/api/v2.0" username="${#TestCase#testuser}" password="thisisatest"/></con:value></con:property><con:property><con:name>addUserCredentials-uppercase</con:name><con:value>&lt;passwordCredentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://docs.openstack.org/identity/api/v2.0" username="${#TestCase#testuser}" password="THISISATEST"/></con:value></con:property><con:property><con:name>addUserCredentials-numbers</con:name><con:value>&lt;passwordCredentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://docs.openstack.org/identity/api/v2.0" username="${#TestCase#testuser}" password="123456789"/></con:value></con:property><con:property><con:name>addUserCredentials-lessThenLenght8</con:name><con:value>&lt;passwordCredentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://docs.openstack.org/identity/api/v2.0" username="${#TestCase#testuser}" password="Th1sIs"/></con:value></con:property><con:property><con:name>addUserCredentials-twoRules</con:name><con:value>&lt;passwordCredentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://docs.openstack.org/identity/api/v2.0" username="${#TestCase#testuser}" password="ThisIsATest"/></con:value></con:property><con:property><con:name>addUserCredentials</con:name><con:value>&lt;passwordCredentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://docs.openstack.org/identity/api/v2.0" username="${#TestCase#testuser}" password="ThisIsATest1"/></con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="multiple users" searchProperties="true" id="27c4ab5a-2ff9-4939-a839-cc9ef2069185" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="POST - createUser - w/ admin - xml"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users" methodName="Add user - addUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createUser - w/ admin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:user display-name="userAdmin" email="useradmin@email.com" enabled="false" username="userAdmin" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listUserRoles - userAdmin disabled - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Global Roles for a User - listUserRoles" resourcePath="/${#Project#path}/users/{userId}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listUserRoles - userAdmin disabled - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:roles[1]/ns1:role/@name</path><content>identity:user-admin</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="bde1268ebabeeabb70a0e702a4626977c331d5c4"/>
  <con:entry key="userId" value="${POST - createUser - w/ admin - xml#ResponseAsXml#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@id}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer xml"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>body1</con:name><con:sourceType>addUserCredentials</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addUserCredentials - xml</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body2</con:name><con:sourceType>addUserCredentials2</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addUserCredentials 2 - xml</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body3</con:name><con:sourceType>addUserCredentials3</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addUserCredentials - defaultUser - xml</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUserCredentials - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user Credential. - addUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUserCredentials - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:credentials xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>passwordCredentials</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${POST - createUser - w/ admin - xml#ResponseAsXml#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@id}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - tokens - w/ userAdmin disabled 403 - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - tokens - w/ userAdmin disabled 403 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#userAdminPw}" username="${#TestCase#userAdmin}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUser - enabled - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user - updateUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUser - enabled - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:user email="${POST - createUser - w/ admin - xml#ResponseAsXml#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@email}" enabled="true" id="${POST - createUser - w/ admin - xml#ResponseAsXml#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@id}" username="${POST - createUser - w/ admin - xml#ResponseAsXml#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@username}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#newemail}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${POST - createUser - w/ admin - xml#ResponseAsXml#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@id}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - tokens - w/ userAdmin - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - tokens - w/ userAdmin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#userAdminPw}" username="${#TestCase#userAdmin}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:user[1]/@name</path><content>userAdmin</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:user[1]/ns1:roles[1]/ns1:role[1]/@id</path><content>2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:user[1]/ns1:roles[1]/ns1:role[1]/@name</path><content>identity:user-admin</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUser - disabled - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user - updateUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUser - disabled - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:user email="${POST - createUser - w/ admin - xml#ResponseAsXml#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@email}" enabled="false" id="${POST - createUser - w/ admin - xml#ResponseAsXml#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@id}" username="${POST - createUser - w/ admin - xml#ResponseAsXml#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@username}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#newemail}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${POST - createUser - w/ admin - xml#ResponseAsXml#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@id}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - validate 404 - xml"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - validate 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:itemNotFound[1]/ns1:message[1]</path><content>Token not found.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${POST - tokens - w/ userAdmin - xml#ResponseAsXml#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:access[1]/ns7:token[1]/@id}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - tokens - w/ userAdmin - disabled 403 - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - tokens - w/ userAdmin - disabled 403 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#userAdminPw}" username="${#TestCase#userAdmin}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUser - enabled - xml 2"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user - updateUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUser - enabled - xml 2" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:user email="${POST - createUser - w/ admin - xml#ResponseAsXml#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@email}" enabled="true" id="${POST - createUser - w/ admin - xml#ResponseAsXml#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@id}" username="${POST - createUser - w/ admin - xml#ResponseAsXml#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@username}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#newemail}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${POST - createUser - w/ admin - xml#ResponseAsXml#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@id}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - tokens - w/ userAdmin enabled - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - tokens - w/ userAdmin enabled - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#userAdminPw}" username="${#TestCase#userAdmin}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - validate - enabledUser oldToken 404 - xml"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - validate - enabledUser oldToken 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:itemNotFound[1]/ns1:message[1]</path><content>Token not found.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${POST - tokens - w/ userAdmin - xml#ResponseAsXml#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:access[1]/ns7:token[1]/@id}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - createUser - w/ userAdmin - xml"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users" methodName="Add user - addUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createUser - w/ userAdmin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:user display-name="defaultUser" email="defaultuser@email.com" enabled="false" username="${#TestCase#defaultUser}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${POST - tokens - w/ userAdmin enabled - xml#ResponseAsXml#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:access[1]/ns7:token[1]/@id}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUser - defaultUser w/ userAdmin1  - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user - updateUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUser - defaultUser w/ userAdmin1  - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:user email="${POST - createUser - w/ userAdmin - xml#Response#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@email}" enabled="true" id="${POST - createUser - w/ userAdmin - xml#Response#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@id}" username="${POST - createUser - w/ userAdmin - xml#Response#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@username}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>enabled="true"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${POST - createUser - w/ userAdmin - xml#Response#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@id}"/>
  <con:entry key="X-Auth-Token" value="${POST - tokens - w/ userAdmin enabled - xml#Response#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:access[1]/ns7:token[1]/@id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUserCredentials - defaultUser - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user Credential. - addUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUserCredentials - defaultUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;passwordCredentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://docs.openstack.org/identity/api/v2.0" username="${#TestCase#defaultUser}" password="${#TestCase#defaultUserPw}"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>passwordCredentials</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${POST - createUser - w/ userAdmin - xml#Response#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@id}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - tokens - w/ defaultUser - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - tokens - w/ defaultUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#defaultUserPw}" username="${#TestCase#defaultUser}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUser -  defaultUser can't update user of userAdmin1 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user - updateUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUser -  defaultUser can't update user of userAdmin1 403 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:user email="${POST - createUser - w/ userAdmin - xml#ResponseAsXml#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@email}" enabled="false" id="${POST - createUser - w/ userAdmin - xml#ResponseAsXml#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@id}" username="${POST - createUser - w/ userAdmin - xml#ResponseAsXml#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@name}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#newemail}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${POST - createUser - w/ userAdmin - xml#ResponseAsXml#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@id}"/>
  <con:entry key="X-Auth-Token" value="${POST - tokens - w/ userAdmin2 enabled - xml#ResponseAsXml#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:access[1]/ns7:token[1]/@id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listUserRoles - defaultUser disabled - xml" disabled="true"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Global Roles for a User - listUserRoles" resourcePath="/${#Project#path}/users/{userId}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listUserRoles - defaultUser disabled - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>role </token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="bde1268ebabeeabb70a0e702a4626977c331d5c4"/>
  <con:entry key="userId" value="${POST - createUser - w/ userAdmin - xml#ResponseAsXml#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@id}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listUsers - w/admin - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List users - listUsers" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listUsers - w/admin - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:users[1]/ns1:user) > 5</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listUsers - w/userAdmin - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List users - listUsers" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listUsers - w/userAdmin - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:users[1]/ns1:user)</path><content>2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${POST - tokens - w/ userAdmin enabled - xml#ResponseAsXml#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:access[1]/ns7:token[1]/@id}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - createUser 2 - w/ admin - xml"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users" methodName="Add user - addUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createUser 2 - w/ admin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:user display-name="userAdmin2" email="useradmin2@email.com" enabled="true" username="userAdmin2" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUserCredentials 2 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user Credential. - addUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUserCredentials 2 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;passwordCredentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://docs.openstack.org/identity/api/v2.0" username="${#TestCase#userAdmin2}" password="${#TestCase#userAdmin2Pw}"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>passwordCredentials</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${POST - createUser 2 - w/ admin - xml#ResponseAsXml#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@id}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - tokens - w/ userAdmin2 enabled - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - tokens - w/ userAdmin2 enabled - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#userAdmin2Pw}" username="${#TestCase#userAdmin2}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUser -  userAdmin2 can't update user of userAdmin1 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user - updateUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUser -  userAdmin2 can't update user of userAdmin1 403 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:user email="${POST - createUser - w/ userAdmin - xml#ResponseAsXml#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@email}" enabled="false" id="${POST - createUser - w/ userAdmin - xml#ResponseAsXml#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@id}" username="${POST - createUser - w/ userAdmin - xml#ResponseAsXml#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@name}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#newemail}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${POST - createUser - w/ userAdmin - xml#ResponseAsXml#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@id}"/>
  <con:entry key="X-Auth-Token" value="${POST - tokens - w/ userAdmin2 enabled - xml#ResponseAsXml#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:access[1]/ns7:token[1]/@id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - user - userAdmin2 can't delete defaultUser of userAdmin1 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user - userAdmin2 can't delete defaultUser of userAdmin1 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Access is denied</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${POST - createUser - w/ userAdmin - xml#Response#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@id}"/>
  <con:entry key="X-Auth-Token" value="${POST - tokens - w/ userAdmin2 enabled - xml#ResponseAsXml#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:access[1]/ns7:token[1]/@id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - user - userAdmin2 can't delete userAdmin1 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user - userAdmin2 can't delete userAdmin1 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Access is denied</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${POST - tokens - w/ userAdmin enabled - xml#Response#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:access[1]/ns7:user[1]/@id}"/>
  <con:entry key="X-Auth-Token" value="${POST - tokens - w/ userAdmin2 enabled - xml#ResponseAsXml#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:access[1]/ns7:token[1]/@id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - user - defaultUser w/ userAdmin1 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user - defaultUser w/ userAdmin1 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${POST - createUser - w/ userAdmin - xml#Response#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@id}"/>
  <con:entry key="X-Auth-Token" value="${POST - tokens - w/ userAdmin enabled - xml#Response#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:access[1]/ns7:token[1]/@id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - user - userAdmin1 w/ admin - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user - userAdmin1 w/ admin - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${POST - createUser - w/ admin - xml#Response#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@id}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - user - userAdmin2 w/ admin - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user - userAdmin2 w/ admin - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${POST - createUser 2 - w/ admin - xml#Response#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@id}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="HARD Delete - user - defaultUser - xml"><con:settings/><con:config service="GA-softDeleted" methodName="Delete from soft delete - softDeleted" resourcePath="/${#Project#path}/softDeleted/users/{user_id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="HARD Delete - user - defaultUser - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${POST - createUser - w/ userAdmin - xml#Response#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@id}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="HARD Delete - user - adminUser1 - xml"><con:settings/><con:config service="GA-softDeleted" methodName="Delete from soft delete - softDeleted" resourcePath="/${#Project#path}/softDeleted/users/{user_id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="HARD Delete - user - adminUser1 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${POST - createUser - w/ admin - xml#Response#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@id}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="HARD Delete - user - adminUser2 - xml"><con:settings/><con:config service="GA-softDeleted" methodName="Delete from soft delete - softDeleted" resourcePath="/${#Project#path}/softDeleted/users/{user_id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="HARD Delete - user - adminUser2 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${POST - createUser 2 - w/ admin - xml#Response#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@id}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>userAdminPw</con:name><con:value>Password1</con:value></con:property><con:property><con:name>userAdmin</con:name><con:value>userAdmin</con:value></con:property><con:property><con:name>userAdmin2</con:name><con:value>userAdmin2</con:value></con:property><con:property><con:name>userAdmin2pw</con:name><con:value>Password1</con:value></con:property><con:property><con:name>defaultUser</con:name><con:value>defaultUser</con:value></con:property><con:property><con:name>defaultUserPw</con:name><con:value>Password1</con:value></con:property><con:property><con:name>addUserCredentials</con:name><con:value>&lt;passwordCredentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://docs.openstack.org/identity/api/v2.0" username="${#TestCase#userAdmin}" password="${#TestCase#userAdminPw}"/></con:value></con:property><con:property><con:name>addUserCredentials2</con:name><con:value>&lt;passwordCredentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://docs.openstack.org/identity/api/v2.0" username="${#TestCase#userAdmin2}" password="${#TestCase#userAdmin2Pw}"/></con:value></con:property><con:property><con:name>addUserCredentials3</con:name><con:value>&lt;passwordCredentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://docs.openstack.org/identity/api/v2.0" username="${#TestCase#defaultUser}" password="${#TestCase#defaultUserPw}"/></con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="create &amp; update user w/ password" searchProperties="true" id="52227e64-dacd-4187-a590-2243ddc552e6" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="POST - addUser w/ password - w/ admin - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add User w/ password" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUser w/ password - w/ admin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;user xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:OS-KSADM="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0" display-name="${#TestCase#username}" enabled="true" email="adminUser@rack.com" username="${#TestCase#username}" OS-KSADM:password="${#TestCase#password}"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUser w/ password - w/ admin  409 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add User w/ password" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUser w/ password - w/ admin  409 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;user xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:OS-KSADM="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0" display-name="${#TestCase#username}" enabled="true" email="adminUser@rack.com" username="${#TestCase#username}" OS-KSADM:password="${#TestCase#password}"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 409</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - tokens - w/ adminUser  - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - tokens - w/ adminUser  - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#password}" username="${#TestCase#username}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:user[1]/ns1:roles[1]/ns1:role/@name</path><content>identity:user-admin</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUser - adminUser's password - xml"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users/{userId}" methodName="Update user w/ password" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUser - adminUser's password - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;user xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:OS-KSADM="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0" display-name="adminUser" enabled="true" email="adminUser@rack.com" username="${#TestCase#username}" OS-KSADM:password="Password2"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${POST - addUser w/ password - w/ admin - xml#Response#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@id}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUser - adminUser's password 2 - xml"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users/{userId}" methodName="Update user w/ password" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUser - adminUser's password 2 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;user xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:OS-KSADM="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0" display-name="adminUser" enabled="true" email="adminUser@rack.com" username="${#TestCase#username}" OS-KSADM:password="Password2"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${POST - addUser w/ password - w/ admin - xml#Response#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@id}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUser w/ password - w/ adminUser - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add User w/ password" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUser w/ password - w/ adminUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;user xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:OS-KSADM="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0" display-name="${#TestCase#username2}" enabled="true" email="adminUser@rack.com" username="${#TestCase#username2}" OS-KSADM:password="${#TestCase#password2}"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${POST - tokens - w/ adminUser  - xml#Response#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:access[1]/ns7:token[1]/@id}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUser w/ password - w/ adminUser 2 409 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add User w/ password" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUser w/ password - w/ adminUser 2 409 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;user xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:OS-KSADM="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0" display-name="${#TestCase#username2}" enabled="true" email="adminUser@rack.com" username="${#TestCase#username2}" OS-KSADM:password="${#TestCase#password2}"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 409
</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${POST - tokens - w/ adminUser  - xml#Response#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:access[1]/ns7:token[1]/@id}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - tokens - w/ regUser  - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - tokens - w/ regUser  - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#password2}" username="${#TestCase#username2}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:user[1]/@name</path><content>${#TestCase#username2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUser - regUser's password - xml"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users/{userId}" methodName="Update user w/ password" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUser - regUser's password - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;user xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:OS-KSADM="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0" display-name="adminUser" enabled="true" email="adminUser@rack.com" username="${#TestCase#username2}" OS-KSADM:password="Password2"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${POST - addUser w/ password - w/ adminUser - xml#Response#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@id}"/>
  <con:entry key="X-Auth-Token" value="${POST - tokens - w/ adminUser  - xml#Response#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:access[1]/ns7:token[1]/@id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUser - regUser's password 2 - xml"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users/{userId}" methodName="Update user w/ password" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUser - regUser's password 2 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;user xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:OS-KSADM="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0" display-name="adminUser" enabled="true" email="adminUser@rack.com" username="${#TestCase#username2}" OS-KSADM:password="Password2"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${POST - addUser w/ password - w/ adminUser - xml#Response#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@id}"/>
  <con:entry key="X-Auth-Token" value="${POST - tokens - w/ adminUser  - xml#Response#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:access[1]/ns7:token[1]/@id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - user - regUser - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user - regUser - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${POST - addUser w/ password - w/ adminUser - xml#Response#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@id}"/>
  <con:entry key="X-Auth-Token" value="${POST - tokens - w/ adminUser  - xml#Response#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:access[1]/ns7:token[1]/@id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - user - adminUser - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user - adminUser - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${POST - addUser w/ password - w/ admin - xml#Response#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@id}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="HARD Delete - user - regUser - xml"><con:settings/><con:config service="GA-softDeleted" methodName="Delete from soft delete - softDeleted" resourcePath="/${#Project#path}/softDeleted/users/{user_id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="HARD Delete - user - regUser - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${POST - addUser w/ password - w/ adminUser - xml#Response#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@id}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="HARD Delete - user - adminUser - xml"><con:settings/><con:config service="GA-softDeleted" methodName="Delete from soft delete - softDeleted" resourcePath="/${#Project#path}/softDeleted/users/{user_id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="HARD Delete - user - adminUser - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${POST - addUser w/ password - w/ admin - xml#Response#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@id}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>body1</con:name><con:sourceType>authjson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - tokens - w/ adminUser  - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body2</con:name><con:sourceType>auth2json</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - tokens - w/ regUser  - json</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUser w/ password - w/ admin - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add User w/ password" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUser w/ password - w/ admin - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
  "user": {
    "display-name":"${#TestCase#username3}"
    "username":"${#TestCase#username3}",
    "email":"john.smith@example.org",
    "enabled":true,
    "OS-KSADM:password":"${#TestCase#password3}"
  }
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"user":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - tokens - w/ adminUser  - json"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - tokens - w/ adminUser  - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "auth":{ "passwordCredentials":{ "username":"${#TestCase#username3}", "password":"${#TestCase#password3}" } } }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUser - adminUser's password - json"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users/{userId}" methodName="Update user w/ password" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUser - adminUser's password - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
  "user": {
    "display-name":"${#TestCase#username3}"
    "username":"${#TestCase#username3}",
    "email":"john.smith@example.org",
    "enabled":true,
    "OS-KSADM:password":"Password2"
  }
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${POST - addUser w/ password - w/ admin - json#ResponseAsXml#declare namespace ns1='${#Project#endpointjson}/${#Project#path}/users'; //ns1:Response[1]/ns1:user[1]/ns1:id[1]}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUser - adminUser's password 2 - json"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users/{userId}" methodName="Update user w/ password" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUser - adminUser's password 2 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
  "user": {
    "display-name":"${#TestCase#username3}"
    "username":"${#TestCase#username3}",
    "email":"john.smith@example.org",
    "enabled":true,
    "OS-KSADM:password":"Password2"
  }
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${POST - addUser w/ password - w/ admin - json#ResponseAsXml#declare namespace ns1='${#Project#endpointjson}/${#Project#path}/users'; //ns1:Response[1]/ns1:user[1]/ns1:id[1]}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUser w/ password - w/ adminUser - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add User w/ password" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUser w/ password - w/ adminUser - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
  "user": {
    "display-name":"${#TestCase#username4}"
    "username":"${#TestCase#username4}",
    "email":"john.smith@example.org",
    "enabled":true,
    "OS-KSADM:password":"${#TestCase#password4}"
  }
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${POST - tokens - w/ adminUser  - json#ResponseAsXml#declare namespace ns1='http://10.6.115.102/idm/cloud/v2.0/tokens'; //ns1:Response[1]/ns1:access[1]/ns1:token[1]/ns1:id[1]}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - tokens - w/ regUser  - json"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - tokens - w/ regUser  - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "auth":{ "passwordCredentials":{ "username":"${#TestCase#username4}", "password":"${#TestCase#password4}"} } }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUser - regUser's password - json"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users/{userId}" methodName="Update user w/ password" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUser - regUser's password - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
  "user": {
    "display-name":"${#TestCase#username3}"
    "username":"${#TestCase#username3}",
    "email":"john.smith@example.org",
    "enabled":true,
    "OS-KSADM:password":"Password2"
  }
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${POST - addUser w/ password - w/ adminUser - json#ResponseAsXml#declare namespace ns1='http://10.6.115.102/idm/cloud/v2.0/users'; //ns1:Response[1]/ns1:user[1]/ns1:id[1]}"/>
  <con:entry key="X-Auth-Token" value="${POST - tokens - w/ adminUser  - json#ResponseAsXml#declare namespace ns1='${#Project#endpointjson}/${#Project#path}/tokens'; //ns1:Response[1]/ns1:access[1]/ns1:token[1]/ns1:id[1]}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - user - regUser - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user - regUser - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${POST - addUser w/ password - w/ adminUser - json#ResponseAsXml#declare namespace ns1='http://10.6.115.102/idm/cloud/v2.0/users'; //ns1:Response[1]/ns1:user[1]/ns1:id[1]}"/>
  <con:entry key="X-Auth-Token" value="${POST - tokens - w/ adminUser  - json#ResponseAsXml#declare namespace ns1='http://10.6.115.102/idm/cloud/v2.0/tokens'; //ns1:Response[1]/ns1:access[1]/ns1:token[1]/ns1:id[1]}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - user - adminUser - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user - adminUser - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${POST - addUser w/ password - w/ admin - json#ResponseAsXml#declare namespace ns1='http://10.6.115.102/idm/cloud/v2.0/users'; //ns1:Response[1]/ns1:user[1]/ns1:id[1]}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="HARD Delete - user - regUser - json"><con:settings/><con:config service="GA-softDeleted" methodName="Delete from soft delete - softDeleted" resourcePath="/${#Project#path}/softDeleted/users/{user_id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="HARD Delete - user - regUser - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${POST - addUser w/ password - w/ adminUser - json#ResponseAsXml#declare namespace ns1='http://10.6.115.102/idm/cloud/v2.0/users'; //ns1:Response[1]/ns1:user[1]/ns1:id[1]}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="HARD Delete - user - adminUser - json"><con:settings/><con:config service="GA-softDeleted" methodName="Delete from soft delete - softDeleted" resourcePath="/${#Project#path}/softDeleted/users/{user_id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="HARD Delete - user - adminUser - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${POST - addUser w/ password - w/ admin - json#ResponseAsXml#declare namespace ns1='http://10.6.115.102/idm/cloud/v2.0/users'; //ns1:Response[1]/ns1:user[1]/ns1:id[1]}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>username</con:name><con:value>adminUser</con:value></con:property><con:property><con:name>password</con:name><con:value>Password1</con:value></con:property><con:property><con:name>username2</con:name><con:value>regUser</con:value></con:property><con:property><con:name>password2</con:name><con:value>Password1</con:value></con:property><con:property><con:name>username3</con:name><con:value>adminUser2</con:value></con:property><con:property><con:name>password3</con:name><con:value>Password1</con:value></con:property><con:property><con:name>username4</con:name><con:value>regUser2</con:value></con:property><con:property><con:name>password4</con:name><con:value>Password1</con:value></con:property><con:property><con:name>authjson</con:name><con:value>{ "auth":{ "passwordCredentials":{ "username":"${#TestCase#username3}", "password":"${#TestCase#password3}" } } }</con:value></con:property><con:property><con:name>auth2json</con:name><con:value>{ "auth":{ "passwordCredentials":{ "username":"${#TestCase#username4}", "password":"${#TestCase#password4}"} } }</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:properties><con:property><con:name>username</con:name><con:value>auth</con:value></con:property><con:property><con:name>password</con:name><con:value>Auth1234</con:value></con:property><con:property><con:name>tokenId</con:name><con:value>172e164a-f17c-4965-80f3-d8ba5ac90c-A</con:value></con:property><con:property><con:name>userId</con:name><con:value>153345</con:value></con:property><con:property><con:name>newUserId</con:name><con:value>1111111</con:value></con:property><con:property><con:name>username2</con:name><con:value>jmunoz</con:value></con:property><con:property><con:name>tokenId2</con:name><con:value>ca236019992f4593ad64e7171a838ab5</con:value></con:property><con:property><con:name>userId2</con:name><con:value>3</con:value></con:property><con:property><con:name>password2</con:name><con:value>Password1</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="Functional - OS-KSCATALOG-admin"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="endpoint template operations" searchProperties="true" id="ae65825d-8b61-4e50-a50c-f496a2c576db" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="POST - token - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#password}" username="${#TestSuite#username}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token info"><con:settings/><con:config><script>def tokenId = context.expand( '${POST - token - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info "get TokenId: " + tokenId
def userId = context.expand( '${POST - token - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/@id}' )
log.info "get UserId: " + userId

if (tokenId == "" | userId == "")
{
	assert false;	
}
testRunner.testCase.testSuite.setPropertyValue("tokenId", tokenId)
testRunner.testCase.testSuite.setPropertyValue("userId", userId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - nonAdmin - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - nonAdmin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#password2}" username="${#TestSuite#username2}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token info 2"><con:settings/><con:config><script>def tokenId = context.expand( '${POST - token - nonAdmin - xml#ResponseAsXml#declare namespace ns8=\'http://docs.openstack.org/identity/api/v2.0\'; //ns8:access[1]/ns8:token[1]/@id}' )
log.info "get TokenId: " + tokenId
def userId = context.expand( '${POST - token - nonAdmin - xml#ResponseAsXml#declare namespace ns8=\'http://docs.openstack.org/identity/api/v2.0\'; //ns8:access[1]/ns8:user[1]/@id}' )

log.info "get UserId: " + userId

if (tokenId == "" | userId == "")
{
	assert false;	
}
testRunner.testCase.testSuite.setPropertyValue("tokenId2", tokenId)
testRunner.testCase.testSuite.setPropertyValue("userId2", userId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - json"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#password}" username="${#TestSuite#username}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listEndpointTemplates - xml"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="List Endpoint Templates - listEndpointTemplates" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listEndpointTemplates - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0';
count(//ns1:endpointTemplates)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0';
count(//ns1:endpointTemplates[1]/ns1:endpointTemplate) > 0</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listEndpointTemplates - json"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="List Endpoint Templates - listEndpointTemplates" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listEndpointTemplates - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>OS-KSCATALOG:endpointTemplates</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 2"><con:configuration><token>{"OS-KSCATALOG:endpointTemplates":[{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addEndpointTemplate - xml"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Add Endpoint Template - addEndpointTemplate" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addEndpointTemplate - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:endpointTemplate adminURL="https://service-admin.com/v1" enabled="true" id="100" internalURL="https://service-internal.com/v1 " name="Compute" publicURL="https://service-public.com/v1 " region="North" type="compute" xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0">&lt;v1:version id="1" info="https://compute.north.public.com/v1/ " list="https://compute.north.public.com/"/>&lt;atom:link href="https://service-href.com" rel="author" xmlns:atom="http://www.w3.org/2005/Atom"/>&lt;/v1:endpointTemplate></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addEndpointTemplate - 409 - xml"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Add Endpoint Template - addEndpointTemplate" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addEndpointTemplate - 409 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:endpointTemplate enabled="true" id="100" internalURL="https://service-internal.com/v1 " name="Compute" publicURL="https://service-public.com/v1 " region="North" type="compute" xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0">&lt;v1:version id="1" info="https://compute.north.public.com/v1/ " list="https://compute.north.public.com/"/>&lt;atom:link href="https://service-href.com" rel="author" xmlns:atom="http://www.w3.org/2005/Atom"/>&lt;/v1:endpointTemplate></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 409</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - endpointTemplate - xml"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Get Endpoint Template - getEndpointTemplate" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates/{endpointTemplateId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - endpointTemplate - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="endpointTemplateId" value="100"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - endpointTemplate - xml"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Delete Endpoint Template. - deleteEndpointTemplate" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates/{endpointTemplateId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - endpointTemplate - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="endpointTemplateId" value="100"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="transfer json body"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>body1</con:name><con:sourceType>request1json</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addEndpointTemplate - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body2</con:name><con:sourceType>addEndpointTemplateBadIdjson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addEndpointTemplate - badId 400 - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body3</con:name><con:sourceType>request1json</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addEndpointTemplate - badAuth 401 - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body4</con:name><con:sourceType>request1json</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addEndpointTemplate - non Admin 403 - json</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST - addEndpointTemplate - json"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Add Endpoint Template - addEndpointTemplate" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addEndpointTemplate - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "OS-KSCATALOG:endpointTemplate":{ "id":100, "region":"North", "global":true, "type":"compute", "publicURL":"https://compute-north.public.com/v1", "internalURL":"https://compute.north.internal.com/v1", "versionId":"1", "versionInfo":"https://compute.north.public.com/v1/", "versionList":"https://compute.north.public.com/", "enabled":true } } </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"OS-KSCATALOG:endpointTemplate":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - endpointTemplate - json"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Get Endpoint Template - getEndpointTemplate" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates/{endpointTemplateId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - endpointTemplate - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"OS-KSCATALOG:endpointTemplate":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="endpointTemplateId" value="100"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - endpointTemplate - json"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Delete Endpoint Template. - deleteEndpointTemplate" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates/{endpointTemplateId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - endpointTemplate - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="endpointTemplateId" value="100"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addEndpointTemplate - global true - xml"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Add Endpoint Template - addEndpointTemplate" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addEndpointTemplate - global true - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:endpointTemplate enabled="true" global="true" id="101" internalURL="https://service-internal.com/v1 " name="Compute" publicURL="https://service-public.com/v1 " region="North" type="compute" xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0">&lt;v1:version id="1" info="https://compute.north.public.com/v1/ " list="https://compute.north.public.com/"/>&lt;atom:link href="https://service-href.com" rel="author" xmlns:atom="http://www.w3.org/2005/Atom"/>&lt;/v1:endpointTemplate></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addTenant - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Tenant - addTenant" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addTenant - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:tenant enabled="true" id="" name="${#TestCase#tenantName}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0">&lt;v2:description>test a Tenant&lt;/v2:description>&lt;/v2:tenant></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>name="${#TestCase#tenantName}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listEndpointsTenant - xml"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="List Endpoints - listEndpoints" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listEndpointsTenant - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:endpoints[1]/ns1:endpoint) > 0</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${POST - addTenant - xml#ResponseAsXml#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:tenant[1]/@id}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - endpointTemplate - global true - xml"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Delete Endpoint Template. - deleteEndpointTemplate" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates/{endpointTemplateId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - endpointTemplate - global true - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="endpointTemplateId" value="101"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - tenant - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete a Tenant - deleteTenant" resourcePath="/${#Project#path}/tenants/{tenantId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - tenant - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${POST - addTenant - xml#ResponseAsXml#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:tenant[1]/@id}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listEndpointTemplates - badAuthToken 401 - xml"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="List Endpoint Templates - listEndpointTemplates" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listEndpointTemplates - badAuthToken 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="qwert" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listEndpointTemplates - badAuthToken 401 - json"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="List Endpoint Templates - listEndpointTemplates" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listEndpointTemplates - badAuthToken 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="qwert" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listEndpointTemplates - non Admin 403 - xml"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="List Endpoint Templates - listEndpointTemplates" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listEndpointTemplates - non Admin 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listEndpointTemplates - non Admin 403 - json"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="List Endpoint Templates - listEndpointTemplates" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listEndpointTemplates - non Admin 403 - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addEndpointTemplate - badId 400 - xml"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Add Endpoint Template - addEndpointTemplate" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addEndpointTemplate - badId 400 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:endpointTemplate enabled="true" id="badId" internalURL="https://service-internal.com/v1 " name="Compute" publicURL="https://service-public.com/v1 " region="North" type="compute" xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0">&lt;v1:version id="1" info="https://compute.north.public.com/v1/ " list="https://compute.north.public.com/"/>&lt;atom:link href="https://service-href.com" rel="author" xmlns:atom="http://www.w3.org/2005/Atom"/>&lt;/v1:endpointTemplate></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Not a number: badId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addEndpointTemplate - badId 400 - json"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Add Endpoint Template - addEndpointTemplate" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addEndpointTemplate - badId 400 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "OS-KSCATALOG:endpointTemplate":{ "id":"badId", "region":"North", "global":true, "type":"compute", "publicURL":"https://compute-north.public.com/v1", "internalURL":"https://compute.north.internal.com/v1", "versionId":"1", "versionInfo":"https://compute.north.public.com/v1/", "versionList":"https://compute.north.public.com/", "enabled":true } } </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addEndpointTemplate - badAuth 401 - xml"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Add Endpoint Template - addEndpointTemplate" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addEndpointTemplate - badAuth 401 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:endpointTemplate enabled="true" id="100" internalURL="https://service-internal.com/v1 " name="Compute" publicURL="https://service-public.com/v1 " region="North" type="compute" xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0">&lt;v1:version id="1" info="https://compute.north.public.com/v1/ " list="https://compute.north.public.com/"/>&lt;atom:link href="https://service-href.com" rel="author" xmlns:atom="http://www.w3.org/2005/Atom"/>&lt;/v1:endpointTemplate></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="badAuth" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addEndpointTemplate - badAuth 401 - json"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Add Endpoint Template - addEndpointTemplate" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addEndpointTemplate - badAuth 401 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "OS-KSCATALOG:endpointTemplate":{ "id":100, "region":"North", "global":true, "type":"compute", "publicURL":"https://compute-north.public.com/v1", "internalURL":"https://compute.north.internal.com/v1", "versionId":"1", "versionInfo":"https://compute.north.public.com/v1/", "versionList":"https://compute.north.public.com/", "enabled":true } } </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="badAuth" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addEndpointTemplate - non Admin 403 - xml"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Add Endpoint Template - addEndpointTemplate" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addEndpointTemplate - non Admin 403 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:endpointTemplate enabled="true" id="100" internalURL="https://service-internal.com/v1 " name="Compute" publicURL="https://service-public.com/v1 " region="North" type="compute" xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0">&lt;v1:version id="1" info="https://compute.north.public.com/v1/ " list="https://compute.north.public.com/"/>&lt;atom:link href="https://service-href.com" rel="author" xmlns:atom="http://www.w3.org/2005/Atom"/>&lt;/v1:endpointTemplate></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addEndpointTemplate - non Admin 403 - json"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Add Endpoint Template - addEndpointTemplate" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addEndpointTemplate - non Admin 403 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "OS-KSCATALOG:endpointTemplate":{ "id":100, "region":"North", "global":true, "type":"compute", "publicURL":"https://compute-north.public.com/v1", "internalURL":"https://compute.north.internal.com/v1", "versionId":"1", "versionInfo":"https://compute.north.public.com/v1/", "versionList":"https://compute.north.public.com/", "enabled":true } } </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - endpointTemplate - badId 404 - xml"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Delete Endpoint Template. - deleteEndpointTemplate" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates/{endpointTemplateId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - endpointTemplate - badId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>For input string: "qwer"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="endpointTemplateId" value="100000001"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - endpointTemplate - badId 404 - json"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Delete Endpoint Template. - deleteEndpointTemplate" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates/{endpointTemplateId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - endpointTemplate - badId 404 - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>For input string: "qwer"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="endpointTemplateId" value="100000001"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - endpointTemplate - badAuth 401 - xml"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Delete Endpoint Template. - deleteEndpointTemplate" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates/{endpointTemplateId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - endpointTemplate - badAuth 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="endpointTemplateId" value="100"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - endpointTemplate - badAuth 401 - json"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Delete Endpoint Template. - deleteEndpointTemplate" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates/{endpointTemplateId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - endpointTemplate - badAuth 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="endpointTemplateId" value="100"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - endpointTemplate - non Admin 403 - xml"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Delete Endpoint Template. - deleteEndpointTemplate" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates/{endpointTemplateId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - endpointTemplate - non Admin 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="endpointTemplateId" value="100"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - endpointTemplate - non Admin 403 - json"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Delete Endpoint Template. - deleteEndpointTemplate" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates/{endpointTemplateId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - endpointTemplate - non Admin 403 - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="endpointTemplateId" value="100"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - endpointTemplate - badId 404 - xml"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Get Endpoint Template - getEndpointTemplate" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates/{endpointTemplateId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - endpointTemplate - badId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>For input string: "qwert"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="endpointTemplateId" value="100000001"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - endpointTemplate - badId 404 - json"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Get Endpoint Template - getEndpointTemplate" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates/{endpointTemplateId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - endpointTemplate - badId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>For input string: \"qwert\"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="endpointTemplateId" value="100000001"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - endpointTemplate - badAuth 401 - xml"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Get Endpoint Template - getEndpointTemplate" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates/{endpointTemplateId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - endpointTemplate - badAuth 401 - xml" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="endpointTemplateId" value="100"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - endpointTemplate - badAuth 401 - json"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Get Endpoint Template - getEndpointTemplate" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates/{endpointTemplateId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - endpointTemplate - badAuth 401 - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="endpointTemplateId" value="100"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - endpointTemplate - non Admin 403 - xml"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Get Endpoint Template - getEndpointTemplate" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates/{endpointTemplateId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - endpointTemplate - non Admin 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="endpointTemplateId" value="100"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - endpointTemplate - non Admin 403 - json"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Get Endpoint Template - getEndpointTemplate" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates/{endpointTemplateId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - endpointTemplate - non Admin 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="endpointTemplateId" value="100"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>request1json</con:name><con:value>{ "OS-KSCATALOG:endpointTemplate":{ "id":100, "region":"North", "global":true, "type":"compute", "publicURL":"https://compute-north.public.com/v1", "internalURL":"https://compute.north.internal.com/v1", "versionId":"1", "versionInfo":"https://compute.north.public.com/v1/", "versionList":"https://compute.north.public.com/", "enabled":true } } </con:value></con:property><con:property><con:name>addEndpointTemplateBadIdjson</con:name><con:value>{ "OS-KSCATALOG:endpointTemplate":{ "id":"badId", "region":"North", "global":true, "type":"compute", "publicURL":"https://compute-north.public.com/v1", "internalURL":"https://compute.north.internal.com/v1", "versionId":"1", "versionInfo":"https://compute.north.public.com/v1/", "versionList":"https://compute.north.public.com/", "enabled":true } } </con:value></con:property><con:property><con:name>tenantName</con:name><con:value>MossoCloudFS_f3b094b3-0185-45bf-9608-a853456aaaa</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="endpoint operations" searchProperties="true" id="690a0585-4a8f-4e20-b126-050330a50ce4" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="GET - tenants - xml"><con:settings/><con:config service="identity-admin" methodName="Get Tenants - listTenants" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - tenants - xml - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>tenants</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store tenant info"><con:settings/><con:config><script>def tenantId = context.expand( '${GET - tenants - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:tenants[1]/ns1:tenant[1]/@id}' )
def tenantName = context.expand( '${GET - tenants - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:tenants[1]/ns1:tenant[1]/@name}' )
log.info "get tenantId: " + tenantId
log.info "get tenantName: " + tenantName
if (tenantId == "" || tenantName == "")
{
	assert false;	
}

testRunner.testCase.testSuite.setPropertyValue("tenantId", tenantId)
testRunner.testCase.testSuite.setPropertyValue("tenantName", tenantName)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - addEndpointTemplate - xml"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Add Endpoint Template - addEndpointTemplate" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addEndpointTemplate - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:endpointTemplate adminURL="https://service-admin.com/v1" enabled="true" id="100" internalURL="https://service-internal.com/v1" name="Compute" publicURL="https://service-public.com/v1" region="North" type="compute" xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0">&lt;v1:version id="1" info="https://compute.north.public.com/v1/ " list="https://compute.north.public.com/"/>&lt;atom:link href="https://service-href.com" rel="author" xmlns:atom="http://www.w3.org/2005/Atom"/>&lt;/v1:endpointTemplate></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addEndpointTemplate - 409 - xml"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Add Endpoint Template - addEndpointTemplate" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addEndpointTemplate - 409 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:endpointTemplate enabled="true" id="100" internalURL="https://service-internal.com/v1 " name="Compute" publicURL="https://service-public.com/v1 " region="North" type="compute" xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0">&lt;v1:version id="1" info="https://compute.north.public.com/v1/ " list="https://compute.north.public.com/"/>&lt;atom:link href="https://service-href.com" rel="author" xmlns:atom="http://www.w3.org/2005/Atom"/>&lt;/v1:endpointTemplate></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 409</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listEndpointsTenant - xml"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="List Endpoints - listEndpoints" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listEndpointsTenant - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:endpoints[1]/ns1:endpoint) > 0</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listEndpointsTenant - json"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="List Endpoints - listEndpoints" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listEndpointsTenant - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#path}/tenants/${#TestSuite#tenantId}/OS-KSCATALOG/endpoints';
count(//ns1:Response[1]/ns1:endpoints[1]/ns1:e) > 0</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"endpoints":[{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addEndpointTenant - xml"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Add Endpoint - addEndpoint" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addEndpointTenant - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:endpointTemplate id="100" xsi:type="v1:EndpointTemplateWithOnlyId" xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">&lt;xml-fragment id="?"/>&lt;/v1:endpointTemplate></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>adminURL="https://service-admin.com/v1"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>internalURL="https://service-internal.com/v1" </token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 2"><con:configuration><token>publicURL="https://service-public.com/v1" </token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addEndpointTenant - create Again 200 - xml"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Add Endpoint - addEndpoint" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addEndpointTenant - create Again 200 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:endpointTemplate id="100" xsi:type="v1:EndpointTemplateWithOnlyId" xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">&lt;xml-fragment id="?"/>&lt;/v1:endpointTemplate></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listEndpointsTenant - verify added endpoint - xml"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="List Endpoints - listEndpoints" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listEndpointsTenant - verify added endpoint - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:endpoints[1]/ns1:endpoint) > 0</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>id="100"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - endpointTenant - xml"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Get Endpoint - getEndpoint" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints/{endpointId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - endpointTenant - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>adminURL="https://service-admin.com/v1"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>internalURL="https://service-internal.com/v1" </token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 2"><con:configuration><token>publicURL="https://service-public.com/v1" </token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="endpointId" value="100"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - verify Admin URLs - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - verify Admin URLs - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="${#TestSuite#tenantId}" xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#password2}" username="${#TestSuite#username2}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>service name="Compute"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token> type="compute"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains"><con:configuration><token>adminURL="</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 2"><con:configuration><token>internalURL="https://service-internal.com/v1/${#TestSuite#tenantId}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 3"><con:configuration><token>publicURL="https://service-public.com/v1/${#TestSuite#tenantId}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 4"><con:configuration><token> tenantId="${#TestSuite#tenantId}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 5"><con:configuration><token>region="North"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 6"><con:configuration><token>list="https://compute.north.public.com/"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 7"><con:configuration><token>info="https://compute.north.public.com/v1/ "</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - verify Admin URLs w/ admin - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - verify Admin URLs w/ admin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="${#TestSuite#tenantId}" xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#password}" username="${#TestSuite#username}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>service name="Compute"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token> type="</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 2"><con:configuration><token>internalURL="</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 3"><con:configuration><token>publicURL="</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 4"><con:configuration><token> tenantId="</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 5"><con:configuration><token>region="</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 6"><con:configuration><token>list="</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 7"><con:configuration><token>info="</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 8"><con:configuration><token>adminURL="</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - apiKey - Admin URLs w/ non-admin -  xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - apiKey - Admin URLs w/ non-admin -  xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0"> &lt;apiKeyCredentials apiKey="${#TestSuite#apiKey2}" username="${#TestSuite#username2}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/> &lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token/><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token) >=1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains"><con:configuration><token>adminURL="</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - apiKey - Admin URLs w/ admin -  xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - apiKey - Admin URLs w/ admin -  xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0"> &lt;apiKeyCredentials apiKey="${#TestSuite#apiKey}" username="${#TestSuite#username}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/> &lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token/><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token) >=1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>adminURL="</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - w/ token Id - admin URLs non-admin - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - w/ token Id - admin URLs non-admin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantName="${#TestSuite#tenantName}" xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;token id="${#TestSuite#tokenId2}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>token</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:token[1]/@id</path><content>${#TestSuite#tokenId2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:serviceCatalog[1]) >= 1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains"><con:configuration><token>adminURL="</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - w/ token Id - admin URLs w/ admin - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - w/ token Id - admin URLs w/ admin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantName="${#TestSuite#tenantName}" xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;token id="${#TestSuite#tokenId}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>token</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:token[1]/@id</path><content>${#TestSuite#tokenId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:serviceCatalog[1]) >= 1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>adminURL="</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - endpointTenant - xml"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Delete Endpoint. - deleteEndpoint" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints/{endpointId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - endpointTenant - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="endpointId" value="100"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>body1json</con:name><con:sourceType>request1json</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addEndpointTenant - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body2</con:name><con:sourceType>request1json</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addEndpointTenant - badAuth 401 - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body3</con:name><con:sourceType>request1json</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addEndpointTenant - non Admin 403 - json</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST - addEndpointTenant - json"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Add Endpoint - addEndpoint" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addEndpointTenant - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "OS-KSCATALOG:endpointTemplate":{ "id":100, } } </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - endpointTenant - json"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Get Endpoint - getEndpoint" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints/{endpointId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - endpointTenant - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="endpointId" value="100"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - endpointTenant - json"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Delete Endpoint. - deleteEndpoint" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints/{endpointId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - endpointTenant - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="endpointId" value="100"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - endpointTemplate - xml"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Delete Endpoint Template. - deleteEndpointTemplate" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates/{endpointTemplateId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - endpointTemplate - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="endpointTemplateId" value="100"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listEndpointsTenant - badTenant 404 - xml"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="List Endpoints - listEndpoints" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listEndpointsTenant - badTenant 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Tenant with id/name: '121212' was not found</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listEndpointsTenant - badTenant 404 - json"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="List Endpoints - listEndpoints" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listEndpointsTenant - badTenant 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Tenant with id/name: '121212' was not found</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listEndpointsTenant - badAuth 401 - xml"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="List Endpoints - listEndpoints" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listEndpointsTenant - badAuth 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listEndpointsTenant - badAuth 401 - json"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="List Endpoints - listEndpoints" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listEndpointsTenant - badAuth 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listEndpointsTenant - non Admin 403 - xml"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="List Endpoints - listEndpoints" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listEndpointsTenant - non Admin 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listEndpointsTenant - non Admin 403 - json"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="List Endpoints - listEndpoints" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listEndpointsTenant - non Admin 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addEndpointTenant - badEndpointId 404 - xml"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Add Endpoint - addEndpoint" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addEndpointTenant - badEndpointId 404 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:endpointTemplate id="1000" xsi:type="v1:EndpointTemplateWithOnlyId" xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">&lt;xml-fragment id="?"/>&lt;/v1:endpointTemplate></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>EndpointTemplate 1000 not found</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addEndpointTenant - badEndpointId 404 - json"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Add Endpoint - addEndpoint" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addEndpointTenant - badEndpointId 404 - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:endpointTemplate id="1000" xsi:type="v1:EndpointTemplateWithOnlyId" xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">&lt;xml-fragment id="?"/>&lt;/v1:endpointTemplate></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>EndpointTemplate 1000 not found</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addEndpointTenant - badAuth 401 - xml"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Add Endpoint - addEndpoint" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addEndpointTenant - badAuth 401 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:endpointTemplate id="100" xsi:type="v1:EndpointTemplateWithOnlyId" xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">&lt;xml-fragment id="?"/>&lt;/v1:endpointTemplate></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addEndpointTenant - badAuth 401 - json"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Add Endpoint - addEndpoint" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addEndpointTenant - badAuth 401 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "OS-KSCATALOG:endpointTemplate":{ "id":100, } } </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addEndpointTenant - non Admin 403 - xml"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Add Endpoint - addEndpoint" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addEndpointTenant - non Admin 403 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:endpointTemplate id="100" xsi:type="v1:EndpointTemplateWithOnlyId" xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">&lt;xml-fragment id="?"/>&lt;/v1:endpointTemplate></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addEndpointTenant - non Admin 403 - json"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Add Endpoint - addEndpoint" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addEndpointTenant - non Admin 403 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "OS-KSCATALOG:endpointTemplate":{ "id":100, } } </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - endpointTenant - badEndpointId 404  - xml"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Get Endpoint - getEndpoint" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints/{endpointId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - endpointTenant - badEndpointId 404  - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Tenant ${#TestSuite#tenantId} does not have endpoint 100000</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="endpointId" value="100000"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - endpointTenant - badEndpointId 404  - json"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Get Endpoint - getEndpoint" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints/{endpointId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - endpointTenant - badEndpointId 404  - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Tenant ${#TestSuite#tenantId} does not have endpoint 100000</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="endpointId" value="100000"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - endpointTenant - badTenant 404 - xml"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Get Endpoint - getEndpoint" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints/{endpointId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - endpointTenant - badTenant 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Tenant with id/name: '12121212' was not found</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="12121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="endpointId" value="100"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - endpointTenant - badTenant 404 - json"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Get Endpoint - getEndpoint" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints/{endpointId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - endpointTenant - badTenant 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Tenant with id/name: '12121212' was not found</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="12121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="endpointId" value="100"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - endpointTenant -  badAuth 401 - xml"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Get Endpoint - getEndpoint" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints/{endpointId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - endpointTenant -  badAuth 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
  <con:entry key="endpointId" value="100"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - endpointTenant -  badAuth 401 - json"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Get Endpoint - getEndpoint" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints/{endpointId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - endpointTenant -  badAuth 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
  <con:entry key="endpointId" value="100"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - endpointTenant - non Admin 403 - xml"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Get Endpoint - getEndpoint" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints/{endpointId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - endpointTenant - non Admin 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
  <con:entry key="endpointId" value="100"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - endpointTenant - non Admin 403 - json"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Get Endpoint - getEndpoint" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints/{endpointId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - endpointTenant - non Admin 403 - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
  <con:entry key="endpointId" value="100"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - endpointTenant - badEndpointId 404 - xml"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Delete Endpoint. - deleteEndpoint" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints/{endpointId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - endpointTenant - badEndpointId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>EndpointTemplate 10000 not found</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="endpointId" value="10000"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - endpointTenant - badEndpointId 404 - json"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Delete Endpoint. - deleteEndpoint" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints/{endpointId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - endpointTenant - badEndpointId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>EndpointTemplate 10000 not found</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="endpointId" value="10000"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - endpointTenant - badTenant 404 - xml"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Delete Endpoint. - deleteEndpoint" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints/{endpointId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - endpointTenant - badTenant 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Tenant with id/name: '12121212' was not found</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="12121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="endpointId" value="100"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - endpointTenant - badTenant 404 - json"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Delete Endpoint. - deleteEndpoint" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints/{endpointId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - endpointTenant - badTenant 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Tenant with id/name: '12121212' was not found</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="12121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="endpointId" value="100"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - endpointTenant - badAuth 401 - xml"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Delete Endpoint. - deleteEndpoint" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints/{endpointId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - endpointTenant - badAuth 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
  <con:entry key="endpointId" value="100"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - endpointTenant - badAuth 401 - json"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Delete Endpoint. - deleteEndpoint" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints/{endpointId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - endpointTenant - badAuth 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
  <con:entry key="endpointId" value="100"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - endpointTenant - non Admin 403 - xml"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Delete Endpoint. - deleteEndpoint" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints/{endpointId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - endpointTenant - non Admin 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
  <con:entry key="endpointId" value="100"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - endpointTenant - non Admin 403 - json"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Delete Endpoint. - deleteEndpoint" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints/{endpointId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - endpointTenant - non Admin 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
  <con:entry key="endpointId" value="100"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>request1json</con:name><con:value>{ "OS-KSCATALOG:endpointTemplate":{ "id":100, } } </con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:properties><con:property><con:name>username</con:name><con:value>auth</con:value></con:property><con:property><con:name>password</con:name><con:value>Auth1234</con:value></con:property><con:property><con:name>tokenId</con:name><con:value>172e164a-f17c-4965-80f3-d8ba5ac90c-A</con:value></con:property><con:property><con:name>userId</con:name><con:value>153345</con:value></con:property><con:property><con:name>tenantId</con:name><con:value>CloudFiles_as2d121-212asdf-asdf</con:value></con:property><con:property><con:name>tenantName</con:name><con:value>CloudFiles_as2d121-212asdf-asdf</con:value></con:property><con:property><con:name>username2</con:name><con:value>jmunoz</con:value></con:property><con:property><con:name>tokenId2</con:name><con:value>ca236019992f4593ad64e7171a838ab5</con:value></con:property><con:property><con:name>userId2</con:name><con:value>3</con:value></con:property><con:property><con:name>password2</con:name><con:value>Password1</con:value></con:property><con:property><con:name>apiKey</con:name><con:value>0f97f489c848438090250d50c7e1ea88</con:value></con:property><con:property><con:name>apiKey2</con:name><con:value>1234567890</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="Functional - RAX-KSQA-admin"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="users" searchProperties="true" id="37126197-91a7-4833-8111-e55e3c2fd990" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="POST - token - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#password}" username="${#TestSuite#username}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token info"><con:settings/><con:config><script>def tokenId = context.expand( '${POST - token - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info "get TokenId: " + tokenId
def userId = context.expand( '${POST - token - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/@id}' )
log.info "get UserId: " + userId

if (tokenId == "" | userId == "")
{
	assert false;	
}
testRunner.testCase.testSuite.setPropertyValue("tokenId", tokenId)
testRunner.testCase.testSuite.setPropertyValue("userId", userId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - admin - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - admin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#password2}" username="${#TestSuite#username2}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token info 2"><con:settings/><con:config><script>def tokenId = context.expand( '${POST - token - admin - xml#ResponseAsXml#declare namespace ns8=\'http://docs.openstack.org/identity/api/v2.0\'; //ns8:access[1]/ns8:token[1]/@id}' )
log.info "get TokenId: " + tokenId
def userId = context.expand( '${POST - token - admin - xml#ResponseAsXml#declare namespace ns8=\'http://docs.openstack.org/identity/api/v2.0\'; //ns8:access[1]/ns8:user[1]/@id}' )

log.info "get UserId: " + userId

if (tokenId == "" | userId == "")
{
	assert false;	
}
testRunner.testCase.testSuite.setPropertyValue("tokenId2", tokenId)
testRunner.testCase.testSuite.setPropertyValue("userId2", userId)</script></con:config></con:testStep><con:testStep type="restrequest" name="PUT - updateUserSecretQA - xml"><con:settings/><con:config service="RAX-KSQA-admin" methodName="Update User SecretQA - updateUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateUserSecretQA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;secretQA xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0"
question="Is this a test?"
answer="Yes"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>answer="Yes"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>question="Is this a test?"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userSecretQA - xml"><con:settings/><con:config service="RAX-KSQA-admin" methodName="Get User SecretQA - getUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userSecretQA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>answer="Yes"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>question="Is this a test?"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - updateUserSecretQA - json"><con:settings/><con:config service="RAX-KSQA-admin" methodName="Update User SecretQA - updateUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateUserSecretQA - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
    "RAX-KSQA:secretQA":{
        "question":"Is this a test too?",
        "answer":"Yes, it is."
    }
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>"answer":"Yes, it is."</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>"question":"Is this a test too?"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userSecretQA - json"><con:settings/><con:config service="RAX-KSQA-admin" methodName="Get User SecretQA - getUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userSecretQA - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>"answer":"Yes, it is."</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>"question":"Is this a test too?"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - updateUserSecretQA - badId 404 - xml"><con:settings/><con:config service="RAX-KSQA-admin" methodName="Update User SecretQA - updateUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateUserSecretQA - badId 404 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;secretQA xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0"
question="Is this a test?"
answer="Yes"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User not found</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="121212121"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - updateUserSecretQA - badId 404 - json"><con:settings/><con:config service="RAX-KSQA-admin" methodName="Update User SecretQA - updateUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateUserSecretQA - badId 404 - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;secretQA xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0"
question="Is this a test?"
answer="Yes"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User not found</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>{"itemNotFound":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="121212121"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - updateUserSecretQA - badAuth401 - xml"><con:settings/><con:config service="RAX-KSQA-admin" methodName="Update User SecretQA - updateUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateUserSecretQA - badAuth401 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;secretQA xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0"
question="Is this a test?"
answer="Yes"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - updateUserSecretQA - badAuth401 - json"><con:settings/><con:config service="RAX-KSQA-admin" methodName="Update User SecretQA - updateUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateUserSecretQA - badAuth401 - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;secretQA xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0"
question="Is this a test?"
answer="Yes"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - updateUserSecretQA - non Admin 403 - xml"><con:settings/><con:config service="RAX-KSQA-admin" methodName="Update User SecretQA - updateUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateUserSecretQA - non Admin 403 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;secretQA xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0"
question="Is this a test?"
answer="Yes"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Access is denied</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - updateUserSecretQA - non Admin 403 - json"><con:settings/><con:config service="RAX-KSQA-admin" methodName="Update User SecretQA - updateUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateUserSecretQA - non Admin 403 - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;secretQA xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0"
question="Is this a test?"
answer="Yes"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Access is denied</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userSecretQA - badId 404 - xml"><con:settings/><con:config service="RAX-KSQA-admin" methodName="Get User SecretQA - getUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userSecretQA - badId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User not found</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="121212121"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userSecretQA - badId 404 - json"><con:settings/><con:config service="RAX-KSQA-admin" methodName="Get User SecretQA - getUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userSecretQA - badId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User not found</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="121212121"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userSecretQA - badAuth 401 - xml"><con:settings/><con:config service="RAX-KSQA-admin" methodName="Get User SecretQA - getUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userSecretQA - badAuth 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userSecretQA - badAuth 401 - json"><con:settings/><con:config service="RAX-KSQA-admin" methodName="Get User SecretQA - getUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userSecretQA - badAuth 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userSecretQA - non Admin 403 - xml"><con:settings/><con:config service="RAX-KSQA-admin" methodName="Get User SecretQA - getUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userSecretQA - non Admin 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Access is denied</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userSecretQA - non Admin 403 - json"><con:settings/><con:config service="RAX-KSQA-admin" methodName="Get User SecretQA - getUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userSecretQA - non Admin 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Access is denied</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties><con:property><con:name>username</con:name><con:value>auth</con:value></con:property><con:property><con:name>password</con:name><con:value>Auth1234</con:value></con:property><con:property><con:name>tokenId</con:name><con:value>172e164a-f17c-4965-80f3-d8ba5ac90c-A</con:value></con:property><con:property><con:name>userId</con:name><con:value>153345</con:value></con:property><con:property><con:name>username2</con:name><con:value>jmunoz</con:value></con:property><con:property><con:name>password2</con:name><con:value>Password1</con:value></con:property><con:property><con:name>tokenId2</con:name><con:value>ca236019992f4593ad64e7171a838ab5</con:value></con:property><con:property><con:name>userId2</con:name><con:value>3</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="Functional - OS-KSEC2-admin" disabled="true"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="users" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="POST - token - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#password}" username="${#TestSuite#username}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token info"><con:settings/><con:config><script>def tokenId = context.expand( '${POST - token - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info "get TokenId: " + tokenId
def userId = context.expand( '${POST - token - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/@id}' )
log.info "get UserId: " + userId

if (tokenId == "" | userId == "")
{
	assert false;	
}
testRunner.testCase.testSuite.setPropertyValue("tokenId", tokenId)
testRunner.testCase.testSuite.setPropertyValue("userId", userId)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - userCredentials - xml"><con:settings/><con:config service="OS-KSEC2-admin" methodName="List Credentials - listCredentials" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userCredentials - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties><con:property><con:name>username</con:name><con:value>cmarin2</con:value></con:property><con:property><con:name>password</con:name><con:value>Password1</con:value></con:property><con:property><con:name>tokenId</con:name><con:value>2dc1733f-c157-4232-82d6-957d5a30f3d6</con:value></con:property><con:property><con:name>userId</con:name><con:value>104472</con:value></con:property><con:property><con:name>tenantId</con:name><con:value>103952</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="Functional - RAX-GRPADM-admin"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Auth And Validate - Positive" searchProperties="true" id="a79f0098-ccba-478a-ac90-95e1a2528e3b"><con:settings/><con:testStep type="restrequest" name="POST - token - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#password}" username="${#TestSuite#username}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>token</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access/ns1:token/@id)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token"><con:settings/><con:config><script>def tokenId = context.expand( '${POST - token - xml#Response#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:token[1]/@id}' )
log.info "get TokenId: " + tokenId 

testRunner.testCase.testSuite.setPropertyValue("tokenId", tokenId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - nonAdmin - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - nonAdmin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0"> &lt;apiKeyCredentials apiKey="${#TestSuite#apiKey2}" username="${#TestSuite#username2}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/> &lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XQuery Match" name="XQuery Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access)</path><content>1</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XQuery Match" name="XQuery Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token[1])</path><content>1</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XQuery Match" name="XQuery Match 2"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token[1]/@id)</path><content>1</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token/><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:serviceCatalog[1]/ns1:service) >= 1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store non admin token"><con:settings/><con:config><script>def tokenId = context.expand( '${POST - token - nonAdmin - xml#ResponseAsXml#declare namespace ns8=\'http://docs.openstack.org/identity/api/v2.0\'; //ns8:access[1]/ns8:token[1]/@id}' )
log.info "get TokenId: " + tokenId
def userId = context.expand( '${POST - token - nonAdmin - xml#ResponseAsXml#declare namespace ns8=\'http://docs.openstack.org/identity/api/v2.0\'; //ns8:access[1]/ns8:user[1]/@id}' )

log.info "get UserId: " + userId

if (tokenId == "" | userId == "")
{
	assert false;	
}
testRunner.testCase.testSuite.setPropertyValue("tokenId2", tokenId)
testRunner.testCase.testSuite.setPropertyValue("userId2", userId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUser - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user - addUser" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:user display-name="${#TestSuite#testuser}" email="${#TestSuite#testemail}" enabled="true" id="" username="${#TestSuite#testuser}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store user info"><con:settings/><con:config><script>def userId = context.expand( '${POST - addUser - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:user[1]/@id}' )
log.info "get userId: " + userId

if (userId == "")
{
	assert false;	
}
testRunner.testCase.testSuite.setPropertyValue("testuserId", userId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUser1 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user - addUser" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUser1 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:user display-name="${#TestSuite#testuser1}" email="${#TestSuite#testemail1}" enabled="true" id="" username="${#TestSuite#testuser1}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store user1 info"><con:settings/><con:config><script>def userId1 = context.expand( '${POST - addUser1 - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:user[1]/@id}' )
log.info "get userId1: " + userId1

if (userId1 == "")
{
	assert false;	
}
testRunner.testCase.testSuite.setPropertyValue("testuserId1", userId1)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUser2 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user - addUser" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUser2 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:user display-name="${#TestSuite#testuser2}" email="${#TestSuite#testemail2}" enabled="false" id="" username="${#TestSuite#testuser2}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store user2 info"><con:settings/><con:config><script>def userId2 = context.expand( '${POST - addUser2 - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:user[1]/@id}' )
log.info "get userId2: " + userId2

if (userId2 == "")
{
	assert false;	
}
testRunner.testCase.testSuite.setPropertyValue("testuserId2", userId2)</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Add A New Group - Positive" searchProperties="true" id="ad0d82b1-3e68-46a8-b341-f238574d26af"><con:settings/><con:testStep type="restrequest" name="POST - createGroup - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Add a New Group - addGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createGroup - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>&lt;group name="testGroup1" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">
&lt;description>Creating a new group testGroup1&lt;/description>
&lt;/group></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0';
//ns1:group[1]/@name</path><content>testGroup1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store groupId"><con:settings/><con:config><script>def groupId = context.expand( '${POST - createGroup - xml#Response#declare namespace ns11=\'http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0\'; //ns11:group[1]/@id}' )
log.info "group Id: " + groupId

testRunner.testCase.testSuite.setPropertyValue("groupId", groupId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - createGroup - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Add a New Group - addGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createGroup - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
"RAX-KSGRP:group": {
"name" : "testGroup2",
"description" : "Creating a new group testGroup2"
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#EndpointJson}/${#Project#path}/RAX-GRPADM/groups';
 //ns1:Response[1]/ns1:group[1]/ns1:name[1]</path><content>testGroup2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store groupIdJson"><con:settings/><con:config><script>def groupIdJson = context.expand( '${POST - createGroup - json#ResponseAsXml#declare namespace ns1=\'${#Project#EndpointJson}/${#Project#path}/RAX-GRPADM/groups\'; //ns1:Response[1]/ns1:group[1]/ns1:id[1]}' )
log.info "group Id Json: " + groupIdJson

testRunner.testCase.testSuite.setPropertyValue("groupIdJson", groupIdJson)</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get Groups - Positive" searchProperties="true" id="32ebbcce-ca3f-4aa2-a7bb-87fe3689e0eb" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="GET - getGroups - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Get Groups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroups - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>testGroup1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>testGroup2</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="limit" value="1"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroups - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Get Groups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroups - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>"name":"testGroup2"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>"name":"testGroup1"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroups w/name - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Get Groups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroups w/name - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>testGroup1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains"><con:configuration><token>testGroup2</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="testGroup1"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroups w/ name - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Get Groups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroups w/ name - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>"name":"testGroup2"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains"><con:configuration><token>testGroup1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="testGroup2"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroups w/wildcard name - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Get Groups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroups w/wildcard name - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>testGroup1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains"><con:configuration><token>testGroup2</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains"><con:configuration/></con:assertion><con:assertion type="Simple NotContains" name="Not Contains 1"><con:configuration><token>Admin</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains 2"><con:configuration><token>Default</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="*Group1"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroups w/wildcard name- json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Get Groups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroups w/wildcard name- json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>"name":"testGroup2"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains"><con:configuration><token>testGroup1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="*Group2"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroups w/limit - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Get Groups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroups w/limit - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>only one entry should be retrieved</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="limit" value="1"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroups w/limit - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Get Groups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroups w/limit - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>only one entry should be retrieved</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="limit" value="3"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroups w/marker - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Get Groups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroups w/marker - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>only one entry should be retrieved</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="limit" value="1"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get Group - Positive" searchProperties="true" id="63cbf8bf-c54b-4b38-a5ef-2face6841683"><con:settings/><con:testStep type="restrequest" name="GET - getGroup - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Get Group - getGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroup - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0';
 //ns1:group[1]/@name</path><content>testGroup1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroup - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Get Group - getGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroup - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#EndpointJson}/${#Project#path}/RAX-GRPADM/groups/${#TestSuite#groupIdJson}'; 
//ns1:Response[1]/ns1:group[1]/ns1:name[1]</path><content>testGroup2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Update A Group - Positive" searchProperties="true" id="20f64771-a216-402a-b8dc-6df9bd00749f" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="PUT - updateGroup - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Update a Group - updateGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateGroup - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>&lt;group name="testGroup3" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">
&lt;description>updating testGroup1 to testGroup3&lt;/description>
&lt;/group></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0';
 //ns1:group[1]/@name</path><content>testGroup3</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroup - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Get Group - getGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroup - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0'; 
//ns1:group[1]/@name</path><content>testGroup3</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - updateGroup - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Update a Group - updateGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateGroup - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
"RAX-KSGRP:group": {
"name" : "testGroup4",
"description" : "updating testGroup2 to testGroup4"
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#EndpointJson}/${#Project#path}/RAX-GRPADM/groups/${#TestSuite#groupIdJson}'; 
//ns1:Response[1]/ns1:group[1]/ns1:name[1]</path><content>testGroup4</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroup - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Get Group - getGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroup - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#EndpointJson}/${#Project#path}/RAX-GRPADM/groups/${#TestSuite#groupIdJson}';
 //ns1:Response[1]/ns1:group[1]/ns1:name[1]</path><content>testGroup4</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - updateGroup description - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Update a Group - updateGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateGroup description - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>&lt;group name="testGroup3" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">
&lt;description>updating testGroup1 to testGroup3 description only&lt;/description>
&lt;/group></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>new description should appear</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroup w/ updated description - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Get Group - getGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroup w/ updated description - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>updated description</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - updateGroup w/description null - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Update a Group - updateGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateGroup w/description null - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>&lt;group name="testGroup3" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">
&lt;description>&lt;/description>
&lt;/group></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>updated descriptionb should appear</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Add A User to the Group - Positve" searchProperties="true" id="9d86f839-ee88-4bab-b326-f3f2b722800d" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="PUT - addUserToGroup - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Add User to Group - addUserToGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addUserToGroup - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="userId" value="${#TestSuite#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addUserToGroup - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Add User to Group - addUserToGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addUserToGroup - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupIdJson}"/>
  <con:entry key="userId" value="${#TestSuite#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addUser1ToGroup - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Add User to Group - addUserToGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addUser1ToGroup - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="userId" value="${#TestSuite#testuserId1}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addUser1ToGroup - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Add User to Group - addUserToGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addUser1ToGroup - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupIdJson}"/>
  <con:entry key="userId" value="${#TestSuite#testuserId1}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addDisabledUser2ToGroup - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Add User to Group - addUserToGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addDisabledUser2ToGroup - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>can we add disabled users to the group</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="userId" value="${#TestSuite#testuserId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get Users for Group - Positive" searchProperties="true" id="bcc7d275-1258-4b99-a098-72fe6760c3f6" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="GET - getUsersForGroup - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users" methodName="Get Users for Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUsersForGroup - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
 //ns7:users[1]/ns7:user[1]/@display-name</path><content>testuser1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
 //ns7:users[1]/ns7:user[1]/@id</path><content>${#TestSuite#testuserId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUsersForGroup - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users" methodName="Get Users for Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUsersForGroup - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#EndpointJson}/${#Project#path}/RAX-GRPADM/groups/${#TestSuite#groupIdJson}/users'; 
//ns1:Response[1]/ns1:users[1]/ns1:e[1]/ns1:id[1]</path><content>${#TestSuite#testuserId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUsersForGroup w/limit - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users" methodName="Get Users for Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUsersForGroup w/limit - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>only one entry should be retrieved</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="limit" value="1"/>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUsersForGroup w/limit - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users" methodName="Get Users for Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUsersForGroup w/limit - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>only one entry should be retrieved</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUsersForGroup w/marker - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users" methodName="Get Users for Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUsersForGroup w/marker - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>need to check with the value to be given</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="marker" value="2"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Remove A User from the Group - Positive" searchProperties="true" id="ec89fee0-54de-4421-aac8-93491c2949fe" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="DELETE - removeUserFromGroup - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Remove User From Group - removeUserFromGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - removeUserFromGroup - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="userId" value="${#TestSuite#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUsersForGroup - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users" methodName="Get Users for Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUsersForGroup - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - removeUserFromGroup - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Remove User From Group - removeUserFromGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - removeUserFromGroup - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupIdJson}"/>
  <con:entry key="userId" value="${#TestSuite#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUsersForGroup - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users" methodName="Get Users for Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUsersForGroup - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - re-addUserToGroup - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Add User to Group - addUserToGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - re-addUserToGroup - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="userId" value="${#TestSuite#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getRe-addedUsersForGroup - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users" methodName="Get Users for Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getRe-addedUsersForGroup - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - re-addUserToGroup - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Add User to Group - addUserToGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of PUT - re-addUserToGroup - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupIdJson}"/>
  <con:entry key="userId" value="${#TestSuite#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getRe-addedUsersForGroup - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users" methodName="Get Users for Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getRe-addedUsersForGroup - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Add A New Group - Negative" searchProperties="true" id="562b8ea0-edbd-4a4d-8664-69a2cdcb7ce4" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="POST - createGroup - groupname null - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Add a New Group - addGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createGroup - groupname null - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>&lt;group name="" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">
&lt;description>Creating a new group null&lt;/description>
&lt;/group></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0'; 
//ns1:badRequest[1]/ns1:message[1]</path><content>Missing group name</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - createGroup - groupname null - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Add a New Group - addGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createGroup - groupname null - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
"RAX-KSGRP:group": {
"name" : "",
"description" : "Creating a new group null"
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - createGroup - invalid token - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Add a New Group - addGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createGroup - invalid token - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>&lt;group name="testGroup1" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/
v1.0">
&lt;description>Creating a new group testGroup1&lt;/description>
&lt;/group></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="12345" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - createGroup - invalid token - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Add a New Group - addGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createGroup - invalid token - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
"RAX-KSGRP:group": {
"name" : "testGroup2",
"description" : "Creating a new group testGroup2"
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="12345" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - createGroup - non admin token - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Add a New Group - addGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createGroup - non admin token - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>&lt;group name="testGroup1" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">
&lt;description>Creating a new group testGroup1&lt;/description>
&lt;/group></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - createGroup - non admin token - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Add a New Group - addGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createGroup - non admin token - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
"RAX-KSGRP:group": {
"name" : "testGroup2",
"description" : "Creating a new group testGroup2"
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - createGroup - bad media type - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Add a New Group - addGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createGroup - bad media type - xml" mediaType="text/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
"RAX-KSGRP:group": {
"name" : "testGroup2",
"description" : "Creating a new group testGroup2"
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 503</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - createGroup - bad media type - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Add a New Group - addGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createGroup - bad media type - json" mediaType="text/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
"RAX-KSGRP:group": {
"name" : "testGroup2",
"description" : "Creating a new group testGroup2"
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 503</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - createGroup - long groupname  - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Add a New Group - addGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createGroup - long groupname  - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>&lt;group name="testfdkjghkhfkgjfjghjdfhfgjdhgjdfhgjkdfhfghdgjfhddgkjsdhgdgdjfgdfjghdjghjdhgfjhdjfghdjhgjdfjgdjfghdhgjhdfjghdjfgkjdfgjdfgjdhljgjrgjfdgjdfghdjfhdfljsghlhgjdfhgdfkjlhljghdfgkdfjghdkjfghddjkhgkjfhgdkjfhgkjdfhlgkdfgdfgjgjfgfkjghkjfghfdjhkhgdkfkdkgdkgkdfgkdfjdhjkhjjhkfdjfgjdgfdljfghdljlfjhgdhfgjkdfhdssjghlkjdgfslhgdfgkjsdhfgdkjshfgdfjkhlgkjdfhgkjdfhgkjhdfkjhgjdhjfghkdjfhgkjsdhlgjhkdjhfgkjlhdslkjhgkjsdfhkjlsdhgljdslhgdfkjhgdljfhgjlkghljkddhjkghkjghdfkjghjkgh;khgk;jehrk;jehrjkthekjhrgkjehgkjhdgjsd.vndm vm.dnb f. hjerhtkjerht#!!" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">
&lt;description>Creating a group name with more than 200 characters&lt;/description>
&lt;/group></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - createGroup - long groupname  - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Add a New Group - addGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createGroup - long groupname  - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
"RAX-KSGRP:group": {
"name" : "fhsjfdsjfgjdgfdkgkjdfhjghfdjhgjfhdjgh  jfghfdjhgjkdhfgjhfjhgjhfjghfksjhjkfkdhgsdhfgjkhdgkjfhgjdhfgjhdfjgtrhjkhyrjkthyjrthyjrtyrtyrjtkhyjrthyrtjyrhtrtrtrtrtyrtyhrtjyrtjhyrjthjerhtehrjgtwhghegtrhegjrhtgjhergthjergthjegtherterterteytryrtyrtyryyrtytryrtrffvcxjdfcsbnmhdghdhgjekgjhghjgdhghggg",
"description" : "Creating a group name with more than 200 characters"
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - createGroup - groupname special characters - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Add a New Group - addGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createGroup - groupname special characters - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>&lt;group name="test$&amp;amp;#!!" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">
&lt;description>Creating a new group null&lt;/description>
&lt;/group></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteGroup - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Delete Group - deleteGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteGroup - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${POST - createGroup - groupname special characters - xml#Response#declare namespace ns11='http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0'; //ns11:group[1]/@id}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - createGroup - groupname special characters  - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Add a New Group - addGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createGroup - groupname special characters  - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
"RAX-KSGRP:group": {
"name" : "test$#!!",
"description" : "Creating a group name with more than 200 characters"
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteGroup - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Delete Group - deleteGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteGroup - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${POST - createGroup - groupname special characters  - json#ResponseAsXml#declare namespace ns1='http://localhost/idm/cloud/v2.0/RAX-GRPADM/groups'; //ns1:Response[1]/ns1:group[1]/ns1:id[1]}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - createGroup - existing group name - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Add a New Group - addGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createGroup - existing group name - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>&lt;group name="testGroup3" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">
&lt;description>Creating a new group null&lt;/description>
&lt;/group></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 409</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:badRequest[1]/ns1:message[1]/text()</path><content>Group with name testGroup3 already exists</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - createGroup - existing groupname  - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Add a New Group - addGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createGroup - existing groupname  - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
"RAX-KSGRP:group": {
"name" : "testGroup4",
"description" : "Creating a new group null"
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 409</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get Groups - Negative" searchProperties="true" id="373d3330-145c-4500-a4e4-147583a8d37f" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="GET - getGroups - invalid token - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Get Groups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroups - invalid token - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:unauthorized[1]/ns1:message[1]/text()</path><content>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="testGroup1"/>
  <con:entry key="X-Auth-Token" value="12345"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroups - invalid token - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Get Groups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroups - invalid token - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#EndpointJson}/${#Project#path}/RAX-GRPADM/groups';
//ns1:Fault[1]/ns1:unauthorized[1]/ns1:message[1]</path><content>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="12345" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroups - non admin token - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Get Groups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroups - non admin token - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:forbidden[1]/ns1:message[1]/text()</path><content>Access is denied</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroups - non admin token - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Get Groups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroups - non admin token - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#EndpointJson}/${#Project#path}/RAX-GRPADM/groups';
//ns1:Fault[1]/ns1:forbidden[1]/ns1:message[1]</path><content>Access is denied</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroups w/non existing name - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Get Groups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroups w/non existing name - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>no entries should be retrieved</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="hdhsjgf"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroups w/non existing name - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Get Groups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroups w/non existing name - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>"name":"testGroup2"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>"name":"testGroup1"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="dfjsjjdfg"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroups w/invalid limit - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Get Groups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroups w/invalid limit - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>message needs to be corrected</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="limit" value="jdjdfgd"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroups w/invalid limit - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Get Groups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroups w/invalid limit - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>message needs to be corrected</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="limit" value="fjdsfj"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroups w/invalid marker - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Get Groups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroups w/invalid marker - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>message needs to be corrected</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="limit" value="jdjdfgd"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get Group - Negative" searchProperties="true" id="be01735c-a850-4a4b-8294-9c2f0ce8e269" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="GET - getGroup - group id - string - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Get Group - getGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroup - group id - string - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400
</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="djfhdj"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroup - group id - string - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Get Group - getGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroup - group id - string - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="fdjhfgj"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroup - invalid token - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Get Group - getGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroup - invalid token - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="X-Auth-Token" value="12345"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroup - invalid token - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Get Group - getGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroup - invalid token - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="X-Auth-Token" value="12345"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroup - non admin token - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Get Group - getGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroup - non admin token - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroup - non admin token - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Get Group - getGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroup - non admin token - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroup - invalid group id - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Get Group - getGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroup - invalid group id - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="12345"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroup - invalid group id - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Get Group - getGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroup - invalid group id - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="12345"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroup - group id null - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Get Group - getGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroup - group id null - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value=" "/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroup - group id null - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Get Group - getGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroup - group id null - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value=" "/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Update A Group - Negative" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="d84326b1-8d5c-4517-bcd9-e87e32b862ec"><con:settings/><con:testStep type="restrequest" name="PUT - updateGroup - group name empty - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Update a Group - updateGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateGroup - group name empty - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>&lt;group name="" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">
&lt;description>empty group name&lt;/description>
&lt;/group></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value=" "/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - updateGroup - group name empty - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Update a Group - updateGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateGroup - group name empty - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
"RAX-KSGRP:group": {
"name" : "",
"description" : "empty groupname "
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value=" "/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - updateGroup - invalid token - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Update a Group - updateGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateGroup - invalid token - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>&lt;group name="testGroup3" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">
&lt;description>updating testGroup1 to testGroup3&lt;/description>
&lt;/group></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="X-Auth-Token" value="12345"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - updateGroup - invalid token - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Update a Group - updateGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateGroup - invalid token - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
"RAX-KSGRP:group": {
"name" : "testGroup4",
"description" : "updating testGroup2 to testGroup4"
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupIdJson}"/>
  <con:entry key="X-Auth-Token" value="12345"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - updateGroup - non admin token - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Update a Group - updateGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateGroup - non admin token - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>&lt;group name="testGroup3" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">
&lt;description>updating testGroup1 to testGroup3&lt;/description>
&lt;/group></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - updateGroup - non admin token - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Update a Group - updateGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateGroup - non admin token - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
"RAX-KSGRP:group": {
"name" : "testGroup4",
"description" : "updating testGroup2 to testGroup4"
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - updateGroup - invalid group id - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Update a Group - updateGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateGroup - invalid group id - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>&lt;group name="testGroup5" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">
&lt;description>update invalid group&lt;/description>
&lt;/group></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="12345"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - updateGroup - invalid group id - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Update a Group - updateGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateGroup - invalid group id - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
"RAX-KSGRP:group": {
"name" : "testGroup5",
"description" : "update invlaid group"
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="12345"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - updateGroup - group already exists - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Update a Group - updateGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateGroup - group already exists - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>&lt;group name="testGroup4" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">
&lt;description>testGroup4 already exists&lt;/description>
&lt;/group></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 409</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - updateGroup - group already exists - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Update a Group - updateGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateGroup - group already exists - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
"RAX-KSGRP:group": {
"name" : "testGroup3",
"description" : "testGroup3 already exists"
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 409</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - updateGroup - bad media type - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Update a Group - updateGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateGroup - bad media type - xml" mediaType="text/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
"RAX-KSGRP:group": {
"name" : "testGroup6",
"description" : "updating testGroup3 to testGroup5"
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 503</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - updateGroup - bad media type - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Update a Group - updateGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateGroup - bad media type - json" mediaType="text/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>&lt;group name="testGroup6" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/
v1.0">
&lt;description>updating testGroup4 to testGroup6&lt;/description>
&lt;/group></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 503</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - updateGroup - group id - string -  xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Update a Group - updateGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateGroup - group id - string -  xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>&lt;group name="testGroup5" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">
&lt;description>update invalid group&lt;/description>
&lt;/group></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="fdjh"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - updateGroup - group id - string - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Update a Group - updateGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateGroup - group id - string - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
"RAX-KSGRP:group": {
"name" : "testGroup5",
"description" : "update invlaid group"
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="fdhfjh"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Add A User to the Group - Negative" searchProperties="true" id="845c754e-2db4-4872-bb46-ff84cb05c45a" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="PUT - addUserToGroup - invalid user id - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Add User to Group - addUserToGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addUserToGroup - invalid user id - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="userId" value="12345"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addUserToGroup - invalid user id - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Add User to Group - addUserToGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addUserToGroup - invalid user id - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="userId" value="12345"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addUserToGroup - user id - string -  xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Add User to Group - addUserToGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addUserToGroup - user id - string -  xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="userId" value="fdjgh"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addUserToGroup - user id - string - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Add User to Group - addUserToGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addUserToGroup - user id - string - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="userId" value="djffd"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addUserToGroup - invalid token - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Add User to Group - addUserToGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addUserToGroup - invalid token - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="userId" value="${#TestSuite#testuserId}"/>
  <con:entry key="X-Auth-Token" value="12345"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addUserToGroup - invalid token - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Add User to Group - addUserToGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addUserToGroup - invalid token - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupIdJson}"/>
  <con:entry key="userId" value="${#TestSuite#testuserId}"/>
  <con:entry key="X-Auth-Token" value="12345"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addUserToGroup - non admin token - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Add User to Group - addUserToGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addUserToGroup - non admin token - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="userId" value="${#TestSuite#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addUserToGroup - non admin token - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Add User to Group - addUserToGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addUserToGroup - non admin token - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupIdJson}"/>
  <con:entry key="userId" value="${#TestSuite#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addUserToGroup - invalid group id - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Add User to Group - addUserToGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addUserToGroup - invalid group id - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="12345"/>
  <con:entry key="userId" value="${#TestSuite#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addUserToGroup - invalid group id - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Add User to Group - addUserToGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addUserToGroup - invalid group id - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="12345"/>
  <con:entry key="userId" value="${#TestSuite#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addUserToGroup - duplicate user in the same group - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Add User to Group - addUserToGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addUserToGroup - duplicate user in the same group - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="userId" value="${#TestSuite#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addUserToGroup - duplicate user in the same group - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Add User to Group - addUserToGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addUserToGroup - duplicate user in the same group - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupIdJson}"/>
  <con:entry key="userId" value="${#TestSuite#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addUserToGroup - group id - string - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Add User to Group - addUserToGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addUserToGroup - group id - string - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="fjgf"/>
  <con:entry key="userId" value="${#TestSuite#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addUserToGroup - group id - string - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Add User to Group - addUserToGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addUserToGroup - group id - string - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="dfdjfgh"/>
  <con:entry key="userId" value="${#TestSuite#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get Users for Group - Negative" searchProperties="true" id="d6b36f3a-8d30-47e1-a6d5-5bdd16ff7c3a" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="GET - getUsersForGroup - invalid token - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users" methodName="Get Users for Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUsersForGroup - invalid token - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
 //ns7:users[1]/ns7:user[1]/@id</path><content>${#TestSuite#testuserId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="X-Auth-Token" value="12345"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUsersForGroup - invalid token - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users" methodName="Get Users for Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUsersForGroup - invalid token - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupIdJson}"/>
  <con:entry key="X-Auth-Token" value="12345"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUsersForGroup - non admin token - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users" methodName="Get Users for Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUsersForGroup - non admin token - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUsersForGroup - non admin token - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users" methodName="Get Users for Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUsersForGroup - non admin token - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUsersForGroup - invalid group id - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users" methodName="Get Users for Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUsersForGroup - invalid group id - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="12345"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUsersForGroup - invalid group id - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users" methodName="Get Users for Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUsersForGroup - invalid group id - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUsersForGroup - group id null - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users" methodName="Get Users for Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUsersForGroup - group id null - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUsersForGroup - group id null - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users" methodName="Get Users for Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUsersForGroup - group id null - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUsersForGroup w/invalid limit - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users" methodName="Get Users for Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUsersForGroup w/invalid limit - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>message needs to be corrected</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="limit" value="sjfdhj"/>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUsersForGroup w/invalid limit - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users" methodName="Get Users for Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUsersForGroup w/invalid limit - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>messgae needs to be corrected</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="limit" value="jkfsd"/>
  <con:entry key="groupId" value="${#TestSuite#groupIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUsersForGroup w/invalid marker - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users" methodName="Get Users for Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUsersForGroup w/invalid marker - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
 //ns7:users[1]/ns7:user[1]/@id</path><content>${#TestSuite#testuserId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="marker" value="jfsjdkf"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Remove A User from the Group - Negative" searchProperties="true" id="943b5bae-9a7d-4f0e-8b67-350a9c61c99b" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="DELETE - removeUserFromGroup - invalid user id - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Remove User From Group - removeUserFromGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - removeUserFromGroup - invalid user id - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="userId" value="12345"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - removeUserFromGroup - invalid user id - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Remove User From Group - removeUserFromGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - removeUserFromGroup - invalid user id - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupIdJson}"/>
  <con:entry key="userId" value="12345"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - removeUserFromGroup - user id null - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Remove User From Group - removeUserFromGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - removeUserFromGroup - user id null - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="userId" value="  "/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - removeUserFromGroup - user id null - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Remove User From Group - removeUserFromGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - removeUserFromGroup - user id null - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - removeUserFromGroup - invalid token - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Remove User From Group - removeUserFromGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - removeUserFromGroup - invalid token - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="userId" value="${#TestSuite#testuserId}"/>
  <con:entry key="X-Auth-Token" value="12345"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - removeUserFromGroup - invalid token - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Remove User From Group - removeUserFromGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - removeUserFromGroup - invalid token - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupIdJson}"/>
  <con:entry key="userId" value="${#TestSuite#testuserId}"/>
  <con:entry key="X-Auth-Token" value="12345"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - removeUserFromGroup - non admin token - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Remove User From Group - removeUserFromGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - removeUserFromGroup - non admin token - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="userId" value="${#TestSuite#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - removeUserFromGroup - non admin token - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Remove User From Group - removeUserFromGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - removeUserFromGroup - non admin token - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="userId" value="${#TestSuite#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - removeUserFromGroup - invalid group id - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Remove User From Group - removeUserFromGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - removeUserFromGroup - invalid group id - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="12345"/>
  <con:entry key="userId" value="${#TestSuite#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - removeUserFromGroup - invalid group id - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Remove User From Group - removeUserFromGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - removeUserFromGroup - invalid group id - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="12345"/>
  <con:entry key="userId" value="${#TestSuite#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - removeUserFromGroup -  group id null - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Remove User From Group - removeUserFromGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - removeUserFromGroup -  group id null - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="  "/>
  <con:entry key="userId" value="${#TestSuite#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - removeUserFromGroup -  group id null - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Remove User From Group - removeUserFromGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - removeUserFromGroup -  group id null - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="  "/>
  <con:entry key="userId" value="${#TestSuite#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUser3 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user - addUser" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUser3 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:user display-name="${#TestSuite#testuser3}" email="${#TestSuite#testemail3}" enabled="true" id="" username="${#TestSuite#testuser3}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - removeUserFromGroup - invalid user id3 - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Remove User From Group - removeUserFromGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - removeUserFromGroup - invalid user id3 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="userId" value="${POST - addUser3 - xml#Response#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@id}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - user3 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user3 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${POST - addUser3 - xml#Response#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@id}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="HARD Deleted - user3 - xml"><con:settings/><con:config service="GA-softDeleted" methodName="Delete from soft delete - softDeleted" resourcePath="/${#Project#path}/softDeleted/users/{user_id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="HARD Deleted - user3 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${POST - addUser3 - xml#Response#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@id}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Delete Group - Negative" searchProperties="true" id="28e9b394-d4bd-4f25-a05c-8e266ef5a119"><con:settings/><con:testStep type="restrequest" name="DELETE - deleteGroup - invalid token - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Delete Group - deleteGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteGroup - invalid token - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="X-Auth-Token" value="12345"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteGroup - invalid token - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Delete Group - deleteGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteGroup - invalid token - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupIdJson}"/>
  <con:entry key="X-Auth-Token" value="12345"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteGroup - non admin token - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Delete Group - deleteGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteGroup - non admin token - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteGroup - non admin token - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Delete Group - deleteGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteGroup - non admin token - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteGroup - group does not exists - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Delete Group - deleteGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteGroup - group does not exists - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="12345"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteGroup - group does not exists - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Delete Group - deleteGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteGroup - group does not exists - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="12345"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteGroup - group id null - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Delete Group - deleteGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteGroup - group id null - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value=" "/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteGroup - group id null - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Delete Group - deleteGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteGroup - group id null - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value=" "/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteGroup - group id invalid characters - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Delete Group - deleteGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteGroup - group id invalid characters - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="abc"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteGroup - group id invalid characters - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Delete Group - deleteGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteGroup - group id invalid characters - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="abc"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Delete Group - Positive" searchProperties="true" id="8826e684-b2de-42e0-9044-c768fdf69216" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="DELETE - deleteGroup - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Delete Group - deleteGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteGroup - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroup - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Get Group - getGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroup - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:itemNotFound[1]/ns1:message[1]</path><content>Group ${#TestSuite#groupId} not found</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteGroup - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Delete Group - deleteGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteGroup - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroup - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Get Group - getGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroup - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#EndpointJson}/${#Project#path}/RAX-GRPADM/groups/${#TestSuite#groupIdJson}'; 
//ns1:Fault[1]/ns1:itemNotFound[1]/ns1:message[1]</path><content>Group ${#TestSuite#groupIdJson} not found</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - createDeletedGroup - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Add a New Group - addGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createDeletedGroup - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>&lt;group name="testGroup3" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">
&lt;description>Deleted group testGroup3&lt;/description>
&lt;/group></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0';
//ns1:group[1]/@name</path><content>testGroup3</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store deleted groupId"><con:settings/><con:config><script>def deletedGroupId = context.expand( '${POST - createDeletedGroup - xml#Response#declare namespace ns11=\'http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0\'; //ns11:group[1]/@id}' )
log.info "deletedGroupId: " + deletedGroupId
testRunner.testCase.testSuite.setPropertyValue("deletedGroupId", deletedGroupId)</script></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteGroup1 - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Delete Group - deleteGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteGroup1 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#deletedGroupId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteGroup2 - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Delete Group - deleteGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteGroup2 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#deletedGroupId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Delete User" searchProperties="true" id="cf98d9a5-85c7-48f2-aa76-1a339ed9abbb" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="DELETE - user - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="HARD Deleted - user - xml"><con:settings/><con:config service="GA-softDeleted" methodName="Delete from soft delete - softDeleted" resourcePath="/${#Project#path}/softDeleted/users/{user_id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="HARD Deleted - user - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestSuite#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - user1 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user1 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testuserId1}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="HARD Deleted - user1 - xml"><con:settings/><con:config service="GA-softDeleted" methodName="Delete from soft delete - softDeleted" resourcePath="/${#Project#path}/softDeleted/users/{user_id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="HARD Deleted - user1 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestSuite#testuserId1}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - user2 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user2 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testuserId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="HARD Deleted - user2 - xml"><con:settings/><con:config service="GA-softDeleted" methodName="Delete from soft delete - softDeleted" resourcePath="/${#Project#path}/softDeleted/users/{user_id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="HARD Deleted - user2 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestSuite#testuserId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties><con:property><con:name>username</con:name><con:value>auth</con:value></con:property><con:property><con:name>password</con:name><con:value>Auth1234</con:value></con:property><con:property><con:name>tokenId</con:name><con:value>596bb75f-4589-4527-8bb7-de5d8a1256be</con:value></con:property><con:property><con:name>apiKey2</con:name><con:value>1234567890</con:value></con:property><con:property><con:name>username2</con:name><con:value>jmunoz</con:value></con:property><con:property><con:name>tokenId2</con:name><con:value>1a501081e5454b23adc58f720fd807e3</con:value></con:property><con:property><con:name>userId2</con:name><con:value>3</con:value></con:property><con:property><con:name>testemail</con:name><con:value>testuser1@rackspace.com</con:value></con:property><con:property><con:name>testuser</con:name><con:value>testuser1</con:value></con:property><con:property><con:name>groupId</con:name><con:value>1521</con:value></con:property><con:property><con:name>groupIdJson</con:name><con:value>1522</con:value></con:property><con:property><con:name>testuserId</con:name><con:value>10002275</con:value></con:property><con:property><con:name>deletedGroupId</con:name><con:value>1525</con:value></con:property><con:property><con:name>testuser1</con:name><con:value>testuser2</con:value></con:property><con:property><con:name>testemail1</con:name><con:value>testuser2@rackspace.com</con:value></con:property><con:property><con:name>testuserId1</con:name><con:value>10002276</con:value></con:property><con:property><con:name>testuser2</con:name><con:value>testuser3</con:value></con:property><con:property><con:name>testemail2</con:name><con:value>testuser3@rackspace.com</con:value></con:property><con:property><con:name>testuserId2</con:name><con:value>10002277</con:value></con:property><con:property><con:name>testuser3</con:name><con:value>testuser4</con:value></con:property><con:property><con:name>testemail3</con:name><con:value>testuser4@rackspace.com</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:endpointStrategy xsi:type="con:DefaultEndpointStrategy" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:endpoint mode="COMPLEMENT" username="${#Project#username}" password="${#Project#password}" domain="">${#Project#Endpoint}</con:endpoint></con:endpointStrategy><con:requirements/><con:properties><con:property><con:name>Endpoint</con:name><con:value>http://localhost:8080</con:value></con:property><con:property><con:name>path</con:name><con:value>idm/cloud/v2.0</con:value></con:property><con:property><con:name>EndpointJson</con:name><con:value>http://localhost</con:value></con:property></con:properties><con:wssContainer/><con:databaseConnectionContainer/><con:reporting><con:reportTemplates/><con:xmlTemplates/><con:parameters/></con:reporting><con:sensitiveInformation/></con:soapui-project>