<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project name="Auth1.1.x US" resourceRoot="" soapui-version="3.6.1" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.TestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Global Properties" value=""/>
  <con:entry key="TestSuite" value="Functional - Regression"/>
  <con:entry key="Report to Generate" value=""/>
  <con:entry key="Password" value=""/>
  <con:entry key="soapui-setings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Save Project" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Export JUnit Results" value="true"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Export All" value="true"/>
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="TestCase" value="&lt;all>"/>
  <con:entry key="Print Report" value="true"/>
  <con:entry key="Username" value=""/>
  <con:entry key="Root Folder" value="C:\tmp\GlobalAuth\Release\Auth1.1_Internal\Functional-Regression"/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="Endpoint" value=""/>
</xml-fragment>]]></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.LoadTestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="TestSuite" value="&lt;all>"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="Report to Generate" value=""/>
  <con:entry key="Password" value=""/>
  <con:entry key="soapui-setings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value="/home/jorge/eviware/soapUI-Pro-3.6.1/bin"/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="LoadTest" value="&lt;all>"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Save Project" value="false"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Print Report Statistics" value="false"/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="TestCase" value="&lt;all>"/>
  <con:entry key="Username" value=""/>
  <con:entry key="Root Folder" value="/home/jorge/Documents/soapUI reports/ga-v1.1"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Endpoint" value=""/>
  <con:entry key="ThreadCount" value=""/>
  <con:entry key="Limit" value=""/>
</xml-fragment>]]></con:setting></con:settings><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Auth1.1.x" type="rest" basePath="" definitionUrl="http://auth-n02.dev.us.ccp.rackspace.net:8080/v1.1/admin.wadl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="CreateWadlDocumentationAction@report-directory">/home/jorge/Documents</con:setting></con:settings><con:definitionCache type="TEXT" rootPart="http://auth-n02.dev.us.ccp.rackspace.net:8080/v1.1/admin.wadl"><con:part><con:url>http://auth-n02.dev.us.ccp.rackspace.net:8080/v1.1/admin.wadl</con:url><con:content><![CDATA[<application xsi:schemaLocation="http://docs.rackspacecloud.com/auth/api/v1.1                                  admin-api.xsd" xmlns="http://wadl.dev.java.net/2009/02" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:auth="http://docs.rackspacecloud.com/auth/api/v1.1">
  <grammars>
    <include href="xsd/admin-api.xsd"/>
    <include href="xsd/api-common.xsd"/>
  </grammars>
  <resources base="https://auth.api.rackspacecloud.com">
    <resource id="version" path="v1.1">
      <method href="#getVersionInfo"/>
      <resource id="extensions" path="extensions">
        <method href="#getExtensions"/>
        <resource id="alias" path="{alias}">
          <param name="alias" style="template" type="xsd:string"/>
          <method href="#getExtension"/>
        </resource>
      </resource>
      <resource id="auth" path="auth">
        <method href="#authenticate"/>
      </resource>
      <resource id="token" path="token">
        <resource id="tokenId" path="{tokenId}">
          <param name="tokenId" style="template" type="xsd:string"/>
          <method href="#validateToken"/>
          <method href="#revokeToken"/>
        </resource>
      </resource>
      <resource id="users" path="users">
        <method href="#createUser"/>
        <resource id="user" path="{userId}">
          <param name="userId" style="template" type="xsd:string"/>
          <method href="#getUser"/>
          <method href="#deleteUser"/>
          <method href="#updateUser"/>
          <resource id="enabled" path="enabled">
            <method href="#getUserEnabled"/>
            <method href="#setUserEnabled"/>
          </resource>
          <resource id="key" path="key">
            <method href="#getUserKey"/>
            <method href="#setUserKey"/>
          </resource>
          <resource id="serviceCatalog" path="serviceCatalog">
            <method href="#getServiceCatalog"/>
          </resource>
          <resource id="baseURLRefs" path="baseURLRefs">
            <method href="#getBaseURLRefs"/>
            <method href="#addBaseURLRef"/>
            <resource id="baseURLRef" path="{baseURLId}">
              <param name="baseURLId" style="template" type="xsd:int"/>
              <method href="#getBaseURLRef"/>
              <method href="#deleteBaseURLRef"/>
            </resource>
          </resource>
          <resource id="groups" path="groups">
            <method href="#getUserGroups"/>
          </resource>
        </resource>
      </resource>
      <resource id="nastUsers" path="nast/{nastId}">
        <param name="nastId" style="template" type="xsd:string"/>
        <method href="#userRedirect"/>
      </resource>
      <resource id="mossoUsers" path="mosso/{mossoId}">
        <param name="mossoId" style="template" type="xsd:int"/>
        <method href="#userRedirect"/>
      </resource>
      <resource id="baseURLs" path="baseURLs">
        <method href="#getBaseURLs"/>
        <resource id="baseURLId" path="{baseURLId}">
          <param name="baseURLId" style="template" type="xsd:int"/>
          <method href="#getBaseURL"/>
        </resource>
        <resource id="isBaseURLenabled" path="enabled">
          <method href="#getBaseURL"/>
        </resource>
      </resource>
    </resource>
  </resources>
  <!--Repeated Methods from auth.wadl. Fixing as of now to resolve SOAP UI issue. (i.e.: could not verify referenced WADLs.)-->
  <!--Extensions-->
  <method name="GET" id="getExtensions">
    <response status="200 203">
      <representation mediaType="application/xml" element="auth:extensions"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getExtension">
    <response status="200 203">
      <representation mediaType="application/xml" element="auth:extension"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="auth:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getVersionInfo">
    <response status="200 203">
      <representation mediaType="application/xml" element="auth:version"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <!--Token Methods...-->
  <method name="POST" id="authenticate">
    <request>
      <representation mediaType="application/xml" element="auth:credentials"/>
      <representation mediaType="application/xml" element="auth:nastCredentials"/>
      <representation mediaType="application/xml" element="auth:mossoCredentials"/>
      <representation mediaType="application/xml" element="auth:passwordCredentials"/>
      <representation mediaType="application/json"/>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="auth:auth"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:userDisabled"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="401 403 400 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="validateToken">
    <request>
      <param name="belongsTo" style="query" required="false" type="xsd:string"/>
      <!--SOAP UI fix:-->
      <!--<param name="type"      style="query"
                required="false" type="auth:UserType"
                default="CLOUD" />-->
      <!--Here's what I have to say:-->
      <param name="type" style="query" required="false" type="xsd:string" default="CLOUD">
        <option value="CLOUD"/>
        <option value="NAST"/>
        <option value="MOSSO"/>
      </param>
      <!--Achives the same thing, need to
                 keep this consistent with UserType-->
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="auth:token"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:forbidden"/>
      <representation mediaType="application/xml" element="auth:userDisabled"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="auth:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="DELETE" id="revokeToken">
    <response status="204"/>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:forbidden"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="auth:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <!--User Methods...-->
  <method name="POST" id="createUser">
    <request>
      <representation mediaType="application/xml" element="auth:user">
        <param name="user" style="plain" path="/" type="auth:UserWithId"/>
      </representation>
      <representation mediaType="application/json"/>
    </request>
    <response status="201">
      <representation mediaType="application/xml" element="auth:user">
        <param name="Location" type="xsd:anyURI" style="header"/>
      </representation>
      <representation mediaType="application/json">
        <param name="Location" type="xsd:anyURI" style="header"/>
      </representation>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:forbidden"/>
    </response>
    <response status="409">
      <representation mediaType="application/xml" element="auth:usernameConflict"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 401 403 409 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getUser">
    <response status="200 203">
      <representation mediaType="application/xml" element="auth:user"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="auth:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getUserEnabled">
    <response status="200 203">
      <representation mediaType="application/xml" element="auth:user">
        <param name="user" style="plain" path="/" type="auth:UserWithOnlyEnabled"/>
      </representation>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="auth:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="PUT" id="setUserEnabled">
    <request>
      <representation mediaType="application/xml" element="auth:user">
        <param name="user" style="plain" path="/" type="auth:UserWithOnlyEnabled"/>
      </representation>
      <representation mediaType="application/json"/>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="auth:user">
        <param name="user" style="plain" path="/" type="auth:UserWithOnlyEnabled"/>
      </representation>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="auth:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getUserKey">
    <response status="200 203">
      <representation mediaType="application/xml" element="auth:user">
        <param name="user" style="plain" path="/" type="auth:UserWithOnlyKey"/>
      </representation>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="auth:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="PUT" id="setUserKey">
    <request>
      <representation mediaType="application/xml" element="auth:user">
        <param name="user" style="plain" path="/" type="auth:UserWithOnlyKey"/>
      </representation>
      <representation mediaType="application/json"/>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="auth:user">
        <param name="user" style="plain" path="/" type="auth:UserWithOnlyKey"/>
      </representation>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="auth:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getUserGroups">
    <response status="200 203">
      <representation mediaType="application/xml" element="auth:groups">
        <param name="user" style="plain" path="/" type="auth:GroupsList"/>
      </representation>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="auth:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="DELETE" id="deleteUser">
    <response status="204"/>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="auth:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="PUT" id="updateUser">
    <request>
      <representation mediaType="application/xml" element="auth:user"/>
      <representation mediaType="application/json"/>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="auth:user"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="auth:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getBaseURLs">
    <request>
      <param name="serviceName" style="query" required="false" type="xsd:string"/>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="auth:baseURLs"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:forbidden"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 401 403 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getBaseURL">
    <response status="200 203">
      <representation mediaType="application/xml" element="auth:baseURL"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="auth:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getBaseURLRefs">
    <response status="200 203">
      <representation mediaType="application/xml" element="auth:baseURLRefs"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:forbidden"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 401 403 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="POST" id="addBaseURLRef">
    <request>
      <representation mediaType="application/xml" element="auth:baseURLRef"/>
      <representation mediaType="application/json"/>
    </request>
    <response status="201">
      <representation mediaType="application/xml" element="auth:baseURLRef">
        <param name="Location" type="xsd:anyURI" style="header"/>
      </representation>
      <representation mediaType="application/json">
        <param name="Location" type="xsd:anyURI" style="header"/>
      </representation>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="auth:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getBaseURLRef">
    <response status="200 203">
      <representation mediaType="application/xml" element="auth:baseURLRef"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="auth:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="DELETE" id="deleteBaseURLRef">
    <response status="204"/>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="auth:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getServiceCatalog">
    <response status="200 203">
      <representation mediaType="application/xml" element="auth:serviceCatalog"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:forbidden"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 401 403 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="userRedirect">
    <response status="303">
      <representation>
        <param name="Location" type="xsd:anyURI" style="header"/>
      </representation>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="auth:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
</application>]]></con:content><con:type>http://wadl.dev.java.net/2009/02</con:type></con:part><con:part><con:url>http://auth-n02.dev.us.ccp.rackspace.net:8080/v1.1/xsd/admin-api.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2010 Rackspace Hosting, All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:auth="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0">
  <annotation>
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Auth Admin API Schema Types</xsdxt:title>
      <xsdxt:link rev="index" href="api.xsd"/>
      <xsdxt:link rev="index" href="adminAuthRequest.xsd"/>
      <xsdxt:link rev="index" href="user.xsd"/>
      <xsdxt:link rev="index" href="groups.xsd"/>
      <xsdxt:link rev="index" href="full-token.xsd"/>
      <xsdxt:link rev="index" href="baseURLs.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>This is the main index XML Schema document for the Rackspace
                Cloud Authentication Admin API.</p>
    </xsd:documentation>
  </annotation>
  <!--Inlcude Public API-->
  <include schemaLocation="api.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>This is the main index XML Schema document for the Rackspace
                    Cloud Authentication Public API.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <!--Add Administration Stuff-->
  <include schemaLocation="adminCredentials.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Defines credentials used to obtain an auth token.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <include schemaLocation="user.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Contains entities related to a user.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <include schemaLocation="groups.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Contains entities related to groups.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <include schemaLocation="full-token.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Full token definition.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <include schemaLocation="baseURLs.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Entities related to baseURLs and baseURLRefrences, used to
                    build serviceCatalogs.</p>
      </xsd:documentation>
    </annotation>
  </include>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://auth-n02.dev.us.ccp.rackspace.net:8080/v1.1/xsd/api.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2010 Rackspace Hosting, All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:auth="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0">
  <annotation>
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Auth API Schema Types</xsdxt:title>
      <xsdxt:link rev="index" href="auth.xsd"/>
      <xsdxt:link rev="index" href="authRequest.xsd"/>
      <xsdxt:link rev="index" href="fault.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>This is the main index XML Schema document
                for the Rackspace Cloud Authentication API.</p>
    </xsd:documentation>
  </annotation>
  <include schemaLocation="auth.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Auth entities include: AuthData, Token, and ServiceCatalog.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <include schemaLocation="credentials.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Defines credentials used to obtain an auth token.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <include schemaLocation="fault.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>All fault types.</p>
      </xsd:documentation>
    </annotation>
  </include>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://auth-n02.dev.us.ccp.rackspace.net:8080/v1.1/xsd/auth.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2010 Rackspace Hosting, All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:auth="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0">
  <annotation>
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Token and Service Catalog</xsdxt:title>
      <xsdxt:link rel="index" href="api.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>This schema file defines the token and the service catalog
                entities.</p>
    </xsd:documentation>
  </annotation>
  <!--Root Elements-->
  <element name="auth" type="auth:AuthData">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A combination of the token and the service catalog. This
                    is returned when a user authenticates.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/auth.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/auth.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="serviceCatalog" type="auth:ServiceCatalog">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>The service catalog contains a list of all regional and
                    global endpoints available to a user. The endpoints are
                    sorted by service type.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/serviceCatalog.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/serviceCatalog.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="AuthData">
    <sequence>
      <element name="token" type="auth:Token">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>An Auth Token.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element ref="auth:serviceCatalog">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The service catalog.</p>
          </xsd:documentation>
        </annotation>
      </element>
    </sequence>
  </complexType>
  <complexType name="Token">
    <attribute name="id" type="xsd:ID" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The Token Id, to be used in Authentication headers.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="expires" type="xsd:dateTime" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The token will be invalid after the expires time.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
  </complexType>
  <complexType name="ServiceCatalog">
    <sequence>
      <element name="service" type="auth:Service" minOccurs="1" maxOccurs="1000">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>A list of services.</p>
          </xsd:documentation>
        </annotation>
      </element>
    </sequence>
  </complexType>
  <complexType name="Service">
    <sequence>
      <element name="endpoint" type="auth:Endpoint" minOccurs="1" maxOccurs="1000">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>A list of endpoints.</p>
          </xsd:documentation>
        </annotation>
      </element>
    </sequence>
    <attribute name="name" type="xsd:ID" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The service name.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
  </complexType>
  <complexType name="Endpoint">
    <attribute name="region" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The airport code of the region where the endpoint
                        lives.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute default="false" name="v1Default" type="xsd:boolean" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>If true, then the endpoint will be selected
                        automatically in V1.0 of the Auth API.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="publicURL" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The publically accessible service URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="internalURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A service URL, accessible only within the
                        Rackspace Cloud.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="adminURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A service URL used for administration. This may expose
                        additional functionality not found in the public and
                        internal URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://auth-n02.dev.us.ccp.rackspace.net:8080/v1.1/xsd/credentials.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2010 Rackspace Hosting, All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:auth="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0">
  <annotation>
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Credentials</xsdxt:title>
      <xsdxt:link rel="index" href="api.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>This schema file defines entities credentials used to obtained
                a token from the authentication service.</p>
    </xsd:documentation>
  </annotation>
  <element name="credentials" type="auth:UserCredentials">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Credentials used to obtain an auth token.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/credentials.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/credentials.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="Credentials" abstract="true"></complexType>
  <complexType name="KeyCredentials">
    <complexContent>
      <extension base="auth:Credentials">
        <attribute name="key" type="xsd:string" use="required">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
              <p>The API key.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="UserCredentials">
    <complexContent>
      <extension base="auth:KeyCredentials">
        <attribute name="username" type="xsd:string" use="required">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
              <p>The name of the user authenticated.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
      </extension>
    </complexContent>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://auth-n02.dev.us.ccp.rackspace.net:8080/v1.1/xsd/fault.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2009 Rackspace Hosting, All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:auth="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0">
  <annotation>
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Faults</xsdxt:title>
      <xsdxt:link rel="index" href="api.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>
        This schema file defines faults that may be raised by the Auth
                API. These faults are derived from the
        <a href="#type_AuthFault" title="See definition of         AuthFault">AuthFault</a>
        .
      </p>
      <p>
        Faults are associated with a default HTTP status code that
                corresponds to the particular fault type. For example an
        <a href="#element_itemNotFound" title="see definition of         itemNotFound">&lt;itemNotFound></a>
        element is associated
                with the HTTP status code 404. Some elements, the
        <a href="#element_authFault" title="see definition of         authFault">&lt;authFault></a>
        element for example, may be
                associated with multiple status codes. It is also possible
                for multiple fault elements to be associated with the same
                default code. The examples below showcase the default status
                codes for each element type. Note that these default codes are
                not part of the formal schema. In practice, however, an
                element type will likely be associated with its corresponding
                default status code.
      </p>
    </xsd:documentation>
  </annotation>
  <!--Elements-->
  <element name="authFault" type="auth:AuthFault">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A generic Auth API fault.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/authFault.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/authFault.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="userDisabled" type="auth:UserDisabledFault">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>The user has been disabled and is not permitted to
                    authenticate.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/disabled.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/disabled.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="badRequest" type="auth:BadRequestFault">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>The request is malformed.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/badRequest.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/badRequest.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="temporaryUnavailable" type="auth:TemporaryUnavailableFault">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>The service request is temporary unavailable.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/temporaryUnavailable.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/temporaryUnavailable.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="unauthorized" type="auth:UnauthorizedFault">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Authorization failed. Bad API Key? Username?</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/unauthorized.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/unauthorized.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="itemNotFound" type="auth:ItemNotFoundFault">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>The item or resource could not be found.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/notfound.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/notfound.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="forbidden" type="auth:ForbiddenFault">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Authentication succeeded but you lack sufficient privileges.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/forbidden.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/forbidden.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="usernameConflict" type="auth:UsernameConflictFault">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>The username already exists.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/nameconflict.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/nameconflict.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="serviceUnavailable" type="auth:ServiceUnavailableFault">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>The API is currently unavailable.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/unavailable.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/unavailable.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="AuthFault">
    <sequence>
      <element name="message" type="xsd:string">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>A human readable message that is appropriate for display
                            to the end user.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element name="details" type="xsd:string" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The optional &lt;details> element may contain useful
                            information for tracking down errors (e.g a stack
                            trace). This information may or may not be appropriate
                            for display to an end user.</p>
          </xsd:documentation>
        </annotation>
      </element>
    </sequence>
    <attribute name="code" type="xsd:int" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The HTTP status code associated with the current fault.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
  </complexType>
  <complexType name="UserDisabledFault">
    <complexContent>
      <extension base="auth:AuthFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="BadRequestFault">
    <complexContent>
      <extension base="auth:AuthFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="TemporaryUnavailableFault">
    <complexContent>
      <extension base="auth:AuthFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="UnauthorizedFault">
    <complexContent>
      <extension base="auth:AuthFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="ItemNotFoundFault">
    <complexContent>
      <extension base="auth:AuthFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="ForbiddenFault">
    <complexContent>
      <extension base="auth:AuthFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="UsernameConflictFault">
    <complexContent>
      <extension base="auth:AuthFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="ServiceUnavailableFault">
    <complexContent>
      <extension base="auth:AuthFault"></extension>
    </complexContent>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://auth-n02.dev.us.ccp.rackspace.net:8080/v1.1/xsd/adminCredentials.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2010 Rackspace Hosting, All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:auth="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0">
  <annotation>
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Alternate Credential Types</xsdxt:title>
      <xsdxt:link rel="index" href="api.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>This schema file defines alternate credentials used by admins
                to obtained a token from the authentication service.</p>
    </xsd:documentation>
  </annotation>
  <include schemaLocation="credentials.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Defines credentials used to obtain an auth token.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <element name="nastCredentials" type="auth:NastCredentials">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Nast Credentials.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/nast-credentials.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/nast-credentials.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="mossoCredentials" type="auth:MossoCredentials">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Mosso Credentials.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/mosso-credentials.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/mosso-credentials.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="passwordCredentials" type="auth:PasswordCredentials">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Password credentials.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/password-credentials.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/password-credentials.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <complexType name="NastCredentials">
    <complexContent>
      <extension base="auth:KeyCredentials">
        <attribute name="nastId" type="xsd:string" use="required">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
              <p>Nast Id used to identify the user.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="MossoCredentials">
    <complexContent>
      <extension base="auth:KeyCredentials">
        <attribute name="mossoId" type="xsd:int" use="required">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
              <p>Mosso account used to identify the user.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="PasswordCredentials">
    <complexContent>
      <extension base="auth:Credentials">
        <attribute name="username" type="xsd:string" use="required">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
              <p>The name of the user authenticated.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
        <attribute name="password" type="xsd:string" use="required">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
              <p>Password used to verify the user.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
      </extension>
    </complexContent>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://auth-n02.dev.us.ccp.rackspace.net:8080/v1.1/xsd/user.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2010 Rackspace Hosting, All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:auth="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0">
  <annotation>
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Auth User</xsdxt:title>
      <xsdxt:link rel="index" href="admin-api.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>This schema defines entity contains entities related to a user.</p>
    </xsd:documentation>
  </annotation>
  <include schemaLocation="baseURLs.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Entities related to baseURLs and baseURLRefrences, used to
                    build serviceCatalogs.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <element name="user" type="auth:User">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>An Auth User.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/user.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/user.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="User">
    <sequence>
      <element ref="auth:baseURLRefs" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>A reference to BaseURLs associated with the user.</p>
          </xsd:documentation>
        </annotation>
      </element>
    </sequence>
    <attribute name="id" type="xsd:ID" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A  unique user id.  This is also known as the CLOUD username.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="mossoId" type="xsd:int" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The mosso account number associated with this user.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="nastId" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The mosso account number associated with this user.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="key" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The user's API Key.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="enabled" type="xsd:boolean" default="true" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>True if the user is enabled.  A user cannot log in if
                        enabled is false.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <!--Migration-disabled-->
    <!--<attribute name="migrated" type="xsd:boolean" use="optional">
            <annotation>
                <xsd:documentation
                    xml:lang="EN"
                    xmlns="http://www.w3.org/1999/xhtml">
                    <p>
                        Whether this user has been migrated to IDM.
                    </p>
                </xsd:documentation>
            </annotation>
        </attribute>-->
    <attribute name="created" type="xsd:dateTime" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A Timestamp of when the user was created.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="updated" type="xsd:dateTime" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A Timestamp of when the user was last updated.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
  </complexType>
  <complexType name="UserWithOnlyEnabled">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>The only allowed attribute for this User type is the enabled
                    attribute.</p>
      </xsd:documentation>
    </annotation>
    <complexContent>
      <restriction base="auth:User">
        <attribute name="id" type="xsd:ID" use="prohibited"/>
        <attribute name="mossoId" type="xsd:int" use="prohibited"/>
        <attribute name="nastId" type="xsd:string" use="prohibited"/>
        <attribute name="key" type="xsd:string" use="prohibited"/>
        <attribute name="created" type="xsd:dateTime" use="prohibited"/>
        <attribute name="updated" type="xsd:dateTime" use="prohibited"/>
        <attribute name="enabled" type="xsd:boolean" use="required">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
              <p>True if the user is enabled.  A user cannot log in if
                                enabled is false.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
      </restriction>
    </complexContent>
  </complexType>
  <complexType name="UserWithOnlyKey">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>The only allowed attribute for this User type is the key
                    attribute.</p>
      </xsd:documentation>
    </annotation>
    <complexContent>
      <restriction base="auth:User">
        <attribute name="id" type="xsd:ID" use="prohibited"/>
        <attribute name="mossoId" type="xsd:int" use="prohibited"/>
        <attribute name="nastId" type="xsd:string" use="prohibited"/>
        <attribute name="enabled" type="xsd:boolean" use="prohibited"/>
        <attribute name="created" type="xsd:dateTime" use="prohibited"/>
        <attribute name="updated" type="xsd:dateTime" use="prohibited"/>
        <attribute name="key" type="xsd:string" use="required">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
              <p>The user's API Key.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
      </restriction>
    </complexContent>
  </complexType>
  <complexType name="UserWithId">
    <complexContent>
      <restriction base="auth:User">
        <attribute name="id" type="xsd:ID" use="required">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
              <p>A  unique user id.  This is also known as the CLOUD username.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
      </restriction>
    </complexContent>
  </complexType>
  <!--Simple Types-->
  <simpleType name="UserType">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>An authRequest can be made with various user/account
                    names. The UserType signifies what kind of account is
                    being used to log in.</p>
      </xsd:documentation>
    </annotation>
    <restriction base="xsd:string">
      <enumeration value="CLOUD">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>Cloud username.  This is the same as the unique user id
                            in the UserType.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="NAST">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>Nast account number.  This is the same as a nastId in
                            the UserType.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="MOSSO">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>Mosso account number. This is the same as mossoId in
                            the UserType.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
    </restriction>
  </simpleType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://auth-n02.dev.us.ccp.rackspace.net:8080/v1.1/xsd/baseURLs.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2010 Rackspace Hosting, All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:auth="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0">
  <annotation>
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Base URLs</xsdxt:title>
      <xsdxt:link rel="index" href="admin-api.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>This schema defines base URLs and base URL references.</p>
    </xsd:documentation>
  </annotation>
  <include schemaLocation="user.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Contains entities related to a user.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <element name="baseURLs" type="auth:BaseURLList">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A list of base URLs.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/baseURLs.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/baseURLs.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="baseURL" type="auth:BaseURL">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A base URLs.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/baseURL.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/baseURL.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="baseURLRef" type="auth:BaseURLRef">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A refrence to a base URL.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/baseURLRequest.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/baseURLRequest.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="baseURLRefs" type="auth:BaseURLRefList">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A list of base URL refrences.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/baseURLRefs.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/baseURLRefs.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="BaseURL">
    <attribute name="id" type="xsd:int" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>An ID uniquely identifying the base URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="userType" type="auth:UserType" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>What type of user informatins hould be appended to this
                        baseURL to form a complete endpoint.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="serviceName" type="xsd:string" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The base URL's service name.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="region" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The URL's region.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="publicURL" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The public base URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="internalURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The internal version of the public base URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="adminURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The admin base URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="default" type="xsd:boolean" default="false" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>If true the baseURL is automatically added to
                        new accounts.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="enabled" type="xsd:boolean" default="true" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>True if the Base URL is enabled (active). 
                        A Base URL cannot be added if it's disabled or inactive (false).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
  </complexType>
  <complexType name="BaseURLRef">
    <attribute name="id" type="xsd:int" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>An ID uniquely identifying the base URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="href" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A hyperlink refrence to the base URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="v1Default" type="xsd:boolean" use="optional" default="false">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>If true, then the refred to base URL is used in version
                        1.0 of the Auth service.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
  </complexType>
  <complexType name="BaseURLList">
    <sequence>
      <element name="baseURL" type="auth:BaseURL" minOccurs="0" maxOccurs="1000"/>
    </sequence>
  </complexType>
  <complexType name="BaseURLRefList">
    <sequence>
      <element name="baseURLRef" type="auth:BaseURLRef" minOccurs="0" maxOccurs="1000"/>
    </sequence>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://auth-n02.dev.us.ccp.rackspace.net:8080/v1.1/xsd/groups.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2010 Rackspace Hosting, All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:auth="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0">
  <annotation>
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Auth User Groups</xsdxt:title>
      <xsdxt:link rel="index" href="admin-api.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>This schema defines entity contains entities related to the groups of a user.</p>
    </xsd:documentation>
  </annotation>
  <element name="groups" type="auth:GroupsList">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Auth Groups.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/groups.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/groups.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="GroupsList">
    <sequence>
      <element name="group" type="auth:Group" minOccurs="0" maxOccurs="1000"/>
    </sequence>
  </complexType>
  <complexType name="Group">
    <sequence>
      <element name="description" type="string" minOccurs="0" maxOccurs="1">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>Description of the group.</p>
          </xsd:documentation>
        </annotation>
      </element>
    </sequence>
    <attribute name="id" type="xsd:string" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>ID of the group.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://auth-n02.dev.us.ccp.rackspace.net:8080/v1.1/xsd/full-token.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2010 Rackspace Hosting, All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:auth="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0">
  <annotation>
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Full Token</xsdxt:title>
      <xsdxt:link rel="index" href="admin-api.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>Defines a full token.</p>
    </xsd:documentation>
  </annotation>
  <!--Inlcude Auth Stuff-->
  <include schemaLocation="auth.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Auth entities include: AuthData, Token, and ServiceCatalog.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <element name="token" type="auth:FullToken">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A Token containing user information and a timestamp of when
                    it was created.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/full-token.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/full-token.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="FullToken">
    <complexContent>
      <extension base="auth:Token">
        <attribute name="created" type="xsd:dateTime" use="required">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
              <p>A timestamp of when the token was created.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
        <attribute name="userId" type="xsd:string" use="required">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
              <p>An Id of the user associated with this token.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
        <attribute name="userURL" type="xsd:anyURI" use="required">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
              <p>A URI of the user associated with this token.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
      </extension>
    </complexContent>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://auth-n02.dev.us.ccp.rackspace.net:8080/v1.1/xsd/api-common.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2009-2011 Rackspace Hosting, All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/common/api/v1.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <annotation>
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xsdxt:title>Open Stack Common API Schema Types 1.0</xsdxt:title>
      <xsdxt:link rev="index" href="extensions.xsd"/>
      <xsdxt:link rev="index" href="version.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <p>This is the main index XML Schema document
                for Common API Schema Types Version 1.0.</p>
    </xsd:documentation>
  </annotation>
  <include schemaLocation="extensions.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>Types related to extensions.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <include schemaLocation="version.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>Types related to API version details.</p>
      </xsd:documentation>
    </annotation>
  </include>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://auth-n02.dev.us.ccp.rackspace.net:8080/v1.1/xsd/extensions.xsd</con:url><con:content><![CDATA[<xsd:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/common/api/v1.0" xmlns:ext="http://docs.openstack.org/common/api/v1.0" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!--Import ATOM specific schema definitions-->
  <xsd:import namespace="http://www.w3.org/2005/Atom" schemaLocation="./atom/atom.xsd"/>
  <xsd:element name="extensions" type="ext:Extensions"/>
  <xsd:element name="extension" type="ext:Extension"/>
  <xsd:complexType name="Extensions">
    <xsd:sequence>
      <xsd:element name="extension" type="ext:Extension" minOccurs="0" maxOccurs="1000"/>
      <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="1000"/>
    </xsd:sequence>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
  </xsd:complexType>
  <xsd:complexType name="Extension">
    <xsd:sequence>
      <xsd:element name="description" type="xsd:string" minOccurs="1"/>
      <xsd:element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="1000"/>
      <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="1000"/>
    </xsd:sequence>
    <xsd:attribute name="name" type="xsd:string" use="required"/>
    <xsd:attribute name="namespace" type="xsd:anyURI" use="required"/>
    <xsd:attribute name="alias" type="ext:Alias" use="required"/>
    <xsd:attribute name="updated" type="xsd:dateTime" use="optional"/>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
    <xsd:assert vc:minVersion="1.1" test="atom:link[@rel='describedby']">
      <xsd:annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>There should be at least one atom link
                        with a describedby relation.</p>
        </xsd:documentation>
      </xsd:annotation>
    </xsd:assert>
  </xsd:complexType>
  <xsd:simpleType name="Alias">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="\w+\-\w+"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://auth-n02.dev.us.ccp.rackspace.net:8080/v1.1/xsd/atom/atom.xsd</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://www.w3.org/2005/Atom" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd"/>
  <xs:simpleType name="relation">
    <xs:restriction base="xs:string">
      <xs:enumeration value="alternate"/>
      <xs:enumeration value="appendix"/>
      <xs:enumeration value="archives"/>
      <xs:enumeration value="author"/>
      <xs:enumeration value="bookmark"/>
      <xs:enumeration value="chapter"/>
      <xs:enumeration value="contents"/>
      <xs:enumeration value="copyright"/>
      <xs:enumeration value="current"/>
      <xs:enumeration value="describedby"/>
      <xs:enumeration value="edit"/>
      <xs:enumeration value="edit-media"/>
      <xs:enumeration value="first"/>
      <xs:enumeration value="glossary"/>
      <xs:enumeration value="help"/>
      <xs:enumeration value="hub"/>
      <xs:enumeration value="icon"/>
      <xs:enumeration value="index"/>
      <xs:enumeration value="last"/>
      <xs:enumeration value="latest-version"/>
      <xs:enumeration value="license"/>
      <xs:enumeration value="monitor"/>
      <xs:enumeration value="monitor-group"/>
      <xs:enumeration value="next"/>
      <xs:enumeration value="next-arvhice"/>
      <xs:enumeration value="nofollow"/>
      <xs:enumeration value="payment"/>
      <xs:enumeration value="predecessor-version"/>
      <xs:enumeration value="prefetch"/>
      <xs:enumeration value="prev"/>
      <xs:enumeration value="previous"/>
      <xs:enumeration value="prev-archive"/>
      <xs:enumeration value="replies"/>
      <xs:enumeration value="search"/>
      <xs:enumeration value="section"/>
      <xs:enumeration value="self"/>
      <xs:enumeration value="service"/>
      <xs:enumeration value="start"/>
      <xs:enumeration value="stylesheet"/>
      <xs:enumeration value="subsection"/>
      <xs:enumeration value="successor-version"/>
      <xs:enumeration value="up"/>
      <xs:enumeration value="version-history"/>
      <xs:enumeration value="via"/>
      <xs:enumeration value="working-copy"/>
      <xs:enumeration value="working-copy-of"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="link" type="atom:link"/>
  <xs:complexType name="link">
    <xs:annotation>
      <xs:documentation>
        <html:p>
          See section 3.4 of the ATOM RFC
          <html:a href="http://tools.ietf.org/html/rfc4287">RFC4287</html:a>
        </html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="rel" use="required" type="atom:relation">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="type" use="optional" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="href" use="required" type="xs:anyURI">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="hreflang" use="optional" type="xs:NMTOKEN">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="title" use="optional" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://auth-n02.dev.us.ccp.rackspace.net:8080/v1.1/xsd/atom/xml.xsd</con:url><con:content><![CDATA[<?xml-stylesheet href="../2008/09/xsd.xsl" type="text/xsl"?>
<xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
  <xs:annotation>
    <xs:documentation>
      <div>
        <h1>About the XML namespace</h1>
        <div class="bodytext">
          <p>This schema document describes the XML namespace, in a form
      suitable for import by other schema documents.</p>
          <p>
            See
            <a href="http://www.w3.org/XML/1998/namespace.html">http://www.w3.org/XML/1998/namespace.html</a>
            and
            <a href="http://www.w3.org/TR/REC-xml">http://www.w3.org/TR/REC-xml</a>
            for information 
      about this namespace.
          </p>
          <p>Note that local names in this namespace are intended to be
      defined only by the World Wide Web Consortium or its subgroups.
      The names currently defined in this namespace are listed below.
      They should not be used with conflicting semantics by any Working
      Group, specification, or document instance.</p>
          <p>
            See further below in this document for more information about
            <a href="#usage">how to refer to this schema document from your own
      XSD schema documents</a>
            and about
            <a href="#nsversioning">the
      namespace-versioning policy governing this schema document</a>
            .
          </p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>lang (as an attribute name)</h3>
          <p>denotes an attribute whose value
       is a language code for the natural language of the content of
       any element; its value is inherited.  This name is reserved
       by virtue of its definition in the XML specification.</p>
        </div>
        <div>
          <h4>Notes</h4>
          <p>Attempting to install the relevant ISO 2- and 3-letter
      codes as the enumerated possible values is probably never
      going to be a realistic possibility.</p>
          <p>
            See BCP 47 at
            <a href="http://www.rfc-editor.org/rfc/bcp/bcp47.txt">http://www.rfc-editor.org/rfc/bcp/bcp47.txt</a>
            and the IANA language subtag registry at
            <a href="http://www.iana.org/assignments/language-subtag-registry">http://www.iana.org/assignments/language-subtag-registry</a>
            for further information.
          </p>
          <p>The union allows for the 'un-declaration' of xml:lang with
      the empty string.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:union memberTypes="xs:language">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value=""/>
          </xs:restriction>
        </xs:simpleType>
      </xs:union>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="space">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>space (as an attribute name)</h3>
          <p>denotes an attribute whose
       value is a keyword indicating what whitespace processing
       discipline is intended for the content of the element; its
       value is inherited.  This name is reserved by virtue of its
       definition in the XML specification.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>base (as an attribute name)</h3>
          <p>denotes an attribute whose value
       provides a URI to be used as the base for interpreting any
       relative URIs in the scope of the element on which it
       appears; its value is inherited.  This name is reserved
       by virtue of its definition in the XML Base specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xmlbase/">http://www.w3.org/TR/xmlbase/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="id" type="xs:ID">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>id (as an attribute name)</h3>
          <p>denotes an attribute whose value
       should be interpreted as if declared to be of type ID.
       This name is reserved by virtue of its definition in the
       xml:id specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xml-id/">http://www.w3.org/TR/xml-id/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
    <xs:attribute ref="xml:id"/>
  </xs:attributeGroup>
  <xs:annotation>
    <xs:documentation>
      <div>
        <h3>Father (in any context at all)</h3>
        <div class="bodytext">
          <p>denotes Jon Bosak, the chair of 
      the original XML Working Group.  This name is reserved by 
      the following decision of the W3C XML Plenary and 
      XML Coordination groups:</p>
          <blockquote>
            <p>In appreciation for his vision, leadership and
	dedication the W3C XML Plenary on this 10th day of
	February, 2000, reserves for Jon Bosak in perpetuity
	the XML name "xml:Father".</p>
          </blockquote>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>
      <div xml:id="usage" id="usage">
        <h2>
          <a name="usage">About this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            This schema defines attributes and an attribute group suitable
      for use by schemas wishing to allow
            <code>xml:base</code>
            ,
            <code>xml:lang</code>
            ,
            <code>xml:space</code>
            or
            <code>xml:id</code>
            attributes on elements they define.
          </p>
          <p>To enable this, such a schema must import this schema for
      the XML namespace, e.g. as follows:</p>
          <pre>&lt;schema . . .>
           . . .
           &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2001/xml.xsd"/></pre>
          <p>or</p>
          <pre>&lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2009/01/xml.xsd"/></pre>
          <p>Subsequently, qualified reference to any of the attributes or the
      group defined below will have the desired effect, e.g.</p>
          <pre>&lt;type . . .>
           . . .
           &lt;attributeGroup ref="xml:specialAttrs"/></pre>
          <p>will define a type which will schema-validate an instance element
      with any of those attributes.</p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>
      <div id="nsversioning" xml:id="nsversioning">
        <h2>
          <a name="nsversioning">Versioning policy for this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            In keeping with the XML Schema WG's standard versioning
      policy, this schema document will persist at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            .
          </p>
          <p>
            At the date of issue it can also be found at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            .
          </p>
          <p>
            The schema document at that URI may however change in the future,
      in order to remain compatible with the latest version of XML
      Schema itself, or with the XML namespace itself.  In other words,
      if the XML Schema or XML namespaces change, the version of this
      document at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            will change accordingly; the version at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            will not change.
          </p>
          <p>Previous dated (and unchanging) versions of this schema 
      document are at:</p>
          <ul>
            <li>
              <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2007/08/xml.xsd">http://www.w3.org/2007/08/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2004/10/xml.xsd">http://www.w3.org/2004/10/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2001/03/xml.xsd">http://www.w3.org/2001/03/xml.xsd</a>
            </li>
          </ul>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://auth-n02.dev.us.ccp.rackspace.net:8080/v1.1/xsd/version.xsd</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/common/api/v1.0" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!--Import ATOM specific schema definitions-->
  <xs:import namespace="http://www.w3.org/2005/Atom" schemaLocation="./atom/atom.xsd"/>
  <!--Multiple choices-->
  <xs:element name="choices" type="vers:VersionChoiceList"/>
  <!--Versioning-->
  <xs:element name="versions" type="vers:VersionChoiceList"/>
  <xs:element name="version" type="vers:VersionChoice" vc:minVersion="1.0" vc:maxVersion="1.1"/>
  <xs:element name="version" type="vers:VersionChoiceRoot" vc:minVersion="1.1"/>
  <!--Types-->
  <xs:simpleType name="VersionStatus">
    <xs:annotation>
      <xs:documentation>
        <html:p>The VersionStatus type describes a service's operational status.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="DEPRECATED"/>
      <xs:enumeration value="ALPHA"/>
      <xs:enumeration value="BETA"/>
      <xs:enumeration value="CURRENT"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="VersionChoiceList">
    <xs:annotation>
      <xs:documentation>
        <html:p>A version choice list outlines a collection of service version choices.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="version" type="vers:VersionChoice" minOccurs="1" maxOccurs="1000"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="1000"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
    <xs:assert vc:minVersion="1.1" test="every $v in vers:version satisfies $v/atom:link[@rel='self']">
      <xs:annotation>
        <xs:documentation>
          <html:p>In version lists, every single version must
                        contain at least one self link.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:assert>
  </xs:complexType>
  <xs:complexType name="VersionChoiceRoot" vc:minVersion="1.1">
    <xs:complexContent>
      <xs:extension base="vers:VersionChoice">
        <xs:assert test="atom:link[@rel='describedby']">
          <xs:annotation>
            <xs:documentation>
              <html:p>When used as a root element, a version choice
                                must contain at least one describedby link.</html:p>
            </xs:documentation>
          </xs:annotation>
        </xs:assert>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="VersionChoice">
    <xs:annotation>
      <xs:documentation>
        <html:p>A version choice contains relevant information about an available service
                    that a user can then use to target a specific version of the service. Note
                    that both the descriptive media types and the atom link references are
                    not mandatory and are offered as message enrichment elements rather
                    than message requirements.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="media-types" type="vers:MediaTypeList" minOccurs="0" maxOccurs="1"/>
      <xs:element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="1000"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="1000"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>
          <html:p>The ID of a version choice represents the service version's unique 
                        identifier. This ID is guaranteed to be unique only among the
                        service version choices outlined in the VersionChoiceList.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="status" type="vers:VersionStatus" use="required">
      <xs:annotation>
        <xs:documentation>
          <html:p>A version choice's status describes the current operational state of
                        the given service version. The operational status is captured in a
                        simple type enumeration called VersionStatus.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="updated" type="xs:dateTime" use="optional">
      <xs:annotation>
        <xs:documentation>
          <html:p>
            A version choice's updated attribute describes
                        the time when the version was updated. The
                        time should be updated anytime
            <html:strong>anything</html:strong>
            in the
                        version has changed: documentation,
                        extensions, bug fixes.
          </html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:complexType name="MediaTypeList">
    <xs:annotation>
      <xs:documentation>
        <html:p>A MediaTypeList outlines a collection of valid media types for a given 
                    service version.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="media-type" type="vers:MediaType" minOccurs="1" maxOccurs="1000"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="1000"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:complexType name="MediaType">
    <xs:annotation>
      <xs:documentation>
        <html:p>A MediaType describes what content types the service version understands.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="1000"/>
    </xs:sequence>
    <xs:attribute name="base" type="xs:string" use="optional" default="">
      <xs:annotation>
        <xs:documentation>
          <html:p>The base of a given media type describes the simple MIME type
                        that then a more complicated media type can be derived from. These
                        types are basic and provide no namespace or version specific
                        data are are only provided as a convenience. Because of this the
                        base attribute is declared as optional.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="type" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>
          <html:p>
            The type attribute of a MediaType describes the MIME specific
                        identifier of the media type in question. This identifier should include 
                        a vendor namespace (
            <html:a href="http://tools.ietf.org/html/rfc2048">See RFC 2048</html:a>
            )
                        as well as a version suffix.
          </html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:endpoint>${#Project#Endpoint}</con:endpoint><con:endpoint>http://localhost:8080</con:endpoint></con:endpoints><con:resource name="v1.1" path="${#Project#path}"><con:settings/><con:parameters/><con:resource name="extensions" path="extensions"><con:settings/><con:parameters/><con:resource name="{alias}" path="{alias}"><con:settings/><con:parameters><con:parameter><con:name>alias</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="GET - getExtension" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:extension</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="GET - getExtensions" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:extensions</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="auth" path="auth-admin"><con:settings/><con:parameters/><con:method name="POST - authenticate" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:nastCredentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:mossoCredentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:passwordCredentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:auth</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:userDisabled</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401 403 400 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="token" path="token"><con:settings/><con:parameters/><con:resource name="{tokenId}" path="{tokenId}"><con:settings/><con:parameters><con:parameter><con:name>tokenId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="GET - validateToken" method="GET"><con:settings/><con:parameters><con:parameter><con:name>belongsTo</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>type</con:name><con:value>CLOUD</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>CLOUD</con:default><con:option>CLOUD</con:option><con:option>NAST</con:option><con:option>MOSSO</con:option></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:token</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:userDisabled</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="DELETE - revokeToken" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource><con:resource name="users" path="users"><con:settings/><con:parameters/><con:resource name="{userId}" path="{userId}"><con:settings/><con:parameters><con:parameter><con:name>userId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="enabled" path="enabled"><con:settings/><con:parameters/><con:method name="GET - getUserEnabled" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="PUT - setUserEnabled" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="key" path="key"><con:settings/><con:parameters/><con:method name="GET - getUserKey" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="PUT - setUserKey" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request>&lt;v1:user xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="serviceCatalog" path="serviceCatalog"><con:settings/><con:parameters/><con:method name="GET - getServiceCatalog" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceCatalog</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="baseURLRefs" path="baseURLRefs"><con:settings/><con:parameters/><con:resource name="{baseURLId}" path="{baseURLId}"><con:settings/><con:parameters><con:parameter><con:name>baseURLId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="GET - getBaseURLRef" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:baseURLRef</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="DELETE - deleteBaseURLRef" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="GET - getBaseURLRefs" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:baseURLRefs</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="POST - addBaseURLRef" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:baseURLRef</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:baseURLRef</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="groups" path="groups"><con:settings/><con:parameters/><con:method name="GET - getUserGroups" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:groups</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="GET - getUser" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="DELETE - deleteUser" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="PUT - updateUser" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request>&lt;v1:user xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:method name="POST - createUser" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>409</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:usernameConflict</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 409 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="nast/{nastId}" path="nast/{nastId}"><con:settings/><con:parameters><con:parameter><con:name>nastId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="GET - userRedirect" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType xsi:nil="true"/><con:status>303</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="mosso/{mossoId}" path="mosso/{mossoId}"><con:settings/><con:parameters><con:parameter><con:name>mossoId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="GET - userRedirect" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType xsi:nil="true"/><con:status>303</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="baseURLs" path="baseURLs"><con:settings/><con:parameters/><con:resource name="{baseURLId}" path="{baseURLId}"><con:settings/><con:parameters><con:parameter><con:name>baseURLId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="GET - getBaseURL" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:baseURL</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="enabled" path="enabled"><con:settings/><con:parameters/><con:method name="GET - getBaseURL" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:baseURL</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="GET - getBaseURLs" method="GET"><con:settings/><con:parameters><con:parameter><con:name>serviceName</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:baseURLs</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="auth public" path="auth"><con:settings/><con:parameters/><con:method name="POST - authenticate" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:nastCredentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:mossoCredentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:passwordCredentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:auth</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:userDisabled</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401 403 400 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:method name="GET - getVersionInfo" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:version</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="RAX-GRPADM" type="rest" basePath="" definitionUrl="C:\Users\mant0623\Desktop\RAX-GRPADM-GAv2.0.wadl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT"/><con:endpoints><con:endpoint>${#Project#Endpoint}</con:endpoint></con:endpoints><con:resource name="v2.0" path="${#Project#pathv2.0}"><con:settings/><con:parameters/><con:resource name="RAX-GRPADM" path="RAX-GRPADM"><con:settings/><con:parameters/><con:resource name="groups" path="groups"><con:settings/><con:parameters/><con:resource name="{groupId}" path="{groupId}"><con:settings/><con:parameters><con:parameter><con:name>groupId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="users" path="users"><con:settings/><con:parameters><con:parameter><con:name>X-Auth-Token</con:name><con:value/><con:style>HEADER</con:style></con:parameter></con:parameters><con:resource name="{userId}" path="{userId}"><con:settings/><con:parameters><con:parameter><con:name>userId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Add User to Group - addUserToGroup" method="PUT"><con:settings/><con:parameters><con:parameter><con:name>X-Auth-Token</con:name><con:value/><con:style>HEADER</con:style><con:default/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Remove User From Group - removeUserFromGroup" method="DELETE"><con:settings/><con:parameters><con:parameter><con:name>X-Auth-Toekn</con:name><con:value/><con:style>HEADER</con:style><con:default/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource><con:method name="Get Group - getGroup" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">v1:group</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Update a Group - updateGroup" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">v1:group</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">v1:group</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete Group - deleteGroup" method="DELETE"><con:settings/><con:parameters><con:parameter><con:name>X-Auth-Token</con:name><con:value/><con:style>HEADER</con:style><con:default/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Add a New Group - addGroup" method="POST"><con:settings/><con:parameters><con:parameter><con:name>X-Auth-Token</con:name><con:value/><con:style>HEADER</con:style><con:default/></con:parameter></con:parameters><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">v1:group</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v1="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">v1:group</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="identity admin" type="rest" basePath="" definitionUrl="C:\Users\mant0623\Desktop\admin\identity-admin-auth2.0.wadl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT"/><con:endpoints><con:endpoint>${#Project#Endpoint}</con:endpoint></con:endpoints><con:resource name="v2.0" path="${#Project#pathv2.0}"><con:settings/><con:parameters/><con:resource name="extensions" path="extensions"><con:settings/><con:parameters/><con:resource name="{alias}" path="{alias}"><con:settings/><con:parameters><con:parameter><con:name>alias</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Get Extension Details - getExtension" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/common/api/v1.0">v1:extension</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="List Extensions - listExtensions" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/common/api/v1.0">v1:extensions</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="tokens" path="tokens"><con:settings/><con:parameters/><con:resource name="{tokenId}" path="{tokenId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter required="true"><con:name>tokenId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>belongsTo</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="endpoints" path="endpoints"><con:settings/><con:parameters/><con:method name="List Endoints for a Token - listEndpointsForToken" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:endpoints</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Validate Token - validateToken" method="GET"><con:settings/><con:parameters><con:parameter><con:name>belongsTo</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:access</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Check Token - checkToken" method="HEAD"><con:settings/><con:parameters><con:parameter><con:name>belongsTo</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Authenticate for Service API - authenticate" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:auth</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:access</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:userDisabled</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="users" path="users"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="{user_id}" path="{user_id}"><con:settings/><con:parameters><con:parameter required="true"><con:name>user_id</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="roles" path="roles"><con:settings/><con:parameters/><con:method name="List User Global Roles - listUserGlobalRoles" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:roles</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get a User by ID - getUserById" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get a User by Name - getUserByName" method="GET"><con:settings/><con:parameters><con:parameter required="true"><con:name>name</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="tenants" path="tenants"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="{tenantId}" path="{tenantId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>tenantId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="users" path="users"><con:settings/><con:parameters/><con:resource name="{user_id}" path="{user_id}"><con:settings/><con:parameters><con:parameter required="true"><con:name>user_id</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="roles" path="roles"><con:settings/><con:parameters/><con:method name="List Roles for User on Tenant - listRolesForUserOnTenant" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:roles</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource><con:method name="Get Tenants by ID - getTenantById" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:tenant</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get Tenants - listTenants" method="GET"><con:settings/><con:parameters><con:parameter><con:name>marker</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:tenants</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Get tenants by name - getTenantByName" method="GET"><con:settings/><con:parameters><con:parameter required="true"><con:name>name</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:tenant</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Version Details - getVersionInfo" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/common/api/v1.0">v1:version</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="getVersion" type="rest" basePath="" definitionUrl="C:\Users\mant0623\Desktop\getVersion_1.wadl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>http://172.17.16.113:8080</con:endpoint></con:endpoints><con:resource name=".xml" path="${#Project#path}"><con:settings/><con:parameters/><con:method name="getVersion - getVersion" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:api="http://docs.rackspacecloud.com/auth/api">api:version</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404 500</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:serverError</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://172.17.16.113:8080</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name=".json" path="${#Project#path}/v1.0"><con:settings/><con:parameters/><con:method name="getVersion - getVersion" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401 500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://172.17.16.113:8080</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="v1.0 contract" path=""><con:settings/><con:parameters/><con:resource name="v1.0 contract" path="${#Project#path}/v1.0"><con:settings/><con:parameters/><con:method name="auth v1.0 - auth v1.0" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>204</con:status><con:params/><con:element xmlns:ns="http://wadl.dev.java.net/2009/02">ns:data</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>204</con:status><con:params/><con:element xmlns:ns="http://wadl.dev.java.net/2009/02">ns:data</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>204</con:status><con:params/><con:element xmlns:ns="http://wadl.dev.java.net/2009/02">ns:data</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>204</con:status><con:params/><con:element xmlns:ns="http://wadl.dev.java.net/2009/02">ns:data</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>204</con:status><con:params/><con:element xmlns:ns="http://wadl.dev.java.net/2009/02">ns:data</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>204</con:status><con:params/><con:element xmlns:ns="http://wadl.dev.java.net/2009/02">ns:data</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>204</con:status><con:params/><con:element xmlns:ns="http://wadl.dev.java.net/2009/02">ns:data</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>204</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/xml</con:mediaType><con:status>204</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>204</con:status><con:params/><con:element xmlns:ns="http://wadl.dev.java.net/2009/02">ns:data</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>204</con:status><con:params/><con:element xmlns:ns="http://wadl.dev.java.net/2009/02">ns:data</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>204</con:status><con:params/><con:element xmlns:ns="http://wadl.dev.java.net/2009/02">ns:data</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401 404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://172.17.16.113:8080</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="v1.0.1 direct" path="${#Project#path}/v1.0"><con:settings/><con:parameters/><con:method name="auth v1.0.1 direct - auth v1.0.1 direct" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>204</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/xml</con:mediaType><con:status>204</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>204</con:status><con:params/><con:element xmlns:ns="http://wadl.dev.java.net/2009/02">ns:data</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://172.17.16.113:8080</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource><con:resource name="v1.0.2" path="${#Project#pathv10}"><con:settings/><con:parameters/><con:method name="auth v1.0.2 - auth v1.0.2" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>302</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>204</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>204</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>204</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>204</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/xml</con:mediaType><con:status>204</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>204</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>204</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>204</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>204</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>204</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 401 500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/octet-stream</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401 500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>401 404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://172.17.16.113:8080</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="v1.0.1" path="auth-server/services/rest/service/auth"><con:settings/><con:parameters/><con:method name="auth v1.0.1 - auth v1.0.1" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>204</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>204</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://172.17.16.113:8080</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:interface><con:testSuite name="Functional - positive"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CreateUser" searchProperties="true" id="614d2c7d-1368-40bd-8904-aaffaf6d0d5e" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="POST - createUser"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users" methodName="POST - createUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createUser" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.support.editor.views.xml.form2.FormEditorView@ViewType">All</con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:user enabled="true" id="${#TestSuite#username}" key="${#TestSuite#key}" mossoId="${#TestSuite#MossoId}" nastId="${#TestSuite#nastId}" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="201 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>body1</con:name><con:sourceType>createUserJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - createUser - json</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST - createUser - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users" methodName="POST - createUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createUser - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.support.editor.views.xml.form2.FormEditorView@ViewType">All</con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "user" : {   "id" : "testRandomUser",   "key" : "T35tM3",   "mossoId" : 5800383,   "nastId" : "mynast1d",   "enabled" : true  } }</con:request><con:assertion type="GroovyScriptAssertion" name="201 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"user":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>"id":"testRandomUser"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 2"><con:configuration><token>"enabled":true</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 3"><con:configuration><token>"baseURLRefs":[{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteUser - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteUser - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="testRandomUser" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>createUserJson</con:name><con:value>{ "user" : {   "id" : "testRandomUser",   "key" : "T35tM3",   "mossoId" : 5800383,   "nastId" : "mynast1d",   "enabled" : true  } }</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="addBaseURLRef w same Id" searchProperties="true" id="50995b63-b74d-484c-8eb9-252e6ccf188a"><con:settings/><con:testStep type="restrequest" name="GET - getBaseURLs"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/baseURLs" methodName="GET - getBaseURLs" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getBaseURLs" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Assert node [@enabled]"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns1"] = "http://docs.rackspacecloud.com/auth/api/v1.1"
def node = holder.getDomNode( "//ns1:baseURLs/ns1:baseURL/@enabled" )

assert node != null
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [@enabled]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
exists( //ns1:baseURLs/ns1:baseURL[@enabled="false"]/text())</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="get enable region"><con:settings/><con:config><script>//get disable region
def getRegion = context.expand( '${GET - getBaseURLs#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:baseURLs[1]/ns1:baseURL[@enabled=\"true\"]/@region}' )
log.info "Disabled resion - "+getRegion
//get BaseUrl ID
def getId = context.expand( '${GET - getBaseURLs#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:baseURLs[1]/ns1:baseURL[@enabled=\"true\"]/@id}' )
log.info "id - "+getId
//get service name
def getSrvName = context.expand( '${GET - getBaseURLs#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:baseURLs[1]/ns1:baseURL[@enabled=\"true\"]/@serviceName}' )
//write to testcase properties
log.info "service name - "+getSrvName
testRunner.testCase.setPropertyValue("region", getRegion)
//testRunner.testCase.setPropertyValue("id", getId)
testRunner.testCase.setPropertyValue("serviceName", getSrvName)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - addBaseURLRef - xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/baseURLRefs" methodName="POST - addBaseURLRef" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addBaseURLRef - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:baseURLRef id="${#TestCase#id}" v1Default="true" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:baseURLRef/@id</path><content>${#TestCase#id}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Copy of Copy of GET - getBaseURLRefs - check Delete - xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/baseURLRefs" methodName="GET - getBaseURLRefs" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of Copy of GET - getBaseURLRefs - check Delete - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [@id]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:baseURLRefs/ns1:baseURLRef/@id=1</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="1500"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Copy of GET - getBaseURLRefs - check Delete - xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/baseURLRefs" methodName="GET - getBaseURLRefs" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of GET - getBaseURLRefs - check Delete - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [@id]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:baseURLRefs/ns1:baseURLRef/@id=1</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Copy of POST - addBaseURLRef - xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/baseURLRefs" methodName="POST - addBaseURLRef" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of POST - addBaseURLRef - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:baseURLRef id="${#TestCase#id}" v1Default="true" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:badRequest[1]/ns1:message[1]</path><content>Attempt to add existing BaseURL!</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteBaseURLRef after added"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/baseURLRefs/{baseURLId}" methodName="DELETE - deleteBaseURLRef" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteBaseURLRef after added" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#username}"/>
  <con:entry key="baseURLId" value="${#TestCase#id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getBaseURLRefs - check Delete - xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/baseURLRefs" methodName="GET - getBaseURLRefs" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getBaseURLRefs - check Delete - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [@id]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:baseURLRefs/ns1:baseURLRef/@id=1</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>region</con:name><con:value>ORD</con:value></con:property><con:property><con:name>id</con:name><con:value>13</con:value></con:property><con:property><con:name>serviceName</con:name><con:value>cloudFiles</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Auth" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="78a8074a-7011-4ce7-9760-9ec1d377b63b"><con:settings/><con:testStep type="properties" name="Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>serviceName</con:name><con:value>cloudFiles</con:value></con:property><con:property><con:name>region</con:name><con:value>DFW</con:value></con:property><con:property><con:name>username</con:name><con:value>authtest2</con:value></con:property><con:property><con:name>password</con:name><con:value>Password2</con:value></con:property><con:property><con:name>tokenID</con:name><con:value>095a51fa-6b13-4d1d-84d0-f05c0b071a18</con:value></con:property><con:property><con:name>key</con:name><con:value>0f97f489c848438090250d50c7e1ea88</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST - auth - xml"><con:settings/><con:config service="Auth1.1.x" methodName="POST - authenticate" resourcePath="/${#Project#path}/auth" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - auth - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:credentials key="${#TestSuite#key}" username="${#TestSuite#username}" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>body1</con:name><con:sourceType>authjson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - auth - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body2</con:name><con:sourceType>authenticateJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - authenticate - JSON</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body3</con:name><con:sourceType>mossoAuthenticateJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - Mosso authenticate - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body4</con:name><con:sourceType>nastAuthenticateJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - Nast authenticate - json</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST - auth - json"><con:settings/><con:config service="Auth1.1.x" methodName="POST - authenticate" resourcePath="/${#Project#path}/auth" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - auth - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"auth":{"token":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>"serviceCatalog":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 2" disabled="true"><con:configuration><token>"cloudDB":[{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - XML"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - XML" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;passwordCredentials password="${#TestSuite#password}" username="${#TestSuite#username}" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="200 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="storeToken - XML"><con:settings/><con:config><script>def tokenIDResp = context.expand( '${POST - authenticate - XML#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:auth[1]/ns1:token[1]/@id}' )

testRunner.testCase.testSteps.Properties.setPropertyValue("tokenID",tokenIDResp);
testRunner.testCase.testSuite.setPropertyValue("tokenId",tokenIDResp);

//def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
//def holder = groovyUtils.getXmlHolder("POST - authenticate#Response")

//List dataList = holder.getNodeValues("//ns1:auth[1]/ns1:serviceCatalog[1]/ns1:service/ns1:endpoint[1]/@publicURL")

def getServiceName = context.expand( '${POST - authenticate - XML#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:auth[1]/ns1:serviceCatalog[1]/ns1:service[@name="${serviceName}"]/@name}' )
def internalURL = context.expand( '${POST - authenticate - XML#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:auth[1]/ns1:serviceCatalog[1]/ns1:service[@name="${serviceName}"]/ns1:endpoint[@region="${region}"]/@internalURL}' )
def publicURL = context.expand( '${POST - authenticate - XML#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:auth[1]/ns1:serviceCatalog[1]/ns1:service[@name="${serviceName}"]/ns1:endpoint[@region="${region}"]/@publicURL}' )
def region = context.expand( '${POST - authenticate - XML#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:auth[1]/ns1:serviceCatalog[1]/ns1:service[@name="${serviceName}"]/ns1:endpoint[@region="${region}"]/@region}' )
//List dataList = holder.getNodeValues("//ns1:auth[1]/ns1:serviceCatalog[1]/ns1:service[@name='${serviceName}]/ns1:endpoint[@region='${region}']")

//def internalURL= dataList.get(0);
//def publicURL = dataList.get(1);

testRunner.testCase.testSuite.setPropertyValue("X-Public-Url", publicURL)
testRunner.testCase.testSuite.setPropertyValue("X-Internal-Url", internalURL)
testRunner.testCase.testSuite.setPropertyValue("Service-Name", getServiceName)
testRunner.testCase.testSuite.setPropertyValue("Region", region)

</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - validateToken - xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/token/{tokenId}" methodName="GET - validateToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - validateToken - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="200 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="belongsTo" value="${#TestSuite#username}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUser"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUser" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store nastId"><con:settings/><con:config><script>def getNastId = context.expand( '${GET - getUser#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:user[1]/@nastId}' )
log.info "get nast ID - " + getNastId
testRunner.testCase.testSuite.setPropertyValue("NastId", getNastId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Mosso authenticate - XML"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Mosso authenticate - XML" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting><con:setting id="com.eviware.soapui.settings.CommonSettings@entitizeProperties">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;mossoCredentials key="${#TestSuite#key}" mossoId="${#TestSuite#MossoId}" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="200 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - Mosso authentication - XML Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@id]" disabled="true"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:auth[1]/ns1:token[1]/@id</path><content>${#TestSuite#tokenId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Nast authenticate - XML"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Nast authenticate - XML" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;nastCredentials key="${#TestSuite#key}" nastId="${#TestSuite#NastId}" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="200 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - Nast authentication - XML Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - user-key authenticate - xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - user-key authenticate - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;credentials key="${#TestSuite#key}" username="${#TestSuite#username}" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - user-key authentication - XML Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@id]" disabled="true"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:auth[1]/ns1:token[1]/@id</path><content>${#TestSuite#tokenId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - JSON"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - JSON" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"passwordCredentials":{"username":"${#TestSuite#username}","password":"${#TestSuite#password}"}}</con:request><con:assertion type="GroovyScriptAssertion" name="200 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - json Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"auth":{"token":{"id":"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>"serviceCatalog":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 2" disabled="true"><con:configuration><token>"cloudDB":[{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="storeToken - JSON"><con:settings/><con:config><script>def status = testRunner.testCase.testSteps["POST - authenticate - JSON"].testRequest.response.getStatusCode()
log.info status
def contentType = testRunner.testCase.testSteps["POST - authenticate - JSON"].testRequest.response.getContentType()
log.info contentType

def response = context.expand( '${POST - authenticate - JSON#Response}' )
log.info "json response: " + response

if(status.equals(200) &amp;&amp; contentType.equals("application/json")){
	assert true
}
else{
	assert false
}

//def tokenIDResp = context.expand( '${POST - authenticate - JSON#ResponseAsXml#declare namespace ns1=\'http://172.17.16.57/v1.1.2/auth-admin\'; //ns1:Response[1]/ns1:auth[1]/ns1:token[1]/ns1:id[1]}' )
def tokenIDResp = context.expand( '${POST - authenticate - JSON#ResponseAsXml#declare namespace ns1=\'https://auth.staging.us.ccp.rackspace.net/v1.1/auth-admin\'; //ns1:Response[1]/ns1:auth[1]/ns1:token[1]/ns1:id[1]}' )


//testRunner.testCase.testSuite.setPropertyValue("tokenId",tokenIDResp);
log.info tokenIDResp

//def getServiceName = context.expand( '${POST - authenticate - XML#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:auth[1]/ns1:serviceCatalog[1]/ns1:service[@name="${serviceName}"]/@name}' )
//def internalURL = context.expand( '${POST - authenticate - XML#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:auth[1]/ns1:serviceCatalog[1]/ns1:service[@name="${serviceName}"]/ns1:endpoint[@region="${region}"]/@internalURL}' )
//def publicURL = context.expand( '${POST - authenticate - XML#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:auth[1]/ns1:serviceCatalog[1]/ns1:service[@name="${serviceName}"]/ns1:endpoint[@region="${region}"]/@publicURL}' )
//def region = context.expand( '${POST - authenticate - XML#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:auth[1]/ns1:serviceCatalog[1]/ns1:service[@name="${serviceName}"]/ns1:endpoint[@region="${region}"]/@region}' )
def internalURL = context.expand( '${POST - authenticate - JSON#ResponseAsXml#declare namespace ns1=\'http://172.17.16.57/auth-admin/auth\'; //ns1:Response[1]/ns1:auth[1]/ns1:serviceCatalog[1]/ns1:cloudFiles[1]/ns1:e[1]/ns1:internalURL[1]}' )
def publicURL = context.expand( '${POST - authenticate - JSON#ResponseAsXml#declare namespace ns1=\'http://172.17.16.57/auth-admin/auth\'; //ns1:Response[1]/ns1:auth[1]/ns1:serviceCatalog[1]/ns1:cloudFiles[1]/ns1:e[1]/ns1:publicURL[1]}' )
def region = context.expand( '${POST - authenticate - JSON#ResponseAsXml#declare namespace ns1=\'http://172.17.16.57/auth-admin/auth\'; //ns1:Response[1]/ns1:auth[1]/ns1:serviceCatalog[1]/ns1:cloudFiles[1]/ns1:e[1]/ns1:region[1]}' )

//List dataList = holder.getNodeValues("//ns1:auth[1]/ns1:serviceCatalog[1]/ns1:service[@name='${serviceName}]/ns1:endpoint[@region='${region}']")
//def internalURL= dataList.get(0);
//def publicURL = dataList.get(1);

testRunner.testCase.testSuite.setPropertyValue("X-Public-Url", publicURL)
testRunner.testCase.testSuite.setPropertyValue("X-Internal-Url", internalURL)
testRunner.testCase.testSuite.setPropertyValue("Region", region)

</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Mosso authenticate - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Mosso authenticate - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"mossoCredentials":{"mossoId":${#TestSuite#MossoId},"key":"${#TestSuite#key}"}}</con:request><con:assertion type="GroovyScriptAssertion" name="200 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - Mosso authentication - json Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"auth":{"token":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>"serviceCatalog":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 2" disabled="true"><con:configuration><token>"cloudDB":[{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Nast authenticate - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Nast authenticate - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"nastCredentials":{"nastId":"${#TestSuite#NastId}","key":"${#TestSuite#key}"}}</con:request><con:assertion type="GroovyScriptAssertion" name="200 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - Nast authentication - XML Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"auth":{"token":{"id":"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>"serviceCatalog":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 2" disabled="true"><con:configuration><token>"cloudDB":[{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - user-key authenticate - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - user-key authenticate - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;credentials key="${#TestSuite#key}" username="${#TestSuite#username}" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - user-key authentication - XML Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [id]" disabled="true"><con:configuration><path>declare namespace ns1='http://172.17.16.57/v1.1.2/auth';
//ns1:Response[1]/ns1:auth[1]/ns1:token[1]/ns1:id[1]/text()</path><content>${#TestSuite#tokenId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="verify tokenId - staging [id]" disabled="true"><con:configuration><path>declare namespace ns1='https://auth.staging.us.ccp.rackspace.net/v1.1/auth';
//ns1:Response[1]/ns1:auth[1]/ns1:token[1]/ns1:id[1]/text()</path><content>${#TestSuite#tokenId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>"serviceCatalog":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 2" disabled="true"><con:configuration><token>"cloudDB":[{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>authjson</con:name><con:value>{"credentials":{"username":"${#TestSuite#username}","key":"${#TestSuite#key}"}}</con:value></con:property><con:property><con:name>authenticateJson</con:name><con:value>{"passwordCredentials":{"username":"${#TestSuite#username}","password":"${#TestSuite#password}"}}</con:value></con:property><con:property><con:name>mossoAuthenticateJson</con:name><con:value>{"mossoCredentials":{"mossoId":${#TestSuite#MossoId},"key":"${#TestSuite#key}"}}</con:value></con:property><con:property><con:name>nastAuthenticateJson</con:name><con:value>{"nastCredentials":{"nastId":"${#TestSuite#NastId}","key":"${#TestSuite#key}"}}</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="testAccountDisable" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="881601bb-2d36-4bcc-8006-024899fba6b8"><con:settings/><con:testStep type="transfer" name="Property Transfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>username</con:name><con:sourceType>username</con:sourceType><con:sourceStep>#TestSuite#</con:sourceStep><con:targetType>username</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>password</con:name><con:sourceType>password</con:sourceType><con:sourceStep>#TestSuite#</con:sourceStep><con:targetType>password</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>key</con:name><con:sourceType>key</con:sourceType><con:sourceStep>#TestSuite#</con:sourceStep><con:targetType>key</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>NastId</con:name><con:sourceType>NastId</con:sourceType><con:sourceStep>#TestSuite#</con:sourceStep><con:targetType>NastId</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" useXQuery="false" entitize="false" transferToAll="false" transferChildNodes="false"><con:name>MossoId</con:name><con:sourceType>MossoId</con:sourceType><con:sourceStep>#TestSuite#</con:sourceStep><con:targetType>MossoId</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body1</con:name><con:sourceType>setUserEnableTrueJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>PUT - setUserEnabled - true - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body2</con:name><con:sourceType>authenticatePCJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - authenticate - passwordCredential - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body3</con:name><con:sourceType>authenticateUCJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - authenticate - userCredential - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body4</con:name><con:sourceType>authenticateNCJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - authenticate - nastCredential - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body5</con:name><con:sourceType>authenticateMCJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - authenticate - mossoCredential - json</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>username</con:name><con:value>usrandomtest1</con:value></con:property><con:property><con:name>password</con:name><con:value>Password1</con:value></con:property><con:property><con:name>key</con:name><con:value>ba04b108b7cefcbcbf7c4d8bd05e3857</con:value></con:property><con:property><con:name>NastId</con:name><con:value>StagingUS_5dac7059-1657-4a8d-b1a2-e8513d059c6e</con:value></con:property><con:property><con:name>MossoId</con:name><con:value>5800381</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="PUT - setUserEnabled - false - xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/enabled" methodName="PUT - setUserEnabled" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - setUserEnabled - false - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:user enabled="false" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - passwordCredential xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - passwordCredential xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:passwordCredentials password="${#TestSuite#password}" username="${#TestSuite#username}" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="status code 403"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - passwordCredential - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - passwordCredential - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"passwordCredentials":{"username":"${#TestSuite#username}","password":"${#TestSuite#password}"}}</con:request><con:assertion type="GroovyScriptAssertion" name="status code 403"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"userDisabled":{"message":"User '${#TestSuite#username}' is disabled.","code":403}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - userCredential xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - userCredential xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:credentials key="${#TestSuite#key}" username="${#TestSuite#username}" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="XPath Match" name="Match content of [@code]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:userDisabled[1]/@code</path><content>403</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="status code 403"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:userDisabled[1]/ns1:message[1]/text()</path><content>${#TestSuite#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - userCredential - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - userCredential - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"credentials":{"username":"${#TestSuite#username}","key":"${#TestSuite#key}"}}</con:request><con:assertion type="XPath Match" name="Match content of [@code]"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#path}/auth';
//ns1:Fault[1]/ns1:userDisabled[1]/ns1:code[1]</path><content>403</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="status code 403"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#path}/auth';
//ns1:Fault[1]//ns1:userDisabled[1]/ns1:message</path><content>${#TestSuite#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"userDisabled":{"message":"usrandomtest1","code":403}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - nastCredential xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - nastCredential xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:nastCredentials key="${#TestSuite#key}" nastId="${#TestSuite#NastId}" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="status code 403"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:userDisabled[1]/ns1:message[1]/text()</path><content>${#TestSuite#NastId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - nastCredential - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - nastCredential - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"nastCredentials":{"nastId":"${#TestSuite#NastId}","key":"${#TestSuite#key}"}}</con:request><con:assertion type="GroovyScriptAssertion" name="status code 403"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#path}/auth-admin';
//ns1:Fault/ns1:userDisabled[1]/ns1:message[1]/text()</path><content>${#TestSuite#NastId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - mossoCredential xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - mossoCredential xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:mossoCredentials key="${#TestSuite#key}" mossoId="${#TestSuite#MossoId}" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="status code 403"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:userDisabled[1]/ns1:message[1]/text()</path><content>${#TestSuite#MossoId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - mossoCredential - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - mossoCredential - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"mossoCredentials":{"mossoId":${#TestSuite#MossoId},"key":"${#TestSuite#key}"}}</con:request><con:assertion type="GroovyScriptAssertion" name="status code 403"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/auth-admin';
//ns1:userDisabled[1]/ns1:message[1]/text()</path><content>${#TestSuite#MossoId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"userDisabled":{"message":"${#TestSuite#MossoId}","code":403}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - setUserEnabled - true - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/enabled" methodName="PUT - setUserEnabled" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - setUserEnabled - true - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"user":{"enabled":true}}</con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@enabled]"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#path}/users/${#TestSuite#username}/enabled';
//ns1:Response[1]/ns1:user[1]/ns1:enabled</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"user":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - userCredential 200"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - userCredential 200" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:credentials key="${#TestSuite#key}" username="${#TestSuite#username}" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="status code 200"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token"><con:settings/><con:config><script>def token = context.expand( '${POST - authenticate - userCredential 200#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:auth[1]/ns1:token[1]/@id}' )

testRunner.testCase.testSuite.setPropertyValue("tokenId", token);
log.info token;</script></con:config></con:testStep><con:properties><con:property><con:name>setUserEnableTrueJson</con:name><con:value>{"user":{"enabled":true}}</con:value></con:property><con:property><con:name>authenticatePCJson</con:name><con:value>{"passwordCredentials":{"username":"${#TestSuite#username}","password":"${#TestSuite#password}"}}</con:value></con:property><con:property><con:name>authenticateUCJson</con:name><con:value>{"credentials":{"username":"${#TestSuite#username}","key":"${#TestSuite#key}"}}</con:value></con:property><con:property><con:name>authenticateNCJson</con:name><con:value>{"nastCredentials":{"nastId":"${#TestSuite#NastId}","key":"${#TestSuite#key}"}}</con:value></con:property><con:property><con:name>authenticateMCJson</con:name><con:value>{"mossoCredentials":{"mossoId":${#TestSuite#MossoId},"key":"${#TestSuite#key}"}}</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="testAccountStatus - HMDB" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="7e66fd29-37fe-4669-8474-51a7ff19da79" disabled="true"><con:settings/><con:testStep type="properties" name="Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>username2</con:name><con:value>ukauthtest14</con:value></con:property><con:property><con:name>password2</con:name><con:value>Password1</con:value></con:property><con:property><con:name>key2</con:name><con:value>64699add09dba029b547ea1536f7d51f</con:value></con:property><con:property><con:name>status2</con:name><con:value>active</con:value></con:property><con:property><con:name>username3</con:name><con:value>ukauthtest11</con:value></con:property><con:property><con:name>password3</con:name><con:value>Password1</con:value></con:property><con:property><con:name>key3</con:name><con:value>cd203d327d37423efa98d52fef348375</con:value></con:property><con:property><con:name>status3</con:name><con:value>delinquent</con:value></con:property><con:property><con:name>username4</con:name><con:value>authtest4</con:value></con:property><con:property><con:name>password4</con:name><con:value>Password4</con:value></con:property><con:property><con:name>key4</con:name><con:value>faae7f485d4e642427abe98a59f85f01</con:value></con:property><con:property><con:name>status4</con:name><con:value>unverified</con:value></con:property><con:property><con:name>username5</con:name><con:value>ukauthtest12</con:value></con:property><con:property><con:name>password5</con:name><con:value>Password1</con:value></con:property><con:property><con:name>key5</con:name><con:value>176fca27e427a4b4b1157a176fa0fa8b</con:value></con:property><con:property><con:name>status5</con:name><con:value>suspended</con:value></con:property><con:property><con:name>username6</con:name><con:value>ukauthtest13</con:value></con:property><con:property><con:name>password6</con:name><con:value>Password1</con:value></con:property><con:property><con:name>key6</con:name><con:value>ceafe4f49137f8143c4f710540d01ec3</con:value></con:property><con:property><con:name>status6</con:name><con:value>denied</con:value></con:property><con:property><con:name>username7</con:name><con:value>ukauthtest16</con:value></con:property><con:property><con:name>password7</con:name><con:value>Password1</con:value></con:property><con:property><con:name>key7</con:name><con:value>6bbf1f47aeefeb6bb69b803dfe06010f</con:value></con:property><con:property><con:name>status7</con:name><con:value>closed</con:value></con:property><con:property><con:name>username8</con:name><con:value>ukauthtest15</con:value></con:property><con:property><con:name>password8</con:name><con:value>Password1</con:value></con:property><con:property><con:name>key8</con:name><con:value>ac549ed402e7a9f948b75cc0f6036356u</con:value></con:property><con:property><con:name>status8</con:name><con:value>pending_approval</con:value></con:property><con:property><con:name>MossoId2</con:name><con:value>20000630</con:value></con:property><con:property><con:name>MossoId3</con:name><con:value>20000611</con:value></con:property><con:property><con:name>MossoId4</con:name><con:value>5701239</con:value></con:property><con:property><con:name>MossoId5</con:name><con:value>20000612</con:value></con:property><con:property><con:name>MossoId6</con:name><con:value>20000629</con:value></con:property><con:property><con:name>MossoId7</con:name><con:value>20000636</con:value></con:property><con:property><con:name>MossoId8</con:name><con:value>20000632</con:value></con:property><con:property><con:name>enabled</con:name><con:value>true</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - active"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - active" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;passwordCredentials password="${Properties#password2}" username="${Properties#username2}" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="200 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - active Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - delinquent"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - delinquent" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;passwordCredentials password="${Properties#password3}" username="${Properties#username3}" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="200 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - delinquent Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - unverified"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - unverified" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;passwordCredentials password="${Properties#password4}" username="${Properties#username4}" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="200 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - unverified Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - pending"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - pending" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;passwordCredentials password="${Properties#password8}" username="${Properties#username8}" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="200 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - pending Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - suspended"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - suspended" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;passwordCredentials password="${Properties#password5}" username="${Properties#username5}" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="403 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403
log.info "POST - authentication - suspended Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:userDisabled[1]/ns1:message[1]/text()</path><content>Account ${Properties#MossoId5} is not active.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - denied"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - denied" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;passwordCredentials password="${Properties#password6}" username="${Properties#username6}" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="403 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403
log.info "POST - authentication - denied Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:userDisabled[1]/ns1:message[1]/text()</path><content>Account ${Properties#MossoId6} is not active.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - closed"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - closed" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;passwordCredentials password="${Properties#password7}" username="${Properties#username7}" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="403 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403
log.info "POST - authentication - closed Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:userDisabled[1]/ns1:message[1]/text()</path><content>Account ${Properties#MossoId7} is not active.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getUserGroups" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="f8592f85-c376-4a82-8b11-3e54b6f0c2a0"><con:settings/><con:testStep type="properties" name="test data"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>username</con:name><con:value>usrandomtest1</con:value></con:property><con:property><con:name>groupID</con:name><con:value>LimitedUser</con:value></con:property><con:property><con:name>groupDesc</con:name><con:value>1 - Default</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUserGroups - xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/groups" methodName="GET - getUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUserGroups - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUserGroups - xml 1"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/groups" methodName="GET - getUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUserGroups - xml 1" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${test data#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="get group info"><con:settings/><con:config><script>//get group id
def getGrpId = context.expand( '${GET - getUserGroups - xml#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:groups[1]/ns1:group[1]/@id}' )
//get group description
def grpDesc = context.expand( '${GET - getUserGroups - xml#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:groups[1]/ns1:group[1]/ns1:description[1]}' )

log.info "Group ID: "+getGrpId
log.info "Group Description: "+grpDesc

testRunner.testCase.setPropertyValue("groupID", getGrpId)
testRunner.testCase.setPropertyValue("groupDesc", grpDesc)
groupId = testRunner.testCase.testSteps["test data"].getPropertyValue("groupID")
if (getGrpId == null || grpDesc == null)
{
	assert false
}</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUserGroups - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/groups" methodName="GET - getUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUserGroups - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"groups":{"values":[{"id":"${#TestCase#groupId}","description":"${#TestCase#groupDesc}"}]}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${test data#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUserGroups - 401 unauthorized"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/groups" methodName="GET - getUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUserGroups - 401 unauthorized" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"unauthorized":{"message":"You are not authorized to access this resource.","details":"AuthErrorHandler","code":401}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username/><con:password/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUserGroups - 404"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/groups" methodName="GET - getUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUserGroups - 404" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"itemNotFound":{"message":"User not found: test","code":404}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="test" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - createUser"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users" methodName="POST - createUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createUser" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.support.editor.views.xml.form2.FormEditorView@ViewType">All</con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:user enabled="true" id="testauth113" key="" mossoId="900113" nastId="Nast-12345" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="201 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUserGroups - user not exist in HMDB"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/groups" methodName="GET - getUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUserGroups - user not exist in HMDB" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:groups[1]/ns1:group[1]/@id</path><content>Default</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${POST - createUser#Response#declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1'; //ns1:user[1]/@id}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteUser"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteUser" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${POST - createUser#Response#declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1'; //ns1:user[1]/@id}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - createUser - test disable account"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users" methodName="POST - createUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createUser - test disable account" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.support.editor.views.xml.form2.FormEditorView@ViewType">All</con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:user enabled="true" id="authtest1" key="d32e3f4437131f69dde757356d489143" mossoId="5701106" nastId="TestNast123456" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="201 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUserGroups - others" disabled="true"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/groups" methodName="GET - getUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUserGroups - others" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${POST - createUser - test disable account#Response#declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1'; //ns1:user[1]/@id}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteUser - the disable account"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteUser - the disable account" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${POST - createUser - test disable account#Response#declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1'; //ns1:user[1]/@id}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>groupID</con:name><con:value>Default</con:value></con:property><con:property><con:name>groupDesc</con:name><con:value>Default Limits</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getBaseURLs w enabled boolean" searchProperties="true" id="74ead8e6-d921-4a72-93dd-a7388bcb1121"><con:settings/><con:testStep type="properties" name="Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>serviceName</con:name><con:value>cloudFiles</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="GET - getBaseURLs"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/baseURLs" methodName="GET - getBaseURLs" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getBaseURLs" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Assert node [@enabled]"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns1"] = "http://docs.rackspacecloud.com/auth/api/v1.1"
def node = holder.getDomNode( "//ns1:baseURLs/ns1:baseURL/@enabled" )

assert node != null
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [@enabled]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
exists( //ns1:baseURLs/ns1:baseURL[@enabled="false"]/text())</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getBaseURLs - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/baseURLs" methodName="GET - getBaseURLs" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getBaseURLs - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [@enabled]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
exists( //ns1:baseURLs/ns1:baseURL[@enabled="false"]/text())</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"baseURLs":[{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="verify enabled boolean"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("GET - getBaseURLs#Response");

holder.declareNamespace('ns','http://docs.rackspacecloud.com/auth/api/v1.1')

List serviceNameList = holder.getNodeValues("//ns:baseURLs[1]/ns:baseURL/@serviceName")
List serviceurlIdList = holder.getNodeValues("//ns:baseURLs[1]/ns:baseURL/@id")
List enabledValueList = holder.getNodeValues("//ns:baseURLs[1]/ns:baseURL/@enabled")
Collections.sort(serviceurlIdList)
log.info serviceNameList
log.info serviceurlIdList
log.info enabledValueList
log.info enabledValueList.size()
Set serviceSet = new HashSet(serviceNameList)
log.info serviceSet

for(item in 0..enabledValueList.size()-1)
{
	log.info enabledValueList[item]
	value = enabledValueList[item]
	if(value != "true" &amp;&amp;  value != "false")
	{
		log.info "Enabled not a boolean value"
		assert false
	}
}</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - getBaseURLs - w ServiceName"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/baseURLs" methodName="GET - getBaseURLs" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getBaseURLs - w ServiceName" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="serviceName" value="${Properties#serviceName}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getBaseURLs - w ServiceName - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/baseURLs" methodName="GET - getBaseURLs" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getBaseURLs - w ServiceName - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"baseURLs":[{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="serviceName" value="${Properties#serviceName}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="verify service name"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("GET - getBaseURLs - w ServiceName#Response");

holder.declareNamespace('ns','http://docs.rackspacecloud.com/auth/api/v1.1')

List serviceNameList = holder.getNodeValues("//ns:baseURLs[1]/ns:baseURL/@serviceName")
List serviceurlIdList = holder.getNodeValues("//ns:baseURLs[1]/ns:baseURL/@id")
List enabledValueList = holder.getNodeValues("//ns:baseURLs[1]/ns:baseURL/@enabled")
Collections.sort(serviceurlIdList)
log.info serviceNameList
log.info serviceurlIdList
log.info enabledValueList
log.info enabledValueList.size()
Set serviceSet = new HashSet(serviceNameList)
log.info serviceSet

srvName = testRunner.testCase.testSteps.Properties.getPropertyValue("serviceName")
log.info srvName
for(i in 0..serviceNameList.size() -1)
{
	if (serviceNameList[i] != srvName)
	{
		log.info "not correct service name: "+ srvName +" vs. "+serviceSet
		assert false
	}
}
for(item in 0..enabledValueList.size()-1)
{
	log.info enabledValueList[item]
	value = enabledValueList[item]
	if(value != "true" &amp;&amp;  value != "false")
	{
		log.info "Enabled not a boolean value"
		assert false
	}
}</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - getBaseURLs - enabled"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/baseURLs/enabled" methodName="GET - getBaseURL" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getBaseURLs - enabled" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Assert node [@enabled]"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns1"] = "http://docs.rackspacecloud.com/auth/api/v1.1"
def node = holder.getDomNode( "//ns1:baseURLs/ns1:baseURL/@enabled" )

assert node != null
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [@enabled]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
exists( //ns1:baseURLs/ns1:baseURL[@enabled="false"]/text())</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="serviceName" value="${Properties#serviceName}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getBaseURLs - enabled - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/baseURLs/enabled" methodName="GET - getBaseURL" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getBaseURLs - enabled - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [@enabled]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
exists( //ns1:baseURLs/ns1:baseURL[@enabled="false"]/text())</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"baseURLs":[{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="serviceName" value="${Properties#serviceName}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="verify enabled true"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("GET - getBaseURLs - enabled#Response");

holder.declareNamespace('ns','http://docs.rackspacecloud.com/auth/api/v1.1')

List serviceNameList = holder.getNodeValues("//ns:baseURLs[1]/ns:baseURL/@serviceName")
List serviceurlIdList = holder.getNodeValues("//ns:baseURLs[1]/ns:baseURL/@id")
List enabledValueList = holder.getNodeValues("//ns:baseURLs[1]/ns:baseURL/@enabled")
Collections.sort(serviceurlIdList)
log.info serviceNameList
log.info serviceurlIdList
log.info enabledValueList
log.info enabledValueList.size()
Set serviceSet = new HashSet(serviceNameList)
log.info serviceSet

for(item in 0..enabledValueList.size()-1)
{
	log.info enabledValueList[item]
	value = enabledValueList[item]
	if(value != "true")
	{
		log.info "Enabled not a boolean value"
		assert false
	}
}</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - getBaseURLs - 401"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/baseURLs" methodName="GET - getBaseURLs" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getBaseURLs - 401" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Assert node [@enabled]" disabled="true"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns1"] = "http://docs.rackspacecloud.com/auth/api/v1.1"
def node = holder.getDomNode( "//ns1:baseURLs/ns1:baseURL/@enabled" )

assert node != null
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [@enabled]" disabled="true"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
exists( //ns1:baseURLs/ns1:baseURL[@enabled="false"]/text())</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username/><con:password/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getBaseURLs - 401- json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/baseURLs" methodName="GET - getBaseURLs" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getBaseURLs - 401- json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Assert node [@enabled]" disabled="true"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns1"] = "http://docs.rackspacecloud.com/auth/api/v1.1"
def node = holder.getDomNode( "//ns1:baseURLs/ns1:baseURL/@enabled" )

assert node != null
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [@enabled]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
exists( //ns1:baseURLs/ns1:baseURL[@enabled="false"]/text())</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>"unauthorized":{"message":"You are not authorized to access this resource.","details":"AuthErrorHandler","code":401}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username/><con:password/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getBaseURLs - enabled 401"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/baseURLs/enabled" methodName="GET - getBaseURL" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getBaseURLs - enabled 401" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Assert node [@enabled]" disabled="true"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns1"] = "http://docs.rackspacecloud.com/auth/api/v1.1"
def node = holder.getDomNode( "//ns1:baseURLs/ns1:baseURL/@enabled" )

assert node != null
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [@enabled]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
exists( //ns1:baseURLs/ns1:baseURL[@enabled="false"]/text())</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username/><con:password/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="serviceName" value="${Properties#serviceName}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getBaseURLs - enabled 401 - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/baseURLs/enabled" methodName="GET - getBaseURL" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getBaseURLs - enabled 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Assert node [@enabled]" disabled="true"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns1"] = "http://docs.rackspacecloud.com/auth/api/v1.1"
def node = holder.getDomNode( "//ns1:baseURLs/ns1:baseURL/@enabled" )

assert node != null
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [@enabled]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
exists( //ns1:baseURLs/ns1:baseURL[@enabled="false"]/text())</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"unauthorized":{"message":"You are not authorized to access this resource.","details":"AuthErrorHandler","code":401}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username/><con:password/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="serviceName" value="${Properties#serviceName}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="addBaseURLRef w disabled baseURL" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="e97530b1-cab6-4c75-b6a3-1a7caec3337a" disabled="true"><con:settings/><con:testStep type="restrequest" name="GET - getBaseURLs"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/baseURLs" methodName="GET - getBaseURLs" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getBaseURLs" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Assert node [@enabled]"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns1"] = "http://docs.rackspacecloud.com/auth/api/v1.1"
def node = holder.getDomNode( "//ns1:baseURLs/ns1:baseURL/@enabled" )

assert node != null
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [@enabled]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
exists( //ns1:baseURLs/ns1:baseURL[@enabled="false"]/text())</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="get disable region"><con:settings/><con:config><script>//get disable region
def getRegion = context.expand( '${GET - getBaseURLs#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:baseURLs[1]/ns1:baseURL[@enabled=\"false\"]/@region}' )


log.info "Disabled resion - "+getRegion
//get BaseUrl ID
def getId = context.expand( '${GET - getBaseURLs#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:baseURLs[1]/ns1:baseURL[@enabled=\"false\"]/@id}' )
log.info "id - "+getId
//get service name
def getSrvName = context.expand( '${GET - getBaseURLs#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:baseURLs[1]/ns1:baseURL[@enabled=\"false\"]/@serviceName}' )
//write to testcase properties
log.info "service name - "+getSrvName
testRunner.testCase.setPropertyValue("region", getRegion)
testRunner.testCase.setPropertyValue("id", getId)
testRunner.testCase.setPropertyValue("serviceName", getSrvName)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - addBaseURLRef - disabled baseURL"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/baseURLRefs" methodName="POST - addBaseURLRef" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addBaseURLRef - disabled baseURL" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:baseURLRef id="333" enabled="false" v1Default="true" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:badRequest[1]/ns1:message[1]/text()</path><content>Attempted to add a disabled BaseURL!</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addBaseURLRef - disabled baseURL - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/baseURLRefs" methodName="POST - addBaseURLRef" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addBaseURLRef - disabled baseURL - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:baseURLRef id="${#TestCase#id}" v1Default="true" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"badRequest":{"message":"Attempted to add a disabled BaseURL!","code":400}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>region</con:name><con:value/></con:property><con:property><con:name>id</con:name><con:value/></con:property><con:property><con:name>serviceName</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DeleteUser" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="1d1189f2-4cf0-47c2-8af8-7bdcdefd216b"><con:settings/><con:testStep type="properties" name="Properties" disabled="true"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>username2</con:name><con:value>negtest81</con:value></con:property><con:property><con:name>password2</con:name><con:value>Password81</con:value></con:property><con:property><con:name>key2</con:name><con:value>0f97f489c848438090250d50c7e1ea88</con:value></con:property><con:property><con:name>enabled</con:name><con:value>true</con:value></con:property><con:property><con:name>MossoId</con:name><con:value>5703568</con:value></con:property><con:property><con:name>NastId</con:name><con:value>MossoCloudFS_0041b004-7171-4099-ab0b-260506f13ff2</con:value></con:property><con:property><con:name>invaliduser</con:name><con:value>jennyv2</con:value></con:property><con:property><con:name>invalidpwd</con:name><con:value>pwd123</con:value></con:property><con:property><con:name>MossoId2</con:name><con:value>123456</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteUser"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteUser" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteUser - Neg 404"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteUser - Neg 404" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${Properties#username2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteUser - Neg 405"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteUser - Neg 405" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 405</scriptText></con:configuration></con:assertion><con:credentials><con:username/><con:password/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${Properties#username2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Copy of DELETE - deleteUser" disabled="true"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of DELETE - deleteUser" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="authtest2" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getExtensions" searchProperties="true" id="0ee2b90d-232e-46e5-952a-00dd5d7787b9"><con:settings/><con:testStep type="restrequest" name="GET - getExtensions - xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/extensions" methodName="GET - getExtensions" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getExtensions - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username/><con:password/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="get alias" disabled="true"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("GET - getExtensions - xml#Response");

List aliasList = holder.getNodeValues("declare namespace ns1=\'http://docs.openstack.org/common/api/v1.0\'; //ns1:extensions[1]/ns1:extension/@alias")
log.info aliasList

for(item in 0..aliasList.size()-1)
{
	log.info aliasList[item]	
	value = aliasList[item]
	//testRunner.testCase.testSteps["data"].setPropertyValue("alias", value )
}</script></con:config></con:testStep><con:testStep type="datasink" name="DataSink" disabled="true"><con:settings/><con:config xsi:type="con:DataSinkStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSink type="Groovy"><con:configuration><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("GET - getExtensions - xml#Response");

List aliasList = holder.getNodeValues("declare namespace ns1=\'http://docs.openstack.org/common/api/v1.0\'; //ns1:extensions[1]/ns1:extension/@alias")
log.info aliasList

for(item in 0..aliasList.size()-1)
{
	log.info aliasList[item]	
	value = aliasList[item]
	testRunner.testCase.testSteps["DataSink"].setPropertyValue("alias"+item, value )
}</script></con:configuration></con:dataSink><con:properties><con:property><con:name>alias0</con:name><con:value>RS-PIE</con:value></con:property><con:property><con:name>alias1</con:name><con:value>RS-CBS</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="GET - getExtension - alias" disabled="true"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/extensions/{alias}" methodName="GET - getExtension" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getExtension - alias" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="alias" value="${DataSink#alias0}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Default Groups" searchProperties="true" id="cf4488d2-8fa4-4e3b-bc55-8db3833976ec" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="POST  - auth Token - -xml"><con:settings/><con:config service="identity admin" resourcePath="/${#Project#pathv2.0}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST  - auth Token - -xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#Project#authpass}" username="${#Project#authuser}"/>
&lt;/auth>
</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store auth"><con:settings/><con:config><script>def authTokenId = context.expand( '${POST  - auth Token - -xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info authTokenId
testRunner.testCase.setPropertyValue("authTokenId", authTokenId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST  - Create User Admin w/UA - xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users" methodName="POST - createUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST  - Create User Admin w/UA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.support.editor.views.xml.form2.FormEditorView@ViewType">All</con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:user enabled="true" id="${#TestCase#UAusername}" key="${#TestCase#UAkey}" mossoId="${#TestCase#UAmossoId}" nastId="${#TestCase#UAnastId}" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="201 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#Project#authuser}</con:username><con:password>${#Project#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticateUserAdmin - xml"><con:settings/><con:config service="identity admin" resourcePath="/${#Project#pathv2.0}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticateUserAdmin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0"> &lt;apiKeyCredentials apiKey="${#TestCase#UAkey}" username="${#TestCase#UAusername}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/> &lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store UA"><con:settings/><con:config><script>def userId = context.expand( '${POST - authenticateUserAdmin - xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/@id}' )

def UAtokenId = context.expand( '${POST - authenticateUserAdmin - xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )

def nastId = context.expand( '${POST  - Create User Admin w/UA - xml#ResponseAsXml#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:user[1]/@nastId}' )
log.info nastId
log.info userId
log.info UAtokenId
testRunner.testCase.setPropertyValue("UAuserId", userId)
testRunner.testCase.setPropertyValue("UANastId", nastId)
testRunner.testCase.setPropertyValue("UAtokenId", UAtokenId)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - AsServiceAdminGetUserAdminGroups - 200 - xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/groups" methodName="GET - getUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - AsServiceAdminGetUserAdminGroups - 200 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Default</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#Project#authuser}</con:username><con:password>${#Project#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#UAusername}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - AsServiceAdminGetUserAdminGroups - 200 - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/groups" methodName="GET - getUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - AsServiceAdminGetUserAdminGroups - 200 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Default</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#Project#authuser}</con:username><con:password>${#Project#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#UAusername}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - createGroup -xml"><con:settings/><con:config service="RAX-GRPADM" resourcePath="/${#Project#pathv2.0}/RAX-GRPADM/groups" methodName="Add a New Group - addGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createGroup -xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;group name="testGroup11" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">
&lt;description>Creating a new group testGroup1&lt;/description>
&lt;/group></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==201</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0';
//ns1:group[1]/@name</path><content>testGroup11</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username/><con:password/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#authTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - createGroup - json"><con:settings/><con:config service="RAX-GRPADM" resourcePath="/${#Project#pathv2.0}/RAX-GRPADM/groups" methodName="Add a New Group - addGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createGroup - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-KSGRP:group": {
"name" : "testGroup22",
"description" : "Creating a new group testGroup2"
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==201</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>testGroup22</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#Project#authuser}</con:username><con:password>${#Project#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#authTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store Groups"><con:settings/><con:config><script>def groupId1 = context.expand( '${POST - createGroup -xml#ResponseAsXml#declare namespace ns1=\'http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0\'; //ns1:group[1]/@id}' )
def groupId2 = context.expand( '${POST - createGroup - json#ResponseAsXml}' )
log.info groupId2
def groupIdJson = groupId2 =~ /&lt;id>(.*)&lt;\\/id>/
log.info "group Id1: " + groupId1
log.info "group Id2: " +  groupIdJson[0][1]

testRunner.testCase.setPropertyValue("groupId1", groupId1)
testRunner.testCase.setPropertyValue("groupId2", groupIdJson[0][1])</script></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addUserAdmintoGroup - xml"><con:settings/><con:config service="RAX-GRPADM" resourcePath="/${#Project#pathv2.0}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Add User to Group - addUserToGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addUserAdmintoGroup - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestCase#groupId1}"/>
  <con:entry key="userId" value="${#TestCase#UAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#authTokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addUserAdmintoGroup - json"><con:settings/><con:config service="RAX-GRPADM" resourcePath="/${#Project#pathv2.0}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Add User to Group - addUserToGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addUserAdmintoGroup - json" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestCase#groupId2}"/>
  <con:entry key="userId" value="${#TestCase#UAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#authTokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - AsServiceAdminGetUserAdminGroups /w Group - 200 - xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/groups" methodName="GET - getUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - AsServiceAdminGetUserAdminGroups /w Group - 200 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>testGroup11</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>testGroup22</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#Project#authuser}</con:username><con:password>${#Project#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#UAusername}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - AsServiceAdminGetUserAdminGroups /w Group - 200 - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/groups" methodName="GET - getUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - AsServiceAdminGetUserAdminGroups /w Group - 200 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>testGroup22</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>testGroup11</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#Project#authuser}</con:username><con:password>${#Project#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#UAusername}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE removeUserAdminfromGroup - xml"><con:settings/><con:config service="RAX-GRPADM" resourcePath="/${#Project#pathv2.0}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Remove User From Group - removeUserFromGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE removeUserAdminfromGroup - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestCase#groupId1}"/>
  <con:entry key="userId" value="${#TestCase#UAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#authTokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE removeUserAdminfromGroup - json"><con:settings/><con:config service="RAX-GRPADM" resourcePath="/${#Project#pathv2.0}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Remove User From Group - removeUserFromGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE removeUserAdminfromGroup - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestCase#groupId2}"/>
  <con:entry key="userId" value="${#TestCase#UAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#authTokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - AsServiceAdminGetUserAdminGroups /w Default - 200 - xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/groups" methodName="GET - getUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - AsServiceAdminGetUserAdminGroups /w Default - 200 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Default</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#Project#authuser}</con:username><con:password>${#Project#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#UAusername}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - AsServiceAdminGetUserAdminGroups /w Default - 200 - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/groups" methodName="GET - getUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - AsServiceAdminGetUserAdminGroups /w Default - 200 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Default</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#Project#authuser}</con:username><con:password>${#Project#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#UAusername}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE delete group - xml"><con:settings/><con:config service="RAX-GRPADM" resourcePath="/${#Project#pathv2.0}/RAX-GRPADM/groups/{groupId}" methodName="Delete Group - deleteGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE delete group - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestCase#groupId1}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#authTokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE delete group - json"><con:settings/><con:config service="RAX-GRPADM" resourcePath="/${#Project#pathv2.0}/RAX-GRPADM/groups/{groupId}" methodName="Delete Group - deleteGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE delete group - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestCase#groupId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#authTokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteUserAdmin - xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteUserAdmin - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#UAusername}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>UAusername</con:name><con:value>useradmin</con:value></con:property><con:property><con:name>UAkey</con:name><con:value>0f97f489c848438090250d50c7e1ea88</con:value></con:property><con:property><con:name>UAmossoId</con:name><con:value>5800179</con:value></con:property><con:property><con:name>UAnastId</con:name><con:value>StagingUS_ba227694-6e4a-4e5d-a5e0-45c8200979b8</con:value></con:property><con:property><con:name>UAuserId</con:name><con:value>176548</con:value></con:property><con:property><con:name>UAtokenId</con:name><con:value>94bc7c3a-db5d-46a8-814c-273a99bb428b</con:value></con:property><con:property><con:name>authTokenId</con:name><con:value>8451bdec-f974-4582-80a3-d00ec201c1be</con:value></con:property><con:property><con:name>groupId1</con:name><con:value>1564</con:value></con:property><con:property><con:name>groupId2</con:name><con:value>1565</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="v1.0.2 Default URLs" searchProperties="true" id="54e82eb2-fe4d-4543-bc11-6827135406c8"><con:settings/><con:testStep type="restrequest" name="GET auth v1.0.2 - xml"><con:settings/><con:config service="getVersion" resourcePath="/${#Project#pathv10}" methodName="auth v1.0.2 - auth v1.0.2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET auth v1.0.2 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X-Auth-Key" value="${#TestCase#key}"/>
  &lt;con:entry key="X-Auth-User" value="${#TestCase#username}"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204
def smu=messageExchange.responseHeaders["X-Server-Management-Url"];
def CDNUrl = messageExchange.responseHeaders["X-CDN-Management-Url"]
def xst=messageExchange.responseHeaders["X-Storage-Url"];

context.testCase.setPropertyValue("smu", smu[0])
context.testCase.setPropertyValue("CDNUrl", CDNUrl[0])
context.testCase.setPropertyValue("xst", xst[0])

log.info smu;
log.info xst;
log.info CDNUrl;

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - auth v1.1 - xml"><con:settings/><con:config service="Auth1.1.x" methodName="POST - authenticate" resourcePath="/${#Project#path}/auth" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - auth v1.1 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:credentials key="${#TestCase#key}" username="${#TestCase#username}" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" disabled="true"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Compare BaseURLs - xml"><con:settings/><con:config><script><![CDATA[def baseUrl = context.expand( '${POST - auth v1.1 - xml#ResponseAsXml#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:auth[1]/ns1:serviceCatalog[1]}' )
log.info baseUrl
baseUrl = new XmlSlurper().parseText(baseUrl)
def BUsize=baseUrl.service.size();
def CDNUrl = testRunner.testCase.getPropertyValue( "CDNUrl" )
def smu = testRunner.testCase.getPropertyValue( "smu" )
def xst = testRunner.testCase.getPropertyValue( "xst" )
def flag=0
// ${#TestCase#CDNUrl}
for(i in 0..BUsize-1)
{
	if(baseUrl.service[i].'@name'=="cloudFilesCDN" && baseUrl.service[i].endpoint[0].'@v1Default'=="true" && baseUrl.service[i].endpoint[0].'@publicURL'==CDNUrl)
	{
		flag=flag+1;
	}
	else
	
	if(baseUrl.service[i].'@name'=="cloudServers" && baseUrl.service[i].endpoint[0].'@v1Default'=="true" && baseUrl.service[i].endpoint[0].'@publicURL'==smu)
	{
		flag=flag+1;
	}
	else
	if(baseUrl.service[i].'@name'=="cloudFiles" && baseUrl.service[i].endpoint[0].'@v1Default'=="true" && baseUrl.service[i].endpoint[0].'@publicURL'==xst)
	{
		flag=flag+1;
	}
	
}
log.info flag;
if(flag==3) 
	assert true;
else
	assert false;]]></script></con:config></con:testStep><con:testStep type="restrequest" name="GET auth v1.0.2 - json"><con:settings/><con:config service="getVersion" resourcePath="/${#Project#pathv10}" methodName="auth v1.0.2 - auth v1.0.2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET auth v1.0.2 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X-Auth-Key" value="${#TestCase#key}"/>
  &lt;con:entry key="X-Auth-User" value="${#TestCase#username}"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204
def smu=messageExchange.responseHeaders["X-Server-Management-Url"];
def CDNUrl = messageExchange.responseHeaders["X-CDN-Management-Url"]
def xst=messageExchange.responseHeaders["X-Storage-Url"];

context.testCase.setPropertyValue("JSONsmu", smu[0])
context.testCase.setPropertyValue("JSONCDNUrl", CDNUrl[0])
context.testCase.setPropertyValue("JSONxst", xst[0])

log.info smu;
log.info xst;
log.info CDNUrl;

</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - auth v1.1 - json"><con:settings/><con:config service="Auth1.1.x" methodName="POST - authenticate" resourcePath="/${#Project#path}/auth" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - auth v1.1 - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:credentials key="${#TestCase#key}" username="${#TestCase#username}" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" disabled="true"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Compare BaseURLs - JSON"><con:settings/><con:config><script><![CDATA[import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

def caseUrl = context.expand( '${POST - auth v1.1 - json#Response}' )
def baseUrl = new JsonSlurper().parseText(caseUrl)

def temp=baseUrl.'auth'.'serviceCatalog'.'service'.name;
log.info temp.size();
def CloudCDN=baseUrl.'auth'.'serviceCatalog'.'service'.endpoint;
log.info CloudCDN.size();
def CDNUrl = testRunner.testCase.getPropertyValue( "CDNUrl" )
def smu = testRunner.testCase.getPropertyValue( "smu" )
def xst = testRunner.testCase.getPropertyValue( "xst" )
def flag=0;

for(i in 0..CloudCDN.size()-1)
{
	log.info temp[i];
	log.info CloudCDN[i].'v1Default';
	log.info CloudCDN[i].'publicURL';
	if(temp[i]=="cloudFilesCDN" && CloudCDN[i].'v1Default' )
	{
		flag=flag+1;
	}
	else
	
	if(temp[i]=="cloudServers" && CloudCDN[i].'v1Default')
	{
		flag=flag+1;
	}
	else
	if(temp[i]=="cloudFiles" && CloudCDN[i].'v1Default')
	{
		flag=flag+1;
	}
	
}

log.info flag;
assert flag==3;]]></script></con:config></con:testStep><con:properties><con:property><con:name>username</con:name><con:value>mkovacs</con:value></con:property><con:property><con:name>key</con:name><con:value>1234567890</con:value></con:property><con:property><con:name>MossoId</con:name><con:value>5800321</con:value></con:property><con:property><con:name>nastid</con:name><con:value/></con:property><con:property><con:name>smu</con:name><con:value>https://servers.api.staging.us.ccp.rackspace.net/v1.0/90000</con:value></con:property><con:property><con:name>CDNUrl</con:name><con:value>https://cdn.stg.clouddrive.com:4443/v1/KovacsNastId</con:value></con:property><con:property><con:name>xst</con:name><con:value>https://storage.stg.swift.racklabs.com/v1/KovacsNastId</con:value></con:property><con:property><con:name>JSONsmu</con:name><con:value>https://servers.api.staging.us.ccp.rackspace.net/v1.0/90000</con:value></con:property><con:property><con:name>JSONCDNUrl</con:name><con:value>https://cdn.stg.clouddrive.com:4443/v1/KovacsNastId</con:value></con:property><con:property><con:name>JSONxst</con:name><con:value>https://storage.stg.swift.racklabs.com/v1/KovacsNastId</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:properties><con:property><con:name>username</con:name><con:value>usrandomtest1</con:value></con:property><con:property><con:name>password</con:name><con:value>Password1</con:value></con:property><con:property><con:name>MossoId</con:name><con:value>5800381</con:value></con:property><con:property><con:name>NastId</con:name><con:value>StagingUS_5dac7059-1657-4a8d-b1a2-e8513d059c6e</con:value></con:property><con:property><con:name>key</con:name><con:value>ba04b108b7cefcbcbf7c4d8bd05e3857</con:value></con:property><con:property><con:name>tokenId</con:name><con:value>095a51fa-6b13-4d1d-84d0-f05c0b071a18</con:value></con:property><con:property><con:name>authuser</con:name><con:value>auth</con:value></con:property><con:property><con:name>authpass</con:name><con:value>auth123</con:value></con:property><con:property><con:name>X-Public-Url</con:name><con:value/></con:property><con:property><con:name>X-Internal-Url</con:name><con:value/></con:property><con:property><con:name>Service-Name</con:name><con:value>cloudFiles</con:value></con:property><con:property><con:name>Region</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="Functional - Regression"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="createUser" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="f231f186-d059-4f3c-a5f4-7a27e307011b"><con:settings/><con:testStep type="properties" name="Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>username2</con:name><con:value>negtest81</con:value></con:property><con:property><con:name>password2</con:name><con:value>Password81</con:value></con:property><con:property><con:name>key2</con:name><con:value>0f97f489c848438090250d50c7e1ea88</con:value></con:property><con:property><con:name>enabled</con:name><con:value>true</con:value></con:property><con:property><con:name>MossoId</con:name><con:value>5703568</con:value></con:property><con:property><con:name>NastId</con:name><con:value>MossoCloudFS_cbd0fc57-88a3-4be2-ba24-75b7fe980401</con:value></con:property><con:property><con:name>invaliduser</con:name><con:value>jennyv3</con:value></con:property><con:property><con:name>invalidpwd</con:name><con:value>pwd123</con:value></con:property><con:property><con:name>MossoId2</con:name><con:value>123456</con:value></con:property><con:property><con:name>tokenID</con:name><con:value>e6f74fca-d727-40f4-a87a-9733221a277d</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="properties" name="Properties2"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>username2</con:name><con:value>authtest2</con:value></con:property><con:property><con:name>password2</con:name><con:value>Password2</con:value></con:property><con:property><con:name>key2</con:name><con:value>66a4d306379c1a54ac97aeb4684bae92</con:value></con:property><con:property><con:name>status2</con:name><con:value>active</con:value></con:property><con:property><con:name>MossoId2</con:name><con:value>5701237</con:value></con:property><con:property><con:name>username3</con:name><con:value>authtest3</con:value></con:property><con:property><con:name>password3</con:name><con:value>Password3</con:value></con:property><con:property><con:name>key3</con:name><con:value>6436d5b5f9febcf36393882083b2af84</con:value></con:property><con:property><con:name>status3</con:name><con:value>delinquent</con:value></con:property><con:property><con:name>MossoId3</con:name><con:value>5701238</con:value></con:property><con:property><con:name>username4</con:name><con:value>authtest4</con:value></con:property><con:property><con:name>password4</con:name><con:value>Password4</con:value></con:property><con:property><con:name>key4</con:name><con:value>faae7f485d4e642427abe98a59f85f01</con:value></con:property><con:property><con:name>status4</con:name><con:value>unverified</con:value></con:property><con:property><con:name>MossoId4</con:name><con:value>5701239</con:value></con:property><con:property><con:name>username5</con:name><con:value>authtest5</con:value></con:property><con:property><con:name>password5</con:name><con:value>Password5</con:value></con:property><con:property><con:name>key5</con:name><con:value>081b7be2453b24b92ac02fd190015ffd</con:value></con:property><con:property><con:name>status5</con:name><con:value>suspended</con:value></con:property><con:property><con:name>MossoId5</con:name><con:value>5701240</con:value></con:property><con:property><con:name>username6</con:name><con:value>authtest6</con:value></con:property><con:property><con:name>password6</con:name><con:value>Password6</con:value></con:property><con:property><con:name>key6</con:name><con:value>71f7b5382bdfdb77a6aa383e787058c5</con:value></con:property><con:property><con:name>status6</con:name><con:value>denied</con:value></con:property><con:property><con:name>MossoId6</con:name><con:value>5701241</con:value></con:property><con:property><con:name>username7</con:name><con:value>authtest7</con:value></con:property><con:property><con:name>password7</con:name><con:value>Password7</con:value></con:property><con:property><con:name>key7</con:name><con:value>73bb409189f71cb74013c8cef8fa47f0</con:value></con:property><con:property><con:name>status7</con:name><con:value>closed</con:value></con:property><con:property><con:name>MossoId7</con:name><con:value>5701242</con:value></con:property><con:property><con:name>username8</con:name><con:value>authtest8</con:value></con:property><con:property><con:name>password8</con:name><con:value>Password8</con:value></con:property><con:property><con:name>key8</con:name><con:value>8a7384e1484c181245ff7b0bf15dc3c4</con:value></con:property><con:property><con:name>status8</con:name><con:value>pending_approval</con:value></con:property><con:property><con:name>MossoId8</con:name><con:value>5701243</con:value></con:property><con:property><con:name>enabled</con:name><con:value>true</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST - createUser"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users" methodName="POST - createUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createUser" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.support.editor.views.xml.form2.FormEditorView@ViewType">All</con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:user created="" enabled="true" id="${#TestSuite#username}" key="${#TestSuite#key}" mossoId="${#TestSuite#MossoId}" nastId="${#TestSuite#nastId}" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="201 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUser"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUser" mediaType="application/xml" accept="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:credentials xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUser - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUser - json" mediaType="application/xml" accept="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:credentials xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"user":{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>"id":"usrandomtest2"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store nastId"><con:settings/><con:config><script>def getNastId = context.expand( '${GET - getUser#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:user[1]/@nastId}' )
log.info "get nast ID - " + getNastId
testRunner.testCase.testSuite.setPropertyValue("NastId", getNastId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - user-key authenticate - xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - user-key authenticate - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;credentials key="${#TestSuite#key}" username="${#TestSuite#username}" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - user-key authentication - XML Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@id]" disabled="true"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:auth[1]/ns1:token[1]/@id</path><content>${#TestSuite#tokenId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="storeToken - XML"><con:settings/><con:config><script>def tokenIDResp = context.expand( '${POST - user-key authenticate - xml#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:auth[1]/ns1:token[1]/@id}' )

testRunner.testCase.testSteps.Properties.setPropertyValue("tokenID",tokenIDResp);
testRunner.testCase.testSuite.setPropertyValue("tokenId",tokenIDResp);

//def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
//def holder = groovyUtils.getXmlHolder("POST - authenticate#Response")

//List dataList = holder.getNodeValues("//ns1:auth[1]/ns1:serviceCatalog[1]/ns1:service/ns1:endpoint[1]/@publicURL")

def getServiceName = context.expand( '${POST - user-key authenticate - xml#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:auth[1]/ns1:serviceCatalog[1]/ns1:service[@name="${serviceName}"]/@name}' )
def internalURL = context.expand( '${POST - user-key authenticate - xml#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:auth[1]/ns1:serviceCatalog[1]/ns1:service[@name="${serviceName}"]/ns1:endpoint[@region="${region}"]/@internalURL}' )
def publicURL = context.expand( '${POST - user-key authenticate - xml#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:auth[1]/ns1:serviceCatalog[1]/ns1:service[@name="${serviceName}"]/ns1:endpoint[@region="${region}"]/@publicURL}' )
def region = context.expand( '${POST - user-key authenticate - xml#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:auth[1]/ns1:serviceCatalog[1]/ns1:service[@name="${serviceName}"]/ns1:endpoint[@region="${region}"]/@region}' )
//List dataList = holder.getNodeValues("//ns1:auth[1]/ns1:serviceCatalog[1]/ns1:service[@name='${serviceName}]/ns1:endpoint[@region='${region}']")

//def internalURL= dataList.get(0);
//def publicURL = dataList.get(1);

testRunner.testCase.testSuite.setPropertyValue("X-Public-Url", publicURL)
testRunner.testCase.testSuite.setPropertyValue("X-Internal-Url", internalURL)
testRunner.testCase.testSuite.setPropertyValue("Service-Name", getServiceName)
testRunner.testCase.testSuite.setPropertyValue("Region", region)

</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Mosso authenticate - XML"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Mosso authenticate - XML" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;mossoCredentials key="${#TestSuite#key}" mossoId="${#TestSuite#MossoId}" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="200 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - Mosso authentication - XML Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@id]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:auth[1]/ns1:token[1]/@id</path><content>${#TestSuite#tokenId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Nast authenticate - XML"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Nast authenticate - XML" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;nastCredentials key="${#TestSuite#key}" nastId="${#TestSuite#NastId}" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="200 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - Nast authentication - XML Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - XML"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - XML" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;passwordCredentials password="${#TestSuite#password}" username="${#TestSuite#username}" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="200 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - createUser - neg 409"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users" methodName="POST - createUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createUser - neg 409" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:user enabled="true" id="${#TestSuite#username}" key="${#TestSuite#key}" mossoId="${#TestSuite#mossoId}" nastId="${#TestSuite#nastId}" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="409 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 409</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - createUser - neg 400"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users" methodName="POST - createUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createUser - neg 400" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:user enabled="${Properties#enabled}" id="dumi" key="${Properties#key}" mossoId="${#TestSuite#MossoId}" nastId="${Properties#nastId}" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="400 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:badRequest[1]/ns1:message[1]/text()</path><content>User with Mosso Account ID: ${#TestSuite#MossoId} already exists.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store info" disabled="true"><con:settings/><con:config><script>//get NastId
def nastId = context.expand( '${POST - createUser#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:user[1]/@nastId}' )
def mossoId = context.expand( '${POST - createUser#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:user[1]/@mossoId}' )
def token = context.expand( '${POST - user-key authenticate - xml#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:auth[1]/ns1:token[1]/@id}' )

testRunner.testCase.testSuite.setPropertyValue("NastId", nastId)
testRunner.testCase.testSuite.setPropertyValue("MossoId", mossoId)
testRunner.testCase.testSuite.setPropertyValue("tokenId", token)</script></con:config></con:testStep><con:testStep type="restrequest" name="Copy of POST - createUser" disabled="true"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users" methodName="POST - createUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of POST - createUser" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.support.editor.views.xml.form2.FormEditorView@ViewType">All</con:setting></con:settings><con:endpoint>${#TestSuite#UKEndpoint}</con:endpoint><con:request>&lt;v1:user enabled="true" id="authtest1" key="${#TestSuite#key}" mossoId="5701106" nastId="MossoCloudFS_e04f64b6-5790-4ccb-af90-fc2410810b1e " xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="201 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Copy of store info" disabled="true"><con:settings/><con:config><script>//get NastId
//def nastId = context.expand( '${POST - createUser#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:user[1]/@nastId}' )
//def mossoId = context.expand( '${POST - createUser#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:user[1]/@mossoId}' )
//def token = context.expand( '${POST - user-key authenticate - xml#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:auth[1]/ns1:token[1]/@id}' )
def username = context.expand( '${Copy of POST - createUser#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:user[1]/@id}' )
def key = context.expand( '${Copy of POST - createUser#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:user[1]/@key}' )
def nastId = context.expand( '${Copy of POST - createUser#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:user[1]/@nastId}' )
def mossoId = context.expand( '${Copy of POST - createUser#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:user[1]/@mossoId}' )

testRunner.testCase.testSteps['save properties'].setPropertyValue("username", username)
testRunner.testCase.testSteps['save properties'].setPropertyValue("key", key)
testRunner.testCase.testSteps['save properties'].setPropertyValue("NastId", nastId)
testRunner.testCase.testSteps['save properties'].setPropertyValue("MossoId", mossoId)
//testRunner.testCase.testSteps['save properties'].setPropertyValue("tokenId", token)</script></con:config></con:testStep><con:testStep type="properties" name="save properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>username</con:name><con:value>authtest1</con:value></con:property><con:property><con:name>key</con:name><con:value>prodtest12345</con:value></con:property><con:property><con:name>NastId</con:name><con:value>MossoCloudFS_6078bbf5-6868-4e5a-9e5d-06108695c63d</con:value></con:property><con:property><con:name>MossoId</con:name><con:value>5701106</con:value></con:property></con:properties></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="updateUser" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="c93d219f-8653-48ab-9d0d-1d10c63b1647"><con:settings/><con:testStep type="restrequest" name="GET - getUser"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUser" mediaType="application/xml" accept="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:credentials xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>updateUserXml</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>GET - getUser</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>PUT - updateUser - xml</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>updateUserRestoreXml</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>GET - getUser</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>PUT - updateUser - restore user - xml</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="store baseUrl" disabled="true"><con:settings/><con:config><script>def urls = context.expand( '${GET - getUser#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:user[1]/ns1:baseURLRefs[1]}' )
def req = context.expand( '${PUT - updateUser - xml#Request#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:user[1]/ns1:baseURLRefs[1]}' )
log.info req.getClass().getName()
req.setValue(urls)</script></con:config></con:testStep><con:testStep type="restrequest" name="PUT - updateUser - xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="PUT - updateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<user id="usrandomtest2" mossoId="5800386" nastId="StagingUS_6cbf8080-114d-4f47-a6fe-54c83dbf8975" key="ba04b108b7cefcbcbf7c4d8bd05e3857" enabled="true" created="2012-04-26T17:38:17.000-05:00" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1">
   <baseURLRefs>
      <baseURLRef id="83" href="https://auth.staging.ord1.us.ccp.rackspace.net/v1.1/baseURLs/83" v1Default="true"/>
      <baseURLRef id="11" href="https://auth.staging.ord1.us.ccp.rackspace.net/v1.1/baseURLs/11" v1Default="true"/>
      <baseURLRef id="3" href="https://auth.staging.ord1.us.ccp.rackspace.net/v1.1/baseURLs/3" v1Default="true"/>
      <baseURLRef id="109" href="https://auth.staging.ord1.us.ccp.rackspace.net/v1.1/baseURLs/109" v1Default="true"/>
      <baseURLRef id="15" href="https://auth.staging.ord1.us.ccp.rackspace.net/v1.1/baseURLs/15" v1Default="true"/>
      <baseURLRef id="17" href="https://auth.staging.ord1.us.ccp.rackspace.net/v1.1/baseURLs/17" v1Default="true"/>
      <baseURLRef id="113" href="https://auth.staging.ord1.us.ccp.rackspace.net/v1.1/baseURLs/113" v1Default="true"/>
   </baseURLRefs>
</user>]]></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="delay"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>body1</con:name><con:sourceType>updateUserJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>PUT - updateUser - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" transferToAll="false" entitize="false" ignoreEmpty="false" useXQuery="false"><con:name>body2</con:name><con:sourceType>updateUser404Json</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>PUT - updateUser - neg 404 - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>body3</con:name><con:sourceType>updateUser405Json</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>PUT updateUsr JSON</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body4</con:name><con:sourceType>updateUser400Json</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>PUT - updateUser - 400 no userid - json</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUser - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUser - json" mediaType="application/xml" accept="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:credentials xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"user":{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>"id":"usrandomtest2"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store baseUrlJson"><con:settings/><con:config><script>def jsonresp = context.expand( '${GET - getUser - json#Response}' )
log.info jsonresp
def idx1 = jsonresp.indexOf("baseURLRefs");
def idx2 = jsonresp.indexOf("key");
testRunner.testCase.setPropertyValue("baseUrlJson",jsonresp.substring(idx1+15,idx2-4));
</script></con:config></con:testStep><con:testStep type="restrequest" name="PUT - updateUser - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="PUT - updateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateUser - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "user" : {   "id" : "${#TestSuite#username}",   "enabled": true, "key" : "${#TestSuite#key}",   "mossoId" : 5800386,   "nastId" : "testNastID_123456789" , "baseURLRefs" : [{${#TestCase#baseUrlJson}}]}}</con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"user":{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="properties" name="Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>username</con:name><con:value>cmarin1</con:value></con:property><con:property><con:name>password</con:name><con:value>Password1</con:value></con:property><con:property><con:name>dummi</con:name><con:value>test0000</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="PUT - updateUser XML"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="PUT - updateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateUser XML" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:user enabled="true" id="${Properties#dummi}" key="11111111222222223333333333" mossoId="5800532" nastId="TestingNastID1234" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${Properties#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT updateUsr JSON"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="PUT - updateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT updateUsr JSON" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "user" : {   "id" : "${Properties#dummi}",   "key" : "11111111222222223333333333",   "mossoId" : "10203040",   "nastId" : "TestingNastID1234"   "enabled" : true  } }</con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${Properties#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - updateUser - neg 404"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="PUT - updateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateUser - neg 404" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:user enabled="true" id="${Properties#dummi}" key="" mossoId="" nastId="TestingNastID1234" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${Properties#dummi}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - updateUser - neg 404 - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="PUT - updateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateUser - neg 404 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "user" : {   "id" : "${Properties#dummi}",   "key" : "11111111222222223333333333",   "mossoId" : "123456",   "nastId" : "TestingNastID1234"   "enabled" : true  } }</con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${Properties#dummi}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - updateUser - 400 no userid"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="PUT - updateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateUser - 400 no userid" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:user xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User Id can not be null</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - updateUser - 400 no userid - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="PUT - updateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateUser - 400 no userid - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "user" : {    } }</con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User Id can not be null</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${Properties#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - updateUser - restore user - xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="PUT - updateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateUser - restore user - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<user id="usrandomtest2" mossoId="5800386" nastId="StagingUS_6cbf8080-114d-4f47-a6fe-54c83dbf8975" key="ba04b108b7cefcbcbf7c4d8bd05e3857" enabled="true" created="2012-04-26T17:38:17.000-05:00" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1">
   <baseURLRefs>
      <baseURLRef id="83" href="https://auth.staging.ord1.us.ccp.rackspace.net/v1.1/baseURLs/83" v1Default="true"/>
      <baseURLRef id="11" href="https://auth.staging.ord1.us.ccp.rackspace.net/v1.1/baseURLs/11" v1Default="true"/>
      <baseURLRef id="3" href="https://auth.staging.ord1.us.ccp.rackspace.net/v1.1/baseURLs/3" v1Default="true"/>
      <baseURLRef id="109" href="https://auth.staging.ord1.us.ccp.rackspace.net/v1.1/baseURLs/109" v1Default="true"/>
      <baseURLRef id="15" href="https://auth.staging.ord1.us.ccp.rackspace.net/v1.1/baseURLs/15" v1Default="true"/>
      <baseURLRef id="17" href="https://auth.staging.ord1.us.ccp.rackspace.net/v1.1/baseURLs/17" v1Default="true"/>
      <baseURLRef id="113" href="https://auth.staging.ord1.us.ccp.rackspace.net/v1.1/baseURLs/113" v1Default="true"/>
   </baseURLRefs>
</user>]]></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>updateUserJson</con:name><con:value>{ "user" : {   "id" : "${#TestSuite#username}",   "enabled": true, "key" : "${#TestSuite#key}",   "mossoId" : 5800386,   "nastId" : "testNastID_123456789" , "baseURLRefs" : [{${#TestCase#baseUrlJson}}]}}</con:value></con:property><con:property><con:name>updateUser404Json</con:name><con:value>{ "user" : {   "id" : "${Properties#dummi}",   "key" : "11111111222222223333333333",   "mossoId" : "123456",   "nastId" : "TestingNastID1234"   "enabled" : true  } }</con:value></con:property><con:property><con:name>updateUser405Json</con:name><con:value>{ "user" : {   "id" : "${Properties#dummi}",   "key" : "11111111222222223333333333",   "mossoId" : "10203040",   "nastId" : "TestingNastID1234"   "enabled" : true  } }</con:value></con:property><con:property><con:name>updateUser400Json</con:name><con:value>{ "user" : {    } }</con:value></con:property><con:property><con:name>href</con:name><con:value>https://auth.staging.ord1.us.ccp.rackspace.net/v1.1/baseURLs/3</con:value></con:property><con:property><con:name>id</con:name><con:value>3</con:value></con:property><con:property><con:name>v1Default</con:name><con:value>true</con:value></con:property><con:property><con:name>ujson</con:name><con:value>"id":3,"v1Default":true,"href":"https:\/\/auth.staging.ord1.us.ccp.rackspace.net\/v1.1\/baseURLs\/3"},{"id":109,"href":"https:\/\/auth.staging.ord1.us.ccp.rackspace.net\/v1.1\/baseURLs\/109"},{"id":104,"v1Default":true,"href":"https:\/\/auth.staging.ord1.us.ccp.rackspace.net\/v1.1\/baseURLs\/104"},{"id":11,"v1Default":true,"href":"https:\/\/auth.staging.ord1.us.ccp.rackspace.net\/v1.1\/baseURLs\/11"},{"id":15,"v1Default":true,"href":"https:\/\/auth.staging.ord1.us.ccp.rackspace.net\/v1.1\/baseURLs\/15"},{"id":17,"v1Default":true,"href":"https:\/\/auth.staging.ord1.us.ccp.rackspace.net\/v1.1\/baseURLs\/17"},{"id":83,"v1Default":true,"href":"https:\/\/auth.staging.ord1.us.ccp.rackspace.net\/v1.1\/baseURLs\/83"</con:value></con:property><con:property><con:name>baseUrlJson</con:name><con:value>"id":113,"v1Default":true,"href":"https:\/\/auth.staging.ord1.us.ccp.rackspace.net\/v1.1\/baseURLs\/113"},{"id":17,"v1Default":true,"href":"https:\/\/auth.staging.ord1.us.ccp.rackspace.net\/v1.1\/baseURLs\/17"},{"id":83,"v1Default":true,"href":"https:\/\/auth.staging.ord1.us.ccp.rackspace.net\/v1.1\/baseURLs\/83"},{"id":11,"v1Default":true,"href":"https:\/\/auth.staging.ord1.us.ccp.rackspace.net\/v1.1\/baseURLs\/11"},{"id":109,"v1Default":true,"href":"https:\/\/auth.staging.ord1.us.ccp.rackspace.net\/v1.1\/baseURLs\/109"},{"id":15,"v1Default":true,"href":"https:\/\/auth.staging.ord1.us.ccp.rackspace.net\/v1.1\/baseURLs\/15"},{"id":3,"v1Default":true,"href":"https:\/\/auth.staging.ord1.us.ccp.rackspace.net\/v1.1\/baseURLs\/3"</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getUser" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="5e6fd1c0-63e2-4424-8bdd-e00f226bbc01"><con:settings/><con:testStep type="transfer" name="Property Transfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>body1</con:name><con:sourceType>setUserEnabledJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>PUT - setUserEnabled - json</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUser"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUser" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store user info" disabled="true"><con:settings/><con:config><script>//get NastID
def nastId = context.expand( '${GET - getUser#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:user[1]/@nastId}' )
//get MossoID
def mossoId = context.expand( '${GET - getUser#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:user[1]/@mossoId}' )
log.info nastId
log.info mossoId
//store in testsuite properties
testRunner.testCase.testSuite.setPropertyValue("NastId", nastId)
testRunner.testCase.testSuite.setPropertyValue("MossoId", mossoId)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUser - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUser - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="properties" name="Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>username</con:name><con:value>cmarin2</con:value></con:property><con:property><con:name>password</con:name><con:value>Password2</con:value></con:property><con:property><con:name>dummi</con:name><con:value>test0000</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUser - neg 401"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUser - neg 401" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>You are not authorized to access this resource.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUser - neg 401 - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUser - neg 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"unauthorized":{"message":"You are not authorized to access this resource.","details":"AuthErrorHandler","code":401}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - setUserDisabled"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/enabled" methodName="PUT - setUserEnabled" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - setUserDisabled" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;user enabled="false" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="200 Response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@enabled]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@enabled</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUser - neg 403" disabled="true"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUser - neg 403" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUser - neg 404"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUser - neg 404" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${Properties#dummi}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUser - neg 404 - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUser - neg 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"itemNotFound":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${Properties#dummi}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - setUserEnabled - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/enabled" methodName="PUT - setUserEnabled" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - setUserEnabled - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"user":{"enabled":true}}</con:request><con:assertion type="GroovyScriptAssertion" name="200 Response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@enabled]"><con:configuration><path>declare namespace ns1='${#Project#EndpointJson}/${#Project#path}/users/usrandomtest2/enabled';
//ns1:Response[1]/ns1:user[1]/ns1:enabled[1]</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>setUserEnabledJson</con:name><con:value>{"user":{"enabled":true}}</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="enableUser" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="7544957e-512c-4c7b-9fd2-9587e81cafea"><con:settings/><con:testStep type="restrequest" name="GET - getUserEnabled"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/enabled" methodName="GET - getUserEnabled" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUserEnabled" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUserEnabled - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/enabled" methodName="GET - getUserEnabled" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUserEnabled - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - setUserEnabled"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/enabled" methodName="PUT - setUserEnabled" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - setUserEnabled" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;user enabled="true" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@enabled]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@enabled</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - setUserDisabled"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/enabled" methodName="PUT - setUserEnabled" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - setUserDisabled" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;user enabled="false" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="200 Response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@enabled]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@enabled</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - setUserEnabled - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/enabled" methodName="PUT - setUserEnabled" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - setUserEnabled - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;user enabled="true" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [enabled]" disabled="true"><con:configuration><path>declare namespace ns1='http://172.17.16.57/v1.1.1/users/cmarin2/enabled';
//ns1:Response[1]/ns1:user[1]/ns1:enabled[1]/text()</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [enabled]" disabled="true"><con:configuration><path>declare namespace ns1='http://172.17.16.57/v1.1.2/users/authtest2/enabled';
//ns1:Response[1]/ns1:user[1]/ns1:enabled[1]/text()</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="verify enable staging [enabled]" disabled="true"><con:configuration><path>declare namespace ns1='https://auth.staging.us.ccp.rackspace.net/v1.1/users/authtest2/enabled';
//ns1:Response[1]/ns1:user[1]/ns1:enabled[1]/text()</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - setUserDisabled - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/enabled" methodName="PUT - setUserEnabled" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - setUserDisabled - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;user enabled="false" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="200 Response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [enabled]" disabled="true"><con:configuration><path>declare namespace ns1='http://172.17.16.57/v1.1.1/users/cmarin2/enabled';
//ns1:Response[1]/ns1:user[1]/ns1:enabled[1]/text()</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [enabled]" disabled="true"><con:configuration><path>declare namespace ns1='https://auth.staging.us.ccp.rackspace.net/v1.1/users/authtest2/enabled';
//ns1:Response[1]/ns1:user[1]/ns1:enabled[1]/text()</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUserEnabled - false"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/enabled" methodName="GET - getUserEnabled" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUserEnabled - false" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@enabled]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@enabled</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUserEnabled - neg 401"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/enabled" methodName="GET - getUserEnabled" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUserEnabled - neg 401" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:credentials><con:username/><con:password/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUserEnabled - neg 404"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/enabled" methodName="GET - getUserEnabled" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUserEnabled - neg 404" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:itemNotFound[1]/ns1:message[1]/text()</path><content>User not found: testfoo1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="testfoo1" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - setUserDisabled - neg 405"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/enabled" methodName="PUT - setUserEnabled" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - setUserDisabled - neg 405" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;user enabled="false" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="Response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 405</scriptText></con:configuration></con:assertion><con:credentials><con:username/><con:password/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - setUserEnabled - back"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/enabled" methodName="PUT - setUserEnabled" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - setUserEnabled - back" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;user enabled="true" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@enabled]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@enabled</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getUserKey" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="ed913f0d-81f0-40a8-b1d6-a7e237b6cb69"><con:settings/><con:testStep type="restrequest" name="GET - getUserKey - xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/key" methodName="GET - getUserKey" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUserKey - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUserKey - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/key" methodName="GET - getUserKey" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUserKey - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUserKey - neg 401"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/key" methodName="GET - getUserKey" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUserKey - neg 401" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:credentials><con:username/><con:password/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUserKey - neg 404"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/key" methodName="GET - getUserKey" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUserKey - neg 404" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:itemNotFound[1]/ns1:message[1]/text()</path><content>User not found: testfoo1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="testfoo1" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store User Key" disabled="true"><con:settings/><con:config><script>//get userkey
def key = context.expand( '${GET - getUserKey - xml#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:user[1]/@key}' )
//def jsonKey = context.expand( '${GET - getUserKey - json#ResponseAsXml#declare namespace ns1=\'${#Project#WorkaroundEndpoint}/v1.1.1/users/cmarin1/key\'; //ns1:Response[1]/ns1:user[1]/ns1:key[1]}' )
def jsonKey = context.expand( '${GET - getUserKey - json#ResponseAsXml#declare namespace ns1=\'http://172.17.16.57/v1.1.1/users/cmarin1/key\'; //ns1:Response[1]/ns1:user[1]/ns1:key[1]}' )


//if (key == jsonKey)
//{
//	assert true
//}
//else assert false

testRunner.testCase.testSuite.setPropertyValue("key", key);
log.info "Key:" + key
log.info "json Key:" + jsonKey</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="setUserKey" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="6b0427fa-6363-4947-8678-bdbced8791ac"><con:settings/><con:testStep type="properties" name="Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>newKey</con:name><con:value>asdasdasd-adsasdads-asdasdasd-adsasdads</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>body1</con:name><con:sourceType>setUserKeyJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>PUT - setUserKey - key - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body2</con:name><con:sourceType>setUserKeyJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>PUT - setUserKey - key - json - 405</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body3</con:name><con:sourceType>setUserKeyJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>PUT - setUserKey - key - json - 404</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body4</con:name><con:sourceType>setUserNewKeyJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>PUT - setUserKey - newkey - json</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="PUT - setUserKey - newkey - xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/key" methodName="PUT - setUserKey" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - setUserKey - newkey - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;user key="${Properties#newKey}" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@key]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@key</path><content>${Properties#newKey}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - setUserKey - key - xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/key" methodName="PUT - setUserKey" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - setUserKey - key - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;user key="${#TestSuite#key}" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@key]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@key</path><content>${#TestSuite#key}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - setUserKey - newkey - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/key" methodName="PUT - setUserKey" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - setUserKey - newkey - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "user" : {   "key" : "${Properties#newKey}"  } }</con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [key]" disabled="true"><con:configuration><path>declare namespace ns1='http://172.17.16.57/v1.1.1/users/cmarin2/key';
//ns1:Response[1]/ns1:user[1]/ns1:key[1]/text()</path><content>${Properties#newKey}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - setUserKey - key - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/key" methodName="PUT - setUserKey" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - setUserKey - key - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "user" : {   "key" : "${#TestSuite#key}"  } }</con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [key]" disabled="true"><con:configuration><path>declare namespace ns1='http://172.17.16.57/v1.1.1/users/cmarin1/key';
//ns1:Response[1]/ns1:user[1]/ns1:key[1]/text()</path><content>${#TestSuite#key}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"user":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>"key":"${#TestSuite#key}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - setUserKey - key - json - 405"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/key" methodName="PUT - setUserKey" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - setUserKey - key - json - 405" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "user" : {   "key" : "${#TestSuite#key}"  } }</con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 405
</scriptText></con:configuration></con:assertion><con:credentials><con:username/><con:password/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - setUserKey - key - json - 404"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/key" methodName="PUT - setUserKey" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - setUserKey - key - json - 404" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "user" : {   "key" : "${#TestSuite#key}"  } }</con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]" disabled="true"><con:configuration><path>declare namespace ns1='https://auth.staging.us.ccp.rackspace.net/v1.1/users/testfoo1/key';
//ns1:Fault[1]/ns1:itemNotFound[1]/ns1:message[1]/text()</path><content>User not found :testfoo1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User not found: testfoo1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="testfoo1" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>setUserKeyJson</con:name><con:value>{ "user" : {   "key" : "${#TestSuite#key}"  } }</con:value></con:property><con:property><con:name>setUserNewKeyJson</con:name><con:value>{ "user" : {   "key" : "${Properties#newKey}"  } }</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="validateToken" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="13d201d4-bd5e-4e6a-844d-140ff741f712"><con:settings/><con:testStep type="properties" name="Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>disableuser</con:name><con:value>cmarin2</con:value></con:property><con:property><con:name>invaliduser</con:name><con:value>testfoo1</con:value></con:property><con:property><con:name>invalidToken</con:name><con:value>c49c7fc5-d2cd-473f-aaae-af4fb8b3bdc0</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="GET - validateToken - xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/token/{tokenId}" methodName="GET - validateToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - validateToken - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="200 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="belongsTo" value="${#TestSuite#username}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - validateToken - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/token/{tokenId}" methodName="GET - validateToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - validateToken - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="200 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="belongsTo" value="${#TestSuite#username}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - validateToken - neg 401"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/token/{tokenId}" methodName="GET - validateToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - validateToken - neg 401" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="200 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:credentials><con:username/><con:password/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="belongsTo" value="${#TestSuite#username}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - validateToken - neg 403" disabled="true"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/token/{tokenId}" methodName="GET - validateToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - validateToken - neg 403" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#PublicEndpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="403 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="belongsTo" value="${Properties#disableuser}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - validateToken - neg 404"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/token/{tokenId}" methodName="GET - validateToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - validateToken - neg 404" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${Properties#invalidToken}"/>
  <con:entry key="belongsTo" value="${#TestSuite#username}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - validateToken - neg 400"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/token/{tokenId}" methodName="GET - validateToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - validateToken - neg 400" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="type" value="File"/>
  <con:entry key="belongsTo" value=""/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getUserWAlternateID" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="7a10136e-41fa-42f6-9ed8-4c937a7703a2"><con:settings/><con:testStep type="restrequest" name="GET - userRedirect - nastId - true -xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/nast/{nastId}" methodName="GET - userRedirect" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userRedirect - nastId - true -xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 301
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@id</path><content>${#TestSuite#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="nastId" value="${#TestSuite#NastId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userRedirect - nastId - false - xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/nast/{nastId}" methodName="GET - userRedirect" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userRedirect - nastId - false - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404
/*def redirectLoc = messageExchange.responseHeaders["Location"]
log.info "Get - userRedirect - NastID - Status: "+messageExchange.responseStatusCode + "Redirect Location: " + redirectLoc
if (redirectLoc == "/v1.1/users/ukrandomtest2" || redirectLoc == "https://auth.staging.us.ccp.rackspace.net/v1.1/users/ukrandomtest2")
{
	assert true
}
else assert false*/</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:itemNotFound/ns1:message</path><content>User not found for Nast Account Id:badId</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="nastId" value="badId" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userRedirect - mossoId - true - xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/mosso/{mossoId}" methodName="GET - userRedirect" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userRedirect - mossoId - true - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 301


</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@id</path><content>${#TestSuite#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="mossoId" value="${#TestSuite#MossoId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userRedirect - mossoId - false - xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/mosso/{mossoId}" methodName="GET - userRedirect" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userRedirect - mossoId - false - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404



</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:itemNotFound/ns1:message</path><content>User not found for Mosso Account Id:123456789</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="mossoId" value="123456789" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userRedirect - nastId - true -json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/nast/{nastId}" methodName="GET - userRedirect" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userRedirect - nastId - true -json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 301
</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"user":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>"id":"usrandomtest2"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="nastId" value="${#TestSuite#NastId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userRedirect - nastId - false - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/nast/{nastId}" methodName="GET - userRedirect" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userRedirect - nastId - false - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404
/*def redirectLoc = messageExchange.responseHeaders["Location"]
log.info "Get - userRedirect - NastID - Status: "+messageExchange.responseStatusCode + "Redirect Location: " + redirectLoc
if (redirectLoc == "/v1.1/users/ukrandomtest2" || redirectLoc == "https://auth.staging.us.ccp.rackspace.net/v1.1/users/ukrandomtest2")
{
	assert true
}
else assert false*/</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"itemNotFound":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>"message":"User not found for Nast Account Id:badId"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="nastId" value="badId" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userRedirect - mossoId - true - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/mosso/{mossoId}" methodName="GET - userRedirect" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userRedirect - mossoId - true - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 301


</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"user":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>"id":"usrandomtest2"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="mossoId" value="${#TestSuite#MossoId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userRedirect - mossoId - false - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/mosso/{mossoId}" methodName="GET - userRedirect" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userRedirect - mossoId - false - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404



</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>"message":"User not found for Mosso Account Id:123456789"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="mossoId" value="123456789" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="revokeToken" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="f94959d1-9a29-4ecb-919a-fbaf82bba914"><con:settings/><con:testStep type="restrequest" name="DELETE - revokeToken"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/token/{tokenId}" methodName="DELETE - revokeToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - revokeToken" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="tokenId" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>2000</delay></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - revokeToken - 404"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/token/{tokenId}" methodName="DELETE - revokeToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - revokeToken - 404" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="tokenId" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - revokeToken - 405 tomcat 5.0"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/token/{tokenId}" methodName="DELETE - revokeToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - revokeToken - 405 tomcat 5.0" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 405</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="tokenId" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - revokeToken - 404 - empty"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/token/{tokenId}" methodName="DELETE - revokeToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - revokeToken - 404 - empty" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="tokenId" value="${#TestSuite#tokenId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - revokeToken - 500"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/token/{tokenId}" methodName="DELETE - revokeToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - revokeToken - 500" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="text/html" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 406</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="tokenId" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getServiceCatalog" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="094c110b-1745-4b97-b376-8172f6f1e7b7"><con:settings/><con:testStep type="restrequest" name="GET - getServiceCatalog - xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/serviceCatalog" methodName="GET - getServiceCatalog" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getServiceCatalog - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="200 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getServiceCatalog - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/serviceCatalog" methodName="GET - getServiceCatalog" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getServiceCatalog - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="200 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getServiceCatalog - json - 401"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/serviceCatalog" methodName="GET - getServiceCatalog" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getServiceCatalog - json - 401" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:credentials><con:username/><con:password/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getServiceCatalog - xml - 404"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/serviceCatalog" methodName="GET - getServiceCatalog" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getServiceCatalog - xml - 404" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:itemNotFound[1]/ns1:message[1]/text()</path><content>User not found: testfoo1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="testfoo1" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getBaseURLs" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="5009790e-b0fc-4ba0-90f4-12db89de5a87"><con:settings/><con:testStep type="restrequest" name="GET - getBaseURLs"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/baseURLs" methodName="GET - getBaseURLs" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getBaseURLs" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="serviceName" value="${#TestSuite#Service-Name}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getBaseURL - baseURLId"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/baseURLs/{baseURLId}" methodName="GET - getBaseURL" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getBaseURL - baseURLId" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="baseURLId" value="${GET - getBaseURLs#ResponseAsXml#declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1'; //ns1:baseURLs[1]/ns1:baseURL[1]/@id}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="loginfo"><con:settings/><con:config><script>def url = context.expand( '${GET - getBaseURL - baseURLId#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:baseURL[1]/@publicURL}' )
def region = context.expand( '${GET - getBaseURL - baseURLId#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:baseURL[1]/@region}' )
def serviceName = context.expand( '${GET - getBaseURL - baseURLId#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:baseURL[1]/@serviceName}' )
def id = context.expand( '${GET - getBaseURL - baseURLId#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:baseURL[1]/@id}' )
def userType = context.expand( '${GET - getBaseURL - baseURLId#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:baseURL[1]/@userType}' )
log.info "BaseUrlID: " + id +", url: "+url+", region: "+region+", ServiceName: "+serviceName+", UserType: "+userType</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - getBaseURLs - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/baseURLs" methodName="GET - getBaseURLs" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getBaseURLs - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"baseURLs":[{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="serviceName" value="${#TestSuite#Service-Name}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getBaseURLs - 401"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/baseURLs" methodName="GET - getBaseURLs" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getBaseURLs - 401" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:credentials><con:username/><con:password/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="serviceName" value="${#testSuite#Service-Name}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getBaseURLs - 404"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/baseURLs" methodName="GET - getBaseURLs" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getBaseURLs - 404" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:itemNotFound[1]/ns1:message[1]/text()</path><content>Service: '${GET - getBaseURLs - 404#serviceName}' not found.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="serviceName" value="cloud" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getBaseURL - baseURLId - 401"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/baseURLs/{baseURLId}" methodName="GET - getBaseURL" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getBaseURL - baseURLId - 401" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:credentials><con:username/><con:password/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="baseURLId" value="${GET - getBaseURLs#Response#declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1'; //ns1:baseURLs[1]/ns1:baseURL[1]/@id}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="get-add-deleteBaseURLs" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="42e28978-2a4a-45c4-87e9-6436608d90c7"><con:settings/><con:testStep type="properties" name="Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>id</con:name><con:value/></con:property><con:property><con:name>href</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Copy of GET - getUser"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of GET - getUser" mediaType="application/xml" accept="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:credentials xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteUser"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteUser" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - createUser"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users" methodName="POST - createUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createUser" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:user enabled="true" id="${#TestSuite#username}" key="${#TestSuite#key}" mossoId="${#TestSuite#MossoId}" nastId="${#TestSuite#nastId}" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="201 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="validate 7 base urls added"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("POST - createUser#Response");

List idList = new ArrayList();
List v1DefaultList =  new ArrayList();

idList = holder.getNodeValues("//ns1:user[1]/ns1:baseURLRefs[1]/ns1:baseURLRef/@id");

v1DefaultList = holder.getNodeValues("//ns1:user[1]/ns1:baseURLRefs[1]/ns1:baseURLRef/@v1Default");
log.info idList
log.info v1DefaultList

assert idList.size() == 7

//assert idList.contains("8");
//assert idList.contains("12");
//assert idList.contains("16");


assert v1DefaultList.size() == 7
//assert !v1DefaultList.contains("false");
</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - getBaseURLRefs"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/baseURLRefs" methodName="GET - getBaseURLRefs" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getBaseURLRefs" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addBaseURLRef - default 1"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/baseURLRefs" methodName="POST - addBaseURLRef" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addBaseURLRef - default 1" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:baseURLRef id="${GET - getBaseURLRefs#Response#declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1'; //ns1:baseURLRefs[1]/ns1:baseURLRef[1]/@id}" v1Default="" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:badRequest[1]/ns1:message[1]/text()</path><content>Attempt to add existing BaseURL!</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="verify baseURL added correct"><con:settings/><con:config><script>//get href and id from add base urls response
def getid = context.expand( '${POST - addBaseURLRefwhref - 10 v1Default=true#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:baseURLRef[1]/@id}' )
def href = context.expand( '${POST - addBaseURLRefwhref - 6 v1Default=false#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:baseURLRef[1]/@href}' )
testRunner.testCase.testSteps.Properties.setPropertyValue("id",getid);
testRunner.testCase.testSteps.Properties.setPropertyValue("href",href);
//get href for id from getBaseUrls response
def gethref = context.expand( '${GET - getBaseURLRefs - after added v1Default=false#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:baseURLRefs[1]/ns1:baseURLRef[@id=${id}]/@href}' )
log.info gethref + " - " + href
assert gethref == href</script></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteBaseURLRef - 1"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/baseURLRefs/{baseURLId}" methodName="DELETE - deleteBaseURLRef" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteBaseURLRef - 1" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]" disabled="true"><con:configuration><path>declare namespace ns1='https://ord.auth.api.rackspacecloud.com/v1.1/users/ukrandomtest2/baseURLRefs/2';
//ns1:Fault[1]/ns1:badRequest[1]/ns1:message[1]/text()</path><content>Cannot delete the only endpoint for the service 'cloudFiles'.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#username}"/>
  <con:entry key="baseURLId" value="${GET - getBaseURLRefs#Response#declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1'; //ns1:baseURLRefs[1]/ns1:baseURLRef[1]/@id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteBaseURLRef - 2"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/baseURLRefs/{baseURLId}" methodName="DELETE - deleteBaseURLRef" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteBaseURLRef - 2" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]" disabled="true"><con:configuration><path>declare namespace ns1='https://ord.auth.api.rackspacecloud.com/v1.1/users/ukrandomtest2/baseURLRefs/21';
//ns1:Fault[1]/ns1:badRequest[1]/ns1:message[1]/text()</path><content>Cannot delete the only endpoint for the service 'cloudServers'.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#username}"/>
  <con:entry key="baseURLId" value="${GET - getBaseURLRefs#Response#declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1'; //ns1:baseURLRefs[1]/ns1:baseURLRef[2]/@id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteBaseURLRef - 3"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/baseURLRefs/{baseURLId}" methodName="DELETE - deleteBaseURLRef" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteBaseURLRef - 3" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]" disabled="true"><con:configuration><path>declare namespace ns1='https://ord.auth.api.rackspacecloud.com/v1.1/users/ukrandomtest2/baseURLRefs/${GET - getBaseURLRefs#Response#declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1'; //ns1:baseURLRefs[1]/ns1:baseURLRef[3]/@id}';
//ns1:Fault[1]/ns1:badRequest[1]/ns1:message[1]/text()</path><content>Cannot delete the only endpoint for the service 'cloudFilesCDN'.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#username}"/>
  <con:entry key="baseURLId" value="${GET - getBaseURLRefs#Response#declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1'; //ns1:baseURLRefs[1]/ns1:baseURLRef[3]/@id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addBaseURLRef - any"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/baseURLRefs" methodName="POST - addBaseURLRef" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addBaseURLRef - any" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:baseURLRef id="9" v1Default="true" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="200 2"><con:settings/><con:config><delay>2000</delay></con:config></con:testStep><con:testStep type="restrequest" name="GET - getBaseURLRefs after added"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/baseURLRefs" methodName="GET - getBaseURLRefs" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getBaseURLRefs after added" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [@id]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
exists( //ns1:baseURLRefs/ns1:baseURLRef/@id=10)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteBaseURLRef after added"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/baseURLRefs/{baseURLId}" methodName="DELETE - deleteBaseURLRef" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteBaseURLRef after added" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#username}"/>
  <con:entry key="baseURLId" value="${POST - addBaseURLRef - any#Response#declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1'; //ns1:baseURLRef[1]/@id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>2000</delay></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>body1</con:name><con:sourceType>addBaseURLRefAnyDefaultTrueJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addBaseURLRef - any default true - json</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST - addBaseURLRef - any default true - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/baseURLRefs" methodName="POST - addBaseURLRef" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addBaseURLRef - any default true - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "baseURLRef" : { "id" : 9, "v1Default" : true } }</con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@v1Default]"><con:configuration><path>declare namespace ns1='http://localhost/idm/cloud/v1.1/users/usrandomtest2/baseURLRefs';
//ns1:Response[1]/ns1:baseURLRef[1]/ns1:v1Default[1]</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="200 3"><con:settings/><con:config><delay>2000</delay></con:config></con:testStep><con:testStep type="restrequest" name="GET - getBaseURLRefs after added w default true"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/baseURLRefs" methodName="GET - getBaseURLRefs" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getBaseURLRefs after added w default true" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [@id]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
exists( //ns1:baseURLRefs/ns1:baseURLRef/@id=9)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@v1Default]" disabled="true"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:baseURLRefs[1]/ns1:baseURLRef[@id=9]/@v1Default</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteBaseURLRef after added w defaut true"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/baseURLRefs/{baseURLId}" methodName="DELETE - deleteBaseURLRef" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteBaseURLRef after added w defaut true" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#username}"/>
  <con:entry key="baseURLId" value="${POST - addBaseURLRef - any#Response#declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1'; //ns1:baseURLRef[1]/@id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="200"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="restrequest" name="POST - addBaseURLRef - any w herf &amp; default true"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/baseURLRefs" methodName="POST - addBaseURLRef" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addBaseURLRef - any w herf &amp; default true" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:baseURLRef href="www.test.com" id="9" v1Default="true" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@v1Default]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:baseURLRef[1]/@v1Default</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@href]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:baseURLRef[1]/@href</path><content>${POST - addBaseURLRef - any w herf &amp; default true#Request#declare namespace v1='http://docs.rackspacecloud.com/auth/api/v1.1'; //v1:baseURLRef[1]/@href}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getBaseURLRefs after added w herf &amp; default true"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/baseURLRefs" methodName="GET - getBaseURLRefs" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getBaseURLRefs after added w herf &amp; default true" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@v1Default]" disabled="true"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:baseURLRefs[1]/ns1:baseURLRef[1]/@v1Default</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [@id]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
exists( //ns1:baseURLRefs/ns1:baseURLRef/@id=10)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - setUserDisabled"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/enabled" methodName="PUT - setUserEnabled" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - setUserDisabled" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;user enabled="false" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="200 Response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@enabled]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@enabled</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addBaseURLRef - any w user disabled"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/baseURLRefs" methodName="POST - addBaseURLRef" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addBaseURLRef - any w user disabled" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:baseURLRef href="www.test.com" id="8" v1Default="true" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@v1Default]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:baseURLRef[1]/@v1Default</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@href]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:baseURLRef[1]/@href</path><content>${POST - addBaseURLRef - any w herf &amp; default true#Request#declare namespace v1='http://docs.rackspacecloud.com/auth/api/v1.1'; //v1:baseURLRef[1]/@href}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="200 1"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="restrequest" name="GET - getBaseURLRefs after added w user disabled"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/baseURLRefs" methodName="GET - getBaseURLRefs" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getBaseURLRefs after added w user disabled" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@v1Default]" disabled="true"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:baseURLRefs[1]/ns1:baseURLRef[@id=8]/@v1Default</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [@id]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
exists( //ns1:baseURLRefs/ns1:baseURLRef/@id=8)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - setUserEnabled"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/enabled" methodName="PUT - setUserEnabled" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - setUserEnabled" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;user enabled="true" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="200 Response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@enabled]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@enabled</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>addBaseURLRefAnyDefaultTrueJson</con:name><con:value>{ "baseURLRef" : { "id" : 9, "v1Default" : true } }</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="deleteUser" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="81c7593c-016b-4599-931e-44da57296cc6"><con:settings/><con:testStep type="properties" name="Properties" disabled="true"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>username2</con:name><con:value>negtest81</con:value></con:property><con:property><con:name>password2</con:name><con:value>Password81</con:value></con:property><con:property><con:name>key2</con:name><con:value>0f97f489c848438090250d50c7e1ea88</con:value></con:property><con:property><con:name>enabled</con:name><con:value>true</con:value></con:property><con:property><con:name>MossoId</con:name><con:value>5703568</con:value></con:property><con:property><con:name>NastId</con:name><con:value>MossoCloudFS_0041b004-7171-4099-ab0b-260506f13ff2</con:value></con:property><con:property><con:name>invaliduser</con:name><con:value>jennyv2</con:value></con:property><con:property><con:name>invalidpwd</con:name><con:value>pwd123</con:value></con:property><con:property><con:name>MossoId2</con:name><con:value>123456</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Copy of Copy of GET - getUser" disabled="true"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of Copy of GET - getUser" mediaType="application/xml" accept="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:credentials xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteUser"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteUser" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteUser - Neg 404"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteUser - Neg 404" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${Properties#username2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteUser - Neg 405"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteUser - Neg 405" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 405</scriptText></con:configuration></con:assertion><con:credentials><con:username/><con:password/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${Properties#username2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Copy of DELETE - deleteUser" disabled="true"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of DELETE - deleteUser" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#UKEndpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="dummi" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getVersion" searchProperties="true" id="482260c2-12bd-4a5b-ba17-065b0dc50a5f"><con:settings/><con:testStep type="restrequest" name="GET - getVersionInfo - xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}" methodName="GET - getVersionInfo" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getVersionInfo - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@id]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/common/api/v1.0';
//ns1:version[1]/@id</path><content>${#Project#version}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getVersionInfo - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}" methodName="GET - getVersionInfo" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getVersionInfo - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [id]" disabled="true"><con:configuration><path>declare namespace ns1='http://localhost/idm/cloud/v1.1';
//ns1:Response[1]/ns1:version[1]/ns1:id[1]/text()</path><content>${#Project#version}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("GET - getVersionInfo - json#ResponseAsXml");

List serviceurlIdList = holder.getNodeValues("//ns1:Response[1]/ns1:version[1]/ns1:id[1]")

if(serviceurlIdList[0] == "v1.1")
{
	log.info "Correct"
}
else{
	
	assert false
}



</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties><con:property><con:name>NastId</con:name><con:value>StagingUS_6cbf8080-114d-4f47-a6fe-54c83dbf8975</con:value></con:property><con:property><con:name>tokenId</con:name><con:value>e6f74fca-d727-40f4-a87a-9733221a277d</con:value></con:property><con:property><con:name>X-Public-Url</con:name><con:value/></con:property><con:property><con:name>X-Internal-Url</con:name><con:value/></con:property><con:property><con:name>Service-Name</con:name><con:value/></con:property><con:property><con:name>Region</con:name><con:value/></con:property><con:property><con:name>username</con:name><con:value>usrandomtest2</con:value></con:property><con:property><con:name>password</con:name><con:value>Password1</con:value></con:property><con:property><con:name>key</con:name><con:value>ba04b108b7cefcbcbf7c4d8bd05e3857</con:value></con:property><con:property><con:name>MossoId</con:name><con:value>5800386</con:value></con:property><con:property><con:name>username2</con:name><con:value>cmarin1</con:value></con:property><con:property><con:name>password2</con:name><con:value>Password2</con:value></con:property><con:property><con:name>key2</con:name><con:value/></con:property><con:property><con:name>tokenId2</con:name><con:value>  </con:value></con:property><con:property><con:name>authuser</con:name><con:value>auth</con:value></con:property><con:property><con:name>authpass</con:name><con:value>auth123</con:value></con:property><con:property><con:name>UKEndpoint</con:name><con:value>https://ord.auth.api.rackspacecloud.com</con:value></con:property><con:property><con:name>testMossoId</con:name><con:value>5600987</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="Functional - negative"><con:description/><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Negative testcases" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="a8612f6d-9f4c-481c-9dd1-609998814d82"><con:settings/><con:testStep type="properties" name="Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>username</con:name><con:value>carlosracker</con:value></con:property><con:property><con:name>password</con:name><con:value>PasswordX1</con:value></con:property><con:property><con:name>invalidUser</con:name><con:value>jenny vo</con:value></con:property><con:property><con:name>invalidPwd</con:name><con:value>123</con:value></con:property><con:property><con:name>disableUser</con:name><con:value>123</con:value></con:property><con:property><con:name>disablePwd</con:name><con:value>123</con:value></con:property><con:property><con:name>tokenId</con:name><con:value/></con:property><con:property><con:name>expiredTokenId</con:name><con:value>507dae1c-9afa-4e7a-a0dd-a575bee7bb2b</con:value></con:property><con:property><con:name>username2</con:name><con:value>authtest1</con:value></con:property><con:property><con:name>password2</con:name><con:value>Password1</con:value></con:property><con:property><con:name>serviceName</con:name><con:value>cloudFiles</con:value></con:property><con:property><con:name>region</con:name><con:value>DFW</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>body1</con:name><con:sourceType>auth400MissingUserNameJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - authenticate - 400 - missing username - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body2</con:name><con:sourceType>auth400MissingPasswordJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - authenticate - 400 - missing password - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body3</con:name><con:sourceType>auth400NoPwd/UserJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - authenticate - 400 - no username/pwd - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body4</con:name><con:sourceType>auth400otherJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - authenticate - 400 - other - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body5</con:name><con:sourceType>auth401Json</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - authenticate - 404 - unauthorized - json</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - XML" disabled="true"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - XML" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;passwordCredentials password="${Properties#password}" username="${Properties#username}" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="200 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="storeToken - XML"><con:settings/><con:config><script>def tokenIDResp = context.expand( '${POST - authenticate - XML#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:auth[1]/ns1:token[1]/@id}' )

testRunner.testCase.testSuite.setPropertyValue("tokenId",tokenIDResp);
testRunner.testCase.testSteps.Properties.setPropertyValue("tokenId",tokenIDResp);

//def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
//def holder = groovyUtils.getXmlHolder("POST - authenticate#Response")

//List dataList = holder.getNodeValues("//ns1:auth[1]/ns1:serviceCatalog[1]/ns1:service/ns1:endpoint[1]/@publicURL")

//def getServiceName = context.expand( '${POST - authenticate - XML#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:auth[1]/ns1:serviceCatalog[1]/ns1:service[@name="${serviceName}"]/@name}' )
//def internalURL = context.expand( '${POST - authenticate - XML#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:auth[1]/ns1:serviceCatalog[1]/ns1:service[@name="${serviceName}"]/ns1:endpoint[@region="${region}"]/@internalURL}' )
//def publicURL = context.expand( '${POST - authenticate - XML#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:auth[1]/ns1:serviceCatalog[1]/ns1:service[@name="${serviceName}"]/ns1:endpoint[@region="${region}"]/@publicURL}' )
def getServiceName = context.expand( '${POST - authenticate - XML#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:auth[1]/ns1:serviceCatalog[1]/ns1:service[@name="${serviceName}"]/@name}' )
def publicURL = context.expand( '${POST - authenticate - XML#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:auth[1]/ns1:serviceCatalog[1]/ns1:service[@name="${serviceName}"]/ns1:endpoint[@region="${region}"]/@publicURL}' )
def region = context.expand( '${POST - authenticate - XML#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:auth[1]/ns1:serviceCatalog[1]/ns1:service[@name="${serviceName}"]/ns1:endpoint[@region="${region}"]/@region}' )

//def region = context.expand( '${POST - authenticate - XML#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:auth[1]/ns1:serviceCatalog[1]/ns1:service[@name="${serviceName}"]/ns1:endpoint[@region="${region}"]/@region}' )

//List dataList = holder.getNodeValues("//ns1:auth[1]/ns1:serviceCatalog[1]/ns1:service[@name='${serviceName}]/ns1:endpoint[@region='${region}']")

//def internalURL= dataList.get(0);
//def publicURL = dataList.get(1);

testRunner.testCase.testSuite.setPropertyValue("X-Public-Url", publicURL)
//testRunner.testCase.testSuite.setPropertyValue("X-Internal-Url", internalURL)
testRunner.testCase.testSuite.setPropertyValue("Service-Name", getServiceName)
testRunner.testCase.testSuite.setPropertyValue("Region", region)

</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - 400 - missing username"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - 400 - missing username" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;passwordCredentials password="${Properties#invalidPwd}" username="" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400
log.info "POST - authentication - 400 -missing username Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:badRequest[1]/ns1:message[1]/text()</path><content>Expecting username</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - 400 - missing username - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - 400 - missing username - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"passwordCredentials":{"username":"","password":"${Properties#invalidPwd}"}}</con:request><con:assertion type="GroovyScriptAssertion" name="response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400
log.info "POST - authentication - 400 -missing username Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='${#Project#EndpointJson}/${#Project#path}/auth-admin';
//ns1:Fault[1]/ns1:badRequest[1]/ns1:message[1]</path><content>Expecting username</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"badRequest":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>"message":"Expecting username"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - 400 - missing password"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - 400 - missing password" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;passwordCredentials password="" username="Properties#validUser" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400
log.info "POST - authentication - 400 -missing password Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:badRequest[1]/ns1:message[1]/text()</path><content>Expecting password</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - 400 - missing password - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - 400 - missing password - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"passwordCredentials":{"username":"Properties#validUser","password":""}}</con:request><con:assertion type="GroovyScriptAssertion" name="response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400
log.info "POST - authentication - 400 -missing password Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='${#Project#EndpointJson}/${#Project#path}/auth-admin';
//ns1:Fault[1]/ns1:badRequest[1]/ns1:message[1]</path><content>Expecting password</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"badRequest":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>"message":"Expecting password"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - 400 - no username/pwd"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - 400 - no username/pwd" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;passwordCredentials password="" username="" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400
log.info "POST - authentication - 400 - no username/pwd Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Expecting password</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - 400 - no username/pwd - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - 400 - no username/pwd - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"passwordCredentials":{"username":"","password":""}}</con:request><con:assertion type="GroovyScriptAssertion" name="response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400
log.info "POST - authentication - 400 - no username/pwd Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"badRequest":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>"message":"Expecting password"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - 400 - other"><con:settings/><con:config service="Auth1.1.x" methodName="POST - authenticate" resourcePath="/${#Project#path}/auth" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - 400 - other" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:credentials xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400
log.info "POST - authentication - 400 - others Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - 400 - other - json"><con:settings/><con:config service="Auth1.1.x" methodName="POST - authenticate" resourcePath="/${#Project#path}/auth" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - 400 - other - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"credentials":{}}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400
log.info "POST - authentication - 400 - others Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"badRequest":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>"message":"Expecting apiKey"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - 404 - unauthorized"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - 404 - unauthorized" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;passwordCredentials password="${Properties#invalidPwd}" username="${Properties#invalidUser}" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404
log.info "POST - authentication - 404 - unauthorized Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - 404 - unauthorized - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - 404 - unauthorized - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"passwordCredentials":{"username":"${Properties#invalidUser}","password":"${Properties#invalidPwd}"}}</con:request><con:assertion type="GroovyScriptAssertion" name="response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404
log.info "POST - authentication - 404 - unauthorized Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>{"unauthorized":{"message":"User account exists externally, but not in the AUTH database.","code":401}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - 405 - unauthorized basic"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - 405 - unauthorized basic" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;passwordCredentials password="${Properties#invalidPwd}" username="${Properties#invalidUser}" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 405
log.info "POST - authentication - 400 - unauthorized basic Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:credentials><con:username/><con:password/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - setUserDisabled"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/enabled" methodName="PUT - setUserEnabled" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - setUserDisabled" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:user enabled="false" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${Properties#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - 403" disabled="true"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - 403" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;passwordCredentials password="${Properties#password}" username="${Properties#username}" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403
log.info "POST - authentication - 403 Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:userDisabled[1]/ns1:message[1]/text()</path><content>User ${Properties#username} is not enabled.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - setUserEnabled"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/enabled" methodName="PUT - setUserEnabled" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - setUserEnabled" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;user enabled="true" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="200 Response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@enabled]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@enabled</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>auth400MissingUserNameJson</con:name><con:value>{"passwordCredentials":{"username":"","password":"${Properties#invalidPwd}"}}</con:value></con:property><con:property><con:name>auth400MissingPasswordJson</con:name><con:value>{"passwordCredentials":{"username":"Properties#validUser","password":""}}</con:value></con:property><con:property><con:name>auth400NoPwd/UserJson</con:name><con:value>{"passwordCredentials":{"username":"","password":""}}</con:value></con:property><con:property><con:name>auth400otherJson</con:name><con:value>{"credentials":{}}</con:value></con:property><con:property><con:name>auth401Json</con:name><con:value>{"passwordCredentials":{"username":"${Properties#invalidUser}","password":"${Properties#invalidPwd}"}}</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:properties><con:property><con:name>username</con:name><con:value>cmarin1</con:value></con:property><con:property><con:name>Password1</con:name><con:value/></con:property><con:property><con:name>tokenID</con:name><con:value/></con:property><con:property><con:name>X-Public-Url</con:name><con:value/></con:property><con:property><con:name>X-Internal-Url</con:name><con:value/></con:property><con:property><con:name>Service-Name</con:name><con:value/></con:property><con:property><con:name>Region</con:name><con:value/></con:property><con:property><con:name>authpass</con:name><con:value>auth123</con:value></con:property><con:property><con:name>authuser</con:name><con:value>auth</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:endpointStrategy xsi:type="con:DefaultEndpointStrategy" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:endpoint mode="COMPLEMENT" username="auth" password="auth123">https://auth.api.rackspacecloud.com</con:endpoint></con:endpointStrategy><con:requirements/><con:properties><con:property><con:name>path</con:name><con:value>idm/cloud/v1.1</con:value></con:property><con:property><con:name>Endpoint</con:name><con:value>http://localhost:8080</con:value></con:property><con:property><con:name>adminpath</con:name><con:value>auth-admin</con:value></con:property><con:property><con:name>authuser</con:name><con:value>auth</con:value></con:property><con:property><con:name>authpass</con:name><con:value>auth123</con:value></con:property><con:property><con:name>version</con:name><con:value>v1.1</con:value></con:property><con:property><con:name>EndpointJson</con:name><con:value>http://localhost</con:value></con:property><con:property><con:name>pathv2.0</con:name><con:value>idm/cloud/v2.0</con:value></con:property><con:property><con:name>pathv10</con:name><con:value>idm/cloud/v1.0</con:value></con:property></con:properties><con:wssContainer/><con:databaseConnectionContainer/><con:reporting><con:reportTemplates/><con:xmlTemplates/><con:parameters/></con:reporting></con:soapui-project>