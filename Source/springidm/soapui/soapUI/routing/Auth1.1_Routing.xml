<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project name="Auth1.1.x US" resourceRoot="" soapui-version="4.5.0" abortOnError="false" runType="SEQUENTIAL" activeEnvironment="Default" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.TestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Global Properties" value=""/>
  <con:entry key="TestSuite" value="Functional - Regression"/>
  <con:entry key="Report to Generate" value=""/>
  <con:entry key="Password" value=""/>
  <con:entry key="soapui-setings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Save Project" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Export JUnit Results" value="true"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Export All" value="true"/>
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="TestCase" value="&lt;all>"/>
  <con:entry key="Print Report" value="true"/>
  <con:entry key="Username" value=""/>
  <con:entry key="Root Folder" value="C:\tmp\GlobalAuth\Release\Auth1.1_Internal\Functional-Regression"/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="Endpoint" value=""/>
</xml-fragment>]]></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.LoadTestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="TestSuite" value="&lt;all>"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="Report to Generate" value=""/>
  <con:entry key="Password" value=""/>
  <con:entry key="soapui-setings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value="/home/jorge/eviware/soapUI-Pro-3.6.1/bin"/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="LoadTest" value="&lt;all>"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Save Project" value="false"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Print Report Statistics" value="false"/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="TestCase" value="&lt;all>"/>
  <con:entry key="Username" value=""/>
  <con:entry key="Root Folder" value="/home/jorge/Documents/soapUI reports/ga-v1.1"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Endpoint" value=""/>
  <con:entry key="ThreadCount" value=""/>
  <con:entry key="Limit" value=""/>
</xml-fragment>]]></con:setting></con:settings><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Auth1.1.x" type="rest" basePath="" definitionUrl="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="CreateWadlDocumentationAction@report-directory">/home/jorge/Documents</con:setting></con:settings><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:endpoint>${#Project#Endpoint}</con:endpoint><con:endpoint>http://localhost:8080</con:endpoint></con:endpoints><con:resource name="v1.1" path="${#Project#path}"><con:settings/><con:parameters/><con:resource name="extensions" path="extensions"><con:settings/><con:parameters/><con:resource name="{alias}" path="{alias}"><con:settings/><con:parameters><con:parameter><con:name>alias</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="GET - getExtension" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:extension</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="GET - getExtensions" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:extensions</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="auth" path="auth-admin"><con:settings/><con:parameters/><con:method name="POST - authenticate" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:nastCredentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:mossoCredentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:passwordCredentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:auth</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:userDisabled</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401 403 400 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="token" path="token"><con:settings/><con:parameters/><con:resource name="{tokenId}" path="{tokenId}"><con:settings/><con:parameters><con:parameter><con:name>tokenId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="GET - validateToken" method="GET"><con:settings/><con:parameters><con:parameter><con:name>belongsTo</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>type</con:name><con:value>CLOUD</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>CLOUD</con:default><con:option>CLOUD</con:option><con:option>NAST</con:option><con:option>MOSSO</con:option></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:token</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401 404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:userDisabled</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="DELETE - revokeToken" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource><con:resource name="users" path="users"><con:settings/><con:parameters/><con:resource name="{userId}" path="{userId}"><con:settings/><con:parameters><con:parameter><con:name>userId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="enabled" path="enabled"><con:settings/><con:parameters/><con:method name="GET - getUserEnabled" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="PUT - setUserEnabled" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="key" path="key"><con:settings/><con:parameters/><con:method name="GET - getUserKey" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="PUT - setUserKey" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request>&lt;v1:user xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="serviceCatalog" path="serviceCatalog"><con:settings/><con:parameters/><con:method name="GET - getServiceCatalog" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceCatalog</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="baseURLRefs" path="baseURLRefs"><con:settings/><con:parameters/><con:resource name="{baseURLId}" path="{baseURLId}"><con:settings/><con:parameters><con:parameter><con:name>baseURLId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="GET - getBaseURLRef" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:baseURLRef</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="DELETE - deleteBaseURLRef" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="GET - getBaseURLRefs" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:baseURLRefs</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="POST - addBaseURLRef" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:baseURLRef</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:baseURLRef</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="groups" path="groups"><con:settings/><con:parameters/><con:method name="GET - getUserGroups" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:groups</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="GET - getUser" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="DELETE - deleteUser" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="PUT - updateUser" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request>&lt;v1:user xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:method name="POST - createUser" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>409</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:usernameConflict</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 409 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="nast/{nastId}" path="nast/{nastId}"><con:settings/><con:parameters><con:parameter><con:name>nastId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="GET - userRedirect" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType xsi:nil="true"/><con:status>303</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="mosso/{mossoId}" path="mosso/{mossoId}"><con:settings/><con:parameters><con:parameter><con:name>mossoId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="GET - userRedirect" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType xsi:nil="true"/><con:status>303</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="baseURLs" path="baseURLs"><con:settings/><con:parameters/><con:resource name="{baseURLId}" path="{baseURLId}"><con:settings/><con:parameters><con:parameter><con:name>baseURLId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="GET - getBaseURL" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:baseURL</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="enabled" path="enabled"><con:settings/><con:parameters/><con:method name="GET - getBaseURL" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:baseURL</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="GET - getBaseURLs" method="GET"><con:settings/><con:parameters><con:parameter><con:name>serviceName</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:baseURLs</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="auth public" path="auth"><con:settings/><con:parameters/><con:method name="POST - authenticate" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:nastCredentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:mossoCredentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:passwordCredentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:auth</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:userDisabled</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401 403 400 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:method name="GET - getVersionInfo" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:version</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="RAX-GRPADM" type="rest" basePath="" definitionUrl="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Endpoint}</con:endpoint></con:endpoints><con:resource name="v2.0" path="${#Project#pathv2.0}"><con:settings/><con:parameters/><con:resource name="RAX-GRPADM" path="RAX-GRPADM"><con:settings/><con:parameters/><con:resource name="groups" path="groups"><con:settings/><con:parameters/><con:resource name="{groupId}" path="{groupId}"><con:settings/><con:parameters><con:parameter><con:name>groupId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="users" path="users"><con:settings/><con:parameters><con:parameter><con:name>X-Auth-Token</con:name><con:value/><con:style>HEADER</con:style></con:parameter></con:parameters><con:resource name="{userId}" path="{userId}"><con:settings/><con:parameters><con:parameter><con:name>userId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Add User to Group - addUserToGroup" method="PUT"><con:settings/><con:parameters><con:parameter><con:name>X-Auth-Token</con:name><con:value/><con:style>HEADER</con:style><con:default/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Remove User From Group - removeUserFromGroup" method="DELETE"><con:settings/><con:parameters><con:parameter><con:name>X-Auth-Toekn</con:name><con:value/><con:style>HEADER</con:style><con:default/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource><con:method name="Get Group - getGroup" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">v1:group</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Update a Group - updateGroup" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">v1:group</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">v1:group</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete Group - deleteGroup" method="DELETE"><con:settings/><con:parameters><con:parameter><con:name>X-Auth-Token</con:name><con:value/><con:style>HEADER</con:style><con:default/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Add a New Group - addGroup" method="POST"><con:settings/><con:parameters><con:parameter><con:name>X-Auth-Token</con:name><con:value/><con:style>HEADER</con:style><con:default/></con:parameter></con:parameters><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">v1:group</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v1="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">v1:group</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="identity admin" type="rest" basePath="" definitionUrl="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Endpoint}</con:endpoint></con:endpoints><con:resource name="v2.0" path="${#Project#pathv2.0}"><con:settings/><con:parameters/><con:resource name="extensions" path="extensions"><con:settings/><con:parameters/><con:resource name="{alias}" path="{alias}"><con:settings/><con:parameters><con:parameter><con:name>alias</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Get Extension Details - getExtension" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/common/api/v1.0">v1:extension</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="List Extensions - listExtensions" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/common/api/v1.0">v1:extensions</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="tokens" path="tokens"><con:settings/><con:parameters/><con:resource name="{tokenId}" path="{tokenId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter required="true"><con:name>tokenId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>belongsTo</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="endpoints" path="endpoints"><con:settings/><con:parameters/><con:method name="List Endoints for a Token - listEndpointsForToken" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:endpoints</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Validate Token - validateToken" method="GET"><con:settings/><con:parameters><con:parameter><con:name>belongsTo</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:access</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Check Token - checkToken" method="HEAD"><con:settings/><con:parameters><con:parameter><con:name>belongsTo</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Authenticate for Service API - authenticate" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:auth</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:access</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:userDisabled</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="users" path="users"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="{user_id}" path="{user_id}"><con:settings/><con:parameters><con:parameter required="true"><con:name>user_id</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="roles" path="roles"><con:settings/><con:parameters/><con:method name="List User Global Roles - listUserGlobalRoles" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:roles</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get a User by ID - getUserById" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get a User by Name - getUserByName" method="GET"><con:settings/><con:parameters><con:parameter required="true"><con:name>name</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="tenants" path="tenants"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="{tenantId}" path="{tenantId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>tenantId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="users" path="users"><con:settings/><con:parameters/><con:resource name="{user_id}" path="{user_id}"><con:settings/><con:parameters><con:parameter required="true"><con:name>user_id</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="roles" path="roles"><con:settings/><con:parameters/><con:method name="List Roles for User on Tenant - listRolesForUserOnTenant" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:roles</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource><con:method name="Get Tenants by ID - getTenantById" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:tenant</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get Tenants - listTenants" method="GET"><con:settings/><con:parameters><con:parameter><con:name>marker</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:tenants</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Get tenants by name - getTenantByName" method="GET"><con:settings/><con:parameters><con:parameter required="true"><con:name>name</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:tenant</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Version Details - getVersionInfo" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/common/api/v1.0">v1:version</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="getVersion" type="rest" basePath="" definitionUrl="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://172.17.16.113:8080</con:endpoint></con:endpoints><con:resource name=".xml" path="${#Project#path}"><con:settings/><con:parameters/><con:method name="getVersion - getVersion" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:api="http://docs.rackspacecloud.com/auth/api">api:version</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404 500</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:serverError</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://172.17.16.113:8080</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name=".json" path="${#Project#path}/v1.0"><con:settings/><con:parameters/><con:method name="getVersion - getVersion" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401 500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://172.17.16.113:8080</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="v1.0 contract" path=""><con:settings/><con:parameters/><con:resource name="v1.0 contract" path="${#Project#path}/v1.0"><con:settings/><con:parameters/><con:method name="auth v1.0 - auth v1.0" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>204</con:status><con:params/><con:element xmlns:ns="http://wadl.dev.java.net/2009/02">ns:data</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>204</con:status><con:params/><con:element xmlns:ns="http://wadl.dev.java.net/2009/02">ns:data</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>204</con:status><con:params/><con:element xmlns:ns="http://wadl.dev.java.net/2009/02">ns:data</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>204</con:status><con:params/><con:element xmlns:ns="http://wadl.dev.java.net/2009/02">ns:data</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>204</con:status><con:params/><con:element xmlns:ns="http://wadl.dev.java.net/2009/02">ns:data</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>204</con:status><con:params/><con:element xmlns:ns="http://wadl.dev.java.net/2009/02">ns:data</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>204</con:status><con:params/><con:element xmlns:ns="http://wadl.dev.java.net/2009/02">ns:data</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>204</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/xml</con:mediaType><con:status>204</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>204</con:status><con:params/><con:element xmlns:ns="http://wadl.dev.java.net/2009/02">ns:data</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>204</con:status><con:params/><con:element xmlns:ns="http://wadl.dev.java.net/2009/02">ns:data</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>204</con:status><con:params/><con:element xmlns:ns="http://wadl.dev.java.net/2009/02">ns:data</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401 404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://172.17.16.113:8080</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="v1.0.1 direct" path="${#Project#path}/v1.0"><con:settings/><con:parameters/><con:method name="auth v1.0.1 direct - auth v1.0.1 direct" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>204</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/xml</con:mediaType><con:status>204</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>204</con:status><con:params/><con:element xmlns:ns="http://wadl.dev.java.net/2009/02">ns:data</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://172.17.16.113:8080</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource><con:resource name="v1.0.2" path="${#Project#pathv10}"><con:settings/><con:parameters/><con:method name="auth v1.0.2 - auth v1.0.2" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>302</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>204</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>204</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>204</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>204</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/xml</con:mediaType><con:status>204</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>204</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>204</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>204</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>204</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>204</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 401 500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/octet-stream</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401 500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>401 404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://172.17.16.113:8080</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="v1.0.1" path="auth-server/services/rest/service/auth"><con:settings/><con:parameters/><con:method name="auth v1.0.1 - auth v1.0.1" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>204</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>204</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://172.17.16.113:8080</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:interface><con:testSuite name="Functional - positive"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CreateUser" searchProperties="true" id="614d2c7d-1368-40bd-8904-aaffaf6d0d5e" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="POST - createUser"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users" methodName="POST - createUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createUser" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.support.editor.views.xml.form2.FormEditorView@ViewType">All</con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:user enabled="true" id="${#TestSuite#username}" key="${#TestSuite#key}" mossoId="${#TestSuite#MossoId}" nastId="${#TestSuite#nastId}" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="201 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>body1</con:name><con:sourceType>createUserJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - createUser - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>createUserInvalidBasicAuthJson</con:name><con:sourceType>createUserInvalidBasicAuthJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - createUser - invalid basic auth - 405 -  json</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST - createUser - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users" methodName="POST - createUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createUser - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.support.editor.views.xml.form2.FormEditorView@ViewType">All</con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "user" : {   "id" : "testRandomUser",   "key" : "T35tM3",   "mossoId" : 5800383,   "nastId" : "mynast1d",   "enabled" : true  } }</con:request><con:assertion type="GroovyScriptAssertion" name="201 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"user":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>"id":"testRandomUser"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 2"><con:configuration><token>"enabled":true</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 3"><con:configuration><token>"baseURLRefs":[{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteUser - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteUser - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="testRandomUser" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - createUser - invalid basic auth - 405 - xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users" methodName="POST - createUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createUser - invalid basic auth - 405 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.support.editor.views.xml.form2.FormEditorView@ViewType">All</con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:user enabled="true" id="${#TestSuite#username}" key="${#TestSuite#key}" mossoId="${#TestSuite#MossoId}" nastId="${#TestSuite#nastId}" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="201 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 405</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}123</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - createUser - invalid basic auth - 405 -  json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users" methodName="POST - createUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createUser - invalid basic auth - 405 -  json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.support.editor.views.xml.form2.FormEditorView@ViewType">All</con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "user" : {   "id" : "testRandomUser",   "key" : "T35tM3",   "mossoId" : 5800383,   "nastId" : "mynast1d",   "enabled" : true  } }</con:request><con:assertion type="GroovyScriptAssertion" name="201 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 405</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}123</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>createUserJson</con:name><con:value>{ "user" : {   "id" : "testRandomUser",   "key" : "T35tM3",   "mossoId" : 5800383,   "nastId" : "mynast1d",   "enabled" : true  } }</con:value></con:property><con:property><con:name>createUserInvalidBasicAuthJson</con:name><con:value>{ "user" : {   "id" : "testRandomUser",   "key" : "T35tM3",   "mossoId" : 5800383,   "nastId" : "mynast1d",   "enabled" : true  } }</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="v1.0.2 Default URLs" searchProperties="true" id="54e82eb2-fe4d-4543-bc11-6827135406c8" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="GET auth v1.0.2 - xml"><con:settings/><con:config service="getVersion" resourcePath="/${#Project#pathv10}" methodName="auth v1.0.2 - auth v1.0.2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET auth v1.0.2 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X-Auth-Key" value="${#TestCase#key}"/>
  &lt;con:entry key="X-Auth-User" value="${#TestCase#username}"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204
def smu=messageExchange.responseHeaders["X-Server-Management-Url"];
def CDNUrl = messageExchange.responseHeaders["X-CDN-Management-Url"]
def xst=messageExchange.responseHeaders["X-Storage-Url"];

context.testCase.setPropertyValue("smu", smu[0])
context.testCase.setPropertyValue("CDNUrl", CDNUrl[0])
context.testCase.setPropertyValue("xst", xst[0])

log.info smu;
log.info xst;
log.info CDNUrl;

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - auth v1.1 - xml"><con:settings/><con:config service="Auth1.1.x" methodName="POST - authenticate" resourcePath="/${#Project#path}/auth" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - auth v1.1 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:credentials key="${#TestCase#key}" username="${#TestCase#username}" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" disabled="true"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Compare BaseURLs - xml"><con:settings/><con:config><script><![CDATA[def baseUrl = context.expand( '${POST - auth v1.1 - xml#ResponseAsXml#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:auth[1]/ns1:serviceCatalog[1]}' )
log.info baseUrl
baseUrl = new XmlSlurper().parseText(baseUrl)
def BUsize=baseUrl.service.size();
def CDNUrl = testRunner.testCase.getPropertyValue( "CDNUrl" )
def smu = testRunner.testCase.getPropertyValue( "smu" )
def xst = testRunner.testCase.getPropertyValue( "xst" )
def flag=0
// ${#TestCase#CDNUrl}
for(i in 0..BUsize-1)
{
	if(baseUrl.service[i].'@name'=="cloudFilesCDN" && baseUrl.service[i].endpoint[0].'@publicURL'==CDNUrl)
	{
		flag=flag+1;
		log.info 'a0';
	}
	else
	
	if(baseUrl.service[i].'@name'=="cloudServers" &&  baseUrl.service[i].endpoint[0].'@publicURL'==smu)
	{
		flag=flag+1;
		log.info 'a1';
	}
	else
	if(baseUrl.service[i].'@name'=="cloudFiles" &&  baseUrl.service[i].endpoint[0].'@publicURL'==xst)
	{
		flag=flag+1;
		log.info 'a2';
	}
	
}
log.info flag;
if(flag==3) 
	assert true;
else
	assert false;]]></script></con:config></con:testStep><con:testStep type="restrequest" name="GET auth v1.0.2 - json"><con:settings/><con:config service="getVersion" resourcePath="/${#Project#pathv10}" methodName="auth v1.0.2 - auth v1.0.2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET auth v1.0.2 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="X-Auth-Key" value="${#TestCase#key}"/>
  &lt;con:entry key="X-Auth-User" value="${#TestCase#username}"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204
def smu=messageExchange.responseHeaders["X-Server-Management-Url"];
def CDNUrl = messageExchange.responseHeaders["X-CDN-Management-Url"]
def xst=messageExchange.responseHeaders["X-Storage-Url"];

context.testCase.setPropertyValue("JSONsmu", smu[0])
context.testCase.setPropertyValue("JSONCDNUrl", CDNUrl[0])
context.testCase.setPropertyValue("JSONxst", xst[0])

log.info smu;
log.info xst;
log.info CDNUrl;

</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - auth v1.1 - json"><con:settings/><con:config service="Auth1.1.x" methodName="POST - authenticate" resourcePath="/${#Project#path}/auth" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - auth v1.1 - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:credentials key="${#TestCase#key}" username="${#TestCase#username}" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance" disabled="true"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Compare BaseURLs - JSON"><con:settings/><con:config><script><![CDATA[import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

def caseUrl = context.expand( '${POST - auth v1.1 - json#Response}' )
def baseUrl = new JsonSlurper().parseText(caseUrl)

def CloudCDN=baseUrl.'auth'.'serviceCatalog'.'cloudFilesCDN'.publicURL;
def CloudCDN_flags=baseUrl.'auth'.'serviceCatalog'.'cloudFilesCDN'.v1Default;
def ServerMU=baseUrl.'auth'.'serviceCatalog'.'cloudServers'.publicURL;
def ServerMU_flags=baseUrl.'auth'.'serviceCatalog'.'cloudServers'.v1Default;
def ServerToken=baseUrl.'auth'.'serviceCatalog'.'cloudFiles'.publicURL;
def ServerToken_flags=baseUrl.'auth'.'serviceCatalog'.'cloudFiles'.v1Default;

def CDNUrl = testRunner.testCase.getPropertyValue( "JSONCDNUrl" )
def smu = testRunner.testCase.getPropertyValue( "JSONsmu" )
def xst = testRunner.testCase.getPropertyValue( "JSONxst" )

def flag=0

for(i in 0..CloudCDN.size()-1)
{
	if(CloudCDN_flags[i] && CloudCDN[i]==CDNUrl)
	{
		flag=flag+1;
	}		
}
for(i in 0..ServerMU.size()-1)
{
	if(ServerMU_flags[i] && ServerMU[i]==smu)
	{
		flag=flag+1;
	}		
}

for(i in 0..ServerToken.size()-1)
{
	if(ServerToken_flags[i] && ServerToken[i]==xst)
	{
		flag=flag+1;
	}		
}

log.info flag;
assert flag==3;]]></script></con:config></con:testStep><con:properties><con:property><con:name>username</con:name><con:value>${#TestSuite#username}</con:value></con:property><con:property><con:name>key</con:name><con:value>${#TestSuite#key}</con:value></con:property><con:property><con:name>MossoId</con:name><con:value>5800321</con:value></con:property><con:property><con:name>nastid</con:name><con:value/></con:property><con:property><con:name>smu</con:name><con:value>https://servers.api.staging.us.ccp.rackspace.net/v1.0/5800381</con:value></con:property><con:property><con:name>CDNUrl</con:name><con:value>https://cdn.stg.clouddrive.com/v1/StagingUS_64fb8854-a439-44d3-82a8-7a99146bc6f9</con:value></con:property><con:property><con:name>xst</con:name><con:value>https://storage.stg.swift.racklabs.com/v1/StagingUS_64fb8854-a439-44d3-82a8-7a99146bc6f9</con:value></con:property><con:property><con:name>JSONsmu</con:name><con:value>https://servers.api.staging.us.ccp.rackspace.net/v1.0/5800381</con:value></con:property><con:property><con:name>JSONCDNUrl</con:name><con:value>https://cdn.stg.clouddrive.com/v1/StagingUS_64fb8854-a439-44d3-82a8-7a99146bc6f9</con:value></con:property><con:property><con:name>JSONxst</con:name><con:value>https://storage.stg.swift.racklabs.com/v1/StagingUS_64fb8854-a439-44d3-82a8-7a99146bc6f9</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="addBaseURLRef w same Id" searchProperties="true" id="50995b63-b74d-484c-8eb9-252e6ccf188a"><con:settings/><con:testStep type="restrequest" name="GET - getBaseURLs"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/baseURLs" methodName="GET - getBaseURLs" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getBaseURLs" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Assert node [@enabled]"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns1"] = "http://docs.rackspacecloud.com/auth/api/v1.1"
def node = holder.getDomNode( "//ns1:baseURLs/ns1:baseURL/@enabled" )

assert node != null
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [@enabled]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
exists( //ns1:baseURLs/ns1:baseURL[@enabled="false"]/text())</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="get enable region"><con:settings/><con:config><script>//get disable region
def getRegion = context.expand( '${GET - getBaseURLs#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:baseURLs[1]/ns1:baseURL[@enabled=\"true\"]/@region}' )
log.info "Disabled resion - "+getRegion
//get BaseUrl ID
def getId = context.expand( '${GET - getBaseURLs#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:baseURLs[1]/ns1:baseURL[@enabled=\"true\"]/@id}' )
log.info "id - "+getId
//get service name
def getSrvName = context.expand( '${GET - getBaseURLs#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:baseURLs[1]/ns1:baseURL[@enabled=\"true\"]/@serviceName}' )
//write to testcase properties
log.info "service name - "+getSrvName
testRunner.testCase.setPropertyValue("region", getRegion)
//testRunner.testCase.setPropertyValue("id", getId)
testRunner.testCase.setPropertyValue("serviceName", getSrvName)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - addBaseURLRef - xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/baseURLRefs" methodName="POST - addBaseURLRef" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addBaseURLRef - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:baseURLRef id="${#TestCase#id}" v1Default="true" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:baseURLRef/@id</path><content>${#TestCase#id}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getBaseURLRefs - xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/baseURLRefs" methodName="GET - getBaseURLRefs" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getBaseURLRefs - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [@id]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:baseURLRefs/ns1:baseURLRef/@id=1</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="1500"><con:settings/><con:config><delay>6000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Copy of POST - addBaseURLRef - xml" id="07d39b01-02d8-4338-a03e-f5a1d576a6e0"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/baseURLRefs" methodName="POST - addBaseURLRef" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of POST - addBaseURLRef - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:baseURLRef id="${#TestCase#id}" v1Default="true" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:badRequest[1]/ns1:message[1]</path><content>Attempt to add existing BaseURL!</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getBaseURLRefs -Xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/baseURLRefs" methodName="GET - getBaseURLRefs" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getBaseURLRefs -Xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [@id]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:baseURLRefs/ns1:baseURLRef/@id=1</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteBaseURLRef after added"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/baseURLRefs/{baseURLId}" methodName="DELETE - deleteBaseURLRef" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteBaseURLRef after added" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#username}"/>
  <con:entry key="baseURLId" value="${#TestCase#id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getBaseURLRefs - check Delete - xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/baseURLRefs" methodName="GET - getBaseURLRefs" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getBaseURLRefs - check Delete - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [@id]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:baseURLRefs/ns1:baseURLRef/@id=1</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>region</con:name><con:value>ORD</con:value></con:property><con:property><con:name>id</con:name><con:value>13</con:value></con:property><con:property><con:name>serviceName</con:name><con:value>cloudFiles</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>07d39b01-02d8-4338-a03e-f5a1d576a6e0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Auth" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="78a8074a-7011-4ce7-9760-9ec1d377b63b"><con:settings/><con:testStep type="properties" name="Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>serviceName</con:name><con:value>cloudFiles</con:value></con:property><con:property><con:name>region</con:name><con:value>DFW</con:value></con:property><con:property><con:name>username</con:name><con:value>authtest2</con:value></con:property><con:property><con:name>password</con:name><con:value>Password2</con:value></con:property><con:property><con:name>tokenID</con:name><con:value/></con:property><con:property><con:name>key</con:name><con:value>0f97f489c848438090250d50c7e1ea88</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST - auth - xml"><con:settings/><con:config service="Auth1.1.x" methodName="POST - authenticate" resourcePath="/${#Project#path}/auth" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - auth - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:credentials key="${#TestSuite#key}" username="${#TestSuite#username}" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1"><con:configuration><scriptText>def vary = messageExchange.responseHeaders['vary']
assert vary.contains("Accept, Accept-Encoding")
</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>body1</con:name><con:sourceType>authjson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - auth - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body2</con:name><con:sourceType>authenticateJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - authenticate - JSON</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body3</con:name><con:sourceType>mossoAuthenticateJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - Mosso authenticate - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body4</con:name><con:sourceType>nastAuthenticateJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - Nast authenticate - json</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST - auth - json"><con:settings/><con:config service="Auth1.1.x" methodName="POST - authenticate" resourcePath="/${#Project#path}/auth" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - auth - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"credentials":{"username":"${#TestSuite#username}","key":"${#TestSuite#key}"}}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"auth":{"token":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>"serviceCatalog":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 2" disabled="true"><con:configuration><token>"cloudDB":[{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1"><con:configuration><scriptText>def vary = messageExchange.responseHeaders['vary']
assert vary.contains("Accept, Accept-Encoding")
</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - XML" disabled="true"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - XML" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;passwordCredentials password="${#TestSuite#password}" username="${#TestSuite#username}" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="200 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="storeToken - XML" disabled="true"><con:settings/><con:config><script>def tokenIDResp = context.expand( '${POST - authenticate - XML#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:auth[1]/ns1:token[1]/@id}' )

testRunner.testCase.testSteps.Properties.setPropertyValue("tokenID",tokenIDResp);
testRunner.testCase.testSuite.setPropertyValue("tokenId",tokenIDResp);

//def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
//def holder = groovyUtils.getXmlHolder("POST - authenticate#Response")

//List dataList = holder.getNodeValues("//ns1:auth[1]/ns1:serviceCatalog[1]/ns1:service/ns1:endpoint[1]/@publicURL")

def getServiceName = context.expand( '${POST - authenticate - XML#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:auth[1]/ns1:serviceCatalog[1]/ns1:service[@name="${serviceName}"]/@name}' )
def internalURL = context.expand( '${POST - authenticate - XML#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:auth[1]/ns1:serviceCatalog[1]/ns1:service[@name="${serviceName}"]/ns1:endpoint[@region="${region}"]/@internalURL}' )
def publicURL = context.expand( '${POST - authenticate - XML#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:auth[1]/ns1:serviceCatalog[1]/ns1:service[@name="${serviceName}"]/ns1:endpoint[@region="${region}"]/@publicURL}' )
def region = context.expand( '${POST - authenticate - XML#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:auth[1]/ns1:serviceCatalog[1]/ns1:service[@name="${serviceName}"]/ns1:endpoint[@region="${region}"]/@region}' )
//List dataList = holder.getNodeValues("//ns1:auth[1]/ns1:serviceCatalog[1]/ns1:service[@name='${serviceName}]/ns1:endpoint[@region='${region}']")

//def internalURL= dataList.get(0);
//def publicURL = dataList.get(1);

testRunner.testCase.testSuite.setPropertyValue("X-Public-Url", publicURL)
testRunner.testCase.testSuite.setPropertyValue("X-Internal-Url", internalURL)
testRunner.testCase.testSuite.setPropertyValue("Service-Name", getServiceName)
testRunner.testCase.testSuite.setPropertyValue("Region", region)

</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - validateToken - xml" disabled="true"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/token/{tokenId}" methodName="GET - validateToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - validateToken - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="200 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="belongsTo" value="${#TestSuite#username}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUser"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUser" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store nastId"><con:settings/><con:config><script>def getNastId = context.expand( '${GET - getUser#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:user[1]/@nastId}' )
log.info "get nast ID - " + getNastId
testRunner.testCase.testSuite.setPropertyValue("NastId", getNastId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Mosso authenticate - XML"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Mosso authenticate - XML" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting><con:setting id="com.eviware.soapui.settings.CommonSettings@entitizeProperties">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;mossoCredentials key="${#TestSuite#key}" mossoId="${#TestSuite#MossoId}" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="200 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - Mosso authentication - XML Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@id]" disabled="true"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:auth[1]/ns1:token[1]/@id</path><content>${#TestSuite#tokenId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Nast authenticate - XML"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Nast authenticate - XML" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;nastCredentials key="${#TestSuite#key}" nastId="${#TestSuite#NastId}" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="200 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - Nast authentication - XML Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - user-key authenticate - xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - user-key authenticate - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;credentials key="${#TestSuite#key}" username="${#TestSuite#username}" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - user-key authentication - XML Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@id]" disabled="true"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:auth[1]/ns1:token[1]/@id</path><content>${#TestSuite#tokenId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - JSON" disabled="true"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - JSON" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"passwordCredentials":{"username":"${#TestSuite#username}","password":"${#TestSuite#password}"}}</con:request><con:assertion type="GroovyScriptAssertion" name="200 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - json Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"auth":{"token":{"id":"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>"serviceCatalog":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 2" disabled="true"><con:configuration><token>"cloudDB":[{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="storeToken - JSON" disabled="true"><con:settings/><con:config><script>def status = testRunner.testCase.testSteps["POST - authenticate - JSON"].testRequest.response.getStatusCode()
log.info status
def contentType = testRunner.testCase.testSteps["POST - authenticate - JSON"].testRequest.response.getContentType()
log.info contentType

def response = context.expand( '${POST - authenticate - JSON#Response}' )
log.info "json response: " + response

if(status.equals(200) &amp;&amp; contentType.equals("application/json")){
	assert true
}
else{
	assert false
}

//def tokenIDResp = context.expand( '${POST - authenticate - JSON#ResponseAsXml#declare namespace ns1=\'http://172.17.16.57/v1.1.2/auth-admin\'; //ns1:Response[1]/ns1:auth[1]/ns1:token[1]/ns1:id[1]}' )
def tokenIDResp = context.expand( '${POST - authenticate - JSON#ResponseAsXml#declare namespace ns1=\'https://auth.staging.us.ccp.rackspace.net/v1.1/auth-admin\'; //ns1:Response[1]/ns1:auth[1]/ns1:token[1]/ns1:id[1]}' )


//testRunner.testCase.testSuite.setPropertyValue("tokenId",tokenIDResp);
log.info tokenIDResp

//def getServiceName = context.expand( '${POST - authenticate - XML#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:auth[1]/ns1:serviceCatalog[1]/ns1:service[@name="${serviceName}"]/@name}' )
//def internalURL = context.expand( '${POST - authenticate - XML#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:auth[1]/ns1:serviceCatalog[1]/ns1:service[@name="${serviceName}"]/ns1:endpoint[@region="${region}"]/@internalURL}' )
//def publicURL = context.expand( '${POST - authenticate - XML#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:auth[1]/ns1:serviceCatalog[1]/ns1:service[@name="${serviceName}"]/ns1:endpoint[@region="${region}"]/@publicURL}' )
//def region = context.expand( '${POST - authenticate - XML#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:auth[1]/ns1:serviceCatalog[1]/ns1:service[@name="${serviceName}"]/ns1:endpoint[@region="${region}"]/@region}' )
def internalURL = context.expand( '${POST - authenticate - JSON#ResponseAsXml#declare namespace ns1=\'http://172.17.16.57/auth-admin/auth\'; //ns1:Response[1]/ns1:auth[1]/ns1:serviceCatalog[1]/ns1:cloudFiles[1]/ns1:e[1]/ns1:internalURL[1]}' )
def publicURL = context.expand( '${POST - authenticate - JSON#ResponseAsXml#declare namespace ns1=\'http://172.17.16.57/auth-admin/auth\'; //ns1:Response[1]/ns1:auth[1]/ns1:serviceCatalog[1]/ns1:cloudFiles[1]/ns1:e[1]/ns1:publicURL[1]}' )
def region = context.expand( '${POST - authenticate - JSON#ResponseAsXml#declare namespace ns1=\'http://172.17.16.57/auth-admin/auth\'; //ns1:Response[1]/ns1:auth[1]/ns1:serviceCatalog[1]/ns1:cloudFiles[1]/ns1:e[1]/ns1:region[1]}' )

//List dataList = holder.getNodeValues("//ns1:auth[1]/ns1:serviceCatalog[1]/ns1:service[@name='${serviceName}]/ns1:endpoint[@region='${region}']")
//def internalURL= dataList.get(0);
//def publicURL = dataList.get(1);

testRunner.testCase.testSuite.setPropertyValue("X-Public-Url", publicURL)
testRunner.testCase.testSuite.setPropertyValue("X-Internal-Url", internalURL)
testRunner.testCase.testSuite.setPropertyValue("Region", region)

</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Mosso authenticate - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Mosso authenticate - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"mossoCredentials":{"mossoId":${#TestSuite#MossoId},"key":"${#TestSuite#key}"}}</con:request><con:assertion type="GroovyScriptAssertion" name="200 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - Mosso authentication - json Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"auth":{"token":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>"serviceCatalog":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 2" disabled="true"><con:configuration><token>"cloudDB":[{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Nast authenticate - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Nast authenticate - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"nastCredentials":{"nastId":"${#TestSuite#NastId}","key":"${#TestSuite#key}"}}</con:request><con:assertion type="GroovyScriptAssertion" name="200 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - Nast authentication - XML Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"auth":{"token":{"id":"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>"serviceCatalog":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 2" disabled="true"><con:configuration><token>"cloudDB":[{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - user-key authenticate - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - user-key authenticate - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;credentials key="${#TestSuite#key}" username="${#TestSuite#username}" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - user-key authentication - XML Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [id]" disabled="true"><con:configuration><path>declare namespace ns1='http://172.17.16.57/v1.1.2/auth';
//ns1:Response[1]/ns1:auth[1]/ns1:token[1]/ns1:id[1]/text()</path><content>${#TestSuite#tokenId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="verify tokenId - staging [id]" disabled="true"><con:configuration><path>declare namespace ns1='https://auth.staging.us.ccp.rackspace.net/v1.1/auth';
//ns1:Response[1]/ns1:auth[1]/ns1:token[1]/ns1:id[1]/text()</path><content>${#TestSuite#tokenId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>"serviceCatalog":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 2" disabled="true"><con:configuration><token>"cloudDB":[{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>authjson</con:name><con:value>{"credentials":{"username":"${#TestSuite#username}","key":"${#TestSuite#key}"}}</con:value></con:property><con:property><con:name>authenticateJson</con:name><con:value>{"passwordCredentials":{"username":"${#TestSuite#username}","password":"${#TestSuite#password}"}}</con:value></con:property><con:property><con:name>mossoAuthenticateJson</con:name><con:value>{"mossoCredentials":{"mossoId":${#TestSuite#MossoId},"key":"${#TestSuite#key}"}}</con:value></con:property><con:property><con:name>nastAuthenticateJson</con:name><con:value>{"nastCredentials":{"nastId":"${#TestSuite#NastId}","key":"${#TestSuite#key}"}}</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="testAccountDisable" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="881601bb-2d36-4bcc-8006-024899fba6b8"><con:settings/><con:testStep type="transfer" name="Property Transfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>username</con:name><con:sourceType>username</con:sourceType><con:sourceStep>#TestSuite#</con:sourceStep><con:targetType>username</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>password</con:name><con:sourceType>password</con:sourceType><con:sourceStep>#TestSuite#</con:sourceStep><con:targetType>password</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>key</con:name><con:sourceType>key</con:sourceType><con:sourceStep>#TestSuite#</con:sourceStep><con:targetType>key</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>NastId</con:name><con:sourceType>NastId</con:sourceType><con:sourceStep>#TestSuite#</con:sourceStep><con:targetType>NastId</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" useXQuery="false" entitize="false" transferToAll="false" transferChildNodes="false"><con:name>MossoId</con:name><con:sourceType>MossoId</con:sourceType><con:sourceStep>#TestSuite#</con:sourceStep><con:targetType>MossoId</con:targetType><con:targetStep>Properties</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body1</con:name><con:sourceType>setUserEnableTrueJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>PUT - setUserEnabled - true - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body2</con:name><con:sourceType>authenticatePCJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - authenticate - passwordCredential - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body3</con:name><con:sourceType>authenticateUCJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - authenticate - userCredential - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body4</con:name><con:sourceType>authenticateNCJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - authenticate - nastCredential - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body5</con:name><con:sourceType>authenticateMCJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - authenticate - mossoCredential - json</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="properties" name="Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>username</con:name><con:value>usrandomtest1</con:value></con:property><con:property><con:name>password</con:name><con:value>Password1</con:value></con:property><con:property><con:name>key</con:name><con:value>ba04b108b7cefcbcbf7c4d8bd05e3857</con:value></con:property><con:property><con:name>NastId</con:name><con:value>StagingUS_64fb8854-a439-44d3-82a8-7a99146bc6f9</con:value></con:property><con:property><con:name>MossoId</con:name><con:value>5800381</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="PUT - setUserEnabled - false - xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/enabled" methodName="PUT - setUserEnabled" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - setUserEnabled - false - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:user enabled="false" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - passwordCredential xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - passwordCredential xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:passwordCredentials password="${#TestSuite#password}" username="${#TestSuite#username}" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="status code 403"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - passwordCredential - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - passwordCredential - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"passwordCredentials":{"username":"${#TestSuite#username}","password":"${#TestSuite#password}"}}</con:request><con:assertion type="GroovyScriptAssertion" name="status code 403"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"userDisabled":{"message":"User '${#TestSuite#username}' is disabled.","code":403}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - userCredential xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - userCredential xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:credentials key="${#TestSuite#key}" username="${#TestSuite#username}" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="XPath Match" name="Match content of [@code]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:userDisabled[1]/@code</path><content>403</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="status code 403"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:userDisabled[1]/ns1:message[1]/text()</path><content>${#TestSuite#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - userCredential - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - userCredential - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"credentials":{"username":"${#TestSuite#username}","key":"${#TestSuite#key}"}}</con:request><con:assertion type="XPath Match" name="Match content of [@code]"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#path}/auth';
//ns1:Fault[1]/ns1:userDisabled[1]/ns1:code[1]</path><content>403</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="status code 403"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#path}/auth';
//ns1:Fault[1]//ns1:userDisabled[1]/ns1:message</path><content>${#TestSuite#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"userDisabled":{"message":"usrandomtest1","code":403}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - nastCredential xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - nastCredential xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:nastCredentials key="${#TestSuite#key}" nastId="${#TestSuite#NastId}" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="status code 403"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:userDisabled[1]/ns1:message[1]/text()</path><content>${#TestSuite#NastId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - nastCredential - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - nastCredential - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"nastCredentials":{"nastId":"${#TestSuite#NastId}","key":"${#TestSuite#key}"}}</con:request><con:assertion type="GroovyScriptAssertion" name="status code 403"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#path}/auth-admin';
//ns1:Fault/ns1:userDisabled[1]/ns1:message[1]/text()</path><content>${#TestSuite#NastId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - mossoCredential xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - mossoCredential xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:mossoCredentials key="${#TestSuite#key}" mossoId="${#TestSuite#MossoId}" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="status code 403"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:userDisabled[1]/ns1:message[1]/text()</path><content>${#TestSuite#MossoId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - mossoCredential - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - mossoCredential - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"mossoCredentials":{"mossoId":${#TestSuite#MossoId},"key":"${#TestSuite#key}"}}</con:request><con:assertion type="GroovyScriptAssertion" name="status code 403"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/auth-admin';
//ns1:userDisabled[1]/ns1:message[1]/text()</path><content>${#TestSuite#MossoId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"userDisabled":{"message":"${#TestSuite#MossoId}","code":403}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - setUserEnabled - true - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/enabled" methodName="PUT - setUserEnabled" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - setUserEnabled - true - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"user":{"enabled":true}}</con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@enabled]"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#path}/users/${#TestSuite#username}/enabled';
//ns1:Response[1]/ns1:user[1]/ns1:enabled</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"user":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - userCredential 200"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - userCredential 200" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:credentials key="${#TestSuite#key}" username="${#TestSuite#username}" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="status code 200"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token"><con:settings/><con:config><script>def token = context.expand( '${POST - authenticate - userCredential 200#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:auth[1]/ns1:token[1]/@id}' )

testRunner.testCase.testSuite.setPropertyValue("tokenId", token);
log.info token;</script></con:config></con:testStep><con:properties><con:property><con:name>setUserEnableTrueJson</con:name><con:value>{"user":{"enabled":true}}</con:value></con:property><con:property><con:name>authenticatePCJson</con:name><con:value>{"passwordCredentials":{"username":"${#TestSuite#username}","password":"${#TestSuite#password}"}}</con:value></con:property><con:property><con:name>authenticateUCJson</con:name><con:value>{"credentials":{"username":"${#TestSuite#username}","key":"${#TestSuite#key}"}}</con:value></con:property><con:property><con:name>authenticateNCJson</con:name><con:value>{"nastCredentials":{"nastId":"${#TestSuite#NastId}","key":"${#TestSuite#key}"}}</con:value></con:property><con:property><con:name>authenticateMCJson</con:name><con:value>{"mossoCredentials":{"mossoId":${#TestSuite#MossoId},"key":"${#TestSuite#key}"}}</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="testAccountStatus - HMDB" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="7e66fd29-37fe-4669-8474-51a7ff19da79" disabled="true"><con:settings/><con:testStep type="properties" name="Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>username2</con:name><con:value>ukauthtest14</con:value></con:property><con:property><con:name>password2</con:name><con:value>Password1</con:value></con:property><con:property><con:name>key2</con:name><con:value>64699add09dba029b547ea1536f7d51f</con:value></con:property><con:property><con:name>status2</con:name><con:value>active</con:value></con:property><con:property><con:name>username3</con:name><con:value>ukauthtest11</con:value></con:property><con:property><con:name>password3</con:name><con:value>Password1</con:value></con:property><con:property><con:name>key3</con:name><con:value>cd203d327d37423efa98d52fef348375</con:value></con:property><con:property><con:name>status3</con:name><con:value>delinquent</con:value></con:property><con:property><con:name>username4</con:name><con:value>authtest4</con:value></con:property><con:property><con:name>password4</con:name><con:value>Password4</con:value></con:property><con:property><con:name>key4</con:name><con:value>faae7f485d4e642427abe98a59f85f01</con:value></con:property><con:property><con:name>status4</con:name><con:value>unverified</con:value></con:property><con:property><con:name>username5</con:name><con:value>ukauthtest12</con:value></con:property><con:property><con:name>password5</con:name><con:value>Password1</con:value></con:property><con:property><con:name>key5</con:name><con:value>176fca27e427a4b4b1157a176fa0fa8b</con:value></con:property><con:property><con:name>status5</con:name><con:value>suspended</con:value></con:property><con:property><con:name>username6</con:name><con:value>ukauthtest13</con:value></con:property><con:property><con:name>password6</con:name><con:value>Password1</con:value></con:property><con:property><con:name>key6</con:name><con:value>ceafe4f49137f8143c4f710540d01ec3</con:value></con:property><con:property><con:name>status6</con:name><con:value>denied</con:value></con:property><con:property><con:name>username7</con:name><con:value>ukauthtest16</con:value></con:property><con:property><con:name>password7</con:name><con:value>Password1</con:value></con:property><con:property><con:name>key7</con:name><con:value>6bbf1f47aeefeb6bb69b803dfe06010f</con:value></con:property><con:property><con:name>status7</con:name><con:value>closed</con:value></con:property><con:property><con:name>username8</con:name><con:value>ukauthtest15</con:value></con:property><con:property><con:name>password8</con:name><con:value>Password1</con:value></con:property><con:property><con:name>key8</con:name><con:value>ac549ed402e7a9f948b75cc0f6036356u</con:value></con:property><con:property><con:name>status8</con:name><con:value>pending_approval</con:value></con:property><con:property><con:name>MossoId2</con:name><con:value>20000630</con:value></con:property><con:property><con:name>MossoId3</con:name><con:value>20000611</con:value></con:property><con:property><con:name>MossoId4</con:name><con:value>5701239</con:value></con:property><con:property><con:name>MossoId5</con:name><con:value>20000612</con:value></con:property><con:property><con:name>MossoId6</con:name><con:value>20000629</con:value></con:property><con:property><con:name>MossoId7</con:name><con:value>20000636</con:value></con:property><con:property><con:name>MossoId8</con:name><con:value>20000632</con:value></con:property><con:property><con:name>enabled</con:name><con:value>true</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - active"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - active" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;passwordCredentials password="${Properties#password2}" username="${Properties#username2}" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="200 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - active Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - delinquent"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - delinquent" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;passwordCredentials password="${Properties#password3}" username="${Properties#username3}" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="200 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - delinquent Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - unverified"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - unverified" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;passwordCredentials password="${Properties#password4}" username="${Properties#username4}" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="200 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - unverified Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - pending"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - pending" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;passwordCredentials password="${Properties#password8}" username="${Properties#username8}" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="200 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - pending Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - suspended"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - suspended" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;passwordCredentials password="${Properties#password5}" username="${Properties#username5}" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="403 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403
log.info "POST - authentication - suspended Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:userDisabled[1]/ns1:message[1]/text()</path><content>Account ${Properties#MossoId5} is not active.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - denied"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - denied" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;passwordCredentials password="${Properties#password6}" username="${Properties#username6}" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="403 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403
log.info "POST - authentication - denied Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:userDisabled[1]/ns1:message[1]/text()</path><content>Account ${Properties#MossoId6} is not active.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - closed"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - closed" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;passwordCredentials password="${Properties#password7}" username="${Properties#username7}" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="403 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403
log.info "POST - authentication - closed Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:userDisabled[1]/ns1:message[1]/text()</path><content>Account ${Properties#MossoId7} is not active.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getUserGroups" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="f8592f85-c376-4a82-8b11-3e54b6f0c2a0"><con:settings/><con:testStep type="properties" name="test data"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>username</con:name><con:value>usrandomtest1</con:value></con:property><con:property><con:name>groupID</con:name><con:value>LimitedUser</con:value></con:property><con:property><con:name>groupDesc</con:name><con:value>1 - Default</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUserGroups - xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/groups" methodName="GET - getUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUserGroups - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUserGroups - xml 1"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/groups" methodName="GET - getUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUserGroups - xml 1" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${test data#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="get group info"><con:settings/><con:config><script>//get group id
def getGrpId = context.expand( '${GET - getUserGroups - xml#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:groups[1]/ns1:group[1]/@id}' )
//get group description
def grpDesc = context.expand( '${GET - getUserGroups - xml#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:groups[1]/ns1:group[1]/ns1:description[1]}' )

log.info "Group ID: "+getGrpId
log.info "Group Description: "+grpDesc

testRunner.testCase.setPropertyValue("groupID", getGrpId)
testRunner.testCase.setPropertyValue("groupDesc", grpDesc)
groupId = testRunner.testCase.testSteps["test data"].getPropertyValue("groupID")
if (getGrpId == null || grpDesc == null)
{
	assert false
}</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUserGroups - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/groups" methodName="GET - getUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUserGroups - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"groups":{"values":[{"id":"${#TestCase#groupId}","description":"${#TestCase#groupDesc}"}]}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${test data#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUserGroups - 401 unauthorized"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/groups" methodName="GET - getUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUserGroups - 401 unauthorized" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"unauthorized":{"message":"You are not authorized to access this resource.","details":"AuthErrorHandler","code":401}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username/><con:password/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUserGroups - 404"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/groups" methodName="GET - getUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUserGroups - 404" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"itemNotFound":{"message":"User not found: test","code":404}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="test" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - createUser"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users" methodName="POST - createUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createUser" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.support.editor.views.xml.form2.FormEditorView@ViewType">All</con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:user enabled="true" id="testauth113" key="" mossoId="900113" nastId="Nast-12345" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="201 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUserGroups - user not exist in HMDB"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/groups" methodName="GET - getUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUserGroups - user not exist in HMDB" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:groups[1]/ns1:group[1]/@id</path><content>Default</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${POST - createUser#Response#declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1'; //ns1:user[1]/@id}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteUser"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteUser" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${POST - createUser#Response#declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1'; //ns1:user[1]/@id}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - createUser - test disable account"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users" methodName="POST - createUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createUser - test disable account" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.support.editor.views.xml.form2.FormEditorView@ViewType">All</con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:user enabled="true" id="authtest1" key="d32e3f4437131f69dde757356d489143" mossoId="5701106" nastId="TestNast123456" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="201 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUserGroups - others" disabled="true"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/groups" methodName="GET - getUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUserGroups - others" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${POST - createUser - test disable account#Response#declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1'; //ns1:user[1]/@id}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteUser - the disable account"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteUser - the disable account" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${POST - createUser - test disable account#Response#declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1'; //ns1:user[1]/@id}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>groupID</con:name><con:value>Default</con:value></con:property><con:property><con:name>groupDesc</con:name><con:value>Default Limits</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getBaseURLs w enabled boolean" searchProperties="true" id="74ead8e6-d921-4a72-93dd-a7388bcb1121"><con:settings/><con:testStep type="properties" name="Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>serviceName</con:name><con:value>cloudFiles</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="GET - getBaseURLs"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/baseURLs" methodName="GET - getBaseURLs" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getBaseURLs" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Assert node [@enabled]"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns1"] = "http://docs.rackspacecloud.com/auth/api/v1.1"
def node = holder.getDomNode( "//ns1:baseURLs/ns1:baseURL/@enabled" )

assert node != null
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [@enabled]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
exists( //ns1:baseURLs/ns1:baseURL[@enabled="false"]/text())</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getBaseURLs - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/baseURLs" methodName="GET - getBaseURLs" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getBaseURLs - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [@enabled]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
exists( //ns1:baseURLs/ns1:baseURL[@enabled="false"]/text())</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"baseURLs":[{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="verify enabled boolean"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("GET - getBaseURLs#Response");

holder.declareNamespace('ns','http://docs.rackspacecloud.com/auth/api/v1.1')

List serviceNameList = holder.getNodeValues("//ns:baseURLs[1]/ns:baseURL/@serviceName")
List serviceurlIdList = holder.getNodeValues("//ns:baseURLs[1]/ns:baseURL/@id")
List enabledValueList = holder.getNodeValues("//ns:baseURLs[1]/ns:baseURL/@enabled")
Collections.sort(serviceurlIdList)
log.info serviceNameList
log.info serviceurlIdList
log.info enabledValueList
log.info enabledValueList.size()
Set serviceSet = new HashSet(serviceNameList)
log.info serviceSet

for(item in 0..enabledValueList.size()-1)
{
	log.info enabledValueList[item]
	value = enabledValueList[item]
	if(value != "true" &amp;&amp;  value != "false")
	{
		log.info "Enabled not a boolean value"
		assert false
	}
}</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - getBaseURLs - w ServiceName"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/baseURLs" methodName="GET - getBaseURLs" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getBaseURLs - w ServiceName" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="serviceName" value="${Properties#serviceName}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getBaseURLs - w ServiceName - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/baseURLs" methodName="GET - getBaseURLs" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getBaseURLs - w ServiceName - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"baseURLs":[{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="serviceName" value="${Properties#serviceName}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="verify service name"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("GET - getBaseURLs - w ServiceName#Response");

holder.declareNamespace('ns','http://docs.rackspacecloud.com/auth/api/v1.1')

List serviceNameList = holder.getNodeValues("//ns:baseURLs[1]/ns:baseURL/@serviceName")
List serviceurlIdList = holder.getNodeValues("//ns:baseURLs[1]/ns:baseURL/@id")
List enabledValueList = holder.getNodeValues("//ns:baseURLs[1]/ns:baseURL/@enabled")
Collections.sort(serviceurlIdList)
log.info serviceNameList
log.info serviceurlIdList
log.info enabledValueList
log.info enabledValueList.size()
Set serviceSet = new HashSet(serviceNameList)
log.info serviceSet

srvName = testRunner.testCase.testSteps.Properties.getPropertyValue("serviceName")
log.info srvName
for(i in 0..serviceNameList.size() -1)
{
	if (serviceNameList[i] != srvName)
	{
		log.info "not correct service name: "+ srvName +" vs. "+serviceSet
		assert false
	}
}
for(item in 0..enabledValueList.size()-1)
{
	log.info enabledValueList[item]
	value = enabledValueList[item]
	if(value != "true" &amp;&amp;  value != "false")
	{
		log.info "Enabled not a boolean value"
		assert false
	}
}</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - getBaseURLs - enabled"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/baseURLs/enabled" methodName="GET - getBaseURL" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getBaseURLs - enabled" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Assert node [@enabled]"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns1"] = "http://docs.rackspacecloud.com/auth/api/v1.1"
def node = holder.getDomNode( "//ns1:baseURLs/ns1:baseURL/@enabled" )

assert node != null
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [@enabled]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
exists( //ns1:baseURLs/ns1:baseURL[@enabled="false"]/text())</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="serviceName" value="${Properties#serviceName}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getBaseURLs - enabled - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/baseURLs/enabled" methodName="GET - getBaseURL" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getBaseURLs - enabled - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [@enabled]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
exists( //ns1:baseURLs/ns1:baseURL[@enabled="false"]/text())</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"baseURLs":[{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="serviceName" value="${Properties#serviceName}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="verify enabled true"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("GET - getBaseURLs - enabled#Response");

holder.declareNamespace('ns','http://docs.rackspacecloud.com/auth/api/v1.1')

List serviceNameList = holder.getNodeValues("//ns:baseURLs[1]/ns:baseURL/@serviceName")
List serviceurlIdList = holder.getNodeValues("//ns:baseURLs[1]/ns:baseURL/@id")
List enabledValueList = holder.getNodeValues("//ns:baseURLs[1]/ns:baseURL/@enabled")
Collections.sort(serviceurlIdList)
log.info serviceNameList
log.info serviceurlIdList
log.info enabledValueList
log.info enabledValueList.size()
Set serviceSet = new HashSet(serviceNameList)
log.info serviceSet

for(item in 0..enabledValueList.size()-1)
{
	log.info enabledValueList[item]
	value = enabledValueList[item]
	if(value != "true")
	{
		log.info "Enabled not a boolean value"
		assert false
	}
}</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - getBaseURLs - 401"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/baseURLs" methodName="GET - getBaseURLs" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getBaseURLs - 401" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Assert node [@enabled]" disabled="true"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns1"] = "http://docs.rackspacecloud.com/auth/api/v1.1"
def node = holder.getDomNode( "//ns1:baseURLs/ns1:baseURL/@enabled" )

assert node != null
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [@enabled]" disabled="true"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
exists( //ns1:baseURLs/ns1:baseURL[@enabled="false"]/text())</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username/><con:password/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getBaseURLs - 401- json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/baseURLs" methodName="GET - getBaseURLs" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getBaseURLs - 401- json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Assert node [@enabled]" disabled="true"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns1"] = "http://docs.rackspacecloud.com/auth/api/v1.1"
def node = holder.getDomNode( "//ns1:baseURLs/ns1:baseURL/@enabled" )

assert node != null
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [@enabled]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
exists( //ns1:baseURLs/ns1:baseURL[@enabled="false"]/text())</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>"unauthorized":{"message":"You are not authorized to access this resource.","details":"AuthErrorHandler","code":401}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username/><con:password/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getBaseURLs - enabled 401"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/baseURLs/enabled" methodName="GET - getBaseURL" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getBaseURLs - enabled 401" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Assert node [@enabled]" disabled="true"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns1"] = "http://docs.rackspacecloud.com/auth/api/v1.1"
def node = holder.getDomNode( "//ns1:baseURLs/ns1:baseURL/@enabled" )

assert node != null
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [@enabled]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
exists( //ns1:baseURLs/ns1:baseURL[@enabled="false"]/text())</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username/><con:password/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="serviceName" value="${Properties#serviceName}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getBaseURLs - enabled 401 - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/baseURLs/enabled" methodName="GET - getBaseURL" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getBaseURLs - enabled 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Assert node [@enabled]" disabled="true"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns1"] = "http://docs.rackspacecloud.com/auth/api/v1.1"
def node = holder.getDomNode( "//ns1:baseURLs/ns1:baseURL/@enabled" )

assert node != null
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [@enabled]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
exists( //ns1:baseURLs/ns1:baseURL[@enabled="false"]/text())</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"unauthorized":{"message":"You are not authorized to access this resource.","details":"AuthErrorHandler","code":401}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username/><con:password/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="serviceName" value="${Properties#serviceName}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="addBaseURLRef w disabled baseURL" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="e97530b1-cab6-4c75-b6a3-1a7caec3337a" disabled="true"><con:settings/><con:testStep type="restrequest" name="GET - getBaseURLs"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/baseURLs" methodName="GET - getBaseURLs" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getBaseURLs" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Assert node [@enabled]"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns1"] = "http://docs.rackspacecloud.com/auth/api/v1.1"
def node = holder.getDomNode( "//ns1:baseURLs/ns1:baseURL/@enabled" )

assert node != null
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [@enabled]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
exists( //ns1:baseURLs/ns1:baseURL[@enabled="false"]/text())</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="get disable region"><con:settings/><con:config><script>//get disable region
def getRegion = context.expand( '${GET - getBaseURLs#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:baseURLs[1]/ns1:baseURL[@enabled=\"false\"]/@region}' )


log.info "Disabled resion - "+getRegion
//get BaseUrl ID
def getId = context.expand( '${GET - getBaseURLs#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:baseURLs[1]/ns1:baseURL[@enabled=\"false\"]/@id}' )
log.info "id - "+getId
//get service name
def getSrvName = context.expand( '${GET - getBaseURLs#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:baseURLs[1]/ns1:baseURL[@enabled=\"false\"]/@serviceName}' )
//write to testcase properties
log.info "service name - "+getSrvName
testRunner.testCase.setPropertyValue("region", getRegion)
testRunner.testCase.setPropertyValue("id", getId)
testRunner.testCase.setPropertyValue("serviceName", getSrvName)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - addBaseURLRef - disabled baseURL"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/baseURLRefs" methodName="POST - addBaseURLRef" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addBaseURLRef - disabled baseURL" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:baseURLRef id="333" enabled="false" v1Default="true" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:badRequest[1]/ns1:message[1]/text()</path><content>Attempted to add a disabled BaseURL!</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addBaseURLRef - disabled baseURL - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/baseURLRefs" methodName="POST - addBaseURLRef" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addBaseURLRef - disabled baseURL - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:baseURLRef id="${#TestCase#id}" v1Default="true" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"badRequest":{"message":"Attempted to add a disabled BaseURL!","code":400}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>region</con:name><con:value/></con:property><con:property><con:name>id</con:name><con:value/></con:property><con:property><con:name>serviceName</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DeleteUser" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="1d1189f2-4cf0-47c2-8af8-7bdcdefd216b"><con:settings/><con:testStep type="properties" name="Properties" disabled="true"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>username2</con:name><con:value>negtest81</con:value></con:property><con:property><con:name>password2</con:name><con:value>Password81</con:value></con:property><con:property><con:name>key2</con:name><con:value>0f97f489c848438090250d50c7e1ea88</con:value></con:property><con:property><con:name>enabled</con:name><con:value>true</con:value></con:property><con:property><con:name>MossoId</con:name><con:value>5703568</con:value></con:property><con:property><con:name>NastId</con:name><con:value>MossoCloudFS_0041b004-7171-4099-ab0b-260506f13ff2</con:value></con:property><con:property><con:name>invaliduser</con:name><con:value>jennyv2</con:value></con:property><con:property><con:name>invalidpwd</con:name><con:value>pwd123</con:value></con:property><con:property><con:name>MossoId2</con:name><con:value>123456</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteUser"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteUser" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteUser - Neg 404"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteUser - Neg 404" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${Properties#username2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteUser - Neg 405"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteUser - Neg 405" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 405</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth1234</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${Properties#username2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Copy of DELETE - deleteUser" disabled="true"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of DELETE - deleteUser" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="authtest2" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getExtensions" searchProperties="true" id="0ee2b90d-232e-46e5-952a-00dd5d7787b9"><con:settings/><con:testStep type="restrequest" name="GET - getExtensions - xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/extensions" methodName="GET - getExtensions" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getExtensions - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username/><con:password/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="get alias" disabled="true"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("GET - getExtensions - xml#Response");

List aliasList = holder.getNodeValues("declare namespace ns1=\'http://docs.openstack.org/common/api/v1.0\'; //ns1:extensions[1]/ns1:extension/@alias")
log.info aliasList

for(item in 0..aliasList.size()-1)
{
	log.info aliasList[item]	
	value = aliasList[item]
	//testRunner.testCase.testSteps["data"].setPropertyValue("alias", value )
}</script></con:config></con:testStep><con:testStep type="datasink" name="DataSink" disabled="true"><con:settings/><con:config xsi:type="con:DataSinkStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSink type="Groovy"><con:configuration><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("GET - getExtensions - xml#Response");

List aliasList = holder.getNodeValues("declare namespace ns1=\'http://docs.openstack.org/common/api/v1.0\'; //ns1:extensions[1]/ns1:extension/@alias")
log.info aliasList

for(item in 0..aliasList.size()-1)
{
	log.info aliasList[item]	
	value = aliasList[item]
	testRunner.testCase.testSteps["DataSink"].setPropertyValue("alias"+item, value )
}</script></con:configuration></con:dataSink><con:properties><con:property><con:name>alias0</con:name><con:value>RS-PIE</con:value></con:property><con:property><con:name>alias1</con:name><con:value>RS-CBS</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="GET - getExtension - alias" disabled="true"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/extensions/{alias}" methodName="GET - getExtension" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getExtension - alias" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="alias" value="${DataSink#alias0}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Default Groups" searchProperties="true" id="cf4488d2-8fa4-4e3b-bc55-8db3833976ec" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="POST  - auth Token - -xml"><con:settings/><con:config service="identity admin" resourcePath="/${#Project#pathv2.0}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST  - auth Token - -xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#Project#authpass}" username="${#Project#authuser}"/>
&lt;/auth>
</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store auth"><con:settings/><con:config><script>def authTokenId = context.expand( '${POST  - auth Token - -xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info authTokenId
testRunner.testCase.setPropertyValue("authTokenId", authTokenId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST  - Create User Admin w/UA - xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users" methodName="POST - createUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST  - Create User Admin w/UA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.support.editor.views.xml.form2.FormEditorView@ViewType">All</con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:user enabled="true" id="${#TestCase#UAusername}" key="${#TestCase#UAkey}" mossoId="${#TestCase#UAmossoId}" nastId="${#TestCase#UAnastId}" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="201 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#Project#authuser}</con:username><con:password>${#Project#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticateUserAdmin - xml"><con:settings/><con:config service="identity admin" resourcePath="/${#Project#pathv2.0}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticateUserAdmin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0"> &lt;apiKeyCredentials apiKey="${#TestCase#UAkey}" username="${#TestCase#UAusername}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/> &lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store UA"><con:settings/><con:config><script>def userId = context.expand( '${POST - authenticateUserAdmin - xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/@id}' )

def UAtokenId = context.expand( '${POST - authenticateUserAdmin - xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )

def nastId = context.expand( '${POST  - Create User Admin w/UA - xml#ResponseAsXml#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:user[1]/@nastId}' )
log.info nastId
log.info userId
log.info UAtokenId
testRunner.testCase.setPropertyValue("UAuserId", userId)
testRunner.testCase.setPropertyValue("UANastId", nastId)
testRunner.testCase.setPropertyValue("UAtokenId", UAtokenId)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - AsServiceAdminGetUserAdminGroups - 200 - xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/groups" methodName="GET - getUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - AsServiceAdminGetUserAdminGroups - 200 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Default</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#Project#authuser}</con:username><con:password>${#Project#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#UAusername}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - AsServiceAdminGetUserAdminGroups - 200 - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/groups" methodName="GET - getUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - AsServiceAdminGetUserAdminGroups - 200 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Default</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#Project#authuser}</con:username><con:password>${#Project#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#UAusername}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - createGroup -xml"><con:settings/><con:config service="RAX-GRPADM" resourcePath="/${#Project#pathv2.0}/RAX-GRPADM/groups" methodName="Add a New Group - addGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createGroup -xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;group name="testGroup34" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">
&lt;description>Creating a new group testGroup1&lt;/description>
&lt;/group></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==201</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0';
//ns1:group[1]/@name</path><content>testGroup34</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username/><con:password/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#authTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - createGroup - json"><con:settings/><con:config service="RAX-GRPADM" resourcePath="/${#Project#pathv2.0}/RAX-GRPADM/groups" methodName="Add a New Group - addGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createGroup - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-KSGRP:group": {
"name" : "testGroup44",
"description" : "Creating a new group testGroup2"
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==201</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>testGroup44</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#Project#authuser}</con:username><con:password>${#Project#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#authTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store Groups"><con:settings/><con:config><script>def groupId1 = context.expand( '${POST - createGroup -xml#ResponseAsXml#declare namespace ns1=\'http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0\'; //ns1:group[1]/@id}' )
def groupId2 = context.expand( '${POST - createGroup - json#ResponseAsXml}' )
log.info groupId2
def groupIdJson = groupId2 =~ /&lt;id>(.*)&lt;\\/id>/
log.info "group Id1: " + groupId1

log.info "group Id2: " +  groupIdJson[0][1]
testRunner.testCase.setPropertyValue("groupId1", groupId1)
testRunner.testCase.setPropertyValue("groupId2", groupIdJson[0][1])</script></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addUserAdmintoGroup - xml"><con:settings/><con:config service="RAX-GRPADM" resourcePath="/${#Project#pathv2.0}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Add User to Group - addUserToGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addUserAdmintoGroup - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestCase#groupId1}"/>
  <con:entry key="userId" value="${#TestCase#UAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#authTokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addUserAdmintoGroup - json"><con:settings/><con:config service="RAX-GRPADM" resourcePath="/${#Project#pathv2.0}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Add User to Group - addUserToGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addUserAdmintoGroup - json" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestCase#groupId2}"/>
  <con:entry key="userId" value="${#TestCase#UAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#authTokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - AsServiceAdminGetUserAdminGroups /w Group - 200 - xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/groups" methodName="GET - getUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - AsServiceAdminGetUserAdminGroups /w Group - 200 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>testGroup34</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>testGroup34</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#Project#authuser}</con:username><con:password>${#Project#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#UAusername}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - AsServiceAdminGetUserAdminGroups /w Group - 200 - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/groups" methodName="GET - getUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - AsServiceAdminGetUserAdminGroups /w Group - 200 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>testGroup34</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>testGroup34</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#Project#authuser}</con:username><con:password>${#Project#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#UAusername}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE removeUserAdminfromGroup - xml"><con:settings/><con:config service="RAX-GRPADM" resourcePath="/${#Project#pathv2.0}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Remove User From Group - removeUserFromGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE removeUserAdminfromGroup - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestCase#groupId1}"/>
  <con:entry key="userId" value="${#TestCase#UAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#authTokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE removeUserAdminfromGroup - json"><con:settings/><con:config service="RAX-GRPADM" resourcePath="/${#Project#pathv2.0}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Remove User From Group - removeUserFromGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE removeUserAdminfromGroup - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestCase#groupId2}"/>
  <con:entry key="userId" value="${#TestCase#UAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#authTokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - AsServiceAdminGetUserAdminGroups /w Default - 200 - xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/groups" methodName="GET - getUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - AsServiceAdminGetUserAdminGroups /w Default - 200 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Default</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#Project#authuser}</con:username><con:password>${#Project#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#UAusername}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - AsServiceAdminGetUserAdminGroups /w Default - 200 - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/groups" methodName="GET - getUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - AsServiceAdminGetUserAdminGroups /w Default - 200 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Default</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#Project#authuser}</con:username><con:password>${#Project#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#UAusername}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE delete group - xml"><con:settings/><con:config service="RAX-GRPADM" resourcePath="/${#Project#pathv2.0}/RAX-GRPADM/groups/{groupId}" methodName="Delete Group - deleteGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE delete group - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestCase#groupId1}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#authTokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE delete group - json"><con:settings/><con:config service="RAX-GRPADM" resourcePath="/${#Project#pathv2.0}/RAX-GRPADM/groups/{groupId}" methodName="Delete Group - deleteGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE delete group - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestCase#groupId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#authTokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteUserAdmin - xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteUserAdmin - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#UAusername}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>UAusername</con:name><con:value>defautGroupUserAdmin</con:value></con:property><con:property><con:name>UAkey</con:name><con:value>0f97f489c848438090250d50c7e1ea88</con:value></con:property><con:property><con:name>UAmossoId</con:name><con:value>5800184</con:value></con:property><con:property><con:name>UAnastId</con:name><con:value>StagingUS_9b651bf5-1143-4b7d-b61d-46231c698809</con:value></con:property><con:property><con:name>UAuserId</con:name><con:value>199195</con:value></con:property><con:property><con:name>UAtokenId</con:name><con:value>461c8f31-51ed-475d-bddb-5656dba778fa</con:value></con:property><con:property><con:name>authTokenId</con:name><con:value>1319b190-9527-46e7-9c0e-4fc3ca032e57</con:value></con:property><con:property><con:name>groupId1</con:name><con:value>3765</con:value></con:property><con:property><con:name>groupId2</con:name><con:value>3773</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:properties><con:property><con:name>username</con:name><con:value>usrandomtest1</con:value></con:property><con:property><con:name>password</con:name><con:value>Password1</con:value></con:property><con:property><con:name>MossoId</con:name><con:value>5800381</con:value></con:property><con:property><con:name>NastId</con:name><con:value>StagingUS_64fb8854-a439-44d3-82a8-7a99146bc6f9</con:value></con:property><con:property><con:name>key</con:name><con:value>ba04b108b7cefcbcbf7c4d8bd05e3857</con:value></con:property><con:property><con:name>tokenId</con:name><con:value>e84fb288-aa90-46d5-a6b4-161ac58af53e</con:value></con:property><con:property><con:name>authuser</con:name><con:value>auth</con:value></con:property><con:property><con:name>authpass</con:name><con:value>auth123</con:value></con:property><con:property><con:name>X-Public-Url</con:name><con:value/></con:property><con:property><con:name>X-Internal-Url</con:name><con:value/></con:property><con:property><con:name>Service-Name</con:name><con:value/></con:property><con:property><con:name>Region</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="Functional - Regression"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="createUser" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="f231f186-d059-4f3c-a5f4-7a27e307011b"><con:settings/><con:testStep type="properties" name="Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>username2</con:name><con:value>negtest81</con:value></con:property><con:property><con:name>password2</con:name><con:value>Password81</con:value></con:property><con:property><con:name>key2</con:name><con:value>0f97f489c848438090250d50c7e1ea88</con:value></con:property><con:property><con:name>enabled</con:name><con:value>true</con:value></con:property><con:property><con:name>MossoId</con:name><con:value>5703568</con:value></con:property><con:property><con:name>NastId</con:name><con:value>MossoCloudFS_cbd0fc57-88a3-4be2-ba24-75b7fe980401</con:value></con:property><con:property><con:name>invaliduser</con:name><con:value>jennyv3</con:value></con:property><con:property><con:name>invalidpwd</con:name><con:value>pwd123</con:value></con:property><con:property><con:name>MossoId2</con:name><con:value>123456</con:value></con:property><con:property><con:name>tokenID</con:name><con:value>71786f27-7e1a-44fc-bd09-b91140ba2068</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="properties" name="Properties2"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>username2</con:name><con:value>authtest2</con:value></con:property><con:property><con:name>password2</con:name><con:value>Password2</con:value></con:property><con:property><con:name>key2</con:name><con:value>66a4d306379c1a54ac97aeb4684bae92</con:value></con:property><con:property><con:name>status2</con:name><con:value>active</con:value></con:property><con:property><con:name>MossoId2</con:name><con:value>5701237</con:value></con:property><con:property><con:name>username3</con:name><con:value>authtest3</con:value></con:property><con:property><con:name>password3</con:name><con:value>Password3</con:value></con:property><con:property><con:name>key3</con:name><con:value>6436d5b5f9febcf36393882083b2af84</con:value></con:property><con:property><con:name>status3</con:name><con:value>delinquent</con:value></con:property><con:property><con:name>MossoId3</con:name><con:value>5701238</con:value></con:property><con:property><con:name>username4</con:name><con:value>authtest4</con:value></con:property><con:property><con:name>password4</con:name><con:value>Password4</con:value></con:property><con:property><con:name>key4</con:name><con:value>faae7f485d4e642427abe98a59f85f01</con:value></con:property><con:property><con:name>status4</con:name><con:value>unverified</con:value></con:property><con:property><con:name>MossoId4</con:name><con:value>5701239</con:value></con:property><con:property><con:name>username5</con:name><con:value>authtest5</con:value></con:property><con:property><con:name>password5</con:name><con:value>Password5</con:value></con:property><con:property><con:name>key5</con:name><con:value>081b7be2453b24b92ac02fd190015ffd</con:value></con:property><con:property><con:name>status5</con:name><con:value>suspended</con:value></con:property><con:property><con:name>MossoId5</con:name><con:value>5701240</con:value></con:property><con:property><con:name>username6</con:name><con:value>authtest6</con:value></con:property><con:property><con:name>password6</con:name><con:value>Password6</con:value></con:property><con:property><con:name>key6</con:name><con:value>71f7b5382bdfdb77a6aa383e787058c5</con:value></con:property><con:property><con:name>status6</con:name><con:value>denied</con:value></con:property><con:property><con:name>MossoId6</con:name><con:value>5701241</con:value></con:property><con:property><con:name>username7</con:name><con:value>authtest7</con:value></con:property><con:property><con:name>password7</con:name><con:value>Password7</con:value></con:property><con:property><con:name>key7</con:name><con:value>73bb409189f71cb74013c8cef8fa47f0</con:value></con:property><con:property><con:name>status7</con:name><con:value>closed</con:value></con:property><con:property><con:name>MossoId7</con:name><con:value>5701242</con:value></con:property><con:property><con:name>username8</con:name><con:value>authtest8</con:value></con:property><con:property><con:name>password8</con:name><con:value>Password8</con:value></con:property><con:property><con:name>key8</con:name><con:value>8a7384e1484c181245ff7b0bf15dc3c4</con:value></con:property><con:property><con:name>status8</con:name><con:value>pending_approval</con:value></con:property><con:property><con:name>MossoId8</con:name><con:value>5701243</con:value></con:property><con:property><con:name>enabled</con:name><con:value>true</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="POST - createUser"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users" methodName="POST - createUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createUser" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.support.editor.views.xml.form2.FormEditorView@ViewType">All</con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:user created="" enabled="true" id="${#TestSuite#username}" key="${#TestSuite#key}" mossoId="${#TestSuite#MossoId}" nastId="${#TestSuite#nastId}" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="201 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUser"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUser" mediaType="application/xml" accept="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:credentials xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUser - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUser - json" mediaType="application/xml" accept="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:credentials xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"user":{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>"id":"usrandomtest2"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store nastId"><con:settings/><con:config><script>def getNastId = context.expand( '${GET - getUser#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:user[1]/@nastId}' )
log.info "get nast ID - " + getNastId
testRunner.testCase.testSuite.setPropertyValue("NastId", getNastId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - user-key authenticate - xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - user-key authenticate - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;credentials key="${#TestSuite#key}" username="${#TestSuite#username}" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - user-key authentication - XML Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@id]" disabled="true"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:auth[1]/ns1:token[1]/@id</path><content>${#TestSuite#tokenId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="storeToken - XML"><con:settings/><con:config><script>def tokenIDResp = context.expand( '${POST - user-key authenticate - xml#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:auth[1]/ns1:token[1]/@id}' )

testRunner.testCase.testSteps.Properties.setPropertyValue("tokenID",tokenIDResp);
testRunner.testCase.testSuite.setPropertyValue("tokenId",tokenIDResp);

//def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
//def holder = groovyUtils.getXmlHolder("POST - authenticate#Response")

//List dataList = holder.getNodeValues("//ns1:auth[1]/ns1:serviceCatalog[1]/ns1:service/ns1:endpoint[1]/@publicURL")

def getServiceName = context.expand( '${POST - user-key authenticate - xml#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:auth[1]/ns1:serviceCatalog[1]/ns1:service[@name="${serviceName}"]/@name}' )
def internalURL = context.expand( '${POST - user-key authenticate - xml#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:auth[1]/ns1:serviceCatalog[1]/ns1:service[@name="${serviceName}"]/ns1:endpoint[@region="${region}"]/@internalURL}' )
def publicURL = context.expand( '${POST - user-key authenticate - xml#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:auth[1]/ns1:serviceCatalog[1]/ns1:service[@name="${serviceName}"]/ns1:endpoint[@region="${region}"]/@publicURL}' )
def region = context.expand( '${POST - user-key authenticate - xml#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:auth[1]/ns1:serviceCatalog[1]/ns1:service[@name="${serviceName}"]/ns1:endpoint[@region="${region}"]/@region}' )
//List dataList = holder.getNodeValues("//ns1:auth[1]/ns1:serviceCatalog[1]/ns1:service[@name='${serviceName}]/ns1:endpoint[@region='${region}']")

//def internalURL= dataList.get(0);
//def publicURL = dataList.get(1);

testRunner.testCase.testSuite.setPropertyValue("X-Public-Url", publicURL)
testRunner.testCase.testSuite.setPropertyValue("X-Internal-Url", internalURL)
testRunner.testCase.testSuite.setPropertyValue("Service-Name", getServiceName)
testRunner.testCase.testSuite.setPropertyValue("Region", region)

</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Mosso authenticate - XML"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Mosso authenticate - XML" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;mossoCredentials key="${#TestSuite#key}" mossoId="${#TestSuite#MossoId}" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="200 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - Mosso authentication - XML Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@id]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:auth[1]/ns1:token[1]/@id</path><content>${#TestSuite#tokenId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Nast authenticate - XML"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Nast authenticate - XML" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;nastCredentials key="${#TestSuite#key}" nastId="${#TestSuite#NastId}" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="200 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - Nast authentication - XML Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - XML" disabled="true"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - XML" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;passwordCredentials password="${#TestSuite#password}" username="${#TestSuite#username}" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="200 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - createUser - neg 409"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users" methodName="POST - createUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createUser - neg 409" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:user enabled="true" id="${#TestSuite#username}" key="${#TestSuite#key}" mossoId="${#TestSuite#mossoId}" nastId="${#TestSuite#nastId}" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="409 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 409</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - createUser - neg 400"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users" methodName="POST - createUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createUser - neg 400" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:user enabled="${Properties#enabled}" id="dumi" key="${Properties#key}" mossoId="${#TestSuite#MossoId}" nastId="${Properties#nastId}" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="400 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:badRequest[1]/ns1:message[1]/text()</path><content>User with Mosso Account ID: ${#TestSuite#MossoId} already exists.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store info" disabled="true"><con:settings/><con:config><script>//get NastId
def nastId = context.expand( '${POST - createUser#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:user[1]/@nastId}' )
def mossoId = context.expand( '${POST - createUser#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:user[1]/@mossoId}' )
def token = context.expand( '${POST - user-key authenticate - xml#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:auth[1]/ns1:token[1]/@id}' )

testRunner.testCase.testSuite.setPropertyValue("NastId", nastId)
testRunner.testCase.testSuite.setPropertyValue("MossoId", mossoId)
testRunner.testCase.testSuite.setPropertyValue("tokenId", token)</script></con:config></con:testStep><con:testStep type="restrequest" name="Copy of POST - createUser" disabled="true"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users" methodName="POST - createUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of POST - createUser" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.support.editor.views.xml.form2.FormEditorView@ViewType">All</con:setting></con:settings><con:endpoint>${#TestSuite#UKEndpoint}</con:endpoint><con:request>&lt;v1:user enabled="true" id="authtest1" key="${#TestSuite#key}" mossoId="5701106" nastId="MossoCloudFS_e04f64b6-5790-4ccb-af90-fc2410810b1e " xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="201 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Copy of store info" disabled="true"><con:settings/><con:config><script>//get NastId
//def nastId = context.expand( '${POST - createUser#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:user[1]/@nastId}' )
//def mossoId = context.expand( '${POST - createUser#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:user[1]/@mossoId}' )
//def token = context.expand( '${POST - user-key authenticate - xml#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:auth[1]/ns1:token[1]/@id}' )
def username = context.expand( '${Copy of POST - createUser#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:user[1]/@id}' )
def key = context.expand( '${Copy of POST - createUser#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:user[1]/@key}' )
def nastId = context.expand( '${Copy of POST - createUser#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:user[1]/@nastId}' )
def mossoId = context.expand( '${Copy of POST - createUser#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:user[1]/@mossoId}' )

testRunner.testCase.testSteps['save properties'].setPropertyValue("username", username)
testRunner.testCase.testSteps['save properties'].setPropertyValue("key", key)
testRunner.testCase.testSteps['save properties'].setPropertyValue("NastId", nastId)
testRunner.testCase.testSteps['save properties'].setPropertyValue("MossoId", mossoId)
//testRunner.testCase.testSteps['save properties'].setPropertyValue("tokenId", token)</script></con:config></con:testStep><con:testStep type="properties" name="save properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>username</con:name><con:value>authtest1</con:value></con:property><con:property><con:name>key</con:name><con:value>prodtest12345</con:value></con:property><con:property><con:name>NastId</con:name><con:value>MossoCloudFS_6078bbf5-6868-4e5a-9e5d-06108695c63d</con:value></con:property><con:property><con:name>MossoId</con:name><con:value>5701106</con:value></con:property></con:properties></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="updateUser" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="c93d219f-8653-48ab-9d0d-1d10c63b1647"><con:settings/><con:testStep type="restrequest" name="GET - getUser"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUser" mediaType="application/xml" accept="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:credentials xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>updateUserXml</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>GET - getUser</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>PUT - updateUser - xml</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>updateUserRestoreXml</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>GET - getUser</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>PUT - updateUser - restore user - xml</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="store baseUrl" disabled="true"><con:settings/><con:config><script>def urls = context.expand( '${GET - getUser#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:user[1]/ns1:baseURLRefs[1]}' )
def req = context.expand( '${PUT - updateUser - xml#Request#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:user[1]/ns1:baseURLRefs[1]}' )
log.info req.getClass().getName()
req.setValue(urls)</script></con:config></con:testStep><con:testStep type="restrequest" name="PUT - updateUser - xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="PUT - updateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<user id="usrandomtest2" mossoId="5800388" nastId="StagingUS_0d57926a-d1f1-4b8d-ab17-d2708efcf6d8" key="ba04b108b7cefcbcbf7c4d8bd05e3857" enabled="true" created="2012-08-02T14:33:26.000-05:00" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1">
   <baseURLRefs>
      <baseURLRef id="11" href="https://auth.staging.us.ccp.rackspace.net/v1.1/baseURLs/11" v1Default="false"/>
      <baseURLRef id="109" href="https://auth.staging.us.ccp.rackspace.net/v1.1/baseURLs/109" v1Default="true"/>
      <baseURLRef id="17" href="https://auth.staging.us.ccp.rackspace.net/v1.1/baseURLs/17" v1Default="true"/>
      <baseURLRef id="83" href="https://auth.staging.us.ccp.rackspace.net/v1.1/baseURLs/83" v1Default="true"/>
      <baseURLRef id="113" href="https://auth.staging.us.ccp.rackspace.net/v1.1/baseURLs/113" v1Default="true"/>
      <baseURLRef id="3" href="https://auth.staging.us.ccp.rackspace.net/v1.1/baseURLs/3" v1Default="true"/>
      <baseURLRef id="66" href="https://auth.staging.us.ccp.rackspace.net/v1.1/baseURLs/66" v1Default="true"/>
      <baseURLRef id="7" href="https://auth.staging.us.ccp.rackspace.net/v1.1/baseURLs/7" v1Default="false"/>
      <baseURLRef id="120" href="https://auth.staging.us.ccp.rackspace.net/v1.1/baseURLs/120" v1Default="false"/>
      <baseURLRef id="15" href="https://auth.staging.us.ccp.rackspace.net/v1.1/baseURLs/15" v1Default="true"/>
      <baseURLRef id="9" href="https://auth.staging.us.ccp.rackspace.net/v1.1/baseURLs/9" v1Default="true"/>
   </baseURLRefs>
</user>]]></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="delay"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>body1</con:name><con:sourceType>updateUserJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>PUT - updateUser - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" transferToAll="false" entitize="false" ignoreEmpty="false" useXQuery="false"><con:name>body2</con:name><con:sourceType>updateUser404Json</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>PUT - updateUser - neg 404 - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>body3</con:name><con:sourceType>updateUser405Json</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>PUT updateUsr JSON</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body4</con:name><con:sourceType>updateUser400Json</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>PUT - updateUser - 400 no userid - json</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUser - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUser - json" mediaType="application/xml" accept="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:credentials xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"user":{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>"id":"usrandomtest2"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store baseUrlJson"><con:settings/><con:config><script>def jsonresp = context.expand( '${GET - getUser - json#Response}' )
log.info jsonresp
def idx1 = jsonresp.indexOf("baseURLRefs");
def idx2 = jsonresp.indexOf("key");
testRunner.testCase.setPropertyValue("baseUrlJson",jsonresp.substring(idx1+15,idx2-4));
</script></con:config></con:testStep><con:testStep type="restrequest" name="PUT - updateUser - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="PUT - updateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateUser - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "user" : {   "id" : "${Properties#username}",   "enabled": true, "key" : "${#TestSuite#key}",   "mossoId" : 5800386,   "nastId" : "testNastID_123456789" , "baseURLRefs" : [{${#TestCase#baseUrlJson}}]}}</con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"user":{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="properties" name="Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>username</con:name><con:value>cmarin1</con:value></con:property><con:property><con:name>password</con:name><con:value>Password1</con:value></con:property><con:property><con:name>dummi</con:name><con:value>test0000</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="PUT - updateUser XML"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="PUT - updateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateUser XML" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:user enabled="true" id="${Properties#username}" key="11111111222222223333333333" mossoId="5800532" nastId="TestingNastID1234" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${Properties#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT updateUsr JSON"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="PUT - updateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT updateUsr JSON" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "user" : {   "id" : "${Properties#username}",   "key" : "11111111222222223333333333",   "mossoId" : "10203040",   "nastId" : "TestingNastID1234"   "enabled" : true  } }</con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${Properties#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - updateUser - neg 404"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="PUT - updateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateUser - neg 404" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:user enabled="true" id="${Properties#dummi}" key="" mossoId="" nastId="TestingNastID1234" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${Properties#dummi}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - updateUser - neg 404 - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="PUT - updateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateUser - neg 404 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "user" : {   "id" : "${Properties#dummi}",   "key" : "11111111222222223333333333",   "mossoId" : "123456",   "nastId" : "TestingNastID1234"   "enabled" : true  } }</con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${Properties#dummi}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - updateUser - 400 no userid"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="PUT - updateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateUser - 400 no userid" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:user xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User Id can not be null.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - updateUser - 400 no userid - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="PUT - updateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateUser - 400 no userid - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "user" : {    } }</con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User Id can not be null.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${Properties#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - updateUser - restore user - xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="PUT - updateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateUser - restore user - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<user id="usrandomtest2" mossoId="5800388" nastId="StagingUS_0d57926a-d1f1-4b8d-ab17-d2708efcf6d8" key="ba04b108b7cefcbcbf7c4d8bd05e3857" enabled="true" created="2012-08-02T14:33:26.000-05:00" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1">
   <baseURLRefs>
      <baseURLRef id="11" href="https://auth.staging.us.ccp.rackspace.net/v1.1/baseURLs/11" v1Default="false"/>
      <baseURLRef id="109" href="https://auth.staging.us.ccp.rackspace.net/v1.1/baseURLs/109" v1Default="true"/>
      <baseURLRef id="17" href="https://auth.staging.us.ccp.rackspace.net/v1.1/baseURLs/17" v1Default="true"/>
      <baseURLRef id="83" href="https://auth.staging.us.ccp.rackspace.net/v1.1/baseURLs/83" v1Default="true"/>
      <baseURLRef id="113" href="https://auth.staging.us.ccp.rackspace.net/v1.1/baseURLs/113" v1Default="true"/>
      <baseURLRef id="3" href="https://auth.staging.us.ccp.rackspace.net/v1.1/baseURLs/3" v1Default="true"/>
      <baseURLRef id="66" href="https://auth.staging.us.ccp.rackspace.net/v1.1/baseURLs/66" v1Default="true"/>
      <baseURLRef id="7" href="https://auth.staging.us.ccp.rackspace.net/v1.1/baseURLs/7" v1Default="false"/>
      <baseURLRef id="120" href="https://auth.staging.us.ccp.rackspace.net/v1.1/baseURLs/120" v1Default="false"/>
      <baseURLRef id="15" href="https://auth.staging.us.ccp.rackspace.net/v1.1/baseURLs/15" v1Default="true"/>
      <baseURLRef id="9" href="https://auth.staging.us.ccp.rackspace.net/v1.1/baseURLs/9" v1Default="true"/>
   </baseURLRefs>
</user>]]></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>updateUserJson</con:name><con:value>{ "user" : {   "id" : "${Properties#username}",   "enabled": true, "key" : "${#TestSuite#key}",   "mossoId" : 5800386,   "nastId" : "testNastID_123456789" , "baseURLRefs" : [{${#TestCase#baseUrlJson}}]}}</con:value></con:property><con:property><con:name>updateUser404Json</con:name><con:value>{ "user" : {   "id" : "${Properties#dummi}",   "key" : "11111111222222223333333333",   "mossoId" : "123456",   "nastId" : "TestingNastID1234"   "enabled" : true  } }</con:value></con:property><con:property><con:name>updateUser405Json</con:name><con:value>{ "user" : {   "id" : "${Properties#username}",   "key" : "11111111222222223333333333",   "mossoId" : "10203040",   "nastId" : "TestingNastID1234"   "enabled" : true  } }</con:value></con:property><con:property><con:name>updateUser400Json</con:name><con:value>{ "user" : {    } }</con:value></con:property><con:property><con:name>href</con:name><con:value>https://auth.staging.ord1.us.ccp.rackspace.net/v1.1/baseURLs/3</con:value></con:property><con:property><con:name>id</con:name><con:value>3</con:value></con:property><con:property><con:name>v1Default</con:name><con:value>true</con:value></con:property><con:property><con:name>ujson</con:name><con:value>"id":3,"v1Default":true,"href":"https:\/\/auth.staging.ord1.us.ccp.rackspace.net\/v1.1\/baseURLs\/3"},{"id":109,"href":"https:\/\/auth.staging.ord1.us.ccp.rackspace.net\/v1.1\/baseURLs\/109"},{"id":104,"v1Default":true,"href":"https:\/\/auth.staging.ord1.us.ccp.rackspace.net\/v1.1\/baseURLs\/104"},{"id":11,"v1Default":true,"href":"https:\/\/auth.staging.ord1.us.ccp.rackspace.net\/v1.1\/baseURLs\/11"},{"id":15,"v1Default":true,"href":"https:\/\/auth.staging.ord1.us.ccp.rackspace.net\/v1.1\/baseURLs\/15"},{"id":17,"v1Default":true,"href":"https:\/\/auth.staging.ord1.us.ccp.rackspace.net\/v1.1\/baseURLs\/17"},{"id":83,"v1Default":true,"href":"https:\/\/auth.staging.ord1.us.ccp.rackspace.net\/v1.1\/baseURLs\/83"</con:value></con:property><con:property><con:name>baseUrlJson</con:name><con:value>"id":83,"v1Default":true,"href":"https:\/\/auth.staging.us.ccp.rackspace.net\/v1.1\/baseURLs\/83"},{"id":66,"v1Default":true,"href":"https:\/\/auth.staging.us.ccp.rackspace.net\/v1.1\/baseURLs\/66"},{"id":11,"href":"https:\/\/auth.staging.us.ccp.rackspace.net\/v1.1\/baseURLs\/11"},{"id":15,"v1Default":true,"href":"https:\/\/auth.staging.us.ccp.rackspace.net\/v1.1\/baseURLs\/15"},{"id":120,"href":"https:\/\/auth.staging.us.ccp.rackspace.net\/v1.1\/baseURLs\/120"},{"id":17,"v1Default":true,"href":"https:\/\/auth.staging.us.ccp.rackspace.net\/v1.1\/baseURLs\/17"},{"id":9,"v1Default":true,"href":"https:\/\/auth.staging.us.ccp.rackspace.net\/v1.1\/baseURLs\/9"},{"id":3,"v1Default":true,"href":"https:\/\/auth.staging.us.ccp.rackspace.net\/v1.1\/baseURLs\/3"},{"id":113,"v1Default":true,"href":"https:\/\/auth.staging.us.ccp.rackspace.net\/v1.1\/baseURLs\/113"},{"id":109,"v1Default":true,"href":"https:\/\/auth.staging.us.ccp.rackspace.net\/v1.1\/baseURLs\/109"},{"id":7,"href":"https:\/\/auth.staging.us.ccp.rackspace.net\/v1.1\/baseURLs\/7"</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getUser" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="5e6fd1c0-63e2-4424-8bdd-e00f226bbc01"><con:settings/><con:testStep type="transfer" name="Property Transfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>body1</con:name><con:sourceType>setUserEnabledJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>PUT - setUserEnabled - json</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUser"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUser" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store user info" disabled="true"><con:settings/><con:config><script>//get NastID
def nastId = context.expand( '${GET - getUser#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:user[1]/@nastId}' )
//get MossoID
def mossoId = context.expand( '${GET - getUser#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:user[1]/@mossoId}' )
log.info nastId
log.info mossoId
//store in testsuite properties
testRunner.testCase.testSuite.setPropertyValue("NastId", nastId)
testRunner.testCase.testSuite.setPropertyValue("MossoId", mossoId)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUser - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUser - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="properties" name="Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>username</con:name><con:value>cmarin2</con:value></con:property><con:property><con:name>password</con:name><con:value>Password2</con:value></con:property><con:property><con:name>dummi</con:name><con:value>test0000</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUser - neg 401"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUser - neg 401" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>You are not authorized to access this resource.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUser - neg 401 - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUser - neg 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"unauthorized":{"message":"You are not authorized to access this resource.","details":"AuthErrorHandler","code":401}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - setUserDisabled"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/enabled" methodName="PUT - setUserEnabled" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - setUserDisabled" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;user enabled="false" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="200 Response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@enabled]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@enabled</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUser - neg 403" disabled="true"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUser - neg 403" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUser - neg 404"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUser - neg 404" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${Properties#dummi}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUser - neg 404 - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUser - neg 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"itemNotFound":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${Properties#dummi}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - setUserEnabled - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/enabled" methodName="PUT - setUserEnabled" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - setUserEnabled - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"user":{"enabled":true}}</con:request><con:assertion type="GroovyScriptAssertion" name="200 Response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@enabled]"><con:configuration><path>declare namespace ns1='${#Project#EndpointJson}/${#Project#path}/users/usrandomtest2/enabled';
//ns1:Response[1]/ns1:user[1]/ns1:enabled[1]</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>setUserEnabledJson</con:name><con:value>{"user":{"enabled":true}}</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="enableUser" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="7544957e-512c-4c7b-9fd2-9587e81cafea"><con:settings/><con:testStep type="restrequest" name="GET - getUserEnabled"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/enabled" methodName="GET - getUserEnabled" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUserEnabled" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUserEnabled - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/enabled" methodName="GET - getUserEnabled" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUserEnabled - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - setUserEnabled"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/enabled" methodName="PUT - setUserEnabled" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - setUserEnabled" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;user enabled="true" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@enabled]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@enabled</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - setUserDisabled"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/enabled" methodName="PUT - setUserEnabled" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - setUserDisabled" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;user enabled="false" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="200 Response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@enabled]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@enabled</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - setUserEnabled - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/enabled" methodName="PUT - setUserEnabled" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - setUserEnabled - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;user enabled="true" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [enabled]" disabled="true"><con:configuration><path>declare namespace ns1='http://172.17.16.57/v1.1.1/users/cmarin2/enabled';
//ns1:Response[1]/ns1:user[1]/ns1:enabled[1]/text()</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [enabled]" disabled="true"><con:configuration><path>declare namespace ns1='http://172.17.16.57/v1.1.2/users/authtest2/enabled';
//ns1:Response[1]/ns1:user[1]/ns1:enabled[1]/text()</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="verify enable staging [enabled]" disabled="true"><con:configuration><path>declare namespace ns1='https://auth.staging.us.ccp.rackspace.net/v1.1/users/authtest2/enabled';
//ns1:Response[1]/ns1:user[1]/ns1:enabled[1]/text()</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - setUserDisabled - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/enabled" methodName="PUT - setUserEnabled" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - setUserDisabled - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;user enabled="false" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="200 Response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [enabled]" disabled="true"><con:configuration><path>declare namespace ns1='http://172.17.16.57/v1.1.1/users/cmarin2/enabled';
//ns1:Response[1]/ns1:user[1]/ns1:enabled[1]/text()</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [enabled]" disabled="true"><con:configuration><path>declare namespace ns1='https://auth.staging.us.ccp.rackspace.net/v1.1/users/authtest2/enabled';
//ns1:Response[1]/ns1:user[1]/ns1:enabled[1]/text()</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUserEnabled - false"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/enabled" methodName="GET - getUserEnabled" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUserEnabled - false" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@enabled]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@enabled</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUserEnabled - neg 401"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/enabled" methodName="GET - getUserEnabled" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUserEnabled - neg 401" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:credentials><con:username/><con:password/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUserEnabled - neg 404"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/enabled" methodName="GET - getUserEnabled" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUserEnabled - neg 404" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:itemNotFound[1]/ns1:message[1]/text()</path><content>User not found: testfoo1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="testfoo1" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - setUserDisabled - neg 405"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/enabled" methodName="PUT - setUserEnabled" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - setUserDisabled - neg 405" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;user enabled="false" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="Response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 405</scriptText></con:configuration></con:assertion><con:credentials><con:username/><con:password/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - setUserEnabled - back"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/enabled" methodName="PUT - setUserEnabled" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - setUserEnabled - back" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;user enabled="true" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@enabled]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@enabled</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getUserKey" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="ed913f0d-81f0-40a8-b1d6-a7e237b6cb69"><con:settings/><con:testStep type="restrequest" name="GET - getUserKey - xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/key" methodName="GET - getUserKey" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUserKey - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUserKey - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/key" methodName="GET - getUserKey" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUserKey - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUserKey - neg 401"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/key" methodName="GET - getUserKey" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUserKey - neg 401" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:credentials><con:username/><con:password/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUserKey - neg 404"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/key" methodName="GET - getUserKey" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUserKey - neg 404" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:itemNotFound[1]/ns1:message[1]/text()</path><content>User not found: testfoo1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="testfoo1" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store User Key" disabled="true"><con:settings/><con:config><script>//get userkey
def key = context.expand( '${GET - getUserKey - xml#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:user[1]/@key}' )
//def jsonKey = context.expand( '${GET - getUserKey - json#ResponseAsXml#declare namespace ns1=\'${#Project#WorkaroundEndpoint}/v1.1.1/users/cmarin1/key\'; //ns1:Response[1]/ns1:user[1]/ns1:key[1]}' )
def jsonKey = context.expand( '${GET - getUserKey - json#ResponseAsXml#declare namespace ns1=\'http://172.17.16.57/v1.1.1/users/cmarin1/key\'; //ns1:Response[1]/ns1:user[1]/ns1:key[1]}' )


//if (key == jsonKey)
//{
//	assert true
//}
//else assert false

testRunner.testCase.testSuite.setPropertyValue("key", key);
log.info "Key:" + key
log.info "json Key:" + jsonKey</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="setUserKey" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="6b0427fa-6363-4947-8678-bdbced8791ac"><con:settings/><con:testStep type="properties" name="Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>newKey</con:name><con:value>asdasdasd-adsasdads-asdasdasd-adsasdads</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>body1</con:name><con:sourceType>setUserKeyJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>PUT - setUserKey - key - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body2</con:name><con:sourceType>setUserKeyJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>PUT - setUserKey - key - json - 405</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body3</con:name><con:sourceType>setUserKeyJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>PUT - setUserKey - key - json - 404</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body4</con:name><con:sourceType>setUserNewKeyJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>PUT - setUserKey - newkey - json</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="PUT - setUserKey - newkey - xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/key" methodName="PUT - setUserKey" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - setUserKey - newkey - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;user key="${Properties#newKey}" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@key]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@key</path><content>${Properties#newKey}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - setUserKey - key - xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/key" methodName="PUT - setUserKey" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - setUserKey - key - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;user key="${#TestSuite#key}" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@key]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@key</path><content>${#TestSuite#key}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - setUserKey - newkey - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/key" methodName="PUT - setUserKey" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - setUserKey - newkey - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "user" : {   "key" : "${Properties#newKey}"  } }</con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [key]" disabled="true"><con:configuration><path>declare namespace ns1='http://172.17.16.57/v1.1.1/users/cmarin2/key';
//ns1:Response[1]/ns1:user[1]/ns1:key[1]/text()</path><content>${Properties#newKey}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - setUserKey - key - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/key" methodName="PUT - setUserKey" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - setUserKey - key - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "user" : {   "key" : "${#TestSuite#key}"  } }</con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [key]" disabled="true"><con:configuration><path>declare namespace ns1='http://172.17.16.57/v1.1.1/users/cmarin1/key';
//ns1:Response[1]/ns1:user[1]/ns1:key[1]/text()</path><content>${#TestSuite#key}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"user":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>"key":"${#TestSuite#key}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - setUserKey - key - json - 405"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/key" methodName="PUT - setUserKey" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - setUserKey - key - json - 405" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "user" : {   "key" : "${#TestSuite#key}"  } }</con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 405
</scriptText></con:configuration></con:assertion><con:credentials><con:username/><con:password/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - setUserKey - key - json - 404"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/key" methodName="PUT - setUserKey" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - setUserKey - key - json - 404" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "user" : {   "key" : "${#TestSuite#key}"  } }</con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]" disabled="true"><con:configuration><path>declare namespace ns1='https://auth.staging.us.ccp.rackspace.net/v1.1/users/testfoo1/key';
//ns1:Fault[1]/ns1:itemNotFound[1]/ns1:message[1]/text()</path><content>User not found :testfoo1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User not found: testfoo1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="testfoo1" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>setUserKeyJson</con:name><con:value>{ "user" : {   "key" : "${#TestSuite#key}"  } }</con:value></con:property><con:property><con:name>setUserNewKeyJson</con:name><con:value>{ "user" : {   "key" : "${Properties#newKey}"  } }</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="validateToken" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="13d201d4-bd5e-4e6a-844d-140ff741f712"><con:settings/><con:testStep type="properties" name="Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>disableuser</con:name><con:value>cmarin2</con:value></con:property><con:property><con:name>invaliduser</con:name><con:value>testfoo1</con:value></con:property><con:property><con:name>invalidToken</con:name><con:value>c49c7fc5-d2cd-473f-aaae-af4fb8b3bdc0</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="GET - validateToken - xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/token/{tokenId}" methodName="GET - validateToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - validateToken - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="200 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="belongsTo" value="${#TestSuite#username}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - validateToken - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/token/{tokenId}" methodName="GET - validateToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - validateToken - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="200 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="belongsTo" value="${#TestSuite#username}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - validateToken - neg 401"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/token/{tokenId}" methodName="GET - validateToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - validateToken - neg 401" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="200 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:credentials><con:username/><con:password/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="belongsTo" value="${#TestSuite#username}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - validateToken - neg 403" disabled="true"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/token/{tokenId}" methodName="GET - validateToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - validateToken - neg 403" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#PublicEndpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="403 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="belongsTo" value="${Properties#disableuser}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - validateToken - neg 404"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/token/{tokenId}" methodName="GET - validateToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - validateToken - neg 404" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${Properties#invalidToken}"/>
  <con:entry key="belongsTo" value="${#TestSuite#username}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - validateToken - neg 400"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/token/{tokenId}" methodName="GET - validateToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - validateToken - neg 400" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="type" value="File"/>
  <con:entry key="belongsTo" value=""/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getUserWAlternateID" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="7a10136e-41fa-42f6-9ed8-4c937a7703a2"><con:settings/><con:testStep type="restrequest" name="GET - userRedirect - nastId - true -xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/nast/{nastId}" methodName="GET - userRedirect" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userRedirect - nastId - true -xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 301
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@id</path><content>${#TestSuite#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="nastId" value="${#TestSuite#NastId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userRedirect - nastId - false - xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/nast/{nastId}" methodName="GET - userRedirect" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userRedirect - nastId - false - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404
/*def redirectLoc = messageExchange.responseHeaders["Location"]
log.info "Get - userRedirect - NastID - Status: "+messageExchange.responseStatusCode + "Redirect Location: " + redirectLoc
if (redirectLoc == "/v1.1/users/ukrandomtest2" || redirectLoc == "https://auth.staging.us.ccp.rackspace.net/v1.1/users/ukrandomtest2")
{
	assert true
}
else assert false*/</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:itemNotFound/ns1:message</path><content>User not found for Nast Account Id:badId</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="nastId" value="badId" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userRedirect - mossoId - true - xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/mosso/{mossoId}" methodName="GET - userRedirect" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userRedirect - mossoId - true - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 301


</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@id</path><content>${#TestSuite#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="mossoId" value="${#TestSuite#MossoId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userRedirect - mossoId - false - xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/mosso/{mossoId}" methodName="GET - userRedirect" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userRedirect - mossoId - false - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404



</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:itemNotFound/ns1:message</path><content>User not found for Mosso Account Id:123456789</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="mossoId" value="123456789" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userRedirect - nastId - true -json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/nast/{nastId}" methodName="GET - userRedirect" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userRedirect - nastId - true -json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 301
</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"user":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>"id":"usrandomtest2"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="nastId" value="${#TestSuite#NastId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userRedirect - nastId - false - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/nast/{nastId}" methodName="GET - userRedirect" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userRedirect - nastId - false - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404
/*def redirectLoc = messageExchange.responseHeaders["Location"]
log.info "Get - userRedirect - NastID - Status: "+messageExchange.responseStatusCode + "Redirect Location: " + redirectLoc
if (redirectLoc == "/v1.1/users/ukrandomtest2" || redirectLoc == "https://auth.staging.us.ccp.rackspace.net/v1.1/users/ukrandomtest2")
{
	assert true
}
else assert false*/</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"itemNotFound":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>"message":"User not found for Nast Account Id:badId"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="nastId" value="badId" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userRedirect - mossoId - true - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/mosso/{mossoId}" methodName="GET - userRedirect" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userRedirect - mossoId - true - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 301


</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"user":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>"id":"usrandomtest2"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="mossoId" value="${#TestSuite#MossoId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userRedirect - mossoId - false - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/mosso/{mossoId}" methodName="GET - userRedirect" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userRedirect - mossoId - false - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404



</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>"message":"User not found for Mosso Account Id:123456789"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="mossoId" value="123456789" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="revokeToken" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="f94959d1-9a29-4ecb-919a-fbaf82bba914"><con:settings/><con:testStep type="restrequest" name="DELETE - revokeToken"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/token/{tokenId}" methodName="DELETE - revokeToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - revokeToken" mediaType="application/xml" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password><con:domain/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="tokenId" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay1"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="restrequest" name="GET - validateToken - 404 - xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/token/{tokenId}" methodName="GET - validateToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - validateToken - 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="404 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Token not found.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="belongsTo" value="${#TestSuite#username}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>2000</delay></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - revokeToken - 401 GA"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/token/{tokenId}" methodName="DELETE - revokeToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - revokeToken - 401 GA" mediaType="application/xml" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>Ud2ack8hibJ5bje2lks</con:password><con:domain/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="tokenId" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - revokeToken - 405 tomcat 5.0"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/token/{tokenId}" methodName="DELETE - revokeToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - revokeToken - 405 tomcat 5.0" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 405</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="tokenId" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - revokeToken - 401 GA - empty" disabled="true"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/token/{tokenId}" methodName="DELETE - revokeToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - revokeToken - 401 GA - empty" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#tokenId2}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - revokeToken - 500"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/token/{tokenId}" methodName="DELETE - revokeToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - revokeToken - 500" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="text/html" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 406</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="tokenId" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getServiceCatalog" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="094c110b-1745-4b97-b376-8172f6f1e7b7"><con:settings/><con:testStep type="restrequest" name="GET - getServiceCatalog - xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/serviceCatalog" methodName="GET - getServiceCatalog" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getServiceCatalog - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="200 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getServiceCatalog - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/serviceCatalog" methodName="GET - getServiceCatalog" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getServiceCatalog - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="200 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getServiceCatalog - json - 401"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/serviceCatalog" methodName="GET - getServiceCatalog" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getServiceCatalog - json - 401" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:credentials><con:username/><con:password/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getServiceCatalog - xml - 404"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/serviceCatalog" methodName="GET - getServiceCatalog" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getServiceCatalog - xml - 404" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:itemNotFound[1]/ns1:message[1]/text()</path><content>User not found: testfoo1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="testfoo1" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getBaseURLs" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="5009790e-b0fc-4ba0-90f4-12db89de5a87"><con:settings/><con:testStep type="restrequest" name="GET - getBaseURLs"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/baseURLs" methodName="GET - getBaseURLs" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getBaseURLs" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="serviceName" value="${#TestSuite#Service-Name}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getBaseURL - baseURLId"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/baseURLs/{baseURLId}" methodName="GET - getBaseURL" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getBaseURL - baseURLId" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="baseURLId" value="${GET - getBaseURLs#ResponseAsXml#declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1'; //ns1:baseURLs[1]/ns1:baseURL[1]/@id}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="loginfo"><con:settings/><con:config><script>def url = context.expand( '${GET - getBaseURL - baseURLId#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:baseURL[1]/@publicURL}' )
def region = context.expand( '${GET - getBaseURL - baseURLId#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:baseURL[1]/@region}' )
def serviceName = context.expand( '${GET - getBaseURL - baseURLId#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:baseURL[1]/@serviceName}' )
def id = context.expand( '${GET - getBaseURL - baseURLId#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:baseURL[1]/@id}' )
def userType = context.expand( '${GET - getBaseURL - baseURLId#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:baseURL[1]/@userType}' )
log.info "BaseUrlID: " + id +", url: "+url+", region: "+region+", ServiceName: "+serviceName+", UserType: "+userType</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - getBaseURLs - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/baseURLs" methodName="GET - getBaseURLs" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getBaseURLs - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"baseURLs":[{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="serviceName" value="${#TestSuite#Service-Name}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getBaseURLs - 401"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/baseURLs" methodName="GET - getBaseURLs" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getBaseURLs - 401" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:credentials><con:username/><con:password/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="serviceName" value="${#testSuite#Service-Name}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getBaseURLs - 404"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/baseURLs" methodName="GET - getBaseURLs" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getBaseURLs - 404" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:itemNotFound[1]/ns1:message[1]/text()</path><content>Service: '${GET - getBaseURLs - 404#serviceName}' not found.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="serviceName" value="cloud" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getBaseURL - baseURLId - 401"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/baseURLs/{baseURLId}" methodName="GET - getBaseURL" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getBaseURL - baseURLId - 401" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:credentials><con:username/><con:password/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="baseURLId" value="${GET - getBaseURLs#Response#declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1'; //ns1:baseURLs[1]/ns1:baseURL[1]/@id}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="get-add-deleteBaseURLs" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="42e28978-2a4a-45c4-87e9-6436608d90c7"><con:settings/><con:testStep type="properties" name="Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>id</con:name><con:value/></con:property><con:property><con:name>href</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUser"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUser" mediaType="application/xml" accept="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:credentials xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteUser"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteUser" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - createUser"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users" methodName="POST - createUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createUser" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:user enabled="true" id="${#TestSuite#username}" key="${#TestSuite#key}" mossoId="${#TestSuite#MossoId}" nastId="${#TestSuite#nastId}" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="201 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="validate default baseUrls added"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("POST - createUser#Response");

List idList = new ArrayList();
List v1DefaultList =  new ArrayList();

idList = holder.getNodeValues("//ns1:user[1]/ns1:baseURLRefs[1]/ns1:baseURLRef/@id");

v1DefaultList = holder.getNodeValues("//ns1:user[1]/ns1:baseURLRefs[1]/ns1:baseURLRef/@v1Default");
log.info idList
log.info v1DefaultList

assert idList.size() >= 7

//assert idList.contains("8");
//assert idList.contains("12");
//assert idList.contains("16");


assert v1DefaultList.size() >= 7
//assert !v1DefaultList.contains("false");
</script></con:config></con:testStep><con:testStep type="restrequest" name="REST Test Request"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/baseURLs" methodName="GET - getBaseURLs" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="REST Test Request" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getBaseURLRefs"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/baseURLRefs" methodName="GET - getBaseURLRefs" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getBaseURLRefs" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addBaseURLRef - default 1"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/baseURLRefs" methodName="POST - addBaseURLRef" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addBaseURLRef - default 1" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:baseURLRef id="${#TestCase#id1}" v1Default="" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#id1}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay 1"><con:settings/><con:config><delay>15000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Copy of GET - getBaseURLRefs"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/baseURLRefs" methodName="GET - getBaseURLRefs" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of GET - getBaseURLRefs" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="verify baseURL added correct" disabled="true"><con:settings/><con:config><script>//get href and id from add base urls response
def getid = context.expand( '${POST - addBaseURLRefwhref - 10 v1Default=true#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:baseURLRef[1]/@id}' )
def href = context.expand( '${POST - addBaseURLRefwhref - 6 v1Default=false#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:baseURLRef[1]/@href}' )
testRunner.testCase.testSteps.Properties.setPropertyValue("id",getid);
testRunner.testCase.testSteps.Properties.setPropertyValue("href",href);
//get href for id from getBaseUrls response
def gethref = context.expand( '${GET - getBaseURLRefs - after added v1Default=false#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:baseURLRefs[1]/ns1:baseURLRef[@id=${id}]/@href}' )
log.info gethref + " - " + href
assert gethref == href</script></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteBaseURLRef - 1"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/baseURLRefs/{baseURLId}" methodName="DELETE - deleteBaseURLRef" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteBaseURLRef - 1" mediaType="application/xml" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]" disabled="true"><con:configuration><path>declare namespace ns1='https://ord.auth.api.rackspacecloud.com/v1.1/users/ukrandomtest2/baseURLRefs/2';
//ns1:Fault[1]/ns1:badRequest[1]/ns1:message[1]/text()</path><content>Cannot delete the only endpoint for the service 'cloudFiles'.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#username}"/>
  <con:entry key="baseURLId" value="${#TestCase#id1}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay 2"><con:settings/><con:config><delay>15000</delay></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteDefaultBaseURLRef"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/baseURLRefs/{baseURLId}" methodName="DELETE - deleteBaseURLRef" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteDefaultBaseURLRef" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]" disabled="true"><con:configuration><path>declare namespace ns1='https://ord.auth.api.rackspacecloud.com/v1.1/users/ukrandomtest2/baseURLRefs/21';
//ns1:Fault[1]/ns1:badRequest[1]/ns1:message[1]/text()</path><content>Cannot delete the only endpoint for the service 'cloudServers'.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#username}"/>
  <con:entry key="baseURLId" value="${GET - getBaseURLRefs#Response#declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1'; //ns1:baseURLRefs[1]/ns1:baseURLRef[@v1Default='true']/@id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addBaseURLRef - any"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/baseURLRefs" methodName="POST - addBaseURLRef" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addBaseURLRef - any" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:baseURLRef id="${#TestCase#id1}" v1Default="true" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getBaseURLRefs after added"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/baseURLRefs" methodName="GET - getBaseURLRefs" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getBaseURLRefs after added" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [@id]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
exists( //ns1:baseURLRefs/ns1:baseURLRef/@id=${#TestCase#id1})</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay 4" id="fdc7339f-ed2b-4eb2-a320-5338570ec4cc"><con:settings/><con:config><delay>15000</delay></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteBaseURLRef after added"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/baseURLRefs/{baseURLId}" methodName="DELETE - deleteBaseURLRef" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteBaseURLRef after added" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#username}"/>
  <con:entry key="baseURLId" value="${#TestCase#id1}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>2000</delay></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>body1</con:name><con:sourceType>addBaseURLRefAnyDefaultTrueJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addBaseURLRef - any default true - json</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="delay" name="200 2"><con:settings/><con:config><delay>2000</delay></con:config></con:testStep><con:testStep type="restrequest" name="POST - addBaseURLRef - any default true - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/baseURLRefs" methodName="POST - addBaseURLRef" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addBaseURLRef - any default true - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "baseURLRef" : { "id" : ${#TestCase#id1}, "v1Default" : true } }</con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@v1Default]"><con:configuration><path>declare namespace ns1='${#Project#EndpointJson}/${#Project#path}/users/usrandomtest2/baseURLRefs';
//ns1:Response[1]/ns1:baseURLRef[1]/ns1:v1Default[1]</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="200 3"><con:settings/><con:config><delay>6000</delay></con:config></con:testStep><con:testStep type="restrequest" name="GET - getBaseURLRefs after added w default true"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/baseURLRefs" methodName="GET - getBaseURLRefs" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getBaseURLRefs after added w default true" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [@id]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
exists( //ns1:baseURLRefs/ns1:baseURLRef/@id=9)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@v1Default]" disabled="true"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:baseURLRefs[1]/ns1:baseURLRef[@id=9]/@v1Default</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteBaseURLRef after added w defaut true"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/baseURLRefs/{baseURLId}" methodName="DELETE - deleteBaseURLRef" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteBaseURLRef after added w defaut true" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#username}"/>
  <con:entry key="baseURLId" value="${#TestCase#id1}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="200"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="restrequest" name="POST - addBaseURLRef - any w herf &amp; default true"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/baseURLRefs" methodName="POST - addBaseURLRef" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addBaseURLRef - any w herf &amp; default true" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:baseURLRef href="www.test.com" id="${#TestCase#id1}" v1Default="true" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@v1Default]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:baseURLRef[1]/@v1Default</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@href]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:baseURLRef[1]/@href</path><content>${POST - addBaseURLRef - any w herf &amp; default true#Request#declare namespace v1='http://docs.rackspacecloud.com/auth/api/v1.1'; //v1:baseURLRef[1]/@href}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay 3"><con:settings/><con:config><delay>2000</delay></con:config></con:testStep><con:testStep type="restrequest" name="GET - getBaseURLRefs after added w herf &amp; default true"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/baseURLRefs" methodName="GET - getBaseURLRefs" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getBaseURLRefs after added w herf &amp; default true" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@v1Default]" disabled="true"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:baseURLRefs[1]/ns1:baseURLRef[1]/@v1Default</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [@id]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
exists( //ns1:baseURLRefs/ns1:baseURLRef/@id=10)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - setUserDisabled"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/enabled" methodName="PUT - setUserEnabled" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - setUserDisabled" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;user enabled="false" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="200 Response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@enabled]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@enabled</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addBaseURLRef - any w user disabled"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/baseURLRefs" methodName="POST - addBaseURLRef" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addBaseURLRef - any w user disabled" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:baseURLRef href="www.test.com" id="${#TestCase#id2}" v1Default="true" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@v1Default]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:baseURLRef[1]/@v1Default</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@href]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:baseURLRef[1]/@href</path><content>${POST - addBaseURLRef - any w herf &amp; default true#Request#declare namespace v1='http://docs.rackspacecloud.com/auth/api/v1.1'; //v1:baseURLRef[1]/@href}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="200 1"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="restrequest" name="GET - getBaseURLRefs after added w user disabled"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/baseURLRefs" methodName="GET - getBaseURLRefs" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getBaseURLRefs after added w user disabled" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@v1Default]" disabled="true"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:baseURLRefs[1]/ns1:baseURLRef[@id=8]/@v1Default</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [@id]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
exists( //ns1:baseURLRefs/ns1:baseURLRef/@id=${#TestCase#id2})</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - setUserEnabled"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/enabled" methodName="PUT - setUserEnabled" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - setUserEnabled" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;user enabled="true" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="200 Response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@enabled]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@enabled</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>addBaseURLRefAnyDefaultTrueJson</con:name><con:value>{ "baseURLRef" : { "id" : ${#TestCase#id1}, "v1Default" : true } }</con:value></con:property><con:property><con:name>id1</con:name><con:value>33</con:value></con:property><con:property><con:name>id2</con:name><con:value>107</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fdc7339f-ed2b-4eb2-a320-5338570ec4cc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="deleteUser" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="81c7593c-016b-4599-931e-44da57296cc6"><con:settings/><con:testStep type="properties" name="Properties" disabled="true"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>username2</con:name><con:value>negtest81</con:value></con:property><con:property><con:name>password2</con:name><con:value>Password81</con:value></con:property><con:property><con:name>key2</con:name><con:value>0f97f489c848438090250d50c7e1ea88</con:value></con:property><con:property><con:name>enabled</con:name><con:value>true</con:value></con:property><con:property><con:name>MossoId</con:name><con:value>5703568</con:value></con:property><con:property><con:name>NastId</con:name><con:value>MossoCloudFS_0041b004-7171-4099-ab0b-260506f13ff2</con:value></con:property><con:property><con:name>invaliduser</con:name><con:value>jennyv2</con:value></con:property><con:property><con:name>invalidpwd</con:name><con:value>pwd123</con:value></con:property><con:property><con:name>MossoId2</con:name><con:value>123456</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Copy of Copy of GET - getUser" disabled="true"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of Copy of GET - getUser" mediaType="application/xml" accept="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:credentials xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteUser"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteUser" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteUser - Neg 404"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteUser - Neg 404" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${Properties#username2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteUser - Neg 405"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteUser - Neg 405" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 405</scriptText></con:configuration></con:assertion><con:credentials><con:username/><con:password/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${Properties#username2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Copy of DELETE - deleteUser" disabled="true"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of DELETE - deleteUser" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#UKEndpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="dummi" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getVersion" searchProperties="true" id="482260c2-12bd-4a5b-ba17-065b0dc50a5f"><con:settings/><con:testStep type="restrequest" name="GET - getVersionInfo - xml"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}" methodName="GET - getVersionInfo" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getVersionInfo - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@id]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/common/api/v1.0';
//ns1:version[1]/@id</path><content>${#Project#version}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns5='http://docs.openstack.org/common/api/v1.0';
//ns5:version[1]/@status</path><content>CURRENT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getVersionInfo - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}" methodName="GET - getVersionInfo" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getVersionInfo - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [id]" disabled="true"><con:configuration><path>declare namespace ns1='http://localhost/idm/cloud/v1.1';
//ns1:Response[1]/ns1:version[1]/ns1:id[1]/text()</path><content>${#Project#version}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>CURRENT</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def holder = groovyUtils.getXmlHolder("GET - getVersionInfo - json#ResponseAsXml");

List serviceurlIdList = holder.getNodeValues("//ns1:Response[1]/ns1:version[1]/ns1:id[1]")

if(serviceurlIdList[0] == "v1.1")
{
	log.info "Correct"
}
else{
	
	assert false
}



</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties><con:property><con:name>NastId</con:name><con:value>StagingUS_0d57926a-d1f1-4b8d-ab17-d2708efcf6d8</con:value></con:property><con:property><con:name>tokenId</con:name><con:value>71786f27-7e1a-44fc-bd09-b91140ba2068</con:value></con:property><con:property><con:name>X-Public-Url</con:name><con:value/></con:property><con:property><con:name>X-Internal-Url</con:name><con:value/></con:property><con:property><con:name>Service-Name</con:name><con:value/></con:property><con:property><con:name>Region</con:name><con:value/></con:property><con:property><con:name>username</con:name><con:value>usrandomtest2</con:value></con:property><con:property><con:name>password</con:name><con:value>Password1</con:value></con:property><con:property><con:name>key</con:name><con:value>ba04b108b7cefcbcbf7c4d8bd05e3857</con:value></con:property><con:property><con:name>MossoId</con:name><con:value>5800388</con:value></con:property><con:property><con:name>username2</con:name><con:value>cmarin1</con:value></con:property><con:property><con:name>password2</con:name><con:value>Password2</con:value></con:property><con:property><con:name>key2</con:name><con:value/></con:property><con:property><con:name>tokenId2</con:name><con:value>  </con:value></con:property><con:property><con:name>authuser</con:name><con:value>auth</con:value></con:property><con:property><con:name>authpass</con:name><con:value>auth123</con:value></con:property><con:property><con:name>UKEndpoint</con:name><con:value>https://ord.auth.api.rackspacecloud.com</con:value></con:property><con:property><con:name>testMossoId</con:name><con:value>5600987</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="Functional - negative"><con:description/><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Negative testcases" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="a8612f6d-9f4c-481c-9dd1-609998814d82"><con:settings/><con:testStep type="properties" name="Properties"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>username</con:name><con:value>carlosracker</con:value></con:property><con:property><con:name>password</con:name><con:value>PasswordX1</con:value></con:property><con:property><con:name>invalidUser</con:name><con:value>jenny vo</con:value></con:property><con:property><con:name>invalidPwd</con:name><con:value>123</con:value></con:property><con:property><con:name>disableUser</con:name><con:value>123</con:value></con:property><con:property><con:name>disablePwd</con:name><con:value>123</con:value></con:property><con:property><con:name>tokenId</con:name><con:value/></con:property><con:property><con:name>expiredTokenId</con:name><con:value>507dae1c-9afa-4e7a-a0dd-a575bee7bb2b</con:value></con:property><con:property><con:name>username2</con:name><con:value>authtest1</con:value></con:property><con:property><con:name>password2</con:name><con:value>Password1</con:value></con:property><con:property><con:name>serviceName</con:name><con:value>cloudFiles</con:value></con:property><con:property><con:name>region</con:name><con:value>DFW</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>body1</con:name><con:sourceType>auth400MissingUserNameJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - authenticate - 400 - missing username - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body2</con:name><con:sourceType>auth400MissingPasswordJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - authenticate - 400 - missing password - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body3</con:name><con:sourceType>auth400NoPwd/UserJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - authenticate - 400 - no username/pwd - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body4</con:name><con:sourceType>auth400otherJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - authenticate - 400 - other - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body5</con:name><con:sourceType>auth401Json</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - authenticate - 404 - unauthorized - json</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - XML" disabled="true"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - XML" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;passwordCredentials password="${Properties#password}" username="${Properties#username}" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="200 response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="storeToken - XML"><con:settings/><con:config><script>def tokenIDResp = context.expand( '${POST - authenticate - XML#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:auth[1]/ns1:token[1]/@id}' )

testRunner.testCase.testSuite.setPropertyValue("tokenId",tokenIDResp);
testRunner.testCase.testSteps.Properties.setPropertyValue("tokenId",tokenIDResp);

//def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
//def holder = groovyUtils.getXmlHolder("POST - authenticate#Response")

//List dataList = holder.getNodeValues("//ns1:auth[1]/ns1:serviceCatalog[1]/ns1:service/ns1:endpoint[1]/@publicURL")

//def getServiceName = context.expand( '${POST - authenticate - XML#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:auth[1]/ns1:serviceCatalog[1]/ns1:service[@name="${serviceName}"]/@name}' )
//def internalURL = context.expand( '${POST - authenticate - XML#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:auth[1]/ns1:serviceCatalog[1]/ns1:service[@name="${serviceName}"]/ns1:endpoint[@region="${region}"]/@internalURL}' )
//def publicURL = context.expand( '${POST - authenticate - XML#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:auth[1]/ns1:serviceCatalog[1]/ns1:service[@name="${serviceName}"]/ns1:endpoint[@region="${region}"]/@publicURL}' )
def getServiceName = context.expand( '${POST - authenticate - XML#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:auth[1]/ns1:serviceCatalog[1]/ns1:service[@name="${serviceName}"]/@name}' )
def publicURL = context.expand( '${POST - authenticate - XML#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:auth[1]/ns1:serviceCatalog[1]/ns1:service[@name="${serviceName}"]/ns1:endpoint[@region="${region}"]/@publicURL}' )
def region = context.expand( '${POST - authenticate - XML#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:auth[1]/ns1:serviceCatalog[1]/ns1:service[@name="${serviceName}"]/ns1:endpoint[@region="${region}"]/@region}' )

//def region = context.expand( '${POST - authenticate - XML#Response#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:auth[1]/ns1:serviceCatalog[1]/ns1:service[@name="${serviceName}"]/ns1:endpoint[@region="${region}"]/@region}' )

//List dataList = holder.getNodeValues("//ns1:auth[1]/ns1:serviceCatalog[1]/ns1:service[@name='${serviceName}]/ns1:endpoint[@region='${region}']")

//def internalURL= dataList.get(0);
//def publicURL = dataList.get(1);

testRunner.testCase.testSuite.setPropertyValue("X-Public-Url", publicURL)
//testRunner.testCase.testSuite.setPropertyValue("X-Internal-Url", internalURL)
testRunner.testCase.testSuite.setPropertyValue("Service-Name", getServiceName)
testRunner.testCase.testSuite.setPropertyValue("Region", region)

</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - 400 - missing username"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - 400 - missing username" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;passwordCredentials password="${Properties#invalidPwd}" username="" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400
log.info "POST - authentication - 400 -missing username Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:badRequest[1]/ns1:message[1]/text()</path><content>Expecting username</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - 400 - missing username - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - 400 - missing username - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"passwordCredentials":{"username":"","password":"${Properties#invalidPwd}"}}</con:request><con:assertion type="GroovyScriptAssertion" name="response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400
log.info "POST - authentication - 400 -missing username Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='${#Project#EndpointJson}/${#Project#path}/auth-admin';
//ns1:Fault[1]/ns1:badRequest[1]/ns1:message[1]</path><content>Expecting username</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"badRequest":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>"message":"Expecting username"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - 400 - missing password"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - 400 - missing password" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;passwordCredentials password="" username="Properties#validUser" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400
log.info "POST - authentication - 400 -missing password Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:badRequest[1]/ns1:message[1]/text()</path><content>Expecting password</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - 400 - missing password - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - 400 - missing password - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"passwordCredentials":{"username":"Properties#validUser","password":""}}</con:request><con:assertion type="GroovyScriptAssertion" name="response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400
log.info "POST - authentication - 400 -missing password Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='${#Project#EndpointJson}/${#Project#path}/auth-admin';
//ns1:Fault[1]/ns1:badRequest[1]/ns1:message[1]</path><content>Expecting password</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"badRequest":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>"message":"Expecting password"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - 400 - no username/pwd"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - 400 - no username/pwd" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;passwordCredentials password="" username="" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400
log.info "POST - authentication - 400 - no username/pwd Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Expecting password</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - 400 - no username/pwd - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - 400 - no username/pwd - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"passwordCredentials":{"username":"","password":""}}</con:request><con:assertion type="GroovyScriptAssertion" name="response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400
log.info "POST - authentication - 400 - no username/pwd Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"badRequest":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>"message":"Expecting password"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - 400 - other"><con:settings/><con:config service="Auth1.1.x" methodName="POST - authenticate" resourcePath="/${#Project#path}/auth" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - 400 - other" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:credentials xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400
log.info "POST - authentication - 400 - others Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - 400 - other - json"><con:settings/><con:config service="Auth1.1.x" methodName="POST - authenticate" resourcePath="/${#Project#path}/auth" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - 400 - other - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"credentials":{}}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400
log.info "POST - authentication - 400 - others Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"badRequest":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>"message":"Expecting apiKey"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - 404 - unauthorized"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - 404 - unauthorized" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;passwordCredentials password="${Properties#invalidPwd}" username="${Properties#invalidUser}" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404
log.info "POST - authentication - 404 - unauthorized Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - 404 - unauthorized - json"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - 404 - unauthorized - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"passwordCredentials":{"username":"${Properties#invalidUser}","password":"${Properties#invalidPwd}"}}</con:request><con:assertion type="GroovyScriptAssertion" name="response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404
log.info "POST - authentication - 404 - unauthorized Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>{"unauthorized":{"message":"User account exists externally, but not in the AUTH database.","code":401}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - 405 - unauthorized basic"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - 405 - unauthorized basic" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding/><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;passwordCredentials password="${Properties#invalidPwd}" username="${Properties#invalidUser}" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 405
log.info "POST - authentication - 400 - unauthorized basic Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - setUserDisabled"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/enabled" methodName="PUT - setUserEnabled" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - setUserDisabled" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:user enabled="false" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${Properties#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate - 403" disabled="true"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/auth-admin" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate - 403" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;passwordCredentials password="${Properties#password}" username="${Properties#username}" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403
log.info "POST - authentication - 403 Status: " + messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:userDisabled[1]/ns1:message[1]/text()</path><content>User ${Properties#username} is not enabled.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - setUserEnabled"><con:settings/><con:config service="Auth1.1.x" resourcePath="/${#Project#path}/users/{userId}/enabled" methodName="PUT - setUserEnabled" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - setUserEnabled" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;user enabled="true" xmlns="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="200 Response code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@enabled]"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@enabled</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>auth400MissingUserNameJson</con:name><con:value>{"passwordCredentials":{"username":"","password":"${Properties#invalidPwd}"}}</con:value></con:property><con:property><con:name>auth400MissingPasswordJson</con:name><con:value>{"passwordCredentials":{"username":"Properties#validUser","password":""}}</con:value></con:property><con:property><con:name>auth400NoPwd/UserJson</con:name><con:value>{"passwordCredentials":{"username":"","password":""}}</con:value></con:property><con:property><con:name>auth400otherJson</con:name><con:value>{"credentials":{}}</con:value></con:property><con:property><con:name>auth401Json</con:name><con:value>{"passwordCredentials":{"username":"${Properties#invalidUser}","password":"${Properties#invalidPwd}"}}</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:properties><con:property><con:name>username</con:name><con:value>cmarin1</con:value></con:property><con:property><con:name>Password1</con:name><con:value/></con:property><con:property><con:name>tokenID</con:name><con:value/></con:property><con:property><con:name>X-Public-Url</con:name><con:value/></con:property><con:property><con:name>X-Internal-Url</con:name><con:value/></con:property><con:property><con:name>Service-Name</con:name><con:value/></con:property><con:property><con:name>Region</con:name><con:value/></con:property><con:property><con:name>authpass</con:name><con:value>auth123</con:value></con:property><con:property><con:name>authuser</con:name><con:value>auth</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:endpointStrategy xsi:type="con:DefaultEndpointStrategy" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:endpoint mode="COMPLEMENT" username="auth" password="auth123">https://auth.api.rackspacecloud.com</con:endpoint></con:endpointStrategy><con:requirements/><con:properties><con:property><con:name>path</con:name><con:value>v1.1</con:value></con:property><con:property><con:name>Endpoint</con:name><con:value>https://staging.identity.api.rackspacecloud.com</con:value></con:property><con:property><con:name>adminpath</con:name><con:value>auth-admin</con:value></con:property><con:property><con:name>authuser</con:name><con:value>auth</con:value></con:property><con:property><con:name>authpass</con:name><con:value>auth123</con:value></con:property><con:property><con:name>version</con:name><con:value>v1.1</con:value></con:property><con:property><con:name>EndpointJson</con:name><con:value>https://staging.identity.api.rackspacecloud.com</con:value></con:property><con:property><con:name>pathv2.0</con:name><con:value>v2.0</con:value></con:property><con:property><con:name>pathv10</con:name><con:value>v1.0</con:value></con:property></con:properties><con:wssContainer/><con:databaseConnectionContainer/><con:reporting><con:reportTemplates/><con:xmlTemplates/><con:parameters/></con:reporting></con:soapui-project>