<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project name="Auth2.0US" resourceRoot="" soapui-version="4.5.0" abortOnError="false" runType="SEQUENTIAL" activeEnvironment="Default" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.TestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Global Properties" value=""/>
  <con:entry key="TestSuite" value="Functional - OS-KSADM-admin"/>
  <con:entry key="Report to Generate" value=""/>
  <con:entry key="Password" value=""/>
  <con:entry key="soapui-setings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Save Project" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Export JUnit Results" value="true"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Export All" value="true"/>
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="TestCase" value="&lt;all>"/>
  <con:entry key="Print Report" value="true"/>
  <con:entry key="Username" value=""/>
  <con:entry key="Root Folder" value="C:\tmp\GlobalAuth\Release\Auth2.0_Internal\RAX-KSADM-admin"/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="Endpoint" value=""/>
</xml-fragment>]]></con:setting></con:settings><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="identity-admin" type="rest" basePath="" definitionUrl="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Endpoint}</con:endpoint><con:endpoint>http://auth.staging.us.ccp.rackspace.net</con:endpoint><con:endpoint>${#Project#CAendpoint}</con:endpoint></con:endpoints><con:resource name="v2.0" path="${#Project#path}"><con:settings/><con:parameters/><con:resource name="extensions" path="extensions"><con:settings/><con:parameters/><con:resource name="{alias}" path="{alias}"><con:settings/><con:parameters><con:parameter><con:name>alias</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Get Extension Details - getExtension" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/common/api/v2.0">v2:extension</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="List Extensions - listExtensions" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/common/api/v2.0">v2:extensions</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="tokens" path="tokens"><con:settings/><con:parameters/><con:resource name="{tokenId}" path="{tokenId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter required="true"><con:name>tokenId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>belongsTo</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="endpoints" path="endpoints"><con:settings/><con:parameters/><con:method name="List Endoints for a Token - listEndpointsForToken" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:endpoints</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Validate Token - validateToken" method="GET"><con:settings/><con:parameters><con:parameter><con:name>belongsTo</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:access</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Check Token - checkToken" method="HEAD"><con:settings/><con:parameters><con:parameter><con:name>belongsTo</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:access</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Authenticate for Service API - authenticate" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:auth</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:access</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403 404 500 401 400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:userDisabled</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="Request 1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:5001</con:endpoint><con:request>{
"auth":{
"passwordCredentials":{
"username":"${#TestSuite#username}",
"password":"${#TestSuite#password}"
}
}
}</con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="users" path="users"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="{user_id}" path="{user_id}"><con:settings/><con:parameters><con:parameter required="true"><con:name>user_id</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="roles" path="roles"><con:settings/><con:parameters/><con:method name="List User Global Roles - listUserGlobalRoles" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:roles</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 401 403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:method name="Get a User by ID - getUserById" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get a User by Name - getUserByName" method="GET"><con:settings/><con:parameters><con:parameter required="true"><con:name>name</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="tenants" path="tenants"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="{tenantId}" path="{tenantId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>tenantId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="users" path="users"><con:settings/><con:parameters/><con:resource name="{user_id}" path="{user_id}"><con:settings/><con:parameters><con:parameter required="true"><con:name>user_id</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="roles" path="roles"><con:settings/><con:parameters/><con:method name="List Roles for User on Tenant - listRolesForUserOnTenant" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:roles</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource><con:method name="Get Tenants by ID - getTenantById" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:tenant</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get Tenants - listTenants" method="GET"><con:settings/><con:parameters><con:parameter><con:name>marker</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:tenants</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Get tenants by name - getTenantByName" method="GET"><con:settings/><con:parameters><con:parameter required="true"><con:name>name</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:tenant</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Version Details - getVersionInfo" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/common/api/v2.0">v2:version</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="Authenticate" path="/v2.0/tokens"><con:settings/><con:parameters/><con:method name="Method 1" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>405</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:auth</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:access</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false"><con:settings/><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="OS-KSADM-admin" type="rest" basePath="" definitionUrl="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Endpoint}</con:endpoint><con:endpoint>http://localhost:8080</con:endpoint></con:endpoints><con:resource name="v2.0" path="${#Project#path}"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="users" path="users"><con:settings/><con:parameters/><con:resource name="{userId}" path="{userId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>userId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="roles" path="roles"><con:settings/><con:parameters/><con:resource name="OS-KSADM" path="OS-KSADM"><con:settings/><con:parameters/><con:resource name="{roleId}" path="{roleId}"><con:settings/><con:parameters><con:parameter><con:name>roleId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Add Global roles to a user. - addUserRole" method="PUT"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Get user Role - getUserRole" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:role</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete Global Roles on User. - deleteUserRole" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource><con:method name="List Global Roles for a User - listUserRoles" method="GET"><con:settings/><con:parameters><con:parameter><con:name>serviceId</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:roles</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="OS-KSADM" path="OS-KSADM"><con:settings/><con:parameters/><con:resource name="enabled" path="enabled"><con:settings/><con:parameters/><con:method name="Set user enabled. - setUserEnabled" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="credentials" path="credentials"><con:settings/><con:parameters/><con:resource name="{credential-type}" path="{credential-type}"><con:settings/><con:parameters><con:parameter><con:name>credential-type</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="Update user credential - updateUserCredential" method="POST"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/xml" postQueryString="false"><con:settings/><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="Delete user credential - deleteUserCredential" method="DELETE"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/xml"><con:settings/><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="Get user Credentials - getUserCredential" method="GET"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/xml"><con:settings/><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:method name="Add user Credential. - addUserCredential" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:5001</con:endpoint><con:request>&lt;v2:credentials xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="List Credentials - listCredentials" method="GET"><con:settings/><con:parameters><con:parameter><con:name>marker</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource><con:method name="Update user - updateUser" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:5001</con:endpoint><con:request>&lt;v2:user xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="Delete user - deleteUser" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 404 401 403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>503</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:method name="List users - listUsers" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:userss</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Add user - addUser" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 401 501 409</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 501</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:5001</con:endpoint><con:request>&lt;v2:user xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="Add user /w passwordCred - addUser" method="POST"><con:settings/><con:parameters><con:parameter><con:name>X-Auth-Token</con:name><con:value/><con:style>HEADER</con:style><con:default/></con:parameter></con:parameters><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:5001</con:endpoint><con:request>&lt;v2:user xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="tenants" path="tenants"><con:settings/><con:parameters/><con:resource name="{tenantId}" path="{tenantId}"><con:settings/><con:parameters><con:parameter><con:name>tenantId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="OS-KSADM" path="OS-KSADM"><con:settings/><con:parameters/><con:resource name="roles" path="roles"><con:settings/><con:parameters/><con:method name="List roles for a Tenant. - listRolesForTenant" method="GET"><con:settings/><con:parameters><con:parameter><con:name>marker</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:roles</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource><con:resource name="users" path="users"><con:settings/><con:parameters/><con:resource name="{userId}" path="{userId}"><con:settings/><con:parameters><con:parameter><con:name>userId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="roles" path="roles"><con:settings/><con:parameters/><con:resource name="OS-KSADM" path="OS-KSADM"><con:settings/><con:parameters/><con:resource name="{roleId}" path="{roleId}"><con:settings/><con:parameters><con:parameter><con:name>roleId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Add roles to a user on a tenant. - addRolesToUserOnTenant" method="PUT"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete roles from a user on tenant. - deleteRoleFromUserOnTenant" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource></con:resource><con:method name="List users for a Tenant. - listUsersForTenant" method="GET"><con:settings/><con:parameters><con:parameter><con:name>marker</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:users</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="List user with role for tenant. - listUsersWithRoleForTenant" method="GET"><con:settings/><con:parameters><con:parameter required="true"><con:name>roleId</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>marker</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:users</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Update Tenant - updateTenant" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:tenant</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:tenant</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete a Tenant - deleteTenant" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Add Tenant - addTenant" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:tenant</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:tenant</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:5001</con:endpoint><con:request>&lt;v2:tenant xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="OS-KSADM" path="OS-KSADM"><con:settings/><con:parameters/><con:resource name="roles" path="roles"><con:settings/><con:parameters/><con:resource name="{roleId}" path="{roleId}"><con:settings/><con:parameters><con:parameter><con:name>roleId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Get Role - getRole" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:role</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete Role - deleteRole" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="List Roles - listRoles" method="GET"><con:settings/><con:parameters><con:parameter><con:name>serviceId</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>marker</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:roles</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Add Role - addRole" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:role</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:role</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:5001</con:endpoint><con:request>&lt;v2:role xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="services" path="services"><con:settings/><con:parameters/><con:resource name="{serviceId}" path="{serviceId}"><con:settings/><con:parameters><con:parameter><con:name>serviceId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Get Service - getService" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0">v1:service</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete Service - deleteService" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="List Services - listServices" method="GET"><con:settings/><con:parameters><con:parameter><con:name>marker</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0">v1:services</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Add Service - addService" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0">v1:service</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0">v1:service</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="RAX-KSKEY-admin" type="rest" basePath="" definitionUrl="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Endpoint}</con:endpoint></con:endpoints><con:resource name="v2.0" path="${#Project#path}"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="users" path="users"><con:settings/><con:parameters/><con:resource name="{userId}" path="{userId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>userId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="OS-KSADM" path="OS-KSADM"><con:settings/><con:parameters/><con:resource name="credentials" path="credentials"><con:settings/><con:parameters/><con:resource name="RAX-KSKEY:apiKeyCredentials" path="RAX-KSKEY:apiKeyCredentials"><con:settings/><con:parameters/><con:method name="Update user credential - updateUserCredential" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete user credential - deleteUserCredential" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Get user Credentials - getUserCredential" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Add user Credential. - addUserCredential" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="List Credentials - listCredentials" method="GET"><con:settings/><con:parameters><con:parameter><con:name>marker</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource></con:resource></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="OS-KSCATALOG-admin" type="rest" basePath="" definitionUrl="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Endpoint}</con:endpoint></con:endpoints><con:resource name="v2.0" path="${#Project#path}"><con:settings/><con:parameters/><con:resource name="tenants" path="tenants"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="{tenantId}" path="{tenantId}"><con:settings/><con:parameters><con:parameter><con:name>tenantId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="OS-KSCATALOG" path="OS-KSCATALOG"><con:settings/><con:parameters/><con:resource name="endpoints" path="endpoints"><con:settings/><con:parameters/><con:resource name="{endpointId}" path="{endpointId}"><con:settings/><con:parameters><con:parameter><con:name>endpointId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Get Endpoint - getEndpoint" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:endpoint</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete Endpoint. - deleteEndpoint" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="List Endpoints - listEndpoints" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:endpoints</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Add Endpoint - addEndpoint" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0">v1:endpointTemplate</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:endpoint</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource></con:resource><con:resource name="OS-KSCATALOG" path="OS-KSCATALOG"><con:settings/><con:parameters/><con:resource name="endpointTemplates" path="endpointTemplates"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="{endpointTemplateId}" path="{endpointTemplateId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>endpointTemplateId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Get Endpoint Template - getEndpointTemplate" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0">v1:endpointTemplate</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete Endpoint Template. - deleteEndpointTemplate" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="List Endpoint Templates - listEndpointTemplates" method="GET"><con:settings/><con:parameters><con:parameter><con:name>serviceId</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0">v1:endpointTemplates</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Add Endpoint Template - addEndpointTemplate" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0">v1:endpointTemplate</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0">v1:endpointTemplate</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="RAX-KSGRP-admin" type="rest" basePath="" definitionUrl="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Endpoint}</con:endpoint></con:endpoints><con:resource name="v2.0" path="${#Project#path}"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="users" path="users"><con:settings/><con:parameters/><con:resource name="{userId}" path="{userId}"><con:settings/><con:parameters><con:parameter><con:name>userId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="RAX-KSGRP" path="RAX-KSGRP"><con:settings/><con:parameters/><con:method name="List Groups for a User - listUserGroups" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/RAX-KSGRP/v1.0">v1:groups</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="OS-KSEC2-admin" type="rest" basePath="" definitionUrl="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Endpoint}</con:endpoint></con:endpoints><con:resource name="v2.0" path="${#Project#path}"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="users" path="users"><con:settings/><con:parameters/><con:resource name="{userId}" path="{userId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>userId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="OS-KSADM" path="OS-KSADM"><con:settings/><con:parameters/><con:resource name="credentials" path="credentials"><con:settings/><con:parameters/><con:resource name="OS-KSEC2:ec2Credentials" path="OS-KSEC2:ec2Credentials"><con:settings/><con:parameters/><con:method name="Update user credential - updateUserCredential" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSEC2/v1.0">v1:ec2Credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSEC2/v1.0">v1:ec2Credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete user credential - deleteUserCredential" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Get user Credentials - getUserCredential" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSEC2/v1.0">v1:ec2Credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Add user Credential. - addUserCredential" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSEC2/v1.0">v1:ec2Credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSEC2/v1.0">v1:ec2Credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="List Credentials - listCredentials" method="GET"><con:settings/><con:parameters><con:parameter><con:name>marker</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource></con:resource></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="RAX-KSQA-admin" type="rest" basePath="" definitionUrl="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Endpoint}</con:endpoint></con:endpoints><con:resource name="v2.0" path="${#Project#path}"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="users" path="users"><con:settings/><con:parameters/><con:resource name="{userId}" path="{userId}"><con:settings/><con:parameters><con:parameter><con:name>userId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="RAX-KSQA" path="RAX-KSQA"><con:settings/><con:parameters/><con:resource name="secretqa" path="secretqa"><con:settings/><con:parameters/><con:method name="Get User SecretQA - getUserSecretQA" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/RAX-KSQA/v1.0">v1:secretQA</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Update User SecretQA - updateUserSecretQA" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/RAX-KSQA/v1.0">v1:secretQA</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/RAX-KSQA/v1.0">v1:secretQA</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource></con:resource></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="RAX-GRPADM-admin" type="rest" basePath="" definitionUrl="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Endpoint}</con:endpoint></con:endpoints><con:resource name="v2.0" path="${#Project#path}"><con:settings/><con:parameters/><con:resource name="RAX-GRPADM" path="RAX-GRPADM"><con:settings/><con:parameters/><con:resource name="groups" path="groups"><con:settings/><con:parameters/><con:resource name="{groupId}" path="{groupId}"><con:settings/><con:parameters><con:parameter><con:name>groupId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="users" path="users"><con:settings/><con:parameters/><con:resource name="{userId}" path="{userId}"><con:settings/><con:parameters><con:parameter><con:name>userId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Add User to Group - addUserToGroup" method="PUT"><con:settings/><con:parameters><con:parameter><con:name>X-Auth-Token</con:name><con:value/><con:style>HEADER</con:style><con:default/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Remove User From Group - removeUserFromGroup" method="DELETE"><con:settings/><con:parameters><con:parameter><con:name>X-Auth-Token</con:name><con:value/><con:style>HEADER</con:style><con:default/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get Users for Group" method="GET"><con:settings/><con:parameters><con:parameter><con:name>X-Auth-Token</con:name><con:value/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>marker</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter><con:parameter><con:name>limit</con:name><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>groupId</con:name><con:style>TEMPLATE</con:style></con:parameter></con:parameters><con:request name="Request 1" mediaType="application/xml"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:method name="Get Group - getGroup" method="GET"><con:settings/><con:parameters><con:parameter><con:name>X-Auth-Token</con:name><con:value/><con:style>HEADER</con:style><con:default/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">v1:group</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Update a Group - updateGroup" method="PUT"><con:settings/><con:parameters><con:parameter><con:name>X-Auth-Token</con:name><con:value/><con:style>HEADER</con:style><con:default/></con:parameter></con:parameters><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">v1:group</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">v1:group</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete Group - deleteGroup" method="DELETE"><con:settings/><con:parameters><con:parameter><con:name>X-Auth-Token</con:name><con:value/><con:style>HEADER</con:style><con:default/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Add a New Group - addGroup" method="POST"><con:settings/><con:parameters><con:parameter><con:name>X-Auth-Token</con:name><con:style>HEADER</con:style></con:parameter></con:parameters><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">v1:group</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v1="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">v1:group</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="Get Groups" method="GET"><con:settings/><con:parameters><con:parameter><con:name>X-Auth-Token</con:name><con:value/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>name</con:name><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>limit</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter><con:parameter><con:name>marker</con:name><con:style>QUERY</con:style></con:parameter></con:parameters><con:request name="Request 1" mediaType="application/xml"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="RAX-Impersonatioin" type="rest" basePath="" definitionUrl="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://localhost:8080</con:endpoint></con:endpoints><con:resource name="/RAX-AUTH" path="/RAX-AUTH"><con:settings/><con:parameters/><con:resource name="impersonation-tokens" path="impersonation-tokens"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Impersonate User - impersonateUser" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0">v1:impersonation</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0">v1:access</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:8080</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Auth V1.1" type="rest" basePath="" definitionUrl="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Endpoint}</con:endpoint></con:endpoints><con:resource name="v1.1" path="${#Project#pathv1.1}"><con:settings/><con:parameters/><con:resource name="extensions" path="extensions"><con:settings/><con:parameters/><con:resource name="{alias}" path="{alias}"><con:settings/><con:parameters><con:parameter><con:name>alias</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="GET - getExtension" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:extension</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="GET - getExtensions" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:extensions</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="auth" path="auth"><con:settings/><con:parameters/><con:method name="POST - authenticate" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:nastCredentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:mossoCredentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:passwordCredentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:auth</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:userDisabled</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401 403 400 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="token" path="token"><con:settings/><con:parameters/><con:resource name="{tokenId}" path="{tokenId}"><con:settings/><con:parameters><con:parameter><con:name>tokenId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="GET - validateToken" method="GET"><con:settings/><con:parameters><con:parameter><con:name>belongsTo</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>type</con:name><con:value>CLOUD</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>CLOUD</con:default><con:option>CLOUD</con:option><con:option>NAST</con:option><con:option>MOSSO</con:option></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:token</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:userDisabled</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="DELETE - revokeToken" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource><con:resource name="users" path="users"><con:settings/><con:parameters/><con:resource name="{userId}" path="{userId}"><con:settings/><con:parameters><con:parameter><con:name>userId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="enabled" path="enabled"><con:settings/><con:parameters/><con:method name="GET - getUserEnabled" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="PUT - setUserEnabled" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="key" path="key"><con:settings/><con:parameters/><con:method name="GET - getUserKey" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="PUT - setUserKey" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="serviceCatalog" path="serviceCatalog"><con:settings/><con:parameters/><con:method name="GET - getServiceCatalog" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceCatalog</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="baseURLRefs" path="baseURLRefs"><con:settings/><con:parameters/><con:resource name="{baseURLId}" path="{baseURLId}"><con:settings/><con:parameters><con:parameter><con:name>baseURLId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="GET - getBaseURLRef" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:baseURLRef</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="DELETE - deleteBaseURLRef" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="GET - getBaseURLRefs" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:baseURLRefs</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="POST - addBaseURLRef" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:baseURLRef</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:baseURLRef</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="groups" path="groups"><con:settings/><con:parameters/><con:method name="GET - getUserGroups" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:groups</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="GET - getUser" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="DELETE - deleteUser" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="PUT - updateUser" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="POST - createUser" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>409</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:usernameConflict</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 409 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>405</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="nast/{nastId}" path="nast/{nastId}"><con:settings/><con:parameters><con:parameter><con:name>nastId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="GET - userRedirect" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType xsi:nil="true"/><con:status>303</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="mosso/{mossoId}" path="mosso/{mossoId}"><con:settings/><con:parameters><con:parameter><con:name>mossoId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="GET - userRedirect" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType xsi:nil="true"/><con:status>303</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="baseURLs" path="baseURLs"><con:settings/><con:parameters/><con:resource name="{baseURLId}" path="{baseURLId}"><con:settings/><con:parameters><con:parameter><con:name>baseURLId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="GET - getBaseURL" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:baseURL</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="enabled" path="enabled"><con:settings/><con:parameters/><con:method name="GET - getBaseURL" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:baseURL</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="GET - getBaseURLs" method="GET"><con:settings/><con:parameters><con:parameter><con:name>serviceName</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:baseURLs</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="GET - getVersionInfo" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:version</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="RAX-Impersonation" type="rest" basePath="" definitionUrl="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://localhost:8080</con:endpoint></con:endpoints><con:resource name="/RAX-AUTH" path="${#Project#path}/RAX-AUTH"><con:settings/><con:parameters/><con:resource name="impersonation-tokens" path="impersonation-tokens"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Impersonate User - impersonateUser" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0">v1:impersonation</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0">v1:access</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:8080</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="FoundationAPI_New" type="rest" basePath="" definitionUrl="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://localhost:9998</con:endpoint><con:endpoint>${#Project#Endpoint}</con:endpoint></con:endpoints><con:resource name="/" path="/"><con:settings/><con:parameters/><con:resource name="v1" path="${#Project#foundationPath}"><con:settings/><con:parameters/><con:resource name="tokens" path="tokens"><con:settings/><con:parameters/><con:resource name="{tokenId}" path="{tokenId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter required="true"><con:name>tokenId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="applications/{applicationId}" path="applications/{applicationId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>applicationId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="roles/{roleId}" path="roles/{roleId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>roleId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Check if Token has Role on an Application" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Check if Token has access to an Application" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Validate Token" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:auth</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:userDisabled</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Revoke Token" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:userDisabled</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Authenticate" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:authCredentials</con:element><con:description>Auth as Application Request: XML</con:description></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description>Auth as Application Request: JSON</con:description></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:auth</con:element><con:description>Auth as Application Response: XML</con:description></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description>Auth as Application Response: JSON</con:description></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403 400 401</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:userDisabled</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="users" path="users"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="{userId}" path="{userId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>userId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="secret" path="secret"><con:settings/><con:parameters/><con:method name="Get User Secret Q/A" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:userSecret</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Set User Secret Q/A" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:userSecret</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="passwordcredentials" path="passwordcredentials"><con:settings/><con:parameters/><con:resource name="recoverytoken" path="recoverytoken"><con:settings/><con:parameters/><con:method name="Get Password Recovery Token" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:token</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get User's Password" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:passwordCredentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Set User's Password" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:passwordCredentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Reset User's Password" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:passwordCredentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="applications" path="applications"><con:settings/><con:parameters/><con:resource name="{applicationId}" path="{applicationId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>applicationId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Provision an Application for a User" method="PUT"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Remove Provisioned Application from a User" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get the Applications that a User has Provisioned" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:applications</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="roles" path="roles"><con:settings/><con:parameters/><con:resource name="{roleId}" path="{roleId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>roleId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="tenants/{tenantId}" path="tenants/{tenantId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>tenantId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter required="true"><con:name>roleId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Grant User Role on Tenant" method="PUT"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500 404 403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Remove User's Tenant Role" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Grant User a Global Role" method="PUT"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500 401 404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Remove User's Global Role" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get User Global Roles" method="GET"><con:settings/><con:parameters><con:parameter><con:name>applicationId</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:roles</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="tenants" path="tenants"><con:settings/><con:parameters/><con:resource name="roles" path="roles"><con:settings/><con:parameters/><con:method name="Get User Tenants Roles" method="GET"><con:settings/><con:parameters><con:parameter><con:name>applicationId</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>tenantId</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:roles</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource><con:method name="Get a User" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Update a User" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete a User" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get Users" method="GET"><con:settings/><con:parameters><con:parameter><con:name>username</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>offset</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:users</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Add a User" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 201</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 401</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:passwordValidationFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>409</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:usernameConflict</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>409</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="applications" path="applications"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="{applicationId}" path="{applicationId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>applicationId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="secretcredentials" path="secretcredentials"><con:settings/><con:parameters/><con:method name="Reset Application's Secret" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:secretCredentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="applications" path="applications"><con:settings/><con:parameters/><con:resource name="{provisionedApplicationId}" path="{provisionedApplicationId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>provisionedApplicationId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="roles/{roleId}" path="roles/{roleId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>roleId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters></con:resource><con:method name="Provision an Application for an Application" method="PUT"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Remove Provisioned Application from an Application" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get the Applications that an Application has Provisioned" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:applications</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="roles" path="roles"><con:settings/><con:parameters/><con:resource name="{roleId}" path="{roleId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>roleId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="tenants/{tenantId}" path="tenants/{tenantId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>tenantId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter required="true"><con:name>roleId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Grant Application Role on Tenant" method="PUT"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Remove Application's Tenant Role" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Grant Application a Global Role" method="PUT"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Remove Application's Global Role" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get Application Global Roles" method="GET"><con:settings/><con:parameters><con:parameter><con:name>roleApplicationId</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:roles</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="tenants" path="tenants"><con:settings/><con:parameters/><con:resource name="roles" path="roles"><con:settings/><con:parameters/><con:method name="Get Application Tenants Roles" method="GET"><con:settings/><con:parameters><con:parameter><con:name>applicationId</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>tenantId</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:roles</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource><con:method name="Get an Application" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:application</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Update an Application" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:application</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:application</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete an Application" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get Applications" method="GET"><con:settings/><con:parameters><con:parameter><con:name>name</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>offset</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:applications</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Add an Application" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:application</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 201</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:application</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>409 400 401</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:applicationNameConflict</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>409</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="roles" path="roles"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="{roleId}" path="{roleId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>roleId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Get Role" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:role</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Modify a Role" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:role</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete a Role" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get All Roles" method="GET"><con:settings/><con:parameters><con:parameter><con:name>name</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>applicationId</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:roles</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Add a Role" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:role</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="customeridentityprofiles" path="customeridentityprofiles"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="{customerId}" path="{customerId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>customerId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="passwordrotationpolicy" path="passwordrotationpolicy"><con:settings/><con:parameters/><con:method name="Get Password Rotation Policy" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:passwordRotationPolicy</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Set Password Rotation Policy" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:passwordRotationPolicy</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="users" path="users"><con:settings/><con:parameters/><con:method name="Get Users" method="GET"><con:settings/><con:parameters><con:parameter><con:name>offset</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:users</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="applications" path="applications"><con:settings/><con:parameters/><con:method name="Get Applications" method="GET"><con:settings/><con:parameters><con:parameter><con:name>offset</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:applications</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get a Customer's Identity Profile" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:customerIdentityProfile</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete a Customer's Identity Profile" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Updates a Customer's Identity Profile" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:customerIdentityProfile</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Adds a Customer's Identity Profile" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:customerIdentityProfile</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>409</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:customerIdConflict</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>409</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="passwordrules" path="passwordrules"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="validation" path="validation"><con:settings/><con:parameters/><con:method name="Password Validation Check" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:userPassword</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:passwordValidation</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get Password Rules" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:passwordRuleResults</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="tenants" path="tenants"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="{tenantId}" path="{tenantId}"><con:settings/><con:parameters/><con:method name="Get Tenant" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:tenant</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="Modify a Tenant" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:tenant</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete a Tenant" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Add a Tenant" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:tenant</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500 401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:tenant</con:element></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Version Details" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:ser="http://service-registry.api.rackspace.com/service-profile">ser:contract</con:element><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Version Details" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:ser="http://service-registry.api.rackspace.com/service-profile">ser:service-profile</con:element><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="GA-SoftDelete" type="rest" basePath="" definitionUrl="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Endpoint}</con:endpoint></con:endpoints><con:resource name="v2.0" path="${#Project#pathSD}"><con:settings/><con:parameters/><con:resource name="softDeleted" path="softDeleted"><con:settings/><con:parameters/><con:resource name="users" path="users"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="{user_id}" path="{user_id}"><con:settings/><con:parameters><con:parameter required="true"><con:name>user_id</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Delete from soft delete - softDeleted" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>204</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 500 404 403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>204</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource><con:method name="Version Details - getVersionInfo" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/common/api/v1.0">v1:version</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="FoundationAuth-GA" type="rest" basePath="" definitionUrl="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://localhost:9998</con:endpoint><con:endpoint>${#Project#Endpoint}</con:endpoint></con:endpoints><con:resource name="idm" path=""><con:settings/><con:parameters/><con:resource name="v1.0" path="${#Project#foundationPath}"><con:settings/><con:parameters/><con:resource name="tokens" path="tokens"><con:settings/><con:parameters/><con:resource name="{tokenId}" path="{tokenId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter><con:parameter required="true"><con:name>tokenId</con:name><con:value/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter></con:parameters><con:resource name="applications/{applicationId}" path="applications/{applicationId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>applicationId</con:name><con:value/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter></con:parameters><con:resource name="roles/{roleId}" path="roles/{roleId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>roleId</con:name><con:value/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter></con:parameters><con:method name="Check if Token has Role on an Application - Check if Token has Role on an Application" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Check if Token has access to an Application - Check if Token has access to an Application" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Validate Token - Validate Token" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:auth</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:userDisabled</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Revoke Token - Revoke Token" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:userDisabled</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Authenticate - Authenticate" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:authCredentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:authCredentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:auth</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:userDisabled</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Authenticate RSA - Authenticate RSA" method="POST"><con:settings/><con:parameters/><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="users" path="users"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter></con:parameters><con:resource name="{userId}" path="{userId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>userId</con:name><con:value/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter></con:parameters><con:resource name="secret" path="secret"><con:settings/><con:parameters/><con:method name="Get User Secret - Get User Secret" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:userSecret</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Set User Secret - Set User Secret" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:userSecret</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:userSecret</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="passwordcredentials" path="passwordcredentials"><con:settings/><con:parameters/><con:resource name="recoverytoken" path="recoverytoken"><con:settings/><con:parameters/><con:method name="Get Password Recovery Token - Get Password Recovery Token" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:token</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get User's Password - Get User's Password" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:passwordCredentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Set User's Password - Set User's Password" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:passwordCredentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:passwordCredentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Reset User's Password - Reset User's Password" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:passwordCredentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="delegatedrefreshtokens" path="delegatedrefreshtokens"><con:settings/><con:parameters/><con:resource name="{tokenId}" path="{tokenId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>tokenId</con:name><con:value/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter></con:parameters><con:method name="Get a Delegated Refresh Token for a User - Get a Delegated Refresh Token for a User" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:delegatedToken</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete a Delegated Refresh Token for a User - Delete a Delegated Refresh Token for a User" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get a List of delegated refresh Tokens for a User - Get a List of delegated refresh Tokens for a User" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:delegatedTokens</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="applications" path="applications"><con:settings/><con:parameters/><con:resource name="{applicationId}" path="{applicationId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>applicationId</con:name><con:value/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter></con:parameters><con:method name="Provision an Application for a User - Provision an Application for a User" method="PUT"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Remove Provisioned Application from a User - Remove Provisioned Application from a User" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get the Applications that a User has Provisioned - Get the Applications that a User has Provisioned" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:applications</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="roles" path="roles"><con:settings/><con:parameters/><con:resource name="{roleId}" path="{roleId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>roleId</con:name><con:value/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter></con:parameters><con:method name="Grant User a Global Role - Grant User a Global Role" method="PUT"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Remove User's Global Role - Remove User's Global Role" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get User Global Roles - Get User Global Roles" method="GET"><con:settings/><con:parameters><con:parameter><con:name>applicationId</con:name><con:value/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:roles</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="tenants" path="tenants"><con:settings/><con:parameters/><con:resource name="roles" path="roles"><con:settings/><con:parameters/><con:method name="Get User Tenants Roles - Get User Tenants Roles" method="GET"><con:settings/><con:parameters><con:parameter><con:name>applicationId</con:name><con:value/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter><con:parameter><con:name>tenantId</con:name><con:value/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:roles</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="{tenantId}/roles/{roleId}" path="{tenantId}/roles/{roleId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>tenantId</con:name><con:value/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter><con:parameter required="true"><con:name>roleId</con:name><con:value/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter></con:parameters><con:method name="Grant User Role on Tenant - Grant User Role on Tenant" method="PUT"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500 404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Revoke a User Role on Tenant - Revoke a User Role on Tenant" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource><con:method name="Get a User - Get a User" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Update a User - Update a User" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete a User - Delete a User" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get Users - Get Users" method="GET"><con:settings/><con:parameters><con:parameter><con:name>username</con:name><con:value/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter><con:parameter><con:name>offset</con:name><con:value/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default/></con:parameter><con:parameter><con:name>limit</con:name><con:value/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:users</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Add a User - Add a User" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:passwordValidationFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>409</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:usernameConflict</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>409</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="applications" path="applications"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter></con:parameters><con:resource name="{applicationId}" path="{applicationId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>applicationId</con:name><con:value/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter></con:parameters><con:resource name="secretcredentials" path="secretcredentials"><con:settings/><con:parameters/><con:method name="Reset Application's Secret - Reset Application's Secret" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:secretCredentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="applications" path="applications"><con:settings/><con:parameters/><con:resource name="{provisionedApplicationId}" path="{provisionedApplicationId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>provisionedApplicationId</con:name><con:value/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter></con:parameters><con:resource name="roles/{roleId}" path="roles/{roleId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>roleId</con:name><con:value/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter></con:parameters></con:resource><con:method name="Provision an Application for an Application - Provision an Application for an Application" method="PUT"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Remove Provisioned Application from an Application - Remove Provisioned Application from an Application" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get the Applications that an Application has Provisioned - Get the Applications that an Application has Provisioned" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:applications</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="roles" path="roles"><con:settings/><con:parameters/><con:resource name="{roleId}" path="{roleId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>roleId</con:name><con:value/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter></con:parameters><con:method name="Grant Application a Global Role - Grant Application a Global Role" method="PUT"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Remove Application's Global Role - Remove Application's Global Role" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get Application Global Roles - Get Application Global Roles" method="GET"><con:settings/><con:parameters><con:parameter><con:name>applicationId</con:name><con:value/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter><con:parameter><con:name>appId</con:name><con:value/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:roles</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="tenants" path="tenants"><con:settings/><con:parameters/><con:resource name="roles" path="roles"><con:settings/><con:parameters/><con:method name="Get Application Tenants Roles - Get Application Tenants Roles" method="GET"><con:settings/><con:parameters><con:parameter><con:name>applicationId</con:name><con:value/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter><con:parameter><con:name>tenantId</con:name><con:value/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:roles</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="{tenantId}/roles/{roleId}" path="{tenantId}/roles/{roleId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>tenantId</con:name><con:value/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter><con:parameter required="true"><con:name>roleId</con:name><con:value/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter></con:parameters><con:method name="Grant Application Role on Tenant - Grant Application Role on Tenant" method="PUT"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Revoke an Application Role on Tenant - Revoke an Application Role on Tenant" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource><con:method name="Get an Application - Get an Application" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:application</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Update an Application - Update an Application" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:application</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:application</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:application</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete an Application - Delete an Application" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get Applications - Get Applications" method="GET"><con:settings/><con:parameters><con:parameter><con:name>name</con:name><con:value/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter><con:parameter><con:name>offset</con:name><con:value/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default/></con:parameter><con:parameter><con:name>limit</con:name><con:value/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:applications</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Add an Application - Add an Application" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:application</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:application</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:application</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>409</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:applicationNameConflict</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>409</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="roles" path="roles"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter></con:parameters><con:resource name="{roleId}" path="{roleId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>roleId</con:name><con:value/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter></con:parameters><con:method name="Get Role - Get Role" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:role</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Modify a Role - Modify a Role" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:role</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:role</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete a Role - Delete a Role" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get All Roles - Get All Roles" method="GET"><con:settings/><con:parameters><con:parameter><con:name>name</con:name><con:value/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter><con:parameter><con:name>applicationId</con:name><con:value/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:roles</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Add a Role - Add a Role" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:role</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:role</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="customeridentityprofiles" path="customeridentityprofiles"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter></con:parameters><con:resource name="{customerId}" path="{customerId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>customerId</con:name><con:value/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter></con:parameters><con:resource name="passwordrotationpolicy" path="passwordrotationpolicy"><con:settings/><con:parameters/><con:method name="Get Password Rotation Policy - Get Password Rotation Policy" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:passwordRotationPolicy</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Set Password Rotation Policy - Set Password Rotation Policy" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:passwordRotationPolicy</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:passwordRotationPolicy</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="users" path="users"><con:settings/><con:parameters/><con:method name="Get Users - Get Users" method="GET"><con:settings/><con:parameters><con:parameter><con:name>offset</con:name><con:value/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default/></con:parameter><con:parameter><con:name>limit</con:name><con:value/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:users</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="applications" path="applications"><con:settings/><con:parameters/><con:method name="Get Applications - Get Applications" method="GET"><con:settings/><con:parameters><con:parameter><con:name>offset</con:name><con:value/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default/></con:parameter><con:parameter><con:name>limit</con:name><con:value/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:applications</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Adds a Customer's Identity Profile - Adds a Customer's Identity Profile" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:customerIdentityProfile</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:customerIdentityProfile</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>409</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:customerIdConflict</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>409</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Get a Customer's Identity Profile - Get a Customer's Identity Profile" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:customerIdentityProfile</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete a Customer's Identity Profile - Delete a Customer's Identity Profile" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Updates a Customer's Identity Profile - Updates a Customer's Identity Profile" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:customerIdentityProfile</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:customerIdentityProfile</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Add Customer Identity Profile - Add Customer Identity Profile" method="POST"><con:settings/><con:parameters/><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="passwordrules" path="passwordrules"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter></con:parameters><con:resource name="validation" path="validation"><con:settings/><con:parameters/><con:method name="Password Validation Check - Password Validation Check" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:userPassword</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:userPassword</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:customerIdentityProfile</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get Password Rules - Get Password Rules" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:passwordRuleResults</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="tenants" path="tenants"><con:settings/><con:parameters/><con:resource name="tenantId" path="{tenantId}"><con:settings/><con:parameters><con:parameter><con:name>X-Auth-Token</con:name><con:value/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter><con:parameter><con:name>tenantId</con:name><con:value/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter></con:parameters><con:method name="getTenant - getTenant" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="updateTenant - updateTenant" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="delete tenant - delete tenant" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="add Tenant - add Tenant" method="POST"><con:settings/><con:parameters><con:parameter><con:name>X-Auth-Token</con:name><con:value/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter></con:parameters><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="racker" path="rackers"><con:settings/><con:parameters/><con:resource name="rackerId" path="{rackerId}"><con:settings/><con:parameters><con:parameter><con:name>rackerId</con:name><con:value/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter></con:parameters><con:method name="deleteRacker - deleteRacker" method="DELETE"><con:settings/><con:parameters><con:parameter><con:name>X-Auth-Token</con:name><con:value/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter></con:parameters><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource><con:method name="Version Details - Version Details" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:ser="http://service-registry.api.rackspace.com/service-profile">ser:service-profile</con:element><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Migration Resource" type="rest" definitionUrl="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Endpoint}</con:endpoint></con:endpoints><con:resource name="MigrateUser" path="${#Project#migrationPath}/users/{username}"><con:settings/><con:parameters/><con:method name="migrateUser" method="POST"><con:settings/><con:parameters><con:parameter><con:name>username</con:name><con:style>TEMPLATE</con:style></con:parameter></con:parameters><con:request name="Request 1" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="unmigrate" path="${#Project#migrationPath}/users/{username}/unmigrate"><con:settings/><con:parameters/><con:method name="unmigrateUser" method="POST"><con:settings/><con:parameters><con:parameter><con:name>username</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:request name="Request 1" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Atom Hopper" type="rest" basePath="" definitionUrl="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://localhost:35357</con:endpoint><con:endpoint>${#Project#atomHopperEndPoint}</con:endpoint></con:endpoints><con:resource name="{path}" path="${#Project#AHpath1}"><con:settings/><con:parameters/><con:method name="GET - listAtomHopperDeleted" method="GET"><con:settings/><con:parameters/><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="{path2}" path="${#Project#AHpath2}"><con:settings/><con:parameters/><con:method name="GET - listAtomHopperDisabled" method="GET"><con:settings/><con:parameters/><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:interface><con:testSuite name="Functional - identity-admin"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="tenants" searchProperties="true" id="efa3c2c2-aaf4-4d3d-b016-42497ff5c4ba" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="POST - token - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#password}" username="${#TestSuite#username}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XQuery Match" name="XQuery Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1])</path><content>1</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XQuery Match" name="XQuery Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token[1])</path><content>1</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XQuery Match" name="XQuery Match 2"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token[1]/@id)</path><content>1</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token info"><con:settings/><con:config><script>def tokenId = context.expand( '${POST - token - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info "get TokenId: " + tokenId
def userId = context.expand( '${POST - token - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/@id}' )
log.info "get UserId: " + userId

if (tokenId == "" | userId == "")
{
	assert false;	
}
testRunner.testCase.testSuite.setPropertyValue("tokenId", tokenId)
testRunner.testCase.testSuite.setPropertyValue("userId", userId)</script></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>body1</con:name><con:sourceType>addApikeyCredentialsResponse-xml</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addUserCredentials - xml</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUserCredentials - xml" disabled="true"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Add user Credential. - addUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUserCredentials - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;apiKeyCredentials username="${#TestSuite#username2}" apiKey="${#TestSuite#apiKey}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>apiKey="${#TestSuite#apiKey}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 2"><con:configuration><token>username="${#TestSuite#username2}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" disabled="true"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:RAX-KSKEY:apiKeyCredentials)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>apiKeyCredentials</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - nonAdmin - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - nonAdmin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0"> &lt;apiKeyCredentials apiKey="${#TestSuite#apiKey}" username="${#TestSuite#username2}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/> &lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XQuery Match" name="XQuery Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access)</path><content>1</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XQuery Match" name="XQuery Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token[1])</path><content>1</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XQuery Match" name="XQuery Match 2"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token[1]/@id)</path><content>1</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>&lt;roles></token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:user[1]/ns1:roles[1]/ns1:role) >= 1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token info 2"><con:settings/><con:config><script>def tokenId = context.expand( '${POST - token - nonAdmin - xml#ResponseAsXml#declare namespace ns8=\'http://docs.openstack.org/identity/api/v2.0\'; //ns8:access[1]/ns8:token[1]/@id}' )
log.info "get TokenId: " + tokenId
def userId = context.expand( '${POST - token - nonAdmin - xml#ResponseAsXml#declare namespace ns8=\'http://docs.openstack.org/identity/api/v2.0\'; //ns8:access[1]/ns8:user[1]/@id}' )

log.info "get UserId: " + userId

if (tokenId == "" | userId == "")
{
	assert false;	
}
testRunner.testCase.testSuite.setPropertyValue("tokenId2", tokenId)
testRunner.testCase.testSuite.setPropertyValue("userId2", userId)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants - xml"><con:settings/><con:config service="identity-admin" methodName="Get Tenants - listTenants" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - tenants - xml - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>tenants</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" disabled="true"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:tenants[1]/ns1:tenant)>1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store tenant info" disabled="true"><con:settings/><con:config><script>def tenantId = context.expand( '${GET - tenants - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:tenants[1]/ns1:tenant[1]/@id}' )
def tenantName = context.expand( '${GET - tenants - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:tenants[1]/ns1:tenant[1]/@name}' )
log.info "get tenantId: " + tenantId
log.info "get tenantName: " + tenantName
if (tenantId == "" || tenantName == "")
{
	assert false;	
}

testRunner.testCase.testSuite.setPropertyValue("tenantId", tenantId)
testRunner.testCase.testSuite.setPropertyValue("tenantName", tenantName)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants - json"><con:settings/><con:config service="identity-admin" methodName="Get Tenants - listTenants" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - tenants - xml - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>"tenants":[{"id"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" disabled="true"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/tenants';
count(//ns1:Response[1]/ns1:tenants[1]/ns1:e)>1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants by Name - xml"><con:settings/><con:config service="identity-admin" methodName="Get tenants by name - getTenantByName" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants by Name - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>name="${#TestSuite#tenantName}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:tenant) >=1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:tenant[1]/@id</path><content>${#TestSuite#tenantId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestSuite#tenantName}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants by Name - json"><con:settings/><con:config service="identity-admin" methodName="Get tenants by name - getTenantByName" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants by Name - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>"name":"${#TestSuite#tenantName}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#endpointjson}/${#Project#path}/tenants';
count(//ns1:tenant)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/tenants';
count(//ns1:Response[1]/ns1:tenant[1]/ns1:name) >=1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>{"tenant":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestSuite#tenantName}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants by Id - xml"><con:settings/><con:config service="identity-admin" methodName="Get Tenants by ID - getTenantById" resourcePath="/${#Project#path}/tenants/{tenantId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants by Id - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>id="${#TestSuite#tenantId}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:tenant[1]/@id</path><content>${#TestSuite#tenantId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants by Id - json"><con:settings/><con:config service="identity-admin" methodName="Get Tenants by ID - getTenantById" resourcePath="/${#Project#path}/tenants/{tenantId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants by Id - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>"id":"${#TestSuite#tenantId}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/tenants/${#TestSuite#tenantId}';
//ns1:Response[1]/ns1:tenant[1]/ns1:id</path><content>${#TestSuite#tenantId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/tenants/${#TestSuite#tenantId}';
count(//ns1:Response[1]/ns1:tenant[1]/ns1:id) >= 1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>{"tenant":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants- limit - xml" disabled="true"><con:settings/><con:config service="identity-admin" methodName="Get Tenants - listTenants" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants- limit - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - tenants - xml - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns2='http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0';
declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:tenant)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="limit" value="${#TestCase#limit}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants- limit - json" disabled="true"><con:settings/><con:config service="identity-admin" methodName="Get Tenants - listTenants" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants- limit - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - tenants - xml - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#endpointjson}/${#Project#path}/tenants';
count(//ns1:created)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="limit" value="${#TestCase#limit}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants - limit&amp;marker - xml" disabled="true"><con:settings/><con:config service="identity-admin" methodName="Get Tenants - listTenants" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants - limit&amp;marker - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - tenants - xml - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns2='http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0';
declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:tenant)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="limit" value="${#TestCase#limit}"/>
  <con:entry key="marker" value="${#TestCase#marker}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants- limit&amp;marker - json" disabled="true"><con:settings/><con:config service="identity-admin" methodName="Get Tenants - listTenants" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants- limit&amp;marker - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - tenants - xml - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#endpointjson}/${#Project#path}/tenants';
count(//ns1:created)</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="limit" value="${#TestCase#limit}"/>
  <con:entry key="marker" value="${#TestCase#marker}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants - wrong X-Auth-Token - xml"><con:settings/><con:config service="identity-admin" methodName="Get Tenants - listTenants" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants - wrong X-Auth-Token - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401
log.info "GET - tenants - Wrong X-Auth-Token - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains"><con:configuration><token>tenant </token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="qwer" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants - wrong X-Auth-Token - json"><con:settings/><con:config service="identity-admin" methodName="Get Tenants - listTenants" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants - wrong X-Auth-Token - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401
log.info "GET - tenants - Wrong X-Auth-Token - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains"><con:configuration><token>tenant </token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" disabled="true"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/tenants';
count(//ns1:Response[1]/ns1:tenants[1])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="qwer" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants by Name - badname 404 - xml"><con:settings/><con:config service="identity-admin" methodName="Get tenants by name - getTenantByName" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants by Name - badname 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>Tenant with id/name: 'badname' was not found</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>Tenant with id/name: 'badname' was not found.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:itemNotFound[1]/ns1:message[1]</path><content>Tenant with id/name: 'badname' was not found.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="badname"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants by Name - badname 404 - json"><con:settings/><con:config service="identity-admin" methodName="Get tenants by name - getTenantByName" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants by Name - badname 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Tenant with id/name: 'badname' was not found</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/tenants';
//ns1:Fault[1]/ns1:itemNotFound[1]/ns1:code[1]</path><content>404</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>{"itemNotFound":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/tenants';
count(//ns1:Fault[1]/ns1:itemNotFound[1]/ns1:code[1])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="badname"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants by Id - badId - xml"><con:settings/><con:config service="identity-admin" methodName="Get Tenants by ID - getTenantById" resourcePath="/${#Project#path}/tenants/{tenantId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants by Id - badId - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Tenant with id/name: '1212121' was not found.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:itemNotFound[1]/@code</path><content>404</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="1212121"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants by Id - badId - json"><con:settings/><con:config service="identity-admin" methodName="Get Tenants by ID - getTenantById" resourcePath="/${#Project#path}/tenants/{tenantId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants by Id - badId - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Tenant with id/name: '121212' was not found.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/tenants/121212';
//ns1:Fault[1]/ns1:itemNotFound[1]/ns1:code[1]</path><content>404</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>{"itemNotFound":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants- limit - zero - xml" disabled="true"><con:settings/><con:config service="identity-admin" methodName="Get Tenants - listTenants" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants- limit - zero - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - tenants - xml - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns2='http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0';
declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:tenant)</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="limit" value="0"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants- limit - zero - json" disabled="true"><con:settings/><con:config service="identity-admin" methodName="Get Tenants - listTenants" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants- limit - zero - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - tenants - xml - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#endpointjson}/${#Project#path}/tenants';
count(//ns1:created)</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="limit" value="0"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants - limit&amp;marker - out of range - xml" disabled="true"><con:settings/><con:config service="identity-admin" methodName="Get Tenants - listTenants" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants - limit&amp;marker - out of range - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - tenants - xml - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns2='http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0';
declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:tenant)</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="limit" value="${#TestCase#limit}"/>
  <con:entry key="marker" value="3"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants - limit&amp;marker - out of range - json" disabled="true"><con:settings/><con:config service="identity-admin" methodName="Get Tenants - listTenants" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants - limit&amp;marker - out of range - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - tenants - xml - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#endpointjson}/${#Project#path}/tenants';
count(//ns1:created)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="limit" value="${#TestSuite#limit}"/>
  <con:entry key="marker" value="3"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants - badLimit - xml" disabled="true"><con:settings/><con:config service="identity-admin" methodName="Get Tenants - listTenants" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants - badLimit - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - tenants - xml - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>tenants</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="limit" value="qw"/>
  <con:entry key="marker" value="${#TestCase#marker}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants - badLimit - json" disabled="true"><con:settings/><con:config service="identity-admin" methodName="Get Tenants - listTenants" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants - badLimit - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - tenants - xml - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>tenants</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="limit" value="qw"/>
  <con:entry key="marker" value="${#TestCase#marker}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants - non Admin token - xml"><con:settings/><con:config service="identity-admin" methodName="Get Tenants - listTenants" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants - non Admin token - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - tenants - Wrong X-Auth-Token - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:tenants[1]/ns1:tenant) >=1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="REST Test Request"><con:settings/><con:config service="Migration Resource" resourcePath="/${#Project#migrationPath}/users/{username}/unmigrate" methodName="unmigrateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="REST Test Request" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="username" value="manthan" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants - non Admin token - json"><con:settings/><con:config service="identity-admin" methodName="Get Tenants - listTenants" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants - non Admin token - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - tenants - Wrong X-Auth-Token - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"tenants":[{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/tenants';
count(//ns1:Response[1]/ns1:tenants[1])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>limit</con:name><con:value>1</con:value></con:property><con:property><con:name>marker</con:name><con:value>1</con:value></con:property><con:property><con:name>addApikeyCredentialsResponse-xml</con:name><con:value>&lt;apiKeyCredentials username="${#TestSuite#username2}" apiKey="${#TestSuite#apiKey}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/></con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="version" searchProperties="true" id="5df28986-4aef-4a50-a822-bd2260632d0c" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="GET - getVersion - xml"><con:settings/><con:config service="identity-admin" methodName="Version Details - getVersionInfo" resourcePath="/${#Project#path}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getVersion - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - getVersionInfo - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>id="v2.0"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/common/api/v1.0';
//ns1:version[1]/@id</path><content>v2.0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns5='http://docs.openstack.org/common/api/v1.0';
//ns5:version[1]/@status</path><content>CURRENT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getVersion - json"><con:settings/><con:config service="identity-admin" methodName="Version Details - getVersionInfo" resourcePath="/${#Project#path}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getVersion - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - getVersionInfo - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>"id":"v2.0"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>{"version":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}';
count(//ns1:Response[1]/ns1:version[1]/ns1:id[1])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 2"><con:configuration><token>"id":"v2.0"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='${#Project#EndpointJson}/${#Project#path}';
//ns1:Response[1]/ns1:version[1]/ns1:status[1]</path><content>CURRENT</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="tokens" searchProperties="true" id="d4f7f665-0d1c-4b6d-a0a5-d1cfd3f08c4a" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="POST - token - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#password}" username="${#TestSuite#username}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>token id="</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access/ns1:token/@id)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="transfer request"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>body-json</con:name><con:sourceType>request1</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - token - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" transferChildNodes="false" useXQuery="false" ignoreEmpty="false"><con:name>bodyAuthjson</con:name><con:sourceType>requestjson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - token - w/ token Id - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false"><con:name>body1xml</con:name><con:sourceType>request1xml</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - token - apiKey -  xml</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body1json</con:name><con:sourceType>tokenApiKeyjson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - token - apiKey -  json</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - json"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="RecordRequestRepresentations">true</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@remove_empty_content">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "auth":{ "passwordCredentials":{ "username":"${#TestSuite#username}", "password":"${#TestSuite#password}" } } }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"access":{"token":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/tokens';
//ns1:Response[1]/ns1:access[1]/ns1:serviceCatalog/ns1:e/ns1:name</path><content>cloudServers</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/tokens';
count(//ns1:Response[1]/ns1:access[1]/ns1:token) >=1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>{"endpoints":[{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 2"><con:configuration><token>"roles":[{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 3"><con:configuration><token>"serviceCatalog":[{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:attachment><con:name>POST-token-json</con:name><con:contentType>application/octet-stream</con:contentType><con:size>113</con:size><con:contentId>POST-token-json</con:contentId><con:data>UEsDBBQACAAIADVaPT8AAAAAAAAAAAAAAAAPAAAAUE9TVC10b2tlbi1qc29uq+ZSSiwtyVCyquZSKkgsLi7PL0pxLkpNSc0ryUzMKQaLlxanFuUl5qYqWSmpVCuHpBaXBJdmlqQqw8RrlXQQmtEVwcRrlbhqQRAAUEsHCGdWAupLAAAAcQAAAFBLAQIUABQACAAIADVaPT9nVgLqSwAAAHEAAAAPAAAAAAAAAAAAAAAAAAAAAABQT1NULXRva2VuLWpzb25QSwUGAAAAAAEAAQA9AAAAiAAAAAAA</con:data></con:attachment><con:attachment><con:name>POST-token-json</con:name><con:contentType>application/octet-stream</con:contentType><con:size>113</con:size><con:contentId>POST-token-json</con:contentId><con:data>UEsDBBQACAAIAEFaPT8AAAAAAAAAAAAAAAAPAAAAUE9TVC10b2tlbi1qc29uq+ZSSiwtyVCyquZSKkgsLi7PL0pxLkpNSc0ryUzMKQaLlxanFuUl5qYqWSmpVCuHpBaXBJdmlqQqw8RrlXQQmtEVwcRrlbhqQRAAUEsHCGdWAupLAAAAcQAAAFBLAQIUABQACAAIAEFaPT9nVgLqSwAAAHEAAAAPAAAAAAAAAAAAAAAAAAAAAABQT1NULXRva2VuLWpzb25QSwUGAAAAAAEAAQA9AAAAiAAAAAAA</con:data></con:attachment><con:attachment><con:name>POST-token-json.xml</con:name><con:contentType>text/xml</con:contentType><con:size>113</con:size><con:contentId>POST-token-json.xml</con:contentId><con:data>UEsDBBQACAAIAEtaPT8AAAAAAAAAAAAAAAATAAAAUE9TVC10b2tlbi1qc29uLnhtbKvmUkosLclQsqrmUipILC4uzy9KcS5KTUnNK8lMzCkGi5cWpxblJeamKlkpqVQrh6QWlwSXZpakKsPEa5V0EJrRFcHEa5W4akEQAFBLBwhnVgLqSwAAAHEAAABQSwECFAAUAAgACABLWj0/Z1YC6ksAAABxAAAAEwAAAAAAAAAAAAAAAAAAAAAAUE9TVC10b2tlbi1qc29uLnhtbFBLBQYAAAAAAQABAEEAAACMAAAAAAA=</con:data></con:attachment><con:attachment><con:name>POST-token-json</con:name><con:contentType>application/octet-stream</con:contentType><con:size>113</con:size><con:contentId>POST-token-json</con:contentId><con:data>UEsDBBQACAAIANpdPT8AAAAAAAAAAAAAAAAPAAAAUE9TVC10b2tlbi1qc29uq+ZSSiwtyVCyquZSKkgsLi7PL0pxLkpNSc0ryUzMKQaLlxanFuUl5qYqWSmpVCuHpBaXBJdmlqQqw8RrlXQQmtEVwcRrlbhqQRAAUEsHCGdWAupLAAAAcQAAAFBLAQIUABQACAAIANpdPT9nVgLqSwAAAHEAAAAPAAAAAAAAAAAAAAAAAAAAAABQT1NULXRva2VuLWpzb25QSwUGAAAAAAEAAQA9AAAAiAAAAAAA</con:data></con:attachment><con:attachment><con:name>POST-token-json.xml</con:name><con:contentType>text/xml</con:contentType><con:size>113</con:size><con:contentId>POST-token-json.xml</con:contentId><con:data>UEsDBBQACAAIAEZfPT8AAAAAAAAAAAAAAAATAAAAUE9TVC10b2tlbi1qc29uLnhtbKvmUkosLclQsqrmUipILC4uzy9KcS5KTUnNK8lMzCkGi5cWpxblJeamKlkpqVQrh6QWlwSXZpakKsPEa5V0EJrRFcHEa5W4akEQAFBLBwhnVgLqSwAAAHEAAABQSwECFAAUAAgACABGXz0/Z1YC6ksAAABxAAAAEwAAAAAAAAAAAAAAAAAAAAAAUE9TVC10b2tlbi1qc29uLnhtbFBLBQYAAAAAAQABAEEAAACMAAAAAAA=</con:data></con:attachment><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - apiKey -  xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - apiKey -  xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0"> &lt;apiKeyCredentials xmlns= "http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0" username="${#TestSuite#username2}" apiKey="${#TestSuite#apiKey}" /> &lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>&lt;token id=</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token) >=1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token/@id) = 1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - apiKey -  json"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - apiKey -  json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "auth":{ "RAX-KSKEY:apiKeyCredentials":{ "username":"${#TestSuite#username2}", "apiKey":"${#TestSuite#apiKey}" } } }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"access":{"token":{"id":</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/tokens';
count(/ns1:Response[1]/ns1:access[1]/ns1:token) >=1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - w/ token Id - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - w/ token Id - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantName="${#TestSuite#tenantName}" xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;token id="${#TestSuite#tokenId}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>token id=</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:token[1]/@id</path><content>${#TestSuite#tokenId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - w/ token Id - json"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - w/ token Id - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"auth": { "tenantName": "${#TestSuite#tenantName}", "token": { "id": "${#TestSuite#tokenId}" } } } </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"access":{"token":{"id":</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/tokens';
count(//ns1:Response[1]/ns1:access)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/tokens';
//ns1:Response[1]/ns1:access[1]/ns1:token[1]/ns1:id</path><content>${#TestSuite#tokenId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - validate - xml"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - validate - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>token</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>roles</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:token[1]/@id</path><content>${#TestSuite#tokenId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - validate - json"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - validate - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"access":{"token":{"id":</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/tokens/${#TestSuite#tokenId}';
count(//ns1:Response[1]/ns1:access[1]/ns1:token[1])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1" disabled="true"><con:configuration><path>declare namespace ns1='${#Project#Endpoint}/${#Project#Path}/tokens/${#TestSuite#tokenId}';
//ns1:Response[1]/ns1:access[1]/ns1:token[1]/ns1:id</path><content>${#TestSuite#tokenId}
</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store Tenant"><con:settings/><con:config><script>def tenantId = context.expand( '${GET - tokenById - validate - xml#ResponseAsXml#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:user[1]/ns7:roles[1]/ns7:role[1]/@tenantId}' )

testRunner.testCase.testSuite.setPropertyValue("tenantIdAdmin", tenantId)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - validate - belongsTo - xml"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - validate - belongsTo - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestSuite#tokenId}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:token[1]/@id</path><content>${#TestSuite#tokenId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="belongsTo" value="${#TestSuite#tenantIdAdmin}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - validate - belongsTo - json"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - validate - belongsTo - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestSuite#tokenId}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>{"access":{"token":{"id":"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/tokens/${#TestSuite#tokenId}';
//ns1:Response[1]/ns1:access[1]/ns1:token[1]/ns1:id[1]</path><content>${#TestSuite#tokenId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="belongsTo" value="${#TestSuite#tenantIdAdmin}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - check - xml"><con:settings/><con:config service="identity-admin" methodName="Check Token - checkToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - check - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - check - json"><con:settings/><con:config service="identity-admin" methodName="Check Token - checkToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - check - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="HEAD - tokenById - check - belongsTo - xml"><con:settings/><con:config service="identity-admin" methodName="Check Token - checkToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="HEAD - tokenById - check - belongsTo - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="belongsTo" value="${#TestSuite#tenantIdAdmin}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="HEAD - tokenById - check - belongsTo - json"><con:settings/><con:config service="identity-admin" methodName="Check Token - checkToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="HEAD - tokenById - check - belongsTo - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="belongsTo" value="${#TestSuite#tenantIdAdmin}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - listEndPointsForToken - xml"><con:settings/><con:config service="identity-admin" methodName="List Endoints for a Token - listEndpointsForToken" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - listEndPointsForToken - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>id="</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" disabled="true"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:endpoints[1]/ns1:endpoint) > 1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - listEndPointsForToken - json"><con:settings/><con:config service="identity-admin" methodName="List Endoints for a Token - listEndpointsForToken" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - listEndPointsForToken - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>{"endpoints":[{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/tokens/${#TestSuite#tokenId}/endpoints';
count(//ns1:Response[1]/ns1:endpoints[1]) >=1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - listEndPointsForToken - belongsTo - xml" disabled="true"><con:settings/><con:config service="identity-admin" methodName="List Endoints for a Token - listEndpointsForToken" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - listEndPointsForToken - belongsTo - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>endpoint id="</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="belongsTo" value="${#TestSuite#tenantId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - listEndPointsForToken - belongsTo - json" disabled="true"><con:settings/><con:config service="identity-admin" methodName="List Endoints for a Token - listEndpointsForToken" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - listEndPointsForToken - belongsTo - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>endpoint":[{"id":</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="belongsTo" value="${#TestSuite#tenantId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - bad user - 404 -xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - bad user - 404 -xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#password}" username="badUser"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401
</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Unable to authenticate user with credentials provided.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="transfer bad request"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>body-json</con:name><con:sourceType>badrequest1</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - token - bad user - 404 - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>body-badpassword-json</con:name><con:sourceType>badrequest2</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - token - no password - 400 - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body2badpasswordjson</con:name><con:sourceType>request1badpassword</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - token - badpassword 401 - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body1nouserjson</con:name><con:sourceType>badrequest2nouser</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - token - no user- 400 - json</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - bad user - 404 - json"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - bad user - 404 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "auth":{ "passwordCredentials":{ "username":"badUser", "password":"${#TestSuite#password}" } } }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Unable to authenticate user with credentials provided.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - badpassword 401 - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - badpassword 401 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="badpassword" username="${#TestSuite#username2}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Unable to authenticate user with credentials provided.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:unauthorized[1]/@code</path><content>401</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - badpassword 401 - json"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - badpassword 401 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "auth":{ "passwordCredentials":{ "username":"${#TestSuite#username2}", "password":"badpassword" } } }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Unable to authenticate user with credentials provided.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1" disabled="true"><con:configuration><token>Invalid username or password.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - no user- 400 - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - no user- 400 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="Password1"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400
log.info "POST - authentication - no user - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Expecting username</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:badRequest[1]/@code</path><content>400</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - no user- 400 - json"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - no user- 400 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "auth":{ "passwordCredentials":{ "password":"${#TestSuite#password}" } } }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400
log.info "POST - authentication - no user - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Expecting username</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - no password - 400 - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - no password - 400 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials username="cmarin1"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400
log.info "POST - authentication - no user - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Expecting password</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:badRequest[1]/@code</path><content>400</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - no password - 400 - json"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - no password - 400 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "auth":{ "passwordCredentials":{ "username":"${#TestSuite#username}" } } }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400
log.info "POST - authentication - no body - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Expecting password</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/tokens';
//ns1:Fault[1]/ns1:badRequest[1]/ns1:code</path><content>400</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - auth - no body - 400 - xml" disabled="true"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - auth - no body - 400 - xml" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:auth xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 405
log.info "POST - authentication - no body - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - validate - badId 404 - xml"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - validate - badId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Invalid Token, not found.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns2='http://docs.openstack.org/identity/api/v2.0';
//ns2:itemNotFound[1]/@code</path><content>404</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#badTokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - validate - badId 404 - json"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - validate - badId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Invalid Token, not found.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/tokens/1010';
//ns1:Fault[1]/ns1:itemNotFound[1]/ns1:code[1]</path><content>404</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#badTokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - validate - badBelongsTo 404 - xml"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - validate - badBelongsTo 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Token doesn't belong to Tenant with Id/Name: '${#TestCase#badTenantId}'</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:itemNotFound[1]/@code</path><content>404</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="belongsTo" value="${#TestCase#badTenantId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - validate - badBelongsTo 404 - json"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - validate - badBelongsTo 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Token doesn't belong to Tenant with Id/Name: '${#TestCase#badTenantId}'</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/tokens/${#TestSuite#tokenId}';
//ns1:Fault[1]/ns1:itemNotFound[1]/ns1:code[1]</path><content>404</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="belongsTo" value="${#TestCase#badTenantId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - check - badId 404 - xml"><con:settings/><con:config service="identity-admin" methodName="Check Token - checkToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - check - badId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#badTokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - check - badId 404 - json"><con:settings/><con:config service="identity-admin" methodName="Check Token - checkToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - check - badId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#badTokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="HEAD - tokenById - check - badBelongsTo 404 - xml"><con:settings/><con:config service="identity-admin" methodName="Check Token - checkToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="HEAD - tokenById - check - badBelongsTo 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="belongsTo" value="${#TestCase#badTenantId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="HEAD - tokenById - check - badBelongsTo 404 - json"><con:settings/><con:config service="identity-admin" methodName="Check Token - checkToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="HEAD - tokenById - check - badBelongsTo 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="belongsTo" value="${#TestCase#badTenantId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - listEndPointsForToken - badId 404 - xml"><con:settings/><con:config service="identity-admin" methodName="List Endoints for a Token - listEndpointsForToken" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - listEndPointsForToken - badId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Invalid Token, not found.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:itemNotFound[1]/@code</path><content>404</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#badTokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - listEndPointsForToken - badId 404 - json"><con:settings/><con:config service="identity-admin" methodName="List Endoints for a Token - listEndpointsForToken" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - listEndPointsForToken - badId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Invalid Token, not found.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#badTokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - listEndPointsForToken - badBelongsTo 200 - xml"><con:settings/><con:config service="identity-admin" methodName="List Endoints for a Token - listEndpointsForToken" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - listEndPointsForToken - badBelongsTo 200 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>id="</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="belongsTo" value="${#TestCase#badTenantId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - listEndPointsForToken - badBelongsTo 200 - json"><con:settings/><con:config service="identity-admin" methodName="List Endoints for a Token - listEndpointsForToken" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - listEndPointsForToken - badBelongsTo 200 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"endpoints":</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="belongsTo" value="${#TestCase#badTenantId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - validate - badAuthToken 401 - xml"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - validate - badAuthToken 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#badAuthToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - validate - badAuthToken 401 - json"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - validate - badAuthToken 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#badAuthToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="HEAD - tokenById - check - badAuthToken 401- xml"><con:settings/><con:config service="identity-admin" methodName="Check Token - checkToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="HEAD - tokenById - check - badAuthToken 401- xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#badAuthToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="HEAD - tokenById - check - badAuthToken 401- json"><con:settings/><con:config service="identity-admin" methodName="Check Token - checkToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="HEAD - tokenById - check - badAuthToken 401- json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#badAuthToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - listEndPointsForToken badAuthToken 401 - xml"><con:settings/><con:config service="identity-admin" methodName="List Endoints for a Token - listEndpointsForToken" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - listEndPointsForToken badAuthToken 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#badAuthToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - listEndPointsForToken badAuthToken 401 - json"><con:settings/><con:config service="identity-admin" methodName="List Endoints for a Token - listEndpointsForToken" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - listEndPointsForToken badAuthToken 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#badAuthToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - tokn - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - tokn - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="Password1" username="gatestuser1"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XQuery Match" name="XQuery Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1])</path><content>1</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XQuery Match" name="XQuery Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token[1])</path><content>1</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XQuery Match" name="XQuery Match 2"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token[1]/@id)</path><content>1</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store token"><con:settings/><con:config><script>def tokenId = context.expand( '${POST - tokn - xml#ResponseAsXml#declare namespace ns2=\'http://docs.openstack.org/identity/api/v2.0\'; //ns2:access[1]/ns2:token[1]/@id}' )
testRunner.testCase.testSuite.setPropertyValue("tokenIdCLuser", tokenId)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - validate - not Admin 403 - xml"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - validate - not Admin 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Access is denied</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenIdCLuser}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - validate - not Admin 403 - json"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - validate - not Admin 403 - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Access is denied</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenIdCLuser}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - check - non Admin 403 - xml"><con:settings/><con:config service="identity-admin" methodName="Check Token - checkToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - check - non Admin 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenIdCLuser}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - check - non Admin 403 - json"><con:settings/><con:config service="identity-admin" methodName="Check Token - checkToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - check - non Admin 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenIdCLuser}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - listEndPointsForToken - invalid Token GA 401 - xml"><con:settings/><con:config service="identity-admin" methodName="List Endoints for a Token - listEndpointsForToken" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - listEndPointsForToken - invalid Token GA 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="0fc0a2ba83e44fc98796ffdf12d35a33"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - listEndPointsForToken - invalid token GA 401 - json"><con:settings/><con:config service="identity-admin" methodName="List Endoints for a Token - listEndpointsForToken" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - listEndPointsForToken - invalid token GA 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>badTokenId</con:name><con:value>1010</con:value></con:property><con:property><con:name>badTenantId</con:name><con:value>1212</con:value></con:property><con:property><con:name>badAuthToken</con:name><con:value>badToken</con:value></con:property><con:property><con:name>validEndpoints</con:name><con:value>187011</con:value></con:property><con:property><con:name>request1</con:name><con:value>{ "auth":{ "passwordCredentials":{ "username":"${#TestSuite#username}", "password":"${#TestSuite#password}" } } }</con:value></con:property><con:property><con:name>badrequest1</con:name><con:value>{ "auth":{ "passwordCredentials":{ "username":"badUser", "password":"${#TestSuite#password}" } } }</con:value></con:property><con:property><con:name>badrequest2</con:name><con:value>{ "auth":{ "passwordCredentials":{ "username":"${#TestSuite#username}" } } }</con:value></con:property><con:property><con:name>requestjson</con:name><con:value>{"auth": { "tenantName": "${#TestSuite#tenantName}", "token": { "id": "${#TestSuite#tokenId}" } } } </con:value></con:property><con:property><con:name>request1badpassword</con:name><con:value>{ "auth":{ "passwordCredentials":{ "username":"${#TestSuite#username2}", "password":"badpassword" } } }</con:value></con:property><con:property><con:name>request1baduserjson</con:name><con:value>{ "auth":{ "passwordCredentials":{ "username":"baduser", "password":"${#TestSuite#password}" } } }</con:value></con:property><con:property><con:name>badrequest2nouser</con:name><con:value>{ "auth":{ "passwordCredentials":{ "password":"${#TestSuite#password}" } } }</con:value></con:property><con:property><con:name>request1xml</con:name><con:value>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0"> &lt;apiKeyCredentials xmlns= "http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0" username="${#TestSuite#username2}" apiKey="${#TestSuite#apiKey}" /> &lt;/auth></con:value></con:property><con:property><con:name>tokenApiKeyjson</con:name><con:value>{ "auth":{ "RAX-KSKEY:apiKeyCredentials":{ "username":"${#TestSuite#username2}", "apiKey":"${#TestSuite#apiKey}" } } }</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="users" searchProperties="true" id="73f0da31-d190-4dbb-ab19-ab87fbc0ec28" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="GET - userByName- xml"><con:settings/><con:config service="identity-admin" methodName="Get a User by Name - getUserByName" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userByName- xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - userByName - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="UserId" disabled="true"><con:configuration><token>id="${#TestSuite#userId}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="UserName"><con:configuration><token> username="${#TestSuite#username}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:user[1]) >=1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestSuite#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userByName- json"><con:settings/><con:config service="identity-admin" methodName="Get a User by Name - getUserByName" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userByName- json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - userByName - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="UserId" disabled="true"><con:configuration><token>"id":"${#TestSuite#userId}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="username"><con:configuration><token>"username":"${#TestSuite#username}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 2"><con:configuration><token>{"user":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" disabled="true"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/users';
count(//ns1:Response[1]/ns1:user[1]/ns1:username)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestSuite#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userById - xml"><con:settings/><con:config service="identity-admin" methodName="Get a User by ID - getUserById" resourcePath="/${#Project#path}/users/{user_id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userById - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - userById - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>id="${#TestSuite#userId}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>username="${#TestSuite#username}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:user[1]/@id)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userById - json"><con:settings/><con:config service="identity-admin" methodName="Get a User by ID - getUserById" resourcePath="/${#Project#path}/users/{user_id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userById - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - userById - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>"id":"${#TestSuite#userId}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="username"><con:configuration><token>"username":"${#TestSuite#username}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 2"><con:configuration><token>{"user":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" disabled="true"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/users/${#TestSuite#userId}';
count(//ns1:Response[1]/ns1:user[1]/ns1:id)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userById - roles - xml"><con:settings/><con:config service="identity-admin" methodName="List User Global Roles - listUserGlobalRoles" resourcePath="/${#Project#path}/users/{user_id}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userById - roles - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403
log.info "GET - userById - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Cannot get Roles of an Admin User.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userById - roles - json"><con:settings/><con:config service="identity-admin" methodName="List User Global Roles - listUserGlobalRoles" resourcePath="/${#Project#path}/users/{user_id}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userById - roles - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403
log.info "GET - userById - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Cannot get Roles of an Admin User.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userById - tenant roles 501 - xml"><con:settings/><con:config service="identity-admin" methodName="List Roles for User on Tenant - listRolesForUserOnTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{user_id}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userById - tenant roles 501 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 501</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token> tenantId="${#TestSuite#tenantId}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="user_id" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userById - tenant roles 501 - json"><con:settings/><con:config service="identity-admin" methodName="List Roles for User on Tenant - listRolesForUserOnTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{user_id}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userById - tenant roles 501 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 501</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>"tenantId":"${#TestSuite#tenantId}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="user_id" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userByName - bad name 404 - xml"><con:settings/><con:config service="identity-admin" methodName="Get a User by Name - getUserByName" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userByName - bad name 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User with id: '${#TestCase#badname}' was not found.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:itemNotFound[1]/@code</path><content>404</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestCase#badname}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userByName - bad name 404 - json"><con:settings/><con:config service="identity-admin" methodName="Get a User by Name - getUserByName" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userByName - bad name 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User with id: '${#TestCase#badname}' was not found.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/users';
//ns1:Fault[1]/ns1:itemNotFound[1]/ns1:code</path><content>404</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestCase#badname}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userByName - badAuthToken 401 - xml"><con:settings/><con:config service="identity-admin" methodName="Get a User by Name - getUserByName" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userByName - badAuthToken 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:unauthorized[1]/@code</path><content>401</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestSuite#username2}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#badAuthToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userByName - badAuthToken 401 - json"><con:settings/><con:config service="identity-admin" methodName="Get a User by Name - getUserByName" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userByName - badAuthToken 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/users';
//ns1:Fault[1]/ns1:unauthorized[1]/ns1:code</path><content>401</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestSuite#username2}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#badAuthToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userById - badId 404 - xml"><con:settings/><con:config service="identity-admin" methodName="Get a User by ID - getUserById" resourcePath="/${#Project#path}/users/{user_id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userById - badId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404
</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User with id:</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:itemNotFound[1]/@code</path><content>404</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestCase#badId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userById - badId 404 - json"><con:settings/><con:config service="identity-admin" methodName="Get a User by ID - getUserById" resourcePath="/${#Project#path}/users/{user_id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userById - badId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404
</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User with id: '${#TestCase#badId}' was not found</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/users/${#TestCase#badId}';
//ns1:Fault[1]/ns1:itemNotFound[1]/ns1:code</path><content>404</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestCase#badId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userById - badAuthToken 401 - xml"><con:settings/><con:config service="identity-admin" methodName="Get a User by ID - getUserById" resourcePath="/${#Project#path}/users/{user_id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userById - badAuthToken 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:unauthorized[1]/@code</path><content>401</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#badAuthToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userById - badAuthToken 401 - json"><con:settings/><con:config service="identity-admin" methodName="Get a User by ID - getUserById" resourcePath="/${#Project#path}/users/{user_id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userById - badAuthToken 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/users/${#TestSuite#userId2}';
//ns1:Fault[1]/ns1:unauthorized[1]/ns1:code</path><content>401</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#badAuthToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userById - roles - badId 404 - xml"><con:settings/><con:config service="identity-admin" methodName="List User Global Roles - listUserGlobalRoles" resourcePath="/${#Project#path}/users/{user_id}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userById - roles - badId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404
</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User with id: '${#TestCase#badId}' was not found.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:itemNotFound[1]/@code</path><content>404</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestCase#badId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userById - roles - badId 404 - json"><con:settings/><con:config service="identity-admin" methodName="List User Global Roles - listUserGlobalRoles" resourcePath="/${#Project#path}/users/{user_id}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userById - roles - badId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404
</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User with id: '${#TestCase#badId}' was not found.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/users/${#TestCase#badId}/roles';
//ns1:Fault[1]/ns1:itemNotFound[1]/ns1:code</path><content>404</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestCase#badId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userById - roles - badAuthToken 401 - xml"><con:settings/><con:config service="identity-admin" methodName="List User Global Roles - listUserGlobalRoles" resourcePath="/${#Project#path}/users/{user_id}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userById - roles - badAuthToken 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401
</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:unauthorized[1]/@code</path><content>401</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#badAuthToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userById - roles - badAuthToken 401 - json"><con:settings/><con:config service="identity-admin" methodName="List User Global Roles - listUserGlobalRoles" resourcePath="/${#Project#path}/users/{user_id}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userById - roles - badAuthToken 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401
</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/users/${#TestSuite#userId2}/roles';
//ns1:Fault[1]/ns1:unauthorized[1]/ns1:code</path><content>401</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#badAuthToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userByName - non Admin 403 - xml"><con:settings/><con:config service="identity-admin" methodName="Get a User by Name - getUserByName" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userByName - non Admin 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200

</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestSuite#username2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userByName - non Admin 403 - json"><con:settings/><con:config service="identity-admin" methodName="Get a User by Name - getUserByName" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userByName - non Admin 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestSuite#username2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userById - non Admin 403 - xml"><con:settings/><con:config service="identity-admin" methodName="Get a User by ID - getUserById" resourcePath="/${#Project#path}/users/{user_id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userById - non Admin 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userById - non Admin 403 - json"><con:settings/><con:config service="identity-admin" methodName="Get a User by ID - getUserById" resourcePath="/${#Project#path}/users/{user_id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userById - non Admin 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userById - roles - non Admin 403 - xml"><con:settings/><con:config service="identity-admin" methodName="List User Global Roles - listUserGlobalRoles" resourcePath="/${#Project#path}/users/{user_id}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userById - roles - non Admin 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - userById - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userById - roles - non Admin 403 - json"><con:settings/><con:config service="identity-admin" methodName="List User Global Roles - listUserGlobalRoles" resourcePath="/${#Project#path}/users/{user_id}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userById - roles - non Admin 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - userById - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userById - tenant roles - non Admin 501 - xml"><con:settings/><con:config service="identity-admin" methodName="List Roles for User on Tenant - listRolesForUserOnTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{user_id}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userById - tenant roles - non Admin 501 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="user_id" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userById - tenant roles - non Admin 501 - json"><con:settings/><con:config service="identity-admin" methodName="List Roles for User on Tenant - listRolesForUserOnTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{user_id}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userById - tenant roles - non Admin 501 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="user_id" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>badname</con:name><con:value>badname</con:value></con:property><con:property><con:name>badAuthToken</con:name><con:value>badToken</con:value></con:property><con:property><con:name>badId</con:name><con:value>11111111</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="extensions" searchProperties="true" id="97e31d54-9873-4958-9a99-773f4879aebd" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="GET - listExtension - xml"><con:settings/><con:config service="identity-admin" methodName="List Extensions - listExtensions" resourcePath="/${#Project#path}/extensions" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listExtension - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>RAX-KSKEY</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>RAX-KSGRP</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 2" disabled="true"><con:configuration><token>OS-KSADM</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 3" disabled="true"><con:configuration><token>OS-KSCATALOG-admin</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 4" disabled="true"><con:configuration><token>RAX-KSQA</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns4='http://docs.openstack.org/common/api/v1.0';
count(//ns4:extensions[1]/ns4:extension) >=1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns4='http://docs.openstack.org/common/api/v1.0';
count(//ns4:extensions)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listExtension - json"><con:settings/><con:config service="identity-admin" methodName="List Extensions - listExtensions" resourcePath="/${#Project#path}/extensions" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listExtension - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/extensions';
count(//ns1:Response[1]/ns1:extensions)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"extensions":[{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script"><con:settings/><con:config><script>def extAlias = context.expand( '${GET - listExtension - xml#Response#declare namespace ns3=\'http://docs.openstack.org/common/api/v1.0\'; //ns3:extensions[1]/ns3:extension[1]/@alias}' )
log.info "extAlias: " + extAlias

if (extAlias == "" | extAlias == null)
{
	assert false;	
}
testRunner.testCase.testSuite.setPropertyValue("extAlias", extAlias)
</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - extension - xml"><con:settings/><con:config service="identity-admin" methodName="Get Extension Details - getExtension" resourcePath="/${#Project#path}/extensions/{alias}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - extension - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestSuite#extAlias}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns4='http://docs.openstack.org/common/api/v1.0';
count(//ns4:extension) >=1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="alias" value="${#TestSuite#extAlias}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - extension - json"><con:settings/><con:config service="identity-admin" methodName="Get Extension Details - getExtension" resourcePath="/${#Project#path}/extensions/{alias}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - extension - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestSuite#extAlias}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/extensions/RAX-KSKEY';
count(//ns1:Response[1]/ns1:extension)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>{"extension":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 2"><con:configuration><token>"links":[{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="alias" value="${#TestSuite#extAlias}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - extension - badAlias 404 - xml"><con:settings/><con:config service="identity-admin" methodName="Get Extension Details - getExtension" resourcePath="/${#Project#path}/extensions/{alias}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - extension - badAlias 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Extension with alias '${#TestCase#badAlias}' is not available.</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:itemNotFound[1]/@code</path><content>404</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="alias" value="${#TestCase#badAlias}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - extension - badAlias 404 - json"><con:settings/><con:config service="identity-admin" methodName="Get Extension Details - getExtension" resourcePath="/${#Project#path}/extensions/{alias}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - extension - badAlias 404 - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:itemNotFound[1]/@code</path><content>404</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Extension with alias '${#TestCase#badAlias}' is not available.</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="alias" value="${#TestCase#badAlias}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>badAlias</con:name><con:value>badAlias</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="revoke token" searchProperties="true" id="f9138a51-1db6-4481-9522-b6acceead610" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="POST - token - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#password}" username="${#TestSuite#username}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XQuery Match" name="XQuery Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1])</path><content>1</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XQuery Match" name="XQuery Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token[1])</path><content>1</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XQuery Match" name="XQuery Match 2"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token[1]/@id)</path><content>1</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - admin - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - admin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#password}" username="${#TestCase#username}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XQuery Match" name="XQuery Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1])</path><content>1</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XQuery Match" name="XQuery Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token[1])</path><content>1</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XQuery Match" name="XQuery Match 2"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token[1]/@id)</path><content>1</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token info"><con:settings/><con:config><script>def tokenId1 = context.expand( '${POST - token - admin - xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info "get tokenId1:" + tokenId1
testRunner.testCase.setPropertyValue("tokenId1", tokenId1)

def tokenId = context.expand( '${POST - token - xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info "get tokenId: " + tokenId
testRunner.testCase.testSuite.setPropertyValue("tokenId", tokenId)
</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Authenticate Application - xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/tokens" methodName="Authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Authenticate Application - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;authCredentials client_id="18e7a7032733486cd32f472d7bd58f709ac0d221" client_secret="${#TestSuite#clientSecret}" grant_type="CLIENT_CREDENTIALS" xmlns="http://idm.api.rackspace.com/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store tokenId"><con:settings/><con:config><script>def FAtokenId = context.expand( '${POST - Authenticate Application - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:auth[1]/ns3:access_token[1]/@id}' )
log.info "get FAtokenId: " + FAtokenId
testRunner.testCase.setPropertyValue("FAtokenId", FAtokenId)</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" disabled="true"><con:settings/><con:config><script>CREATED AUTH USER IN OUR DIRECTORY AND IS USING THE SAME WITHOUT DELETING</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Add User - GAonlyUser - xml" disabled="true"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/users" methodName="Add a User" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Add User - GAonlyUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<user customerId="RCN-000-111-000" displayName="Alan Erwin" email="alan.erwin@example.org" firstName="Alan" lastName="Smith" middleName="Lee" personId="RPN-111-111-111" prefLanguage="US_en" region="SAT" timeZone="America/Chicago" username="${#TestCase#GAonlyUser}" xmlns="http://idm.api.rackspace.com/v1.0">
<roles/><secret secretAnswer="Buddy" secretQuestion="What is your dogs name?"/>
<passwordCredentials>
<currentPassword password="C@n+f001me!"/>
</passwordCredentials>
</user>]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#FAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store GAonlyUser" disabled="true"><con:settings/><con:config><script>def GAonlyUsername = context.expand( '${POST - Add User - GAonlyUser - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:user[1]/@username}' )
log.info "get GAonlyUsername: " + GAonlyUsername

def GAonlyPassword = context.expand( '${POST - Add User - GAonlyUser - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:user[1]/ns3:passwordCredentials[1]/ns3:currentPassword[1]/@password}' )
log.info "get GAonlyPassword: " + GAonlyPassword

def GAonlyUserId = context.expand( '${POST - Add User - GAonlyUser - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:user[1]/@id}' )
log.info "get GAonlyUserId: " + GAonlyUserId

testRunner.testCase.setPropertyValue("GAonlyUsername", GAonlyUsername)
testRunner.testCase.setPropertyValue("GAonlyPassword", GAonlyPassword)
testRunner.testCase.setPropertyValue("GAonlyUserId", GAonlyUserId)</script></con:config></con:testStep><con:testStep type="restrequest" name="PUT - Add UserRole - GAonlyUser - xml" disabled="true"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/users/{userId}/roles/{roleId}" methodName="Grant User a Global Role" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - Add UserRole - GAonlyUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#GAonlyUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#FAtokenId}"/>
  <con:entry key="roleId" value="1"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - GAonlyUser - xml" disabled="true"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - GAonlyUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#GAonlyPassword}" username="${#TestCase#GAonlyUsername}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access/ns1:token/@id)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - validate - xml"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - validate - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>token</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>roles</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:token[1]/@id</path><content>${#TestCase#tokenId1}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#tokenId1}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - validate - json"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - validate - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"access":{"token":{"id":</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/tokens/${#TestCase#tokenId1}';
count(//ns1:Response[1]/ns1:access[1]/ns1:token[1])</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1" disabled="true"><con:configuration><path>declare namespace ns1='${#Project#Endpoint}/${#Project#Path}/tokens/${#TestSuite#tokenId}';
//ns1:Response[1]/ns1:access[1]/ns1:token[1]/ns1:id</path><content>${#TestSuite#tokenId}
</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#tokenId1}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DEL - Revoke Token - xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/tokens/{tokenId}" methodName="Revoke Token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DEL - Revoke Token - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#tokenId1}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#FAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - validate w/FA admin - 403 - xml"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - validate w/FA admin - 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Not authorized.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#tokenId1}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#FAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - validate w/FA admin - 403 - json"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - validate w/FA admin - 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Not authorized.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#tokenId1}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#FAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - validate w/v2.0 admin - 404 - xml"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - validate w/v2.0 admin - 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#tokenId1}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - validate w/v2.0 admin - 404 - json"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - validate w/v2.0 admin - 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#tokenId1}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>FAtokenId</con:name><con:value>da6448006fbb45ec97b0a6b3a2c9be62</con:value></con:property><con:property><con:name>admin</con:name><con:value>Admin</con:value></con:property><con:property><con:name>adminPw</con:name><con:value>Password1</con:value></con:property><con:property><con:name>username</con:name><con:value>CarlosAdmin</con:value></con:property><con:property><con:name>password</con:name><con:value>CAPassword01</con:value></con:property><con:property><con:name>tokenId</con:name><con:value>f2e0505a-4e04-49ec-b948-1fd9d2d889cb</con:value></con:property><con:property><con:name>GAonlyUsername</con:name><con:value>CarlosAdmin</con:value></con:property><con:property><con:name>GAonlyPassword</con:name><con:value>C@n+f001me!</con:value></con:property><con:property><con:name>GAonlyUserId</con:name><con:value>10016242</con:value></con:property><con:property><con:name>GAonlyUser</con:name><con:value>CarlosAdmin</con:value></con:property><con:property><con:name>tokenId1</con:name><con:value>6fdc4512-2d74-432d-9925-6c32d3a61ae3</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:properties><con:property><con:name>username</con:name><con:value>auth</con:value></con:property><con:property><con:name>password</con:name><con:value>auth123</con:value></con:property><con:property><con:name>tokenId</con:name><con:value>3bd003e8-402c-408c-aab7-16e8ab79d294</con:value></con:property><con:property><con:name>userId</con:name><con:value>153345</con:value></con:property><con:property><con:name>tenantId</con:name><con:value>MossoCloudFS_6eee84c5-54a4-4217-a895-8308da81feb3</con:value></con:property><con:property><con:name>tenantName</con:name><con:value>MossoCloudFS_6eee84c5-54a4-4217-a895-8308da81feb3</con:value></con:property><con:property><con:name>extAlias</con:name><con:value>RAX-KSKEY</con:value></con:property><con:property><con:name>username2</con:name><con:value>cmarin1</con:value></con:property><con:property><con:name>tokenId2</con:name><con:value>4d7beb28-08ba-4a66-b6d5-9b0af31ad6b2</con:value></con:property><con:property><con:name>userId2</con:name><con:value>191416</con:value></con:property><con:property><con:name>apiKey</con:name><con:value>7e4a5dda01d9f447695b5ff476a6788f</con:value></con:property><con:property><con:name>password2</con:name><con:value>Password1</con:value></con:property><con:property><con:name>tenantIdAdmin</con:name><con:value/></con:property><con:property><con:name>tokenIdCLuser</con:name><con:value>ec10b5fb-9149-47c7-8cd8-bbaf2188a558</con:value></con:property><con:property><con:name>clientSecret</con:name><con:value>password1</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="Functional - RAX-KSKEY-admin"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="users" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="5f5fd375-6e9d-4efb-baa4-377209747c5a"><con:settings/><con:testStep type="restrequest" name="POST - token - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#password}" username="${#TestSuite#username}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1])>=1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>&lt;token id="${#TestSuite#tokenId}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token info"><con:settings/><con:config><script>def tokenId = context.expand( '${POST - token - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info "get TokenId: " + tokenId
def userId = context.expand( '${POST - token - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/@id}' )
log.info "get UserId: " + userId

if (tokenId == "" | userId == "")
{
	assert false;	
}
testRunner.testCase.testSuite.setPropertyValue("tokenId", tokenId)
testRunner.testCase.testSuite.setPropertyValue("userId", userId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - testToken - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - testToken - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0">
&lt;apiKeyCredentials apiKey="7e4a5dda01d9f447695b5ff476a6788f" username="${#TestSuite#testuser}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:user[1]/@name</path><content>${#TestSuite#testuser}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>&lt;token id="</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store testToken info"><con:settings/><con:config><script>def testTokenId = context.expand( '${POST - testToken - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info "get testTokenId: " + testTokenId
def testUserId = context.expand( '${POST - testToken - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/@id}' )
log.info "get testUserId: " + testUserId

if (testTokenId == "" | testUserId == "")
{
	assert false;	
}
testRunner.testCase.testSuite.setPropertyValue("testTokenId", testTokenId)
testRunner.testCase.testSuite.setPropertyValue("testUserId", testUserId)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - userCredentials - xml"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Get user Credentials - getUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userCredentials - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>apiKeyCredentials</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token> username="${#TestSuite#testuser}" </token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns2='http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0';
//ns2:apiKeyCredentials[1]/@username</path><content>${#TestSuite#testuser}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store  apikey"><con:settings/><con:config><script>def apiKey = context.expand( '${GET - userCredentials - xml#ResponseAsXml#declare namespace ns1=\'http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0\'; //ns1:apiKeyCredentials[1]/@apiKey}' )
log.info "get apiKey: " + apiKey

if (apiKey == "")
{
	assert false;	
}
testRunner.testCase.testSuite.setPropertyValue("apiKey", apiKey)
</script></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>body</con:name><con:sourceType>response</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - updateUserCredentials - xml</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>body2</con:name><con:sourceType>response2</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - updateUserCredentials - restore apiKey- xml</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body1badUser</con:name><con:sourceType>request1badUser</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - updateUserCredentials - baduser 404 - xml</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body1nonAdminxml</con:name><con:sourceType>response</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - updateUserCredentials - non Admin 403 - xml</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body2badIdxml</con:name><con:sourceType>request1badUser</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addUserCredentials - badId 501 - xml</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>body</con:name><con:sourceType>responseJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - updateUserCredentials - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body2</con:name><con:sourceType>response2Json</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - updateUserCredentials - restore apiKey - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body3</con:name><con:sourceType>response2</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - updateUserCredentials - restore apiKey - xml</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>requestBody</con:name><con:sourceType>request1</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addUserCredentials - xml</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>requestBodyJson</con:name><con:sourceType>request1json</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addUserCredentials - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>credentialsDoNotExist</con:name><con:sourceType>response</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - updateUserCredentials - credentialsDoNot exist - xml</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body1baduserjson</con:name><con:sourceType>request1baduserjson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - updateUserCredentials - baduser 404 - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body1nonAdminjson</con:name><con:sourceType>response2Json</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - updateUserCredentials - non Admin 403 - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body2nonAdminxml</con:name><con:sourceType>request1</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addUserCredentials - non Admin 403 - xml</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body3nonadminjson</con:name><con:sourceType>request1json</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addUserCredentials - non Admin 403 - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>body2badidjson</con:name><con:sourceType>request1json</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addUserCredentials - badId 501 - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>body4</con:name><con:sourceType>request1</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addUserCredentials - 409 - xml</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GET - userCredentials - json"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Get user Credentials - getUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userCredentials - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;apiKeyCredentials username="${#TestSuite#testuser}" apiKey="${#TestSuite#testApiKey}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"RAX-KSKEY:apiKeyCredentials":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>"username":"${#TestSuite#testuser}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 2"><con:configuration><token>"apiKey":"${#TestSuite#apiKey}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" disabled="true"><con:configuration><path>declare ns1=</path><content/><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUserCredentials - xml"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Update user credential - updateUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUserCredentials - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;apiKeyCredentials username="${#TestSuite#testuser}" apiKey="${#TestSuite#testApiKey}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns2='http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0';
//ns2:apiKeyCredentials[1]/@username</path><content>${#TestSuite#testuser}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>&lt;ns2:apiKeyCredentials </token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUserCredentials - restore apiKey- xml"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Update user credential - updateUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUserCredentials - restore apiKey- xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;apiKeyCredentials username="${#TestSuite#testuser}" apiKey="${#TestSuite#apiKey}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns2='http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0';
//ns2:apiKeyCredentials/@apiKey</path><content>${#TestSuite#apiKey}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>&lt;ns2:apiKeyCredentials</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username/><con:password/><con:domain/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUserCredentials - json"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Update user credential - updateUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUserCredentials - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "RAX-KSKEY:apiKeyCredentials":{ "username":"${#TestSuite#testuser}", "apiKey":"${#TestSuite#testApiKey}" } } </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>:apiKeyCredentials</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>{"RAX-KSKEY:apiKeyCredentials":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUserCredentials - restore apiKey - json"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Update user credential - updateUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUserCredentials - restore apiKey - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "RAX-KSKEY:apiKeyCredentials":{ "username":"${#TestSuite#testuser}", "apiKey":"${#TestSuite#apiKey}" } } </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>:apiKeyCredentials</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>{"RAX-KSKEY:apiKeyCredentials":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username/><con:password/><con:domain/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - userCredentials - xml"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Delete user credential - deleteUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - userCredentials - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204
</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="200"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUserCredentials - xml"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Add user Credential. - addUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUserCredentials - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;apiKeyCredentials xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0" username="${#TestSuite#testuser}" apiKey="${#TestSuite#apiKey}"/> </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1" disabled="true"><con:configuration><token>apiKey="${#TestSuite#apiKey}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 2" disabled="true"><con:configuration><token>username="${#TestSuite#testuser}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" disabled="true"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:RAX-KSKEY:apiKeyCredentials)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>apiKeyCredentials</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUserCredentials - 409 - xml" disabled="true"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Add user Credential. - addUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUserCredentials - 409 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;apiKeyCredentials xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0" username="${#TestSuite#testuser}" apiKey="${#TestSuite#apiKey}"/> </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 409</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="200 1"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="restrequest" name="GET - credentials - xml"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="List Credentials - listCredentials" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - credentials - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns2='http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0';
declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:credentials[1]/ns2:apiKeyCredentials[1]/@username</path><content>${#TestSuite#testUser}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns2='http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0';
//ns2:apiKeyCredentials[1]/@username</path><content>${#TestSuite#testUser}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>&lt;passwordCredentials</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - userCredentials - json"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Delete user credential - deleteUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - userCredentials - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="200 2"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUserCredentials - json"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Add user Credential. - addUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUserCredentials - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "RAX-KSKEY:apiKeyCredentials":{ "username":"${#TestSuite#testuser}", "apiKey":"${#TestSuite#apiKey}" } } </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201
</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="200 3"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="restrequest" name="GET - credentials - json"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="List Credentials - listCredentials" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - credentials - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>{"passwordCredentials</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>{"credentials":[{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUserCredentials - credentialsDoNot exist - xml" disabled="true"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Update user credential - updateUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUserCredentials - credentialsDoNot exist - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;apiKeyCredentials username="${#TestSuite#testuser}" apiKey="${#TestSuite#testApiKey}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUserCredentials - restore apiKey - xml"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Update user credential - updateUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUserCredentials - restore apiKey - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;apiKeyCredentials username="${#TestSuite#testuser}" apiKey="${#TestSuite#apiKey}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns2='http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0';
//ns2:apiKeyCredentials[1]/@username</path><content>${#TestSuite#testuser}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns2='http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0';
//ns2:apiKeyCredentials[1]/@apiKey</path><content>${#TestSuite#apiKey}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>&lt;ns2:apiKeyCredentials</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username/><con:password/><con:domain/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userCredentials - badUserId 404 - xml"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Get user Credentials - getUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userCredentials - badUserId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User with id: '1212120000' was not found.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:itemNotFound[1]/@code</path><content>404</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="1212120000"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userCredentials - badUserId 404 - json"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Get user Credentials - getUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userCredentials - badUserId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>User with id: '1212120000' was not found.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>User with id: '12121200000' was not found.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="12121200000"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userCredentials - badAuthToken 401 - xml"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Get user Credentials - getUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userCredentials - badAuthToken 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:unauthorized[1]/@code</path><content>401</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="qwerty"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userCredentials - badAuthToken 401 - json"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Get user Credentials - getUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userCredentials - badAuthToken 401 - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';

//ns1:unauthorized[1]/@code</path><content>401</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="qwerty"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userCredentials - 403 - xml"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Get user Credentials - getUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userCredentials - 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestSuite#username2}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0';
//ns1:apiKeyCredentials[1]/@username</path><content>${#TestSuite#testUser}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#testTokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userCredentials - 403 - json"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="List Credentials - listCredentials" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userCredentials - 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"RAX-KSKEY:apiKeyCredentials":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" disabled="true"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/users/${#TestSuite#testUserId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials';
//ns1:Response[1]/ns1:RAX-KSKEY:apiKeyCredentials[1]/ns1:apiKey[1]</path><content>403</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#testTokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUserCredentials - baduser 404 - xml"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Update user credential - updateUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUserCredentials - baduser 404 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;apiKeyCredentials username="badUser" apiKey="${#TestSuite#testApiKey}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User with id: '1000000001' was not found.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:itemNotFound[1]/@code</path><content>404</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="1000000001"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUserCredentials - baduser 404 - json"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Update user credential - updateUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUserCredentials - baduser 404 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "RAX-KSKEY:apiKeyCredentials":{ "username":"baduser", "apiKey":"11111111222222223333333333" } }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User with id: '1000000001' was not found.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/users/1000000001/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials';
//ns1:Fault[1]/ns1:itemNotFound[1]/ns1:code</path><content>404</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="1000000001"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUserCredentials - non Admin 403 - xml"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Update user credential - updateUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUserCredentials - non Admin 403 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;apiKeyCredentials username="${#TestSuite#testuser}" apiKey="${#TestSuite#testApiKey}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Not authorized.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns2='http://docs.openstack.org/identity/api/v2.0';
//ns2:forbidden[1]/@code</path><content>403</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#testTokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUserCredentials - non Admin 403 - json"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Update user credential - updateUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUserCredentials - non Admin 403 - json" mediaType="application/json" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "RAX-KSKEY:apiKeyCredentials":{ "username":"${#TestSuite#testuser}", "apiKey":"${#TestSuite#apiKey}" } } </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Not authorized.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns2='http://docs.openstack.org/identity/api/v2.0';
//ns2:forbidden[1]/@code</path><content>403</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#testTokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - userCredentials - badId 501 - xml"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Delete user credential - deleteUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - userCredentials - badId 501 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="1000000001"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - userCredentials - badId 501 - json"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Delete user credential - deleteUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - userCredentials - badId 501 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="1000000001"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - userCredentials - badAuthToken 401 - xml"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Delete user credential - deleteUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - userCredentials - badAuthToken 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:unauthorized[1]/@code</path><content>401</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - userCredentials - badAuthToken 401 - json"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Delete user credential - deleteUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - userCredentials - badAuthToken 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/users/${#TestSuite#testUserId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials';
//ns1:Fault[1]/ns1:unauthorized[1]/ns1:code</path><content>401</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - userCredentials - non Admin 403 - xml"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Delete user credential - deleteUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - userCredentials - non Admin 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Not authorized.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns2='http://docs.openstack.org/identity/api/v2.0';
//ns2:forbidden[1]/@code</path><content>403</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#testTokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - userCredentials - non Admin 403 - json"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Delete user credential - deleteUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - userCredentials - non Admin 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Not authorized.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#endpointjson}/${#Project#path}/users/${#TestSuite#testUserId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials';
//ns1:Fault[1]/ns1:forbidden[1]/ns1:code[1]</path><content>403</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#testTokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUserCredentials - non Admin 403 - xml"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Add user Credential. - addUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUserCredentials - non Admin 403 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;apiKeyCredentials xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0" username="${#TestSuite#testuser}" apiKey="${#TestSuite#apiKey}"/> </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Not authorized.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns2='http://docs.openstack.org/identity/api/v2.0';
//ns2:forbidden[1]/@code</path><content>403</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#testTokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUserCredentials - non Admin 403 - json"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Add user Credential. - addUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUserCredentials - non Admin 403 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "RAX-KSKEY:apiKeyCredentials":{ "username":"${#TestSuite#testuser}", "apiKey":"${#TestSuite#apiKey}" } } </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Not authorized.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#endpointjson}/${#Project#path}/users/${#TestSuite#testUserId}/OS-KSADM/credentials';
//ns1:Fault[1]/ns1:forbidden[1]/ns1:code[1]</path><content>403</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#testTokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUserCredentials - badId 501 - xml"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Add user Credential. - addUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUserCredentials - badId 501 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;apiKeyCredentials username="badUser" apiKey="${#TestSuite#testApiKey}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" disabled="true"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:RAX-KSKEY:apiKeyCredentials)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="1000000001"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUserCredentials - badId 501 - json"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Add user Credential. - addUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUserCredentials - badId 501 - json" mediaType="application/json" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "RAX-KSKEY:apiKeyCredentials":{ "username":"${#TestSuite#testuser}", "apiKey":"${#TestSuite#apiKey}" } } </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" disabled="true"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:RAX-KSKEY:apiKeyCredentials)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="1000000001"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>response</con:name><con:value>&lt;apiKeyCredentials username="${#TestSuite#testuser}" apiKey="${#TestSuite#testApiKey}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/></con:value></con:property><con:property><con:name>response2</con:name><con:value>&lt;apiKeyCredentials username="${#TestSuite#testuser}" apiKey="${#TestSuite#apiKey}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/></con:value></con:property><con:property><con:name>responseJson</con:name><con:value>{ "RAX-KSKEY:apiKeyCredentials":{ "username":"${#TestSuite#testuser}", "apiKey":"${#TestSuite#testApiKey}" } } </con:value></con:property><con:property><con:name>response2Json</con:name><con:value>{ "RAX-KSKEY:apiKeyCredentials":{ "username":"${#TestSuite#testuser}", "apiKey":"${#TestSuite#apiKey}" } } </con:value></con:property><con:property><con:name>request1</con:name><con:value>&lt;apiKeyCredentials xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0" username="${#TestSuite#testuser}" apiKey="${#TestSuite#apiKey}"/> </con:value></con:property><con:property><con:name>request1json</con:name><con:value>{ "RAX-KSKEY:apiKeyCredentials":{ "username":"${#TestSuite#testuser}", "apiKey":"${#TestSuite#apiKey}" } } </con:value></con:property><con:property><con:name>request1badUser</con:name><con:value>&lt;apiKeyCredentials username="badUser" apiKey="${#TestSuite#testApiKey}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/></con:value></con:property><con:property><con:name>request1baduserjson</con:name><con:value>{ "RAX-KSKEY:apiKeyCredentials":{ "username":"baduser", "apiKey":"11111111222222223333333333" } }</con:value></con:property><con:property><con:name>response1badpasswordxml</con:name><con:value>&lt;apiKeyCredentials username="${#TestSuite#testuser}" apiKey="${#TestSuite#apiKey}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/></con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:properties><con:property><con:name>username</con:name><con:value>auth</con:value></con:property><con:property><con:name>password</con:name><con:value>auth123</con:value></con:property><con:property><con:name>tokenId</con:name><con:value>6d2be2e6-2e00-4e42-bf6d-e6d1fe2f9cae</con:value></con:property><con:property><con:name>userId</con:name><con:value>153345</con:value></con:property><con:property><con:name>testuser</con:name><con:value>cmarin1</con:value></con:property><con:property><con:name>testTokenId</con:name><con:value>f000a864-d41b-42fb-9f40-1973c0c7b953</con:value></con:property><con:property><con:name>testUserId</con:name><con:value>191416</con:value></con:property><con:property><con:name>apiKey</con:name><con:value>7e4a5dda01d9f447695b5ff476a6788f</con:value></con:property><con:property><con:name>testApiKey</con:name><con:value>11111111222222223333333333</con:value></con:property><con:property><con:name>newUser</con:name><con:value>jmunoz1</con:value></con:property><con:property><con:name>password2</con:name><con:value>Password1</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="Functional - RAX-KSGRP-admin"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="groups" searchProperties="true" id="0411142d-203b-4998-9d1b-2dd79cd20ef6" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="POST - token - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#password}" username="${#TestSuite#username}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:user[1]/@name</path><content>${#TestSuite#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>token id="</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token info"><con:settings/><con:config><script>def tokenId = context.expand( '${POST - token - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info "get TokenId: " + tokenId
def userId = context.expand( '${POST - token - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/@id}' )
log.info "get UserId: " + userId

if (tokenId == "" | userId == "")
{
	assert false;	
}
testRunner.testCase.testSuite.setPropertyValue("tokenId", tokenId)
testRunner.testCase.testSuite.setPropertyValue("userId", userId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - nonAdmin - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - nonAdmin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0">
&lt;apiKeyCredentials apiKey="${#TestSuite#apiKey}" username="${#TestSuite#username2}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:user[1]/@name</path><content>${#TestSuite#username2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>role id="3"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token info 2"><con:settings/><con:config><script>def tokenId = context.expand( '${POST - token - nonAdmin - xml#ResponseAsXml#declare namespace ns8=\'http://docs.openstack.org/identity/api/v2.0\'; //ns8:access[1]/ns8:token[1]/@id}' )
log.info "get TokenId: " + tokenId
def userId = context.expand( '${POST - token - nonAdmin - xml#ResponseAsXml#declare namespace ns8=\'http://docs.openstack.org/identity/api/v2.0\'; //ns8:access[1]/ns8:user[1]/@id}' )

log.info "get UserId: " + userId

if (tokenId == "" | userId == "")
{
	assert false;	
}
testRunner.testCase.testSuite.setPropertyValue("tokenId2", tokenId)
testRunner.testCase.testSuite.setPropertyValue("userId2", userId)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - xml" disabled="true"><con:settings/><con:config service="RAX-KSGRP-admin" methodName="List Groups for a User - listUserGroups" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>group id="Default"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns3='http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0';
count(//ns3:groups)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns3='http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0';
count(//ns3:groups[1]/ns3:group) >=1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - json" disabled="true"><con:settings/><con:config service="RAX-KSGRP-admin" methodName="List Groups for a User - listUserGroups" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>groups":[{"group"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>{"RAX-KSGRP:groups":[{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - badUserId 404 - xml"><con:settings/><con:config service="RAX-KSGRP-admin" methodName="List Groups for a User - listUserGroups" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - badUserId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User with id: '1212121' was not found.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:itemNotFound[1]/@code</path><content>404</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="1212121"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups badUserId 404 - json"><con:settings/><con:config service="RAX-KSGRP-admin" methodName="List Groups for a User - listUserGroups" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups badUserId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User with id: '1212121' was not found.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/users/1212121/RAX-KSGRP';
//ns1:Fault[1]/ns1:itemNotFound[1]/ns1:code</path><content>404</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="1212121"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - badAuth 401 -  xml"><con:settings/><con:config service="RAX-KSGRP-admin" methodName="List Groups for a User - listUserGroups" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - badAuth 401 -  xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:unauthorized[1]/@code</path><content>401</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - badAuth 401 - json"><con:settings/><con:config service="RAX-KSGRP-admin" methodName="List Groups for a User - listUserGroups" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - badAuth 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/users/${#TestSuite#userId2}/RAX-KSGRP';
//ns1:Fault[1]/ns1:unauthorized[1]/ns1:code[1]</path><content>401</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - non Admin 403 - xml"><con:settings/><con:config service="RAX-KSGRP-admin" methodName="List Groups for a User - listUserGroups" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - non Admin 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>Access is denied</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns2='http://docs.openstack.org/identity/api/v2.0';
//ns2:forbidden[1]/@code</path><content>403</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - non Admin 403 - json"><con:settings/><con:config service="RAX-KSGRP-admin" methodName="List Groups for a User - listUserGroups" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - non Admin 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>Access is denied</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#endpointjson}/${#Project#path}/users/${#TestSuite#userId2}/RAX-KSGRP';
//ns1:Fault[1]/ns1:forbidden[1]/ns1:message[1]</path><content>Access is denied</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="default groups" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="229083bc-dde4-4036-9bc1-5a9fef83f575"><con:settings/><con:testStep type="restrequest" name="POST - token - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#password}" username="${#TestSuite#username}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:user[1]/@name</path><content>${#TestSuite#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>token id="</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store token"><con:settings/><con:config><script>def tokenId = context.expand( '${POST - token - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info "get TokenId: " + tokenId
def userId = context.expand( '${POST - token - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/@id}' )
log.info "get UserId: " + userId

if (tokenId == "" | userId == "")
{
	assert false;	
}
testRunner.testCase.testSuite.setPropertyValue("tokenId", tokenId)
testRunner.testCase.testSuite.setPropertyValue("userId", userId)
</script></con:config></con:testStep><con:testStep type="restrequest" name="POST  - Create User Admin w/UA - xml"><con:settings/><con:config service="Auth V1.1" resourcePath="/${#Project#pathv1.1}/users" methodName="POST - createUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST  - Create User Admin w/UA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:user enabled="true" id="${#TestCase#UAusername}" key="${#TestCase#UAkey}" mossoId="${#TestCase#UAMossoId}" nastId="${#TestCase#UAnastId}" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#username}</con:username><con:password>${#TestSuite#password}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Authenticate User Admin"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Authenticate User Admin" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0"> &lt;apiKeyCredentials apiKey="${#TestCase#UAkey}" username="${#TestCase#UAusername}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/> &lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store UA"><con:settings/><con:config><script>def userId = context.expand( '${POST - Authenticate User Admin#ResponseAsXml#declare namespace ns2=\'http://docs.openstack.org/identity/api/v2.0\'; //ns2:access[1]/ns2:user[1]/@id}' )

def nastId = context.expand( '${POST  - Create User Admin w/UA - xml#ResponseAsXml#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:user[1]/@nastId}' )
def UAtokenId = context.expand( '${POST - Authenticate User Admin#ResponseAsXml#declare namespace ns2=\'http://docs.openstack.org/identity/api/v2.0\'; //ns2:access[1]/ns2:token[1]/@id}' )

log.info nastId
log.info userId
log.info UAtokenId
testRunner.testCase.setPropertyValue("UAuserId", userId)
testRunner.testCase.setPropertyValue("UANastId", nastId)
testRunner.testCase.setPropertyValue("UAtokenId", UAtokenId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Create Default User w/UA - xml"><con:settings/><con:config service="Auth V1.1" resourcePath="/${#Project#pathv1.1}/users" methodName="POST - createUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Create Default User w/UA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:user enabled="true" id="${#TestCase#DUusername}" key="${#TestCase#DUkey}" mossoId="${#TestCase#DUMossoId}" nastId="${#TestCase#DUnastId}" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Authenticate Default User"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Authenticate Default User" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0"> &lt;apiKeyCredentials apiKey="${#TestCase#DUkey}" username="${#TestCase#DUusername}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/> &lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store DU"><con:settings/><con:config><script>def nastId = context.expand( '${POST - Create Default User w/UA - xml#ResponseAsXml#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:user[1]/@nastId}' )
def DUuserId = context.expand( '${POST - Authenticate Default User#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/@id}' )
def DUtokenId = context.expand( '${POST - Authenticate Default User#ResponseAsXml#declare namespace ns2=\'http://docs.openstack.org/identity/api/v2.0\'; //ns2:access[1]/ns2:token[1]/@id}' )
log.info nastId
log.info DUuserId
log.info DUtokenId
testRunner.testCase.setPropertyValue("DUuserId", DUuserId)
testRunner.testCase.setPropertyValue("DUNastId", nastId)
testRunner.testCase.setPropertyValue("DUtokenId", DUtokenId)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - AsServiceAdminGetUserAdminGroups - 200 - xml"><con:settings/><con:config service="RAX-KSGRP-admin" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" methodName="List Groups for a User - listUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - AsServiceAdminGetUserAdminGroups - 200 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace rax-ksgrp='http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0';
//rax-ksgrp:groups[1]/rax-ksgrp:group[1]/@name</path><content>Default</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#UAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - AsServiceAdminGetUserAdminGroups - 200 - json"><con:settings/><con:config service="RAX-KSGRP-admin" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" methodName="List Groups for a User - listUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - AsServiceAdminGetUserAdminGroups - 200 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Default</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#UAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - AsServiceAdminGetDefaultUserGroups - 200 - xml"><con:settings/><con:config service="RAX-KSGRP-admin" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" methodName="List Groups for a User - listUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - AsServiceAdminGetDefaultUserGroups - 200 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace rax-ksgrp='http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0';
//rax-ksgrp:groups[1]/rax-ksgrp:group[1]/@name</path><content>Default</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#UAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - AsServiceAdminGetDefaultUserGroups - 200 - json"><con:settings/><con:config service="RAX-KSGRP-admin" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" methodName="List Groups for a User - listUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - AsServiceAdminGetDefaultUserGroups - 200 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Default</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#UAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - AsUserAdminGetUserAdminGroups - 403 - xml"><con:settings/><con:config service="RAX-KSGRP-admin" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" methodName="List Groups for a User - listUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - AsUserAdminGetUserAdminGroups - 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Access is denied</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#UAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#UAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - AsUserAdminGetUserAdminGroups - 403 - json"><con:settings/><con:config service="RAX-KSGRP-admin" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" methodName="List Groups for a User - listUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - AsUserAdminGetUserAdminGroups - 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Access is denied</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#UAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#UAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - AsDefaultUserGetUserAdminGroups - 403 - xml"><con:settings/><con:config service="RAX-KSGRP-admin" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" methodName="List Groups for a User - listUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - AsDefaultUserGetUserAdminGroups - 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Access is denied</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#UAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#DUtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - AsDefaultUserGetUserAdminGroups - 403 - json"><con:settings/><con:config service="RAX-KSGRP-admin" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" methodName="List Groups for a User - listUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - AsDefaultUserGetUserAdminGroups - 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Access is denied</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#UAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#DUtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - AsDefaultUserGetDefaultUserGroups - 403 - xml"><con:settings/><con:config service="RAX-KSGRP-admin" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" methodName="List Groups for a User - listUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - AsDefaultUserGetDefaultUserGroups - 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Access is denied</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#DUtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - AsDefaultUserGetDefaultUserGroups - 403 - json"><con:settings/><con:config service="RAX-KSGRP-admin" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" methodName="List Groups for a User - listUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - AsDefaultUserGetDefaultUserGroups - 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Access is denied</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#DUtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - create Group -xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Add a New Group - addGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - create Group -xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;group name="testGroup11" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">
&lt;description>Creating a new group testGroup1&lt;/description>
&lt;/group></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns6='http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0';
//ns6:group[1]/ns6:description[1]</path><content>Creating a new group testGroup1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - create Group - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Add a New Group - addGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - create Group - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-KSGRP:group": {
"name" : "testGroup22",
"description" : "Creating a new group testGroup2"
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Creating a new group testGroup2</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store Groups"><con:settings/><con:config><script>def groupId1 = context.expand( '${POST - create Group -xml#ResponseAsXml#declare namespace ns6=\'http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0\'; //ns6:group[1]/@id}' )
def groupId2 = context.expand( '${POST - create Group - json#ResponseAsXml}' )
log.info groupId2
def groupIdJson = groupId2 =~ /&lt;id>(.*)&lt;\\/id>/
log.info "group Id1: " + groupId1
log.info "group Id2: " +  groupIdJson[0][1]

testRunner.testCase.setPropertyValue("groupId1", groupId1)
testRunner.testCase.setPropertyValue("groupId2", groupIdJson[0][1])</script></con:config></con:testStep><con:testStep type="restrequest" name="PUT  - addUserAdmintoGroup - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Add User to Group - addUserToGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT  - addUserAdmintoGroup - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestCase#groupId1}"/>
  <con:entry key="userId" value="${#TestCase#UAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT  - addUserAdmintoGroup - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Add User to Group - addUserToGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT  - addUserAdmintoGroup - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestCase#groupId2}"/>
  <con:entry key="userId" value="${#TestCase#UAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT  - addDefaultUsertoGroup - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Add User to Group - addUserToGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT  - addDefaultUsertoGroup - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestCase#groupId1}"/>
  <con:entry key="userId" value="${#TestCase#DUuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT  - addDefaultUsertoGroup - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Add User to Group - addUserToGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT  - addDefaultUsertoGroup - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestCase#groupId2}"/>
  <con:entry key="userId" value="${#TestCase#DUuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUsersForGroup /w users - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users" methodName="Get Users for Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUsersForGroup /w users - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#UAusername}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestCase#groupId1}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUsersForGroup /w Users - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users" methodName="Get Users for Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUsersForGroup /w Users - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#UAusername}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestCase#groupId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="REST Test Request"><con:settings/><con:config service="Auth V1.1" resourcePath="/${#Project#pathv1.1}/users/{userId}/groups" methodName="GET - getUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="REST Test Request" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#UAusername}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - AsServiceAdminGetUserAdminGroups /w groups - 200 - xml"><con:settings/><con:config service="RAX-KSGRP-admin" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" methodName="List Groups for a User - listUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - AsServiceAdminGetUserAdminGroups /w groups - 200 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace rax-ksgrp='http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0';
//rax-ksgrp:groups[1]/rax-ksgrp:group[1]/@name</path><content>testGroup11</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace rax-ksgrp='http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0';
//rax-ksgrp:groups[1]/rax-ksgrp:group[2]/@name</path><content>testGroup22</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#UAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - AsServiceAdminGetUserAdminGroups /w groups - 200 - json"><con:settings/><con:config service="RAX-KSGRP-admin" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" methodName="List Groups for a User - listUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - AsServiceAdminGetUserAdminGroups /w groups - 200 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>testGroup11</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>testGroup22</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#UAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - AsServiceAdminGetDefaultUserGroups /w groups - 200 - xml"><con:settings/><con:config service="RAX-KSGRP-admin" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" methodName="List Groups for a User - listUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - AsServiceAdminGetDefaultUserGroups /w groups - 200 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace rax-ksgrp='http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0';
//rax-ksgrp:groups[1]/rax-ksgrp:group[1]/@name</path><content>testGroup11</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace rax-ksgrp='http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0';
//rax-ksgrp:groups[1]/rax-ksgrp:group[2]/@name</path><content>testGroup22</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#UAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - AsServiceAdminGetDefaultUserGroups /w groups - 200 - json"><con:settings/><con:config service="RAX-KSGRP-admin" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" methodName="List Groups for a User - listUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - AsServiceAdminGetDefaultUserGroups /w groups - 200 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>testGroup22</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>testGroup11</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#UAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - AsUserAdminGetUserAdminGroups /w groups - 403 - xml"><con:settings/><con:config service="RAX-KSGRP-admin" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" methodName="List Groups for a User - listUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - AsUserAdminGetUserAdminGroups /w groups - 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Access is denied</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#UAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#UAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - AsUserAdminGetUserAdminGroups /w groups - 403 - json"><con:settings/><con:config service="RAX-KSGRP-admin" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" methodName="List Groups for a User - listUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - AsUserAdminGetUserAdminGroups /w groups - 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Access is denied</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#UAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#UAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - AsDefaultUserGetUserAdminGroups /w groups - 403 - xml"><con:settings/><con:config service="RAX-KSGRP-admin" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" methodName="List Groups for a User - listUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - AsDefaultUserGetUserAdminGroups /w groups - 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Access is denied</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#UAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#DUtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - AsDefaultUserGetUserAdminGroups /w groups - 403 - json"><con:settings/><con:config service="RAX-KSGRP-admin" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" methodName="List Groups for a User - listUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - AsDefaultUserGetUserAdminGroups /w groups - 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Access is denied</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#UAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#DUtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - AsDefaultUserGetDefaultUserGroups /w groups - 403 - xml"><con:settings/><con:config service="RAX-KSGRP-admin" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" methodName="List Groups for a User - listUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - AsDefaultUserGetDefaultUserGroups /w groups - 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Access is denied</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#DUtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - AsDefaultUserGetDefaultUserGroups /w groups - 403 - json"><con:settings/><con:config service="RAX-KSGRP-admin" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" methodName="List Groups for a User - listUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - AsDefaultUserGetDefaultUserGroups /w groups - 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Access is denied</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#DUtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - removeUserFromGroup - UserAdmin - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Remove User From Group - removeUserFromGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - removeUserFromGroup - UserAdmin - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestCase#groupId1}"/>
  <con:entry key="userId" value="${#TestCase#UAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - removeUserFromGroup - UserAdmin - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Remove User From Group - removeUserFromGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - removeUserFromGroup - UserAdmin - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestCase#groupId2}"/>
  <con:entry key="userId" value="${#TestCase#UAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - removeUserFromGroup - DefaultUser - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Remove User From Group - removeUserFromGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - removeUserFromGroup - DefaultUser - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestCase#groupId1}"/>
  <con:entry key="userId" value="${#TestCase#DUuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - removeUserFromGroup - DefaultUser - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Remove User From Group - removeUserFromGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - removeUserFromGroup - DefaultUser - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestCase#groupId2}"/>
  <con:entry key="userId" value="${#TestCase#DUuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUsersForGroup - 404 - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users" methodName="Get Users for Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUsersForGroup - 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No users in group</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestCase#groupId1}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUsersForGroup - 404 - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users" methodName="Get Users for Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUsersForGroup - 404 - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No users in group</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestCase#groupId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - AsServiceAdminGetUserAdminGroups /w Default - 200 - xml"><con:settings/><con:config service="RAX-KSGRP-admin" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" methodName="List Groups for a User - listUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - AsServiceAdminGetUserAdminGroups /w Default - 200 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace rax-ksgrp='http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0';
//rax-ksgrp:groups[1]/rax-ksgrp:group[1]/@name</path><content>Default</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#UAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - AsServiceAdminGetUserAdminGroups /w Default - 200 - json"><con:settings/><con:config service="RAX-KSGRP-admin" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" methodName="List Groups for a User - listUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - AsServiceAdminGetUserAdminGroups /w Default - 200 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Default</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#UAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - AsServiceAdminGetDefaultUserGroups /w Default - 200 - xml"><con:settings/><con:config service="RAX-KSGRP-admin" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" methodName="List Groups for a User - listUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - AsServiceAdminGetDefaultUserGroups /w Default - 200 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace rax-ksgrp='http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0';
//rax-ksgrp:groups[1]/rax-ksgrp:group[1]/@name</path><content>Default</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#UAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - AsServiceAdminGetDefaultUserGroups /w Default - 200 - json"><con:settings/><con:config service="RAX-KSGRP-admin" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" methodName="List Groups for a User - listUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - AsServiceAdminGetDefaultUserGroups /w Default - 200 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Default</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#UAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - AsUserAdminGetUserAdminGroups /w Default - 403 - xml"><con:settings/><con:config service="RAX-KSGRP-admin" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" methodName="List Groups for a User - listUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - AsUserAdminGetUserAdminGroups /w Default - 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Access is denied</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#UAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#UAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - AsUserAdminGetUserAdminGroups /w Default - 403 - json"><con:settings/><con:config service="RAX-KSGRP-admin" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" methodName="List Groups for a User - listUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - AsUserAdminGetUserAdminGroups /w Default - 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Access is denied</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#UAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#UAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - AsDefaultUserGetUserAdminGroups /w Default - 403 - xml"><con:settings/><con:config service="RAX-KSGRP-admin" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" methodName="List Groups for a User - listUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - AsDefaultUserGetUserAdminGroups /w Default - 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Access is denied</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#UAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#DUtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - AsDefaultUserGetUserAdminGroups /w Default - 403 - json"><con:settings/><con:config service="RAX-KSGRP-admin" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" methodName="List Groups for a User - listUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - AsDefaultUserGetUserAdminGroups /w Default - 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Access is denied</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#UAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#DUtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - AsDefaultUserGetDefaultUserGroups /w Default - 403 - xml"><con:settings/><con:config service="RAX-KSGRP-admin" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" methodName="List Groups for a User - listUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - AsDefaultUserGetDefaultUserGroups /w Default - 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Access is denied</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#DUtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - AsDefaultUserGetDefaultUserGroups /w Default - 403 - json"><con:settings/><con:config service="RAX-KSGRP-admin" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" methodName="List Groups for a User - listUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - AsDefaultUserGetDefaultUserGroups /w Default - 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Access is denied</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#DUtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteGroup - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Delete Group - deleteGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteGroup - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestCase#groupId1}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>2000</delay></con:config></con:testStep><con:testStep type="restrequest" name="GET getGroup - 404 - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Get Group - getGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getGroup - 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:itemNotFound[1]/ns1:message[1]</path><content>Group with id: '${#TestCase#groupId1}' was not found.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestCase#groupId1}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteGroup - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Delete Group - deleteGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteGroup - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestCase#groupId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay 1"><con:settings/><con:config><delay>2000</delay></con:config></con:testStep><con:testStep type="restrequest" name="GET getGroup - 404 - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Get Group - getGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getGroup - 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestCase#groupId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteAsServiceAdminDefaultUser - xml"><con:settings/><con:config service="Auth V1.1" resourcePath="/${#Project#pathv1.1}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteAsServiceAdminDefaultUser - xml" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#username}</con:username><con:password>${#TestSuite#password}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#DUusername}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE -deleteAsServiceAdminUserAdmin - xml"><con:settings/><con:config service="Auth V1.1" resourcePath="/${#Project#pathv1.1}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE -deleteAsServiceAdminUserAdmin - xml" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#username}</con:username><con:password>${#TestSuite#password}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#UAusername}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>UAusername</con:name><con:value>useradmin</con:value></con:property><con:property><con:name>UApassword</con:name><con:value>Password0</con:value></con:property><con:property><con:name>UAtokenId</con:name><con:value>894fcb29-52ea-4058-9a0a-f6ac101f1383</con:value></con:property><con:property><con:name>UAuserId</con:name><con:value>198063</con:value></con:property><con:property><con:name>UAkey</con:name><con:value>0f97f489c848438090250d50c7e1ea88</con:value></con:property><con:property><con:name>UAMossoId</con:name><con:value>5800182</con:value></con:property><con:property><con:name>UANastId</con:name><con:value>StagingUS_ee506ea8-c299-4d91-a89d-9ac2edd8f990</con:value></con:property><con:property><con:name>DUusername</con:name><con:value>defaultuser</con:value></con:property><con:property><con:name>DUkey</con:name><con:value>0f97f489c848438090250d50c7e1ea99</con:value></con:property><con:property><con:name>DUmossoId</con:name><con:value>5800180</con:value></con:property><con:property><con:name>DUuserId</con:name><con:value>198064</con:value></con:property><con:property><con:name>DUNastId</con:name><con:value>StagingUS_2c53a9d1-f73f-41f8-be6c-64a605acc643</con:value></con:property><con:property><con:name>DUtokenId</con:name><con:value>6b54911c-74eb-4161-8909-d2575a08fb26</con:value></con:property><con:property><con:name>groupId1</con:name><con:value>3624</con:value></con:property><con:property><con:name>groupId2</con:name><con:value>3626</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:properties><con:property><con:name>username</con:name><con:value>auth</con:value></con:property><con:property><con:name>password</con:name><con:value>auth123</con:value></con:property><con:property><con:name>tokenId</con:name><con:value>6d2be2e6-2e00-4e42-bf6d-e6d1fe2f9cae</con:value></con:property><con:property><con:name>userId</con:name><con:value>153345</con:value></con:property><con:property><con:name>tenantId</con:name><con:value>103952</con:value></con:property><con:property><con:name>username2</con:name><con:value>cmarin1</con:value></con:property><con:property><con:name>tokenId2</con:name><con:value>f000a864-d41b-42fb-9f40-1973c0c7b953</con:value></con:property><con:property><con:name>userId2</con:name><con:value>191416</con:value></con:property><con:property><con:name>password2</con:name><con:value>Password1</con:value></con:property><con:property><con:name>apiKey</con:name><con:value>7e4a5dda01d9f447695b5ff476a6788f</con:value></con:property><con:property><con:name>groupIdJson</con:name><con:value>1554</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="Functional - OS-KSADM-admin"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="users" searchProperties="true" id="cc6f4c12-79b8-4ea1-88fb-9f3f83b3bf99" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="POST - token - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="auth123" username="auth"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token info"><con:settings/><con:config><script>def tokenId = context.expand( '${POST - token - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info "get TokenId: " + tokenId
def userId = context.expand( '${POST - token - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/@id}' )
log.info "get UserId: " + userId

if (tokenId == "" | userId == "")
{
	assert false;	
}
testRunner.testCase.testSuite.setPropertyValue("tokenId", tokenId)
testRunner.testCase.testSuite.setPropertyValue("userId", userId)

</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - user-Admin - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - user-Admin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#password2}" username="${#TestSuite#username2}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token info 2"><con:settings/><con:config><script>def tokenId = context.expand( '${POST - token - user-Admin - xml#ResponseAsXml#declare namespace ns8=\'http://docs.openstack.org/identity/api/v2.0\'; //ns8:access[1]/ns8:token[1]/@id}' )
log.info "get TokenId: " + tokenId
def userId = context.expand( '${POST - token - user-Admin - xml#ResponseAsXml#declare namespace ns8=\'http://docs.openstack.org/identity/api/v2.0\'; //ns8:access[1]/ns8:user[1]/@id}' )

log.info "get UserId: " + userId

if (tokenId == "" | userId == "")
{
	assert false;	
}
testRunner.testCase.testSuite.setPropertyValue("tokenId2", tokenId)
testRunner.testCase.testSuite.setPropertyValue("userId2", userId)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - listUsers - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List users - listUsers" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listUsers - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUser - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user - addUser" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:user display-name="${#TestCase#testuser}" email="${#TestCase#testemail}" enabled="true" username="${#TestCase#testuser}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUser - 409 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user - addUser" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUser - 409 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:user display-name="${#TestCase#testuser}" email="${#TestCase#testemail}" enabled="true" username="${#TestCase#testuser}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 409</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store user info"><con:settings/><con:config><script>def userId = context.expand( '${POST - addUser - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:user[1]/@id}' )
log.info "get userId: " + userId

if (userId == "")
{
	assert false;	
}
testRunner.testCase.setPropertyValue("testuserId", userId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUser - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user - updateUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:user email="${#TestCase#newemail}" id="${#TestCase#testUserId}" username="${#TestCase#testuser}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#newemail}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addRoles - xml" disabled="true"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Global roles to a user. - addUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addRoles - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listUserRoles - xml" disabled="true"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Global Roles for a User - listUserRoles" resourcePath="/${#Project#path}/users/{userId}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listUserRoles - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>role </token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns2='http://docs.openstack.org/identity/api/v2.0';
//ns2:roles[1]/ns2:role[1]/@name</path><content>identity:default</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns2='http://docs.openstack.org/identity/api/v2.0';
//ns2:roles[1]/ns2:role[2]/@name</path><content>identity:user-admin</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="bde1268ebabeeabb70a0e702a4626977c331d5c4"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - infoGlobalUserRoles - xml" disabled="true"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get Role - getRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - infoGlobalUserRoles - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer xml"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>body2</con:name><con:sourceType>addUserCredentialsxml</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addUserCredentials - badUserId 404 - xml</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false"><con:name>body3</con:name><con:sourceType>addUserCredentialsxml</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addUserCredentials - non Admin 501 - xml</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="GET - listCredentials - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Credentials - listCredentials" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listCredentials - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#testuserId}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store credentials info" disabled="true"><con:settings/><con:config><script>def pwCred = context.expand( '${GET - listCredentials - xml#ResponseAsXml#declare namespace ns8=\'http://docs.openstack.org/identity/api/v2.0\'; //ns8:credentials[1]/ns8:passwordCredentials[1]/@password}' )

log.info "get pwCred: " + pwCred

if (pwCred == "")
{
	assert false;	
}
testRunner.testCase.setPropertyValue("pwCred", pwCred)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateCredentials - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user credential - updateUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/{credential-type}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateCredentials - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;passwordCredentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns="http://docs.openstack.org/identity/api/v2.0" username="${#TestCase#testuser}"
password="${#TestCase#newPwCred}"/>
</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 501</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>${#TestCase#newPwCred}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="credential-type" value="passwordCredentials"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userCredentials - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get user Credentials - getUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/{credential-type}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userCredentials - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 501</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="credential-type" value="passwordCredentials"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>body1</con:name><con:sourceType>adduserRequestJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addUser - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body2</con:name><con:sourceType>updateUserjson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - updateUser - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body3</con:name><con:sourceType>addUserCredentialsJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addUserCredentials - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true"><con:name>body4</con:name><con:sourceType>updateUserCredentialsjson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType xsi:nil="true"/><con:targetStep>POST - addUser - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body5</con:name><con:sourceType>adduserRequestJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addUser - bad Auth 401 - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false"><con:name>body6</con:name><con:sourceType>adduserRequestJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addUser - non Admin 403 - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body7</con:name><con:sourceType>updateUserjson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - updateUser - badId 404 - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false"><con:name>body8</con:name><con:sourceType>updateUserjson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - updateUser - bad Auth 401 - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>body9</con:name><con:sourceType>adduserRequestJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType xsi:nil="true"/><con:targetStep>POST - addUser - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body10</con:name><con:sourceType>addUserCredentialsJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addUserCredentials - badUserId 404 - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body11</con:name><con:sourceType>addUserCredentialsJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addUserCredentials - non Admin 501 - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>body12</con:name><con:sourceType>nullUserjson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addUser -  admin token - 501 - json</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUser - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user - addUser" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUser - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "user": {"display-name":"${#TestCase#testuserjson}", "username": "${#TestCase#testuserjson}", "email": "john.smith@example.org", "enabled": true } } </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store user info json"><con:settings/><con:config><script>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

def response = new JsonSlurper().parseText(context.expand( '${POST - addUser - json#Response}' ))
def userId = response.user.id
def userPw = response.user."OS-KSADM:password"
log.info userId 
log.info userPw
 
log.info "get userId: " + userId

if (userId == "")
{
	assert false;	
}
testRunner.testCase.setPropertyValue("testuserIdJson", userId)
testRunner.testCase.setPropertyValue("testuserPwJson", userPw)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUser - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user - updateUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUser - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "user": { "id": "${#TestCase#testuserIdJson}", "username": "${#TestCase#testuserjson}", "email": "john.smith2@example.org", "enabled": true } }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>john.smith2@example.org</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserIdjson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addRoles - json" disabled="true"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Global roles to a user. - addUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addRoles - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listUserRoles - json" disabled="true"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Global Roles for a User - listUserRoles" resourcePath="/${#Project#path}/users/{userId}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listUserRoles - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>"id":"${#TestCase#roleId}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://localhost/idm/cloud/v2.0/users/179270/roles';
//ns1:Response[1]/ns1:roles[1]/ns1:e[2]/ns1:name[1]</path><content>identity:default</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - infoGlobalUserRoles - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get Role - getRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - infoGlobalUserRoles - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addGlobalrole - json" disabled="true"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Global roles to a user. - addUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addGlobalrole - json" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 409</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userRole - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get user Role - getUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userRole - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 405</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>"id":"${#TestCase#roleId}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="2"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUserCredentials - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user Credential. - addUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUserCredentials - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "passwordCredentials": { "username": "${#TestCase#testuserjson}", "password": "${#TestCase#pwCredjson}" } } </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>${#TestCase#pwCredjson}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserIdjson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listCredentials - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Credentials - listCredentials" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listCredentials - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>${#TestCase#testuserjson}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store credentials info json" disabled="true"><con:settings/><con:config><script>def pwCredJson = context.expand( '${GET - listCredentials - json#ResponseAsXml#declare namespace ns1=\'${#Project#endpointjson}/idm/cloud/v2.0/users/${#TestCase#testuserIdJson}/OS-KSADM/credentials\'; //ns1:Response[1]/ns1:credentials[1]/ns1:e[1]/ns1:passwordCredentials[1]/ns1:password[1]}' )

log.info "get pwCredJson: " + pwCredJson

if (pwCredJson == "")
{
	assert false;	
}

testRunner.testCase.setPropertyValue("pwCredJson", pwCredJson)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - userCredentials - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get user Credentials - getUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/{credential-type}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userCredentials - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 501</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>${#TestCase#newPwCred}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="credential-type" value="passwordCredentials"/>
  <con:entry key="userId" value="${#TestCase#testuserIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - default-User - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - default-User - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#pwCredjson}" username="${#TestCase#testuserjson}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token info 3"><con:settings/><con:config><script>def tokenId = context.expand( '${POST - token - default-User - xml#ResponseAsXml#declare namespace ns8=\'http://docs.openstack.org/identity/api/v2.0\'; //ns8:access[1]/ns8:token[1]/@id}' )
log.info "get TokenId: " + tokenId
def userId = context.expand( '${POST - token - default-User - xml#ResponseAsXml#declare namespace ns8=\'http://docs.openstack.org/identity/api/v2.0\'; //ns8:access[1]/ns8:user[1]/@id}' )

log.info "get UserId: " + userId

if (tokenId == "" | userId == "")
{
	assert false;	
}
testRunner.testCase.testSuite.setPropertyValue("tokenId3", tokenId)
testRunner.testCase.testSuite.setPropertyValue("userId3", userId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUser - bad Auth 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user - addUser" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUser - bad Auth 401 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:user display-name="${#TestCase#testuser}" email="${#TestCase#testemail}" enabled="true" id="" username="${#TestCase#testuser}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="badAuth" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUser - bad Auth 401 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user - addUser" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUser - bad Auth 401 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "user": {"display-name":"${#TestCase#testuserjson}", "username": "${#TestCase#testuserjson}", "email": "john.smith@example.org", "enabled": true } } </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="badAuth" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUser - non Admin 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user - addUser" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUser - non Admin 403 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:user display-name="${#TestCase#testuser}" email="${#TestCase#testemail}" enabled="true" username="${#TestCase#testuser}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId3}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUser - non Admin 403 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user - addUser" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUser - non Admin 403 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "user": {"display-name":"${#TestCase#testuserjson}", "username": "${#TestCase#testuserjson}", "email": "john.smith@example.org", "enabled": true } } </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId3}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUser - badId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user - updateUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUser - badId 404 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:user email="${#TestCase#newemail}" id="${#TestCase#testUserId}" username="${#TestCase#testuser}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User with id: '1212121212' was not found</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="1212121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUser - badId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user - updateUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUser - badId 404 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "user": { "id": "${#TestCase#testuserIdJson}", "username": "${#TestCase#testuserjson}", "email": "john.smith2@example.org", "enabled": true } }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User with id: '1212121212' was not found</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="1212121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUser - bad Auth 401 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user - updateUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUser - bad Auth 401 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "user": { "id": "${#TestCase#testuserIdJson}", "username": "${#TestCase#testuserjson}", "email": "john.smith2@example.org", "enabled": true } }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="bad Auth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUser - bad Auth 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user - updateUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUser - bad Auth 401 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:user email="${#TestCase#newemail}" id="${#TestCase#testUserId}" username="${#TestCase#testuser}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="bad Auth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addRoles - badUserId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Global roles to a user. - addUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addRoles - badUserId 404 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="1212121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addRoles - badUserId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Global roles to a user. - addUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addRoles - badUserId 404 - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="1212121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listUserRoles - badUserId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Global Roles for a User - listUserRoles" resourcePath="/${#Project#path}/users/{userId}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listUserRoles - badUserId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="1212121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listUserRoles - badUserId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Global Roles for a User - listUserRoles" resourcePath="/${#Project#path}/users/{userId}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listUserRoles - badUserId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="1212121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listUserRoles - bad Auth 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Global Roles for a User - listUserRoles" resourcePath="/${#Project#path}/users/{userId}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listUserRoles - bad Auth 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listUserRoles - bad Auth 401 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Global Roles for a User - listUserRoles" resourcePath="/${#Project#path}/users/{userId}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listUserRoles - bad Auth 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listUserRoles - non Admin 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Global Roles for a User - listUserRoles" resourcePath="/${#Project#path}/users/{userId}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listUserRoles - non Admin 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="bde1268ebabeeabb70a0e702a4626977c331d5c4"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId3}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listUserRoles - non Admin 403 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Global Roles for a User - listUserRoles" resourcePath="/${#Project#path}/users/{userId}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listUserRoles - non Admin 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="bde1268ebabeeabb70a0e702a4626977c331d5c4"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId3}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - infoGlobalUserRoles - badId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get Role - getRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - infoGlobalUserRoles - badId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="12121212"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - infoGlobalUserRoles - badId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get Role - getRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - infoGlobalUserRoles - badId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="12121212"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - infoGlobalUserRoles - badAuth 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get Role - getRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - infoGlobalUserRoles - badAuth 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - infoGlobalUserRoles - badAuth 401 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get Role - getRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - infoGlobalUserRoles - badAuth 401 - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - infoGlobalUserRoles - non Admin 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get Role - getRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - infoGlobalUserRoles - non Admin 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId3}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - infoGlobalUserRoles - non Admin 403 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get Role - getRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - infoGlobalUserRoles - non Admin 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId3}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addGlobalrole - badRoleId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Global roles to a user. - addUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addGlobalrole - badRoleId 404 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="12121212"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addGlobalrole - badRoleId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Global roles to a user. - addUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addGlobalrole - badRoleId 404 - json" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="12121212"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addGlobalrole - badUserId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Global roles to a user. - addUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addGlobalrole - badUserId 404 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="12121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addGlobalrole - badUserId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Global roles to a user. - addUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addGlobalrole - badUserId 404 - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="12121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addGlobalrole - bad Auth 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Global roles to a user. - addUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addGlobalrole - bad Auth 401 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addGlobalrole - bad Auth 401 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Global roles to a user. - addUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addGlobalrole - bad Auth 401 - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addGlobalrole - non Admin 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Global roles to a user. - addUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addGlobalrole - non Admin 403 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId3}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addGlobalrole - non Admin 403 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Global roles to a user. - addUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addGlobalrole - non Admin 403 - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId3}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userRole - badRoleId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get user Role - getUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userRole - badRoleId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="12121212"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userRole - badRoleId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get user Role - getUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userRole - badRoleId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="12121212"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userRole - badUserId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get user Role - getUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userRole - badUserId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="1212121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userRole - badUserId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get user Role - getUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userRole - badUserId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="1212121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userRole - badAuth 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get user Role - getUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userRole - badAuth 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userRole - badAuth 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get user Role - getUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userRole - badAuth 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - globalRole4User - badRoleId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete Global Roles on User. - deleteUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - globalRole4User - badRoleId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="12121212"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - globalRole4User - badRoleId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete Global Roles on User. - deleteUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - globalRole4User - badRoleId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="12121212"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - globalRole4User - badUserId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete Global Roles on User. - deleteUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - globalRole4User - badUserId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="1212121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - globalRole4User - badUserId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete Global Roles on User. - deleteUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - globalRole4User - badUserId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="1212121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - globalRole4User - badAuth 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete Global Roles on User. - deleteUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - globalRole4User - badAuth 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - globalRole4User - badAuth 401 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete Global Roles on User. - deleteUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - globalRole4User - badAuth 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - globalRole4User - non Admin 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete Global Roles on User. - deleteUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - globalRole4User - non Admin 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId3}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - globalRole4User - non Admin 403 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete Global Roles on User. - deleteUserRole" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - globalRole4User - non Admin 403 - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId3}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUserCredentials - badUserId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user Credential. - addUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUserCredentials - badUserId 404 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:credentials xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="12121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUserCredentials - badUserId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user Credential. - addUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUserCredentials - badUserId 404 - json" mediaType="application/json" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="12121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUserCredentials - non Admin 501 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user Credential. - addUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUserCredentials - non Admin 501 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;passwordCredentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://docs.openstack.org/identity/api/v2.0" username="${#TestCase#testuser}" password="${#TestCase#pwCred}"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 501</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId3}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUserCredentials - non Admin 501 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user Credential. - addUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUserCredentials - non Admin 501 - json" mediaType="application/json" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "passwordCredentials": { "username": "${#TestCase#testuserjson}", "password": "${#TestCase#pwCredjson}" } } </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 501</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId3}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listCredentials - badId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Credentials - listCredentials" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listCredentials - badId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listCredentials - badId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Credentials - listCredentials" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listCredentials - badId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listCredentials - bad Auth 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Credentials - listCredentials" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listCredentials - bad Auth 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listCredentials - bad Auth 401 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Credentials - listCredentials" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listCredentials - bad Auth 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listCredentials - non Admin 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Credentials - listCredentials" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listCredentials - non Admin 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId3}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listCredentials - non Admin 403 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Credentials - listCredentials" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listCredentials - non Admin 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId3}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateCredentials - badUserId 501 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user credential - updateUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/{credential-type}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateCredentials - badUserId 501 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;passwordCredentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns="http://docs.openstack.org/identity/api/v2.0" username="${#TestCase#testuser}"
password="${#TestCase#newPwCred}"/>
</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 501</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="credential-type" value="passwordCredentials"/>
  <con:entry key="userId" value="12121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateCredentials - badUserId 501 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user credential - updateUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/{credential-type}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateCredentials - badUserId 501 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "passwordCredentials": { "username": "${#TestCase#testuserjson}", "password": "${#TestCase#newPwCredjson}" } } </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 501</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="credential-type" value="passwordCredentials"/>
  <con:entry key="userId" value="12121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateCredentials - badAuth 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user credential - updateUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/{credential-type}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateCredentials - badAuth 401 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;passwordCredentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns="http://docs.openstack.org/identity/api/v2.0" username="${#TestCase#testuser}"
password="${#TestCase#newPwCred}"/>
</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="credential-type" value="passwordCredentials"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateCredentials - badAuth 401 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user credential - updateUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/{credential-type}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateCredentials - badAuth 401 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "passwordCredentials": { "username": "${#TestCase#testuserjson}", "password": "${#TestCase#newPwCredjson}" } } </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="credential-type" value="passwordCredentials"/>
  <con:entry key="userId" value="${#TestCase#testuserIdJson}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateCredentials - non Admin 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user credential - updateUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/{credential-type}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateCredentials - non Admin 403 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;passwordCredentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns="http://docs.openstack.org/identity/api/v2.0" username="${#TestCase#testuser}"
password="${#TestCase#newPwCred}"/>
</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="credential-type" value="passwordCredentials"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId3}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateCredentials - non Admin 403 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user credential - updateUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/{credential-type}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateCredentials - non Admin 403 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "passwordCredentials": { "username": "${#TestCase#testuserjson}", "password": "${#TestCase#newPwCredjson}" } } </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="credential-type" value="passwordCredentials"/>
  <con:entry key="userId" value="${#TestCase#testuserIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId3}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userCredentials - badId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get user Credentials - getUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/{credential-type}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userCredentials - badId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="credential-type" value="passwordCredentials"/>
  <con:entry key="userId" value="12121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userCredentials - badId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get user Credentials - getUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/{credential-type}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userCredentials - badId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="credential-type" value="passwordCredentials"/>
  <con:entry key="userId" value="1212121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userCredentials - badCredential 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get user Credentials - getUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/{credential-type}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userCredentials - badCredential 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="credential-type" value="passwordCredentialsss"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userCredentials - badCredential 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get user Credentials - getUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/{credential-type}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userCredentials - badCredential 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="credential-type" value="PasswordCredentials"/>
  <con:entry key="userId" value="${#TestCase#testuserIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userCredentials - badAuth 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get user Credentials - getUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/{credential-type}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userCredentials - badAuth 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="credential-type" value="passwordCredentials"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userCredentials - badAuth 401 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get user Credentials - getUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/{credential-type}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userCredentials - badAuth 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="credential-type" value="passwordCredentials"/>
  <con:entry key="userId" value="${#TestCase#testuserIdJson}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userCredentials - non Admin 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get user Credentials - getUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/{credential-type}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userCredentials - non Admin 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 501</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="credential-type" value="passwordCredentials"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId3}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userCredentials - non Admin 403 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get user Credentials - getUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/{credential-type}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userCredentials - non Admin 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 501</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="credential-type" value="passwordCredentials"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId3}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - user - badId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user - badId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="12121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - user - badId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user - badId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="12121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - user - badAuth 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user - badAuth 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - user - badAuth 401 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user - badAuth 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - user - non Admin 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user - non Admin 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId3}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - user - non Admin 403 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user - non Admin 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId3}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUser -  admin token - 501 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user - addUser" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUser -  admin token - 501 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "user": {"display-name":"${#TestCase#testuserjson}", "username": null, "email": "john.smith@example.org", "enabled": true } } </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 501</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listUserAdminRolesAsServiceAdmin -  json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Global Roles for a User - listUserRoles" resourcePath="/${#Project#path}/users/{userId}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listUserAdminRolesAsServiceAdmin -  json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="bde1268ebabeeabb70a0e702a4626977c331d5c4"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId3}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - user - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - user - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>testuser</con:name><con:value>testuser111</con:value></con:property><con:property><con:name>testemail</con:name><con:value>testuser@rackspace.com</con:value></con:property><con:property><con:name>testuserId</con:name><con:value>198065</con:value></con:property><con:property><con:name>newemail</con:name><con:value>testuser1@rackspace.com</con:value></con:property><con:property><con:name>testTenantId</con:name><con:value>1111111</con:value></con:property><con:property><con:name>adduserRequestJson</con:name><con:value>{ "user": {"display-name":"${#TestCase#testuserjson}", "username": "${#TestCase#testuserjson}", "email": "john.smith@example.org", "enabled": true } } </con:value></con:property><con:property><con:name>roleId</con:name><con:value>3</con:value></con:property><con:property><con:name>tenantName</con:name><con:value>MossoCloudFS_f3b094b3-0185-45bf-9608-a853456gggg</con:value></con:property><con:property><con:name>tenantId</con:name><con:value>MossoCloudFS_f3b094b3-0185-45bf-9608-a853456gggg</con:value></con:property><con:property><con:name>pwCred</con:name><con:value>51m8N+8891</con:value></con:property><con:property><con:name>newPwCred</con:name><con:value>test_pw</con:value></con:property><con:property><con:name>testuserjson</con:name><con:value>testuser10011</con:value></con:property><con:property><con:name>testuserIdJson</con:name><con:value>198066</con:value></con:property><con:property><con:name>updateUserjson</con:name><con:value>{ "user": { "id": "${#TestCase#testuserIdJson}", "username": "${#TestCase#testuserjson}", "email": "john.smith2@example.org", "enabled": true } }</con:value></con:property><con:property><con:name>addUserCredentialsJson</con:name><con:value>{ "passwordCredentials": { "username": "${#TestCase#testuserjson}", "password": "${#TestCase#pwCredjson}" } } </con:value></con:property><con:property><con:name>pwCredJson</con:name><con:value>51m8N+8892</con:value></con:property><con:property><con:name>newPwCredJson</con:name><con:value>test_pw2</con:value></con:property><con:property><con:name>addUserCredentialsxml</con:name><con:value>&lt;passwordCredentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://docs.openstack.org/identity/api/v2.0" username="${#TestCase#testuser}" password="${#TestCase#pwCred}"/></con:value></con:property><con:property><con:name>updateUserCredentialsjson</con:name><con:value>{ "passwordCredentials": { "username": "${#TestCase#testuserjson}", "password": "${#TestCase#newPwCredjson}" } } </con:value></con:property><con:property><con:name>nullUserjson</con:name><con:value>{ "user": {"display-name":"${#TestCase#testuserjson}", "username": null, "email": "john.smith@example.org", "enabled": true } } </con:value></con:property><con:property><con:name>testuserPwJson</con:name><con:value>dIpXZgJ5</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="roles" searchProperties="true" id="e976551b-f849-446c-8d67-c18e988acb73" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="GET - listRoles - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Roles - listRoles" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Roles - listRoles" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles - serviceId - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Roles - listRoles" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles - serviceId - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>bde1268ebabeeabb70a0e702a4626977c331d5c4</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains"><con:configuration><token>ee1ce025d3a4f6e35b481ce247dd61262381e1d8</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="bde1268ebabeeabb70a0e702a4626977c331d5c4"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles - serviceId - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Roles - listRoles" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles - serviceId - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>bde1268ebabeeabb70a0e702a4626977c331d5c4</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains"><con:configuration><token>ee1ce025d3a4f6e35b481ce247dd61262381e1d8</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="bde1268ebabeeabb70a0e702a4626977c331d5c4"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addRoles - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Role - addRole" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addRoles - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:role description="test a role" name="testRole" serviceId="bde1268ebabeeabb70a0e702a4626977c331d5c4" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>test a role</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addRoles - 409 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Role - addRole" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addRoles - 409 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:role description="test a role" name="testRole" serviceId="bde1268ebabeeabb70a0e702a4626977c331d5c4" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 409</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store role info"><con:settings/><con:config><script>def roleId = context.expand( '${POST - addRoles - xml#Response#declare namespace ns8=\'http://docs.openstack.org/identity/api/v2.0\'; //ns8:role[1]/@id}' )
log.info "get roleId: " + roleId

if (roleId == "")
{
	assert false;	
}
testRunner.testCase.setPropertyValue("roleId", roleId)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles - verify added role - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Roles - listRoles" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles - verify added role - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>test a role</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - role - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get Role - getRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - role - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>test a role</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - role - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete Role - deleteRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - role - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles - verify deleted role - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Roles - listRoles" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles - verify deleted role - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>body1json</con:name><con:sourceType>request1json</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addRoles - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body2json</con:name><con:sourceType>addRoleNoNamejson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addRoles - noName 400 - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body3</con:name><con:sourceType>request1json</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addRoles - badAuth 401 - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body4</con:name><con:sourceType>request1json</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addRoles - non Admin 403 - json</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST - addRoles - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Role - addRole" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addRoles - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>test a role</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store role info json"><con:settings/><con:config><script>def roleId = context.expand( '${POST - addRoles - json#ResponseAsXml#declare namespace ns1=\'${#Project#endpointjson}/${#Project#path}/OS-KSADM/roles\'; //ns1:Response[1]/ns1:role[1]/ns1:id[1]}' )

log.info "get roleId: " + roleId

if (roleId == "")
{
	assert false;	
}
testRunner.testCase.setPropertyValue("roleId", roleId)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles - verify added role - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Roles - listRoles" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles - verify added role - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>test a role</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - role - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get Role - getRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - role - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>test a role</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - role - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete Role - deleteRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - role - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles - verify deleted role - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Roles - listRoles" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles - verify deleted role - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains"><con:configuration><token>${#TestCase#roleId}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles - badAuth - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Roles - listRoles" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles - badAuth - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="badAuth" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles - badAuth - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Roles - listRoles" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles - badAuth - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="badAuth" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addRoles - badAuth - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Role - addRole" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addRoles - badAuth - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:role description="test a role" name="testRole" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="badAuth" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addRoles - badAuth - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Role - addRole" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addRoles - badAuth - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:role description="test a role" name="testRole" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="badAuth" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - role - badAuth - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get Role - getRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - role - badAuth - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="badAuth"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - role - badAuth - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get Role - getRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - role - badAuth - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="badAuth"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - role - badId - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get Role - getRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - role - badId - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="10000000000"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - role - badId - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get Role - getRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - role - badId - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="10000000000"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - role - badAuth - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete Role - deleteRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - role - badAuth - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="badAuth"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - role - badAuth - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete Role - deleteRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - role - badAuth - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="badAuth"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - role - badId - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete Role - deleteRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - role - badId - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="100000000001"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - role - badId - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete Role - deleteRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - role - badId - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="100000000001"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles - badAuth 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Roles - listRoles" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles - badAuth 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="badAuth" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles - badAuth 401 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Roles - listRoles" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles - badAuth 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="badAuth" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles - nonAdmin 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Roles - listRoles" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles - nonAdmin 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles - nonAdmin 403 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Roles - listRoles" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles - nonAdmin 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addRoles - noName 400 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Role - addRole" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addRoles - noName 400 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:role description="test a role" name="" serviceId="bde1268ebabeeabb70a0e702a4626977c331d5c4" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addRoles - noName 400 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Role - addRole" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addRoles - noName 400 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "role": {"name": "", "description": "test a role", "serviceId": "bde1268ebabeeabb70a0e702a4626977c331d5c4" } } </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addRoles -  badAuth 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Role - addRole" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addRoles -  badAuth 401 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:role description="test a role" name="testRole" serviceId="bde1268ebabeeabb70a0e702a4626977c331d5c4" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="badAuth" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addRoles - badAuth 401 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Role - addRole" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addRoles - badAuth 401 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "role": {"name": "Guest1", "description": "test a role", "serviceId": "bde1268ebabeeabb70a0e702a4626977c331d5c4" } } </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="badAuth" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addRoles - non Admin 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Role - addRole" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addRoles - non Admin 403 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:role description="test a role" name="testRole" serviceId="bde1268ebabeeabb70a0e702a4626977c331d5c4" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addRoles - non Admin 403 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Role - addRole" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addRoles - non Admin 403 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "role": {"name": "Guest1", "description": "test a role", "serviceId": "bde1268ebabeeabb70a0e702a4626977c331d5c4" } } </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - role - badId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get Role - getRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - role - badId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="12121212"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - role - badId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get Role - getRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - role - badId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="12121212"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - role - badAuth 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get Role - getRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - role - badAuth 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="badAuth"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - role - badAuth 401 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get Role - getRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - role - badAuth 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="badAuth"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - role - non Admin 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get Role - getRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - role - non Admin 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - role - non Admin 403 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get Role - getRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - role - non Admin 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - role - badId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete Role - deleteRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - role - badId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="12121212"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - role - badId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete Role - deleteRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - role - badId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="12121212"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - role - badAuth 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete Role - deleteRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - role - badAuth 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="badAuth"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - role - badAuth 401 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete Role - deleteRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - role - badAuth 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="badAuth"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - role - non Admin 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete Role - deleteRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - role - non Admin 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - role - non Admin 403 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete Role - deleteRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - role - non Admin 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>roleId</con:name><con:value>439</con:value></con:property><con:property><con:name>request1json</con:name><con:value>{ "role": {"name": "Guest1", "description": "test a role", "serviceId": "bde1268ebabeeabb70a0e702a4626977c331d5c4" } } </con:value></con:property><con:property><con:name>addRoleNoNamejson</con:name><con:value>{ "role": {"name": "", "description": "test a role", "serviceId": "bde1268ebabeeabb70a0e702a4626977c331d5c4" } } </con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="tenants" searchProperties="true" id="2d204d72-f158-48ff-97aa-da98e4724832" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" disabled="true"><con:settings/><con:testStep type="restrequest" name="POST - addTenant - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Tenant - addTenant" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addTenant - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:tenant enabled="true" name="${#TestCase#tenantName}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0">&lt;v2:description>test a Tenant&lt;/v2:description>&lt;/v2:tenant></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>name="${#TestCase#tenantName}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addTenant - 409 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Tenant - addTenant" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addTenant - 409 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:tenant enabled="true" name="${#TestCase#tenantName}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0">&lt;v2:description>test a Tenant&lt;/v2:description>&lt;/v2:tenant></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 409</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>name="${#TestCase#tenantName}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store tenant info"><con:settings/><con:config><script>def tenantId = context.expand( '${POST - addTenant - xml#Response#declare namespace ns8=\'http://docs.openstack.org/identity/api/v2.0\'; //ns8:tenant[1]/@id}' )
log.info "get tenantID: " + tenantId

if (tenantId == "")
{
	assert false;	
}
testRunner.testCase.setPropertyValue("tenantId", tenantId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateTenant - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update Tenant - updateTenant" resourcePath="/${#Project#path}/tenants/{tenantId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateTenant - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:tenant name="newName" xmlns:v2="http://docs.openstack.org/identity/api/v2.0">&lt;v2:description>new description&lt;/v2:description>&lt;/v2:tenant></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>name="newName"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>id="${#TestCase#tenantId}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUser - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user - addUser" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:user display-name="${#TestCase#testName}" email="${#TestCase#testemail}" enabled="true" id="" username="${#TestCase#testName}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store user info"><con:settings/><con:config><script>def userId = context.expand( '${POST - addUser - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:user[1]/@id}' )
log.info "get userId: " + userId

if (userId == "")
{
	assert false;	
}
testRunner.testCase.setPropertyValue("testuserId", userId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - addRoles - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Role - addRole" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addRoles - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:role description="test a role 2" name="testRole2" serviceId="bde1268ebabeeabb70a0e702a4626977c331d5c4" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>test a role</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store role info"><con:settings/><con:config><script>def roleId = context.expand( '${POST - addRoles - xml#Response#declare namespace ns8=\'http://docs.openstack.org/identity/api/v2.0\'; //ns8:role[1]/@id}' )
log.info "get roleId: " + roleId

if (roleId == "")
{
	assert false;	
}
testRunner.testCase.setPropertyValue("roleId", roleId)</script></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addRoleToUserOnTenant - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add roles to a user on a tenant. - addRolesToUserOnTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addRoleToUserOnTenant - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listUsers4Tenant - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List users for a Tenant. - listUsersForTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listUsers4Tenant - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#testName}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - user w/ role4Tenant - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List user with role for tenant. - listUsersWithRoleForTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - user w/ role4Tenant - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#testName}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles4Tenant - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List roles for a Tenant. - listRolesForTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles4Tenant - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>id="${#TestCase#roleId}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - roles4UserOnTenant - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete roles from a user on tenant. - deleteRoleFromUserOnTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - roles4UserOnTenant - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles4Tenant - verify - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List roles for a Tenant. - listRolesForTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles4Tenant - verify - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains"><con:configuration><token>id="${#TestCase#roleId}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - tenant - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete a Tenant - deleteTenant" resourcePath="/${#Project#path}/tenants/{tenantId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - tenant - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - role - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete Role - deleteRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - role - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - user - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>json1body</con:name><con:sourceType>request1json</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addTenant - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body2json</con:name><con:sourceType>request2json</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - updateTenant - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body3</con:name><con:sourceType>addTenantNoNamejson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addTenant - noName 400 - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body4</con:name><con:sourceType>request1json</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addTenant - badAuth 401 - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body5</con:name><con:sourceType>request1json</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addTenant - non Admin 403 - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body6</con:name><con:sourceType>request1json</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - updateTenant - badTenantId 404 - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body7</con:name><con:sourceType>request2json</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - updateTenant - badAuth 401 - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body8</con:name><con:sourceType>request2json</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - updateTenant - non Admin 403 - json</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST - addTenant - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Tenant - addTenant" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addTenant - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "tenant": { "name": "${#TestCase#tenantName}", "description": "test a description", "enabled": true } }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>"name":"${#TestCase#tenantName}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store tenant info2"><con:settings/><con:config><script>def tenantId = context.expand( '${POST - addTenant - json#ResponseAsXml#declare namespace ns1=\'${#Project#endpointjson}/idm/cloud/v2.0/tenants\'; //ns1:Response[1]/ns1:tenant[1]/ns1:id[1]}' )

log.info "get tenantID: " + tenantId

if (tenantId == "")
{
	assert false;	
}
testRunner.testCase.setPropertyValue("tenantId2", tenantId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateTenant - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update Tenant - updateTenant" resourcePath="/${#Project#path}/tenants/{tenantId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateTenant - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "tenant": { "name": "newName", "description": "new description", "enabled": true } }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>"name":"newName"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>"id":"${#TestCase#tenantId}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUser - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user - addUser" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUser - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:user display-name="${#TestCase#testName2}" email="${#TestCase#testemail}" enabled="true" id="" username="${#TestCase#testName2}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#testName2}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store user info 2"><con:settings/><con:config><script>def userId = context.expand( '${POST - addUser - json#ResponseAsXml#declare namespace ns1=\'${#Project#endpointjson}/idm/cloud/v2.0/users\'; //ns1:Response[1]/ns1:user[1]/ns1:id[1]}' )
log.info "get userId: " + userId

if (userId == "")
{
	assert false;	
}
testRunner.testCase.setPropertyValue("testuserId2", userId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - addRoles - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Role - addRole" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addRoles - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:role description="test a role 2" name="testRole2" serviceId="bde1268ebabeeabb70a0e702a4626977c331d5c4" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>test a role</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store role info 2"><con:settings/><con:config><script>def roleId = context.expand( '${POST - addRoles - json#ResponseAsXml#declare namespace ns1=\'${#Project#endpointjson}/idm/cloud/v2.0/OS-KSADM/roles\'; //ns1:Response[1]/ns1:role[1]/ns1:id[1]}' )

log.info "get roleId: " + roleId

if (roleId == "")
{
	assert false;	
}
testRunner.testCase.setPropertyValue("roleId2", roleId)</script></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addRoleToUserOnTenant - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add roles to a user on a tenant. - addRolesToUserOnTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addRoleToUserOnTenant - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId2}"/>
  <con:entry key="userId" value="${#TestCase#testuserId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listUsers4Tenant - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List users for a Tenant. - listUsersForTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listUsers4Tenant - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#testName2}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - user w/ role4Tenant - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List user with role for tenant. - listUsersWithRoleForTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - user w/ role4Tenant - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#testName2}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles4Tenant - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List roles for a Tenant. - listRolesForTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles4Tenant - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>id":"${#TestCase#roleId2}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - roles4UserOnTenant - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete roles from a user on tenant. - deleteRoleFromUserOnTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - roles4UserOnTenant - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId2}"/>
  <con:entry key="userId" value="${#TestCase#testuserId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles4Tenant - verify - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List roles for a Tenant. - listRolesForTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles4Tenant - verify - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains"><con:configuration><token>id="${#TestCase#roleId}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - tenant - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete a Tenant - deleteTenant" resourcePath="/${#Project#path}/tenants/{tenantId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - tenant - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - role - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete Role - deleteRole" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - role - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - user - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addTenant - negativeTest - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Tenant - addTenant" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addTenant - negativeTest - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:tenant enabled="true" name="${#TestCase#tenantName}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0">&lt;v2:description>test a Tenant&lt;/v2:description>&lt;/v2:tenant></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>name="${#TestCase#tenantName}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store tenant info negative test"><con:settings/><con:config><script>def tenantId = context.expand( '${POST - addTenant - negativeTest - xml#Response#declare namespace ns8=\'http://docs.openstack.org/identity/api/v2.0\'; //ns8:tenant[1]/@id}' )
log.info "get tenantID: " + tenantId

if (tenantId == "")
{
	assert false;	
}
testRunner.testCase.setPropertyValue("tenantId", tenantId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - addTenant - noName 400 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Tenant - addTenant" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addTenant - noName 400 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:tenant enabled="true" name="" xmlns:v2="http://docs.openstack.org/identity/api/v2.0">&lt;v2:description>test a Tenant&lt;/v2:description>&lt;/v2:tenant></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addTenant - noName 400 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Tenant - addTenant" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addTenant - noName 400 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "tenant": { "name": "", "description": "test a description", "enabled": true } }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addTenant - badAuth 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Tenant - addTenant" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addTenant - badAuth 401 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:tenant enabled="true" name="${#TestCase#tenantName}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0">&lt;v2:description>test a Tenant&lt;/v2:description>&lt;/v2:tenant></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="badAuth" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addTenant - badAuth 401 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Tenant - addTenant" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addTenant - badAuth 401 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "tenant": { "name": "${#TestCase#tenantName}", "description": "test a description", "enabled": true } }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="badAuth" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addTenant - non Admin 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Tenant - addTenant" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addTenant - non Admin 403 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:tenant enabled="true" name="${#TestCase#tenantName}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0">&lt;v2:description>test a Tenant&lt;/v2:description>&lt;/v2:tenant></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addTenant - non Admin 403 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Tenant - addTenant" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addTenant - non Admin 403 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "tenant": { "name": "${#TestCase#tenantName}", "description": "test a description", "enabled": true } }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateTenant - badTenantId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update Tenant - updateTenant" resourcePath="/${#Project#path}/tenants/{tenantId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateTenant - badTenantId 404 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:tenant name="newName" xmlns:v2="http://docs.openstack.org/identity/api/v2.0">&lt;v2:description>new description&lt;/v2:description>&lt;/v2:tenant></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="12121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateTenant - badTenantId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update Tenant - updateTenant" resourcePath="/${#Project#path}/tenants/{tenantId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateTenant - badTenantId 404 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "tenant": { "name": "${#TestCase#tenantName}", "description": "test a description", "enabled": true } }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="12121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateTenant - badAuth 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update Tenant - updateTenant" resourcePath="/${#Project#path}/tenants/{tenantId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateTenant - badAuth 401 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:tenant name="newName" xmlns:v2="http://docs.openstack.org/identity/api/v2.0">&lt;v2:description>new description&lt;/v2:description>&lt;/v2:tenant></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateTenant - badAuth 401 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update Tenant - updateTenant" resourcePath="/${#Project#path}/tenants/{tenantId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateTenant - badAuth 401 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "tenant": { "name": "newName", "description": "new description", "enabled": true } }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateTenant - non Admin 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update Tenant - updateTenant" resourcePath="/${#Project#path}/tenants/{tenantId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateTenant - non Admin 403 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:tenant name="newName" xmlns:v2="http://docs.openstack.org/identity/api/v2.0">&lt;v2:description>new description&lt;/v2:description>&lt;/v2:tenant></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateTenant - non Admin 403 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update Tenant - updateTenant" resourcePath="/${#Project#path}/tenants/{tenantId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateTenant - non Admin 403 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "tenant": { "name": "newName", "description": "new description", "enabled": true } }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - tenant - badId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete a Tenant - deleteTenant" resourcePath="/${#Project#path}/tenants/{tenantId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - tenant - badId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="1212121221"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - tenant - badId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete a Tenant - deleteTenant" resourcePath="/${#Project#path}/tenants/{tenantId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - tenant - badId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="1212121221"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - tenant - badAuth 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete a Tenant - deleteTenant" resourcePath="/${#Project#path}/tenants/{tenantId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - tenant - badAuth 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - tenant - badAuth 401 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete a Tenant - deleteTenant" resourcePath="/${#Project#path}/tenants/{tenantId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - tenant - badAuth 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - tenant - non Admin 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete a Tenant - deleteTenant" resourcePath="/${#Project#path}/tenants/{tenantId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - tenant - non Admin 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - tenant - non Admin 403 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete a Tenant - deleteTenant" resourcePath="/${#Project#path}/tenants/{tenantId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - tenant - non Admin 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listUsers4Tenant - badId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List users for a Tenant. - listUsersForTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listUsers4Tenant - badId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="1212121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listUsers4Tenant - badId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List users for a Tenant. - listUsersForTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listUsers4Tenant - badId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="1212121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listUsers4Tenant - badAuth 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List users for a Tenant. - listUsersForTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listUsers4Tenant - badAuth 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listUsers4Tenant - badAuth 401 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List users for a Tenant. - listUsersForTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listUsers4Tenant - badAuth 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listUsers4Tenant - non Admin 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List users for a Tenant. - listUsersForTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listUsers4Tenant - non Admin 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listUsers4Tenant - non Admin 403 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List users for a Tenant. - listUsersForTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listUsers4Tenant - non Admin 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - user w/ role4Tenant - badRoleId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List user with role for tenant. - listUsersWithRoleForTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - user w/ role4Tenant - badRoleId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="121212122"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - user w/ role4Tenant - badRoleId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List user with role for tenant. - listUsersWithRoleForTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - user w/ role4Tenant - badRoleId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Role 121212122 not found</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="121212122"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - user w/ role4Tenant - badTenantId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List user with role for tenant. - listUsersWithRoleForTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - user w/ role4Tenant - badTenantId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Tenant with id/name: '12121212' was not found</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="12121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - user w/ role4Tenant - badTenantId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List user with role for tenant. - listUsersWithRoleForTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - user w/ role4Tenant - badTenantId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Tenant with id/name: '12121212' was not found</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="12121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - user w/ role4Tenant - badAuth 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List user with role for tenant. - listUsersWithRoleForTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - user w/ role4Tenant - badAuth 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - user w/ role4Tenant - badAuth 401 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List user with role for tenant. - listUsersWithRoleForTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - user w/ role4Tenant - badAuth 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - user w/ role4Tenant - non Admin 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List user with role for tenant. - listUsersWithRoleForTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - user w/ role4Tenant - non Admin 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - user w/ role4Tenant - non Admin 403 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List user with role for tenant. - listUsersWithRoleForTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - user w/ role4Tenant - non Admin 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles4Tenant - badId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List roles for a Tenant. - listRolesForTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles4Tenant - badId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="1212121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles4Tenant - badId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List roles for a Tenant. - listRolesForTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles4Tenant - badId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="1212121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles4Tenant - badAuth 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List roles for a Tenant. - listRolesForTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles4Tenant - badAuth 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles4Tenant - badAuth 401 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List roles for a Tenant. - listRolesForTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles4Tenant - badAuth 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles4Tenant - non Admin 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List roles for a Tenant. - listRolesForTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles4Tenant - non Admin 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles4Tenant - non Admin 403 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List roles for a Tenant. - listRolesForTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles4Tenant - non Admin 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addRoleToUserOnTenant - badRoleId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add roles to a user on a tenant. - addRolesToUserOnTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addRoleToUserOnTenant - badRoleId 404 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="12121212"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addRoleToUserOnTenant - badRoleId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add roles to a user on a tenant. - addRolesToUserOnTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addRoleToUserOnTenant - badRoleId 404 - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="12121212"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addRoleToUserOnTenant - badUserId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add roles to a user on a tenant. - addRolesToUserOnTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addRoleToUserOnTenant - badUserId 404 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="userId" value="1212121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addRoleToUserOnTenant - badUserId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add roles to a user on a tenant. - addRolesToUserOnTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addRoleToUserOnTenant - badUserId 404 - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="userId" value="1212121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addRoleToUserOnTenant - badTenantId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add roles to a user on a tenant. - addRolesToUserOnTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addRoleToUserOnTenant - badTenantId 404 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="1212121212"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addRoleToUserOnTenant - badTenantId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add roles to a user on a tenant. - addRolesToUserOnTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addRoleToUserOnTenant - badTenantId 404 - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="1212121212"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addRoleToUserOnTenant - badAuth 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add roles to a user on a tenant. - addRolesToUserOnTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addRoleToUserOnTenant - badAuth 401 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addRoleToUserOnTenant - badAuth 401 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add roles to a user on a tenant. - addRolesToUserOnTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addRoleToUserOnTenant - badAuth 401 - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addRoleToUserOnTenant - non Admin 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add roles to a user on a tenant. - addRolesToUserOnTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addRoleToUserOnTenant - non Admin 403 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addRoleToUserOnTenant - non Admin 403 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add roles to a user on a tenant. - addRolesToUserOnTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addRoleToUserOnTenant - non Admin 403 - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - roles4UserOnTenant - badRoleId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete roles from a user on tenant. - deleteRoleFromUserOnTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - roles4UserOnTenant - badRoleId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="12121212"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - roles4UserOnTenant - badRoleId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete roles from a user on tenant. - deleteRoleFromUserOnTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - roles4UserOnTenant - badRoleId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="12121212"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - roles4UserOnTenant - badUserId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete roles from a user on tenant. - deleteRoleFromUserOnTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - roles4UserOnTenant - badUserId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="userId" value="1212121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - roles4UserOnTenant - badUserId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete roles from a user on tenant. - deleteRoleFromUserOnTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - roles4UserOnTenant - badUserId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="userId" value="1212121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - roles4UserOnTenant - badTenantId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete roles from a user on tenant. - deleteRoleFromUserOnTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - roles4UserOnTenant - badTenantId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="1212121212"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - roles4UserOnTenant - badTenantId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete roles from a user on tenant. - deleteRoleFromUserOnTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - roles4UserOnTenant - badTenantId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="1212121212"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - roles4UserOnTenant - badAuth 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete roles from a user on tenant. - deleteRoleFromUserOnTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - roles4UserOnTenant - badAuth 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - roles4UserOnTenant - badAuth 401 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete roles from a user on tenant. - deleteRoleFromUserOnTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - roles4UserOnTenant - badAuth 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - roles4UserOnTenant - non Admin 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete roles from a user on tenant. - deleteRoleFromUserOnTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - roles4UserOnTenant - non Admin 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - roles4UserOnTenant - non Admin 403 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete roles from a user on tenant. - deleteRoleFromUserOnTenant" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - roles4UserOnTenant - non Admin 403 - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
  <con:entry key="roleId" value="${#TestCase#roleId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - tenant - negativeTest - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete a Tenant - deleteTenant" resourcePath="/${#Project#path}/tenants/{tenantId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - tenant - negativeTest - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>tenantName</con:name><con:value>MossoCloudFS_f3b094b3-0185-45bf-9608-a853456ffff</con:value></con:property><con:property><con:name>tenantId</con:name><con:value>MossoCloudFS_f3b094b3-0185-45bf-9608-a853456ffff</con:value></con:property><con:property><con:name>request1json</con:name><con:value>{ "tenant": { "name": "${#TestCase#tenantName}", "description": "test a description", "enabled": true } }</con:value></con:property><con:property><con:name>testName</con:name><con:value>testuser211</con:value></con:property><con:property><con:name>testemail</con:name><con:value>testuser@rackspace.com</con:value></con:property><con:property><con:name>testuserId</con:name><con:value>10000006</con:value></con:property><con:property><con:name>roleId</con:name><con:value>10000006</con:value></con:property><con:property><con:name>tenantId2</con:name><con:value>MossoCloudFS_f3b094b3-0185-45bf-9608-a853456ffff</con:value></con:property><con:property><con:name>tenantName2</con:name><con:value>5701091</con:value></con:property><con:property><con:name>request2json</con:name><con:value>{ "tenant": { "name": "newName", "description": "new description", "enabled": true } }</con:value></con:property><con:property><con:name>testName2</con:name><con:value>testuser411</con:value></con:property><con:property><con:name>roleId2</con:name><con:value>10000007</con:value></con:property><con:property><con:name>testuserId2</con:name><con:value>10000007</con:value></con:property><con:property><con:name>addTenantNoNamejson</con:name><con:value>{ "tenant": { "name": "", "description": "test a description", "enabled": true } }</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="service" searchProperties="true" id="eaaad3ce-e3bf-49cf-a8a6-d28192009190" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" disabled="true"><con:settings/><con:testStep type="restrequest" name="GET - listServices - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Services - listServices" resourcePath="/${#Project#path}/OS-KSADM/services" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listServices - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listServices - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Services - listServices" resourcePath="/${#Project#path}/OS-KSADM/services" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listServices - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addService - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Service - addService" resourcePath="/${#Project#path}/OS-KSADM/services" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addService - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:service description="OpenStack Compute Service" name="nova" type="compute" xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addService - 409 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Service - addService" resourcePath="/${#Project#path}/OS-KSADM/services" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addService - 409 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:service description="OpenStack Compute Service" name="nova" type="compute" xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 409</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store service info"><con:settings/><con:config><script>def serviceId = context.expand( '${POST - addService - xml#Response#declare namespace ns13=\'http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0\'; //ns13:service[1]/@id}' )
log.info "service Id = " + serviceId

if(serviceId == "")
{
	assert false
}
testRunner.testCase.setPropertyValue("serviceId", serviceId)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - service - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get Service - getService" resourcePath="/${#Project#path}/OS-KSADM/services/{serviceId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - service - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="${#TestCase#serviceId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - Service - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete Service - deleteService" resourcePath="/${#Project#path}/OS-KSADM/services/{serviceId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - Service - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="${#TestCase#serviceId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>body1json</con:name><con:sourceType>request1json</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addService - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body2</con:name><con:sourceType>addServiceNoTypejson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addService - noType 400 - json</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST - addService - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Service - addService" resourcePath="/${#Project#path}/OS-KSADM/services" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addService - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "OS-KSADM:service":{ "name":"nova", "type":"compute", "description":"OpenStack Compute Service" } } </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store service info 2"><con:settings/><con:config><script>def serviceId = context.expand( '${POST - addService - xml#Response#declare namespace ns13=\'http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0\'; //ns13:service[1]/@id}' )
log.info "service Id = " + serviceId

if(serviceId == "")
{
	assert false
}
testRunner.testCase.setPropertyValue("serviceId", serviceId)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - service - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get Service - getService" resourcePath="/${#Project#path}/OS-KSADM/services/{serviceId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - service - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="${#TestCase#serviceId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - Service - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete Service - deleteService" resourcePath="/${#Project#path}/OS-KSADM/services/{serviceId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - Service - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="${#TestCase#serviceId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listServices - badAuth 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Services - listServices" resourcePath="/${#Project#path}/OS-KSADM/services" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listServices - badAuth 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="badAuth" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listServices - badAuth 401 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Services - listServices" resourcePath="/${#Project#path}/OS-KSADM/services" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listServices - badAuth 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="badAuth" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listServices - non Admin 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Services - listServices" resourcePath="/${#Project#path}/OS-KSADM/services" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listServices - non Admin 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listServices - non Admin 403 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Services - listServices" resourcePath="/${#Project#path}/OS-KSADM/services" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listServices - non Admin 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addService - noType 400 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Service - addService" resourcePath="/${#Project#path}/OS-KSADM/services" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addService - noType 400 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:service description="OpenStack Compute Service" name="nova" type="" xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addService - noType 400 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Service - addService" resourcePath="/${#Project#path}/OS-KSADM/services" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addService - noType 400 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "OS-KSADM:service":{ "name":"nova", "type":"", "description":"OpenStack Compute Service" } } </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addService - badAuth 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Service - addService" resourcePath="/${#Project#path}/OS-KSADM/services" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addService - badAuth 401 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:service description="OpenStack Compute Service" name="nova" type="compute" xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="badAuth" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addService - badAuth 401 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Service - addService" resourcePath="/${#Project#path}/OS-KSADM/services" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addService - badAuth 401 - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:service description="OpenStack Compute Service" name="nova" type="compute" xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="badAuth" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addService - non Admin 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Service - addService" resourcePath="/${#Project#path}/OS-KSADM/services" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addService - non Admin 403 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:service description="OpenStack Compute Service" name="nova" type="compute" xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addService - non Admin 403 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add Service - addService" resourcePath="/${#Project#path}/OS-KSADM/services" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addService - non Admin 403 - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:service description="OpenStack Compute Service" name="nova" type="compute" xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - service - badServiceId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get Service - getService" resourcePath="/${#Project#path}/OS-KSADM/services/{serviceId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - service - badServiceId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="12121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - service - badServiceId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get Service - getService" resourcePath="/${#Project#path}/OS-KSADM/services/{serviceId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - service - badServiceId 404 - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="12121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - service - badAuth 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get Service - getService" resourcePath="/${#Project#path}/OS-KSADM/services/{serviceId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - service - badAuth 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="${#TestCase#serviceId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - service - badAuth 401 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get Service - getService" resourcePath="/${#Project#path}/OS-KSADM/services/{serviceId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - service - badAuth 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="${#TestCase#serviceId}"/>
  <con:entry key="X-Auth-Token" value="badAuth"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - service - non Admin 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get Service - getService" resourcePath="/${#Project#path}/OS-KSADM/services/{serviceId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - service - non Admin 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="${#TestCase#serviceId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - service - non Admin 403 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Get Service - getService" resourcePath="/${#Project#path}/OS-KSADM/services/{serviceId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - service - non Admin 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="${#TestCase#serviceId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - Service - badServiceId 404 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete Service - deleteService" resourcePath="/${#Project#path}/OS-KSADM/services/{serviceId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - Service - badServiceId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="1212121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - Service - badServiceId 404 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete Service - deleteService" resourcePath="/${#Project#path}/OS-KSADM/services/{serviceId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - Service - badServiceId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="1212121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - Service - badAuth 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete Service - deleteService" resourcePath="/${#Project#path}/OS-KSADM/services/{serviceId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - Service - badAuth 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="1212121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>serviceId</con:name><con:value>e5daba832cd4dfbb3bc3a365ce5d12ab091686af</con:value></con:property><con:property><con:name>request1json</con:name><con:value>{ "OS-KSADM:service":{ "name":"nova", "type":"compute", "description":"OpenStack Compute Service" } } </con:value></con:property><con:property><con:name>addServiceNoTypejson</con:name><con:value>{ "OS-KSADM:service":{ "name":"nova", "type":"", "description":"OpenStack Compute Service" } } </con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Multiple user roles" searchProperties="true" id="65ba5824-236a-408b-ba98-d1d97263a246" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="POST - token - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="auth123" username="auth"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store auth token"><con:settings/><con:config><script>def tokenId = context.expand( '${POST - token - xml#ResponseAsXml#declare namespace ns2=\'http://docs.openstack.org/identity/api/v2.0\'; //ns2:access[1]/ns2:token[1]/@id}' )
log.info "get TokenId: " + tokenId
def userId = context.expand( '${POST - token - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/@id}' )
log.info "get UserId: " + userId

if (tokenId == "" | userId == "")
{
	assert false;	
}
testRunner.testCase.setPropertyValue("tokenId", tokenId)
testRunner.testCase.setPropertyValue("userId", userId)

</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUserAdmin - xml"><con:settings/><con:config service="Auth V1.1" resourcePath="/${#Project#pathv1.1}/users" methodName="POST - createUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUserAdmin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:user enabled="true" id="${#TestCase#UAusername1}" key="${#TestCase#UAkey1}" mossoId="${#TestCase#UAMossoId1}" nastId="${#TestCase#UAnastId1}" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==201</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST  - addUserAdmin - json"><con:settings/><con:config service="Auth V1.1" resourcePath="/${#Project#pathv1.1}/users" methodName="POST - createUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST  - addUserAdmin - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "user" : {   "id" : "${#TestCase#UAusername2}",   "key" : "${#TestCase#UAkey2}",   "mossoId" : ${#TestCase#UAMossoId2},   "nastId" : "",   "enabled" : true  } }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==201</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - token UserAdmin - xml" id="e12dffac-7040-43c0-95ce-6f0236210c19"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token UserAdmin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;apiKeyCredentials apiKey="${#TestCase#UAkey1}" username="${#TestCase#UAusername1}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - tokenUserAdmin 2 - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - tokenUserAdmin 2 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;apiKeyCredentials apiKey="${#TestCase#UAkey2}" username="${#TestCase#UAusername2}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store UA"><con:settings/><con:config><script>def userId1 = context.expand( '${POST - token UserAdmin - xml#ResponseAsXml#declare namespace ns2=\'http://docs.openstack.org/identity/api/v2.0\'; //ns2:access[1]/ns2:user[1]/@id}' )
def userId2 = context.expand( '${POST - tokenUserAdmin 2 - xml#ResponseAsXml#declare namespace ns2=\'http://docs.openstack.org/identity/api/v2.0\'; //ns2:access[1]/ns2:user[1]/@id}' )
def tokenId1 = context.expand( '${POST - token UserAdmin - xml#ResponseAsXml#declare namespace ns2=\'http://docs.openstack.org/identity/api/v2.0\'; //ns2:access[1]/ns2:token[1]/@id}' )
def tokenId2 = context.expand( '${POST - tokenUserAdmin 2 - xml#ResponseAsXml#declare namespace ns2=\'http://docs.openstack.org/identity/api/v2.0\'; //ns2:access[1]/ns2:token[1]/@id}' )

log.info "get tokenId1: " + tokenId1
log.info "get tokenId2: " + tokenId2
log.info "get userId1: " + userId1
log.info "get userId2: " + userId2
testRunner.testCase.setPropertyValue("UAtokenId1", tokenId1)
testRunner.testCase.setPropertyValue("UAuserId1", userId1)
testRunner.testCase.setPropertyValue("UAtokenId2", tokenId2)
testRunner.testCase.setPropertyValue("UAuserId2", userId2)</script></con:config></con:testStep><con:testStep type="delay" name="Delay" id="9f5a0063-db37-423c-b65e-b5169ef370b1"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="restrequest" name="POST - addDefaultUser - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user - addUser" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addDefaultUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:user display-name="${#TestCase#DUusername1}" email="du1@test.com" enabled="true" username="${#TestCase#DUusername1}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#UAtokenId1}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>addDefaultUserJson</con:name><con:sourceType>addDefaultUserJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addDefaultUser - json</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST - addDefaultUser - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user - addUser" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addDefaultUser - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "user": {"display-name":"${#TestCase#DUusername2}", "username": "${#TestCase#DUusername2}", "email": "john.smith@example.org", "enabled": true } }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:credentials><con:username/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#UAtokenId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store DU"><con:settings/><con:config><script>

def userId1 = context.expand( '${POST - addDefaultUser - xml#ResponseAsXml#declare namespace ns2=\'http://docs.openstack.org/identity/api/v2.0\'; //ns2:user[1]/@id}' )
testRunner.testCase.setPropertyValue("DUuserId1", userId1)




def groupIdJson = userId2 =~ /&lt;id>(.*)&lt;\\/id>/
log.info groupIdJson[0][1]
//def pwd2 = userId2 =~ /&lt;OS-KSADM:password>(.*)&lt;\\/OS-KSADM:password>/
def pwd1 = context.expand( '${POST - addDefaultUser - xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0\'; declare namespace ns2=\'http://docs.openstack.org/identity/api/v2.0\'; //ns2:user[1]/@ns1:password}' )
testRunner.testCase.setPropertyValue("DUpassword1",pwd1)
def userId2 = context.expand( '${POST - addDefaultUser - json#ResponseAsXml}' )
def pwd2= context.expand( '${POST - addDefaultUser - json#ResponseAsXml#declare namespace ns1=\'https://d-api1.cidm.iad2.corp.rackspace.com/cloud/v2.0/users\'; //ns1:Response[1]/ns1:user[1]/ns1:OS-KSADMPassword[1]}' );
log.info pwd1
log.info pwd2
log.info userId2
log.info userId1


testRunner.testCase.setPropertyValue("DUuserId2", groupIdJson[0][1])
testRunner.testCase.setPropertyValue("DUpassword2",pwd2)
</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - token DefaultUser - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token DefaultUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#DUpassword1}" username="${#TestCase#DUusername1}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - token DefaultUser - json"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token DefaultUser - json" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#DUpassword2}" username="${#TestCase#DUusername2}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store token DU"><con:settings/><con:config><script>def tokenId1 = context.expand( '${POST - token DefaultUser - xml#ResponseAsXml#declare namespace ns2=\'http://docs.openstack.org/identity/api/v2.0\'; //ns2:access[1]/ns2:token[1]/@id}' )
def tokenId2 = context.expand( '${POST - token DefaultUser - json#ResponseAsXml#declare namespace ns2=\'http://docs.openstack.org/identity/api/v2.0\'; //ns2:access[1]/ns2:token[1]/@id}' )
log.info tokenId1
log.info tokenId2
testRunner.testCase.setPropertyValue("DUtokenId1", tokenId1)
testRunner.testCase.setPropertyValue("DUtokenId2", tokenId2)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUserAdmin /w blanks username 400 - xml" id="28bc1b3e-6f82-4631-8497-b77ef99d007c"><con:settings/><con:config service="Auth V1.1" resourcePath="/${#Project#pathv1.1}/users" methodName="POST - createUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUserAdmin /w blanks username 400 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:user enabled="true" id="" key="${#TestCase#UAkey1}" mossoId="${#TestCase#UAMossoId1}" nastId="${#TestCase#UAnastId1}" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==400</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST  - addUserAdmin /w blank username 400- json" id="4b48f56e-14e7-4a04-950c-6561b5d64670"><con:settings/><con:config service="Auth V1.1" resourcePath="/${#Project#pathv1.1}/users" methodName="POST - createUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST  - addUserAdmin /w blank username 400- json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "user" : {   "id" : "",   "key" : "${#TestCase#UAkey2}",   "mossoId" : ${#TestCase#UAMossoId2},   "nastId" : "",   "enabled" : true  } }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==400</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addDefaultUser w/o username 400 - xml" id="1d1d5ed7-18a1-41b5-aec6-6e8cb4525f8c"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user - addUser" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addDefaultUser w/o username 400 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:user display-name="${#TestCase#DUusername1}" email="du1@test.com" enabled="true" username="" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#UAtokenId1}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addDefaultUser w/o username 400 - json" id="895939d3-05af-4c3e-b9a1-3a9b676ae78c"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user - addUser" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addDefaultUser w/o username 400 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "user": {"display-name":"${#TestCase#DUusername2}", "username": "", "email": "john.smith@example.org", "enabled": true } }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:credentials><con:username/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#UAtokenId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listUserAdminRolesAsServiceAdmin - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Global Roles for a User - listUserRoles" resourcePath="/${#Project#path}/users/{userId}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listUserAdminRolesAsServiceAdmin - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>identity:user-admin</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="bde1268ebabeeabb70a0e702a4626977c331d5c4"/>
  <con:entry key="userId" value="${#TestCase#UAuserId1}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listUserAdminRolesAsServiceAdmin -  json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Global Roles for a User - listUserRoles" resourcePath="/${#Project#path}/users/{userId}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listUserAdminRolesAsServiceAdmin -  json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>identity:user-admin</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="bde1268ebabeeabb70a0e702a4626977c331d5c4"/>
  <con:entry key="userId" value="${#TestCase#UAuserId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listUserAdminRolesAsUserAdmin - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Global Roles for a User - listUserRoles" resourcePath="/${#Project#path}/users/{userId}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listUserAdminRolesAsUserAdmin - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>identity:user-admin</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="bde1268ebabeeabb70a0e702a4626977c331d5c4"/>
  <con:entry key="userId" value="${#TestCase#UAuserId1}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#UAtokenId1}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listUserAdminRolesAsUserAdmin -  json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Global Roles for a User - listUserRoles" resourcePath="/${#Project#path}/users/{userId}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listUserAdminRolesAsUserAdmin -  json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>identity:user-admin</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="bde1268ebabeeabb70a0e702a4626977c331d5c4"/>
  <con:entry key="userId" value="${#TestCase#UAuserId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#UAtokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listUserAdminRolesAsDefaultUser 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Global Roles for a User - listUserRoles" resourcePath="/${#Project#path}/users/{userId}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listUserAdminRolesAsDefaultUser 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Not authorized.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="bde1268ebabeeabb70a0e702a4626977c331d5c4"/>
  <con:entry key="userId" value="${#TestCase#UAuserId1}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#DUtokenId1}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listUserAdminRolesAsDefaultUser 403 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Global Roles for a User - listUserRoles" resourcePath="/${#Project#path}/users/{userId}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listUserAdminRolesAsDefaultUser 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Not authorized.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="bde1268ebabeeabb70a0e702a4626977c331d5c4"/>
  <con:entry key="userId" value="${#TestCase#UAuserId1}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#DUtokenId1}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listDefaultUserRolesAsServiceAdmin - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Global Roles for a User - listUserRoles" resourcePath="/${#Project#path}/users/{userId}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listDefaultUserRolesAsServiceAdmin - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>identity:default</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="bde1268ebabeeabb70a0e702a4626977c331d5c4"/>
  <con:entry key="userId" value="${#TestCase#DUuserId1}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listDefaultUserRolesAsServiceAdmin -  json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Global Roles for a User - listUserRoles" resourcePath="/${#Project#path}/users/{userId}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listDefaultUserRolesAsServiceAdmin -  json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>identity:default</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="bde1268ebabeeabb70a0e702a4626977c331d5c4"/>
  <con:entry key="userId" value="${#TestCase#DUuserId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listDefaultUserRolesAsUserAdmin - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Global Roles for a User - listUserRoles" resourcePath="/${#Project#path}/users/{userId}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listDefaultUserRolesAsUserAdmin - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>identity:default</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="bde1268ebabeeabb70a0e702a4626977c331d5c4"/>
  <con:entry key="userId" value="${#TestCase#DUuserId1}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#UAtokenId1}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listDefaultUserRolesAsUserAdmin -  json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Global Roles for a User - listUserRoles" resourcePath="/${#Project#path}/users/{userId}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listDefaultUserRolesAsUserAdmin -  json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>identity:default</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="bde1268ebabeeabb70a0e702a4626977c331d5c4"/>
  <con:entry key="userId" value="${#TestCase#DUuserId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#UAtokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listDefaultUserRolesAsDefaultUser 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Global Roles for a User - listUserRoles" resourcePath="/${#Project#path}/users/{userId}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listDefaultUserRolesAsDefaultUser 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Not authorized.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="bde1268ebabeeabb70a0e702a4626977c331d5c4"/>
  <con:entry key="userId" value="${#TestCase#UAuserId1}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#DUtokenId1}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listDefaultUserRolesAsDefaultUser 403 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Global Roles for a User - listUserRoles" resourcePath="/${#Project#path}/users/{userId}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listDefaultUserRolesAsDefaultUser 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Not authorized.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="bde1268ebabeeabb70a0e702a4626977c331d5c4"/>
  <con:entry key="userId" value="${#TestCase#UAuserId1}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#DUtokenId1}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE  - deleteDefaultUser - Xml"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users/{userId}" methodName="Delete user - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE  - deleteDefaultUser - Xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserId1}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE  - deleteDefaultUser - Json"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users/{userId}" methodName="Delete user - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE  - deleteDefaultUser - Json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE  - deleteUserAdmin - xml"><con:settings/><con:config service="Auth V1.1" resourcePath="/${#Project#pathv1.1}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE  - deleteUserAdmin - xml" mediaType="application/xml" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#UAusername1}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE  - deleteUserAdmin - json"><con:settings/><con:config service="Auth V1.1" resourcePath="/${#Project#pathv1.1}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE  - deleteUserAdmin - json" mediaType="application/xml" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#UAusername2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>UAusername1</con:name><con:value>useradmin1</con:value></con:property><con:property><con:name>UAkey1</con:name><con:value>0f97f489c848438090250d50c7e1ea88</con:value></con:property><con:property><con:name>UAusername2</con:name><con:value>useradmin2</con:value></con:property><con:property><con:name>UAkey2</con:name><con:value>0f97f489c848438090250d50c7e1ea88</con:value></con:property><con:property><con:name>tokenId</con:name><con:value>4a564c7b-0bba-4dc0-91b2-5004a8c64e8e</con:value></con:property><con:property><con:name>userId</con:name><con:value>153345</con:value></con:property><con:property><con:name>UAMossoId1</con:name><con:value>5800176</con:value></con:property><con:property><con:name>UAMossoId2</con:name><con:value>5800177</con:value></con:property><con:property><con:name>UAnastId1</con:name><con:value/></con:property><con:property><con:name>UAnastId2</con:name><con:value/></con:property><con:property><con:name>UAtokenId1</con:name><con:value>cd4f816a-bbe1-4107-b178-b1c4264d227d</con:value></con:property><con:property><con:name>UAuserId1</con:name><con:value>199035</con:value></con:property><con:property><con:name>UAtokenId2</con:name><con:value/></con:property><con:property><con:name>UAuserId2</con:name><con:value/></con:property><con:property><con:name>DUusername1</con:name><con:value>defaultUser1</con:value></con:property><con:property><con:name>DUpassword1</con:name><con:value>1hhJkwi9</con:value></con:property><con:property><con:name>DUusername2</con:name><con:value>defaultUser2</con:value></con:property><con:property><con:name>DUpassword2</con:name><con:value>U5TigR8b</con:value></con:property><con:property><con:name>addDefaultUserJson</con:name><con:value>{ "user": {"display-name":"${#TestCase#DUusername2}", "username": "${#TestCase#DUusername2}", "email": "john.smith@example.org", "enabled": true } }</con:value></con:property><con:property><con:name>DUuserId1</con:name><con:value/></con:property><con:property><con:name>DUuserId2</con:name><con:value>199021</con:value></con:property><con:property><con:name>DUtokenId1</con:name><con:value/></con:property><con:property><con:name>DUtokenId2</con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>9f5a0063-db37-423c-b65e-b5169ef370b1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1d1d5ed7-18a1-41b5-aec6-6e8cb4525f8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e12dffac-7040-43c0-95ce-6f0236210c19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>895939d3-05af-4c3e-b9a1-3a9b676ae78c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>28bc1b3e-6f82-4631-8497-b77ef99d007c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4b48f56e-14e7-4a04-950c-6561b5d64670</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="update global role" searchProperties="true" id="69a040f1-b562-42b7-98f5-df017e82b6f6" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="POST - token - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#password}" username="${#TestSuite#username}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XQuery Match" name="XQuery Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1])</path><content>1</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XQuery Match" name="XQuery Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token[1])</path><content>1</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XQuery Match" name="XQuery Match 2"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token[1]/@id)</path><content>1</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token info"><con:settings/><con:config><script>def tokenId = context.expand( '${POST - token - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info "get TokenId: " + tokenId
def userId = context.expand( '${POST - token - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/@id}' )
log.info "get UserId: " + userId

if (tokenId == "" | userId == "")
{
	assert false;	
}
testRunner.testCase.testSuite.setPropertyValue("tokenId", tokenId)
testRunner.testCase.testSuite.setPropertyValue("userId", userId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - admin - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - admin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#password}" username="${#TestSuite#username}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XQuery Match" name="XQuery Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1])</path><content>1</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XQuery Match" name="XQuery Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token[1])</path><content>1</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XQuery Match" name="XQuery Match 2"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token[1]/@id)</path><content>1</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Create User Admin"><con:settings/><con:config><script>UAuserName = "userAdmin"+ System.currentTimeMillis()
log.info UAuserName
testRunner.testCase.setPropertyValue("UAuserName", UAuserName)

</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Create User Admin - xml"><con:settings/><con:config service="Auth V1.1" resourcePath="/${#Project#pathv1.1}/users" methodName="POST - createUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Create User Admin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:user enabled="true" id="${#TestCase#UAusername}" key="${#TestCase#UAkey}" mossoId="${#TestCase#UAmossoId}" nastId="${#TestCase#UAnastId}" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==201</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userByName- xml"><con:settings/><con:config service="identity-admin" methodName="Get a User by Name - getUserByName" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userByName- xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - userByName - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="UserName"><con:configuration><token> username="${#TestCase#UAusername}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:user[1]) >=1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestCase#UAusername}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Auth UserAdmin - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Auth UserAdmin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;apiKeyCredentials apiKey="${#TestCase#UAkey}" username="${#TestCase#UAusername}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store UAtokenId"><con:settings/><con:config><script>def UAuserId = context.expand( '${GET - userByName- xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:user[1]/@id}' )
log.info "get UAuserId: " + UAuserId

def UAtokenId = context.expand( '${POST - Auth UserAdmin - xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info "get UAtokenId: "  + UAtokenId

testRunner.testCase.setPropertyValue("UAuserId",UAuserId)
testRunner.testCase.setPropertyValue("UAtokenId", UAtokenId)</script></con:config></con:testStep><con:testStep type="restrequest" name="PUT - Add Global Role to User Admin - admin - xml" disabled="true"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" methodName="Add Global roles to a user. - addUserRole" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - Add Global Role to User Admin - admin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#UAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="1"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - Add Global Role to User Admin - User Admin - xml"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" methodName="Add Global roles to a user. - addUserRole" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - Add Global Role to User Admin - User Admin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 409</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#UAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="3"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - Add Global Role to User Admin - SubUser - xml"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" methodName="Add Global roles to a user. - addUserRole" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - Add Global Role to User Admin - SubUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#UAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="2"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - Delete Global Roles For A User" disabled="true"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" methodName="Delete Global Roles on User. - deleteUserRole" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - Delete Global Roles For A User" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#UAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="3"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Copy of POST - Auth UserAdmin - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of POST - Auth UserAdmin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;apiKeyCredentials apiKey="${#TestCase#UAkey}" username="${#TestCase#UAusername}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Create Default User"><con:settings/><con:config><script>random = new Random()
DUusername = "defaultUser" + random.nextInt(50000000)
log.info "DUusername: " + DUusername
testRunner.testCase.setPropertyValue("DUusername", "DUsername123")</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Create Default User - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user - addUser" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Create Default User - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:user display-name="${#TestCase#DUusername}" email="test@rack.com" enabled="true" username="${#TestCase#DUusername}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#UAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store DUpassword"><con:settings/><con:config><script>def DUpassword = context.expand( '${POST - Create Default User - xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0\'; declare namespace ns2=\'http://docs.openstack.org/identity/api/v2.0\'; //ns2:user[1]/@ns1:password}' )
log.info "get DUpassword: " + DUpassword

def DUuserId = context.expand( '${POST - Create Default User - xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:user[1]/@id}' )
log.info "get DUuserId: " + DUuserId

testRunner.testCase.setPropertyValue("DUpassword", DUpassword)
testRunner.testCase.setPropertyValue("DUuserId", DUuserId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Auth Default User - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Auth Default User - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#DUpassword}" username="${#TestCase#DUusername}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - Add Global Role to Default User - admin - xml"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" methodName="Add Global roles to a user. - addUserRole" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - Add Global Role to Default User - admin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="1"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - Add Global Role to Default User - User Admin - xml"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" methodName="Add Global roles to a user. - addUserRole" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - Add Global Role to Default User - User Admin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="3"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - Add Global Role to Default User - SubUser - xml"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users/{userId}/roles/OS-KSADM/{roleId}" methodName="Add Global roles to a user. - addUserRole" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - Add Global Role to Default User - SubUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 409</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="2"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE  - deleteDefaultUser - Xml"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users/{userId}" methodName="Delete user - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE  - deleteDefaultUser - Xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE  - deleteUserAdmin - xml"><con:settings/><con:config service="Auth V1.1" resourcePath="/${#Project#pathv1.1}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE  - deleteUserAdmin - xml" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#UAusername}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>UAusername</con:name><con:value>userAdmin1343606913622</con:value></con:property><con:property><con:name>UAkey</con:name><con:value>0f97f489c848438090250d50c7e1ea88</con:value></con:property><con:property><con:name>UAmossoId</con:name><con:value>5800148</con:value></con:property><con:property><con:name>UAnastId</con:name><con:value/></con:property><con:property><con:name>DUusername</con:name><con:value>DUsername123</con:value></con:property><con:property><con:name>UAtokenId</con:name><con:value>a4a24a34-21f2-4790-99ce-be8edf1f16eb</con:value></con:property><con:property><con:name>DUpassword</con:name><con:value>4gmD3jDX</con:value></con:property><con:property><con:name>UAuserId</con:name><con:value>198071</con:value></con:property><con:property><con:name>DUuserId</con:name><con:value>198072</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CreateUser call route" searchProperties="true" id="b0013efc-1823-4e0b-9a53-d7fe3d510d3e"><con:settings/><con:testStep type="restrequest" name="POST - token CA - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token CA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="auth123" username="auth"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - token GA - xml" id="5bd8b659-1c9b-4661-aaa7-6c929f9d1efc"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token GA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#GAadminpass}" username="${#TestSuite#GAadminuser}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Authenticate Application - xml" id="7f882c36-54dc-4a0a-82fb-4c6d2dd710c1"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/tokens" methodName="Authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Authenticate Application - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;authCredentials client_id="18e7a7032733486cd32f472d7bd58f709ac0d221" client_secret="password1" grant_type="CLIENT_CREDENTIALS" xmlns="http://idm.api.rackspace.com/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store Admin token"><con:settings/><con:config><script>def authtokenCA = context.expand( '${POST - token CA - xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
def authtokenGA = context.expand( '${POST - token GA - xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
def apptokenFA = context.expand( '${POST - Authenticate Application - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:auth[1]/ns3:access_token[1]/@id}' )
log.info "CA token: " +  apptokenFA
log.info "CA token: " +  authtokenCA
log.info "GA token: " +  authtokenGA
testRunner.testCase.setPropertyValue("authtokenCA", authtokenCA)
testRunner.testCase.setPropertyValue("authtokenGA", authtokenGA)
testRunner.testCase.setPropertyValue("apptokenFA", apptokenFA)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - asAdminFromGAaddUser V2.0 - CA 501 - xml" id="ec4c039d-2b22-4220-a832-4bd2982b34cc"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user - addUser" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - asAdminFromGAaddUser V2.0 - CA 501 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:user display-name="${#TestCase#UAusername}" email="test@testRack.com" enabled="true" username="${#TestCase#UAusername}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 501
def h3 = messageExchange.responseHeaders['response-source']
assert h3.contains("cloud-auth")</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#authtokenGA}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - asAdminFromGAaddUser V2.0 - CA 501 - json" id="79ac5bc8-7df8-4401-8e8d-cad39f7b03a1"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user - addUser" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - asAdminFromGAaddUser V2.0 - CA 501 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"user": { "username": "${#TestCase#UAusername}", "email": "test@rack.com", "enabled": true, "OS-KSADM:password":"${#TestCase#UApassword}"} }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 501
def h3 = messageExchange.responseHeaders['response-source']
assert h3.contains("cloud-auth")</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#authtokenGA}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - CreateServiceAdmin - xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/users" methodName="Add a User" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - CreateServiceAdmin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<user customerId="RCN-000-111-000" displayName="test user" email="test.user@example.org" firstName="SAtest" lastName="Smith" middleName="Lee" personId="RPN-111-111-111" prefLanguage="US_en" region="SAT" timeZone="America/Chicago" username="${#TestCase#SAusername}" xmlns="http://idm.api.rackspace.com/v1.0">
<roles id="4"/><secret secretAnswer="Buddy" secretQuestion="What is your dogs name?"/>
<passwordCredentials>
<currentPassword password="${#TestCase#SApassword}"/>
</passwordCredentials>
</user>]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==201
assert (!(messageExchange.responseHeaders['response-source']));
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#apptokenFA}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store SA" id="a722b7a8-332d-4145-b167-af48cc478bfb"><con:settings/><con:config><script>def SAuserId = context.expand( '${POST - CreateServiceAdmin - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:user[1]/@id}' )
testRunner.testCase.setPropertyValue("SAuserId", SAuserId)
log.info "SAuserId: " +  SAuserId</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - addRole SA -xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/users/{userId}/roles/{roleId}" methodName="Grant User a Global Role" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addRole SA -xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#SAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#apptokenFA}"/>
  <con:entry key="roleId" value="4"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listServiceAdminRole -xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/users/{user_id}/roles" methodName="List User Global Roles - listUserGlobalRoles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listServiceAdminRole -xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:roles[1]/ns7:role[1]/@name</path><content>identity:service-admin</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestCase#SAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Authenticate ServiceAdmin - xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/tokens" methodName="Authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Authenticate ServiceAdmin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;authCredentials client_id="18e7a7032733486cd32f472d7bd58f709ac0d221" client_secret="password1" grant_type="PASSWORD" password="${#TestCase#SApassword}" username="${#TestCase#SAusername}" xmlns="http://idm.api.rackspace.com/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Storer SA token"><con:settings/><con:config><script>def SAtokenId = context.expand( '${POST - Authenticate ServiceAdmin - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:auth[1]/ns3:access_token[1]/@id}' )
testRunner.testCase.setPropertyValue("SAtokenId", SAtokenId)
log.info "SAtokenId: " +  SAtokenId</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - asServiceAdminFromGAaddUser V1.1 CA 405 - xml"><con:settings/><con:config service="Auth V1.1" resourcePath="/${#Project#pathv1.1}/users" methodName="POST - createUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - asServiceAdminFromGAaddUser V1.1 CA 405 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:user enabled="true" id="${#TestCase#UAusername}" key="${#TestCase#UAkey}" mossoId="${#TestCase#UAMossoId}" nastId="${#TestCase#UAnastId}" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==405
def h3 = messageExchange.responseHeaders['response-source']
assert h3.contains("cloud-auth")</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestCase#SAusername}</con:username><con:password>${#TestCase#SApassword}</con:password><con:domain/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - asServiceAdminFromGAaddUser V1.1 CA 405 - json"><con:settings/><con:config service="Auth V1.1" resourcePath="/${#Project#pathv1.1}/users" methodName="POST - createUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - asServiceAdminFromGAaddUser V1.1 CA 405 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "user" : {   "id" : "${#TestCase#UAusername}",   "key" : "${#TestCase#UAkey}",   "mossoId" : ${#TestCase#UAmossoId},   "nastId" : "",   "enabled" : true  } }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==405
def h3 = messageExchange.responseHeaders['response-source']
assert h3.contains("cloud-auth")</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestCase#SAusername}</con:username><con:password>${#TestCase#SApassword}</con:password><con:domain/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - asServiceAdminFromGAaddUser V2.0 - CA 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user - addUser" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - asServiceAdminFromGAaddUser V2.0 - CA 401 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:user display-name="${#TestCase#UAusername}" email="test@testRack.com" enabled="true" username="${#TestCase#UAusername}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401
def h3 = messageExchange.responseHeaders['response-source']
assert h3.contains("cloud-auth")</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - asServiceAdminFromGAaddUser V2.0 - CA 401 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user - addUser" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - asServiceAdminFromGAaddUser V2.0 - CA 401 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"user": { "username": "${#TestCase#UAusername}", "email": "test@rack.com", "enabled": true, "OS-KSADM:password":"${#TestCase#UApassword}"} }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401
def h3 = messageExchange.responseHeaders['response-source']
assert h3.contains("cloud-auth")</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE deleteServiceAdmin - xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/users/{userId}" methodName="Delete a User" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE deleteServiceAdmin - xml" mediaType="application/xml" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#SAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#apptokenFA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE -  softDeleteServiceAdmin"><con:settings/><con:config service="GA-SoftDelete" resourcePath="/${#Project#pathSD}/softDeleted/users/{user_id}" methodName="Delete from soft delete - softDeleted" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE -  softDeleteServiceAdmin" mediaType="application/xml" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestCase#SAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>SAusername</con:name><con:value>routeTestSA</con:value></con:property><con:property><con:name>SApassword</con:name><con:value>Passwrod1</con:value></con:property><con:property><con:name>authtokenCA</con:name><con:value>4a564c7b-0bba-4dc0-91b2-5004a8c64e8e</con:value></con:property><con:property><con:name>authtokenGA</con:name><con:value>4a564c7b-0bba-4dc0-91b2-5004a8c64e8e</con:value></con:property><con:property><con:name>apptokenFA</con:name><con:value>bd7b3ef253ba466588573408ac536926</con:value></con:property><con:property><con:name>SAuserId</con:name><con:value>10035055</con:value></con:property><con:property><con:name>SAtokenId</con:name><con:value>3c0800d6415f4be7b53d2449cd3ba70a</con:value></con:property><con:property><con:name>UAusername</con:name><con:value>routeTestUA</con:value></con:property><con:property><con:name>UAkey</con:name><con:value>0f97f489c848438090250d50c7e1ea88</con:value></con:property><con:property><con:name>UAnastId</con:name><con:value>TestingNast_9876</con:value></con:property><con:property><con:name>UAmossoId</con:name><con:value>98005623</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5bd8b659-1c9b-4661-aaa7-6c929f9d1efc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7f882c36-54dc-4a0a-82fb-4c6d2dd710c1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a722b7a8-332d-4145-b167-af48cc478bfb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ec4c039d-2b22-4220-a832-4bd2982b34cc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>79ac5bc8-7df8-4401-8e8d-cad39f7b03a1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>username</con:name><con:value>auth</con:value></con:property><con:property><con:name>password</con:name><con:value>auth123</con:value></con:property><con:property><con:name>tokenId</con:name><con:value>6d2be2e6-2e00-4e42-bf6d-e6d1fe2f9cae</con:value></con:property><con:property><con:name>userId</con:name><con:value>153345</con:value></con:property><con:property><con:name>newUserId</con:name><con:value>1111111</con:value></con:property><con:property><con:name>username2</con:name><con:value>cmarin1</con:value></con:property><con:property><con:name>tokenId2</con:name><con:value>f000a864-d41b-42fb-9f40-1973c0c7b953</con:value></con:property><con:property><con:name>userId2</con:name><con:value>191416</con:value></con:property><con:property><con:name>password2</con:name><con:value>Password1</con:value></con:property><con:property><con:name>tokenId3</con:name><con:value>5d31e475-0a66-4cd2-a0b3-4ecc5ec5ad0a</con:value></con:property><con:property><con:name>userId3</con:name><con:value>198066</con:value></con:property><con:property><con:name>DUusername</con:name><con:value>defaultUser21498720</con:value></con:property><con:property><con:name>GAadminuser</con:name><con:value>auth</con:value></con:property><con:property><con:name>GAadminpass</con:name><con:value>Auth1234</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="Functional - RAX-KSQA-admin"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="users" searchProperties="true" id="37126197-91a7-4833-8111-e55e3c2fd990" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="POST - token - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#password}" username="${#TestSuite#username}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token info"><con:settings/><con:config><script>def tokenId = context.expand( '${POST - token - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info "get TokenId: " + tokenId
def userId = context.expand( '${POST - token - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/@id}' )
log.info "get UserId: " + userId

if (tokenId == "" | userId == "")
{
	assert false;	
}
testRunner.testCase.testSuite.setPropertyValue("tokenId", tokenId)
testRunner.testCase.testSuite.setPropertyValue("userId", userId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - admin - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - admin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#password2}" username="${#TestSuite#username2}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token info 2"><con:settings/><con:config><script>def tokenId = context.expand( '${POST - token - admin - xml#ResponseAsXml#declare namespace ns8=\'http://docs.openstack.org/identity/api/v2.0\'; //ns8:access[1]/ns8:token[1]/@id}' )
log.info "get TokenId: " + tokenId
def userId = context.expand( '${POST - token - admin - xml#ResponseAsXml#declare namespace ns8=\'http://docs.openstack.org/identity/api/v2.0\'; //ns8:access[1]/ns8:user[1]/@id}' )

log.info "get UserId: " + userId

if (tokenId == "" | userId == "")
{
	assert false;	
}
testRunner.testCase.testSuite.setPropertyValue("tokenId2", tokenId)
testRunner.testCase.testSuite.setPropertyValue("userId2", userId)</script></con:config></con:testStep><con:testStep type="restrequest" name="PUT - updateUserSecretQA - xml"><con:settings/><con:config service="RAX-KSQA-admin" methodName="Update User SecretQA - updateUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateUserSecretQA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;secretQA xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0"
question="Is this a test?"
answer="Yes"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>answer="Yes"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1" disabled="true"><con:configuration><token>question="Is this a test?"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="restrequest" name="GET - userSecretQA - xml"><con:settings/><con:config service="RAX-KSQA-admin" methodName="Get User SecretQA - getUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userSecretQA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>answer="Yes"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>question="Is this a test?"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - updateUserSecretQA - json"><con:settings/><con:config service="RAX-KSQA-admin" methodName="Update User SecretQA - updateUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateUserSecretQA - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
    "RAX-KSQA:secretQA":{
        "question":"Is this a test too?",
        "answer":"Yes, it is."
    }
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>"answer":"Yes, it is."</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1" disabled="true"><con:configuration><token>"question":"Is this a test too?"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay2"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="restrequest" name="GET - userSecretQA - json"><con:settings/><con:config service="RAX-KSQA-admin" methodName="Get User SecretQA - getUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userSecretQA - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>"answer":"Yes, it is."</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>"Is this a test too?"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties><con:property><con:name>username</con:name><con:value>auth</con:value></con:property><con:property><con:name>password</con:name><con:value>auth123</con:value></con:property><con:property><con:name>tokenId</con:name><con:value>6d2be2e6-2e00-4e42-bf6d-e6d1fe2f9cae</con:value></con:property><con:property><con:name>userId</con:name><con:value>153345</con:value></con:property><con:property><con:name>username2</con:name><con:value>cmarin1</con:value></con:property><con:property><con:name>password2</con:name><con:value>Password1</con:value></con:property><con:property><con:name>tokenId2</con:name><con:value>f000a864-d41b-42fb-9f40-1973c0c7b953</con:value></con:property><con:property><con:name>userId2</con:name><con:value>191416</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="Functional - RAX-GRPADM-admin"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Auth And Validate - Positive" searchProperties="true" id="6ac35a98-f338-48b1-b3cc-f3754b45a671" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="POST - token - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#password}" username="${#TestSuite#username}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>token</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access/ns1:token/@id)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token"><con:settings/><con:config><script>def tokenId = context.expand( '${POST - token - xml#Response#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:token[1]/@id}' )
log.info "get TokenId: " + tokenId 

testRunner.testCase.testSuite.setPropertyValue("tokenId", tokenId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - nonAdmin - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - nonAdmin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#password2}" username="${#TestSuite#username2}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>token</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access/ns1:token/@id)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store non admin token"><con:settings/><con:config><script>def tokenId = context.expand( '${POST - token - nonAdmin - xml#ResponseAsXml#declare namespace ns8=\'http://docs.openstack.org/identity/api/v2.0\'; //ns8:access[1]/ns8:token[1]/@id}' )
log.info "get TokenId: " + tokenId
def userId = context.expand( '${POST - token - nonAdmin - xml#ResponseAsXml#declare namespace ns8=\'http://docs.openstack.org/identity/api/v2.0\'; //ns8:access[1]/ns8:user[1]/@id}' )

log.info "get UserId: " + userId

if (tokenId == "" | userId == "")
{
	assert false;	
}
testRunner.testCase.testSuite.setPropertyValue("tokenId2", tokenId)
testRunner.testCase.testSuite.setPropertyValue("userId2", userId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUser - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user - addUser" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:user display-name="${#TestSuite#testuser}" email="${#TestSuite#testemail}" enabled="true" username="${#TestSuite#testuser}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store user info"><con:settings/><con:config><script>def userId = context.expand( '${POST - addUser - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:user[1]/@id}' )
log.info "get userId: " + userId

if (userId == "")
{
	assert false;	
}
testRunner.testCase.testSuite.setPropertyValue("testuserId", userId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUser1 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user - addUser" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUser1 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:user display-name="${#TestSuite#testuser1}" email="${#TestSuite#testemail1}" enabled="true" username="${#TestSuite#testuser1}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store user1 info"><con:settings/><con:config><script>def userId1 = context.expand( '${POST - addUser1 - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:user[1]/@id}' )
log.info "get userId1: " + userId1

if (userId1 == "")
{
	assert false;	
}
testRunner.testCase.testSuite.setPropertyValue("testuserId1", userId1)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUser2 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user - addUser" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUser2 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:user display-name="${#TestSuite#testuser2}" email="${#TestSuite#testemail2}" enabled="false" username="${#TestSuite#testuser2}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store user2 info"><con:settings/><con:config><script>def userId2 = context.expand( '${POST - addUser2 - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:user[1]/@id}' )
log.info "get userId2: " + userId2

if (userId2 == "")
{
	assert false;	
}
testRunner.testCase.testSuite.setPropertyValue("testuserId2", userId2)</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Add A New Group - Positive" searchProperties="true" id="b01aa99f-30bf-48f6-b44c-bebc3bfa77bd"><con:settings/><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="restrequest" name="POST - createGroup - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Add a New Group - addGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createGroup - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>&lt;group name="GAtestGroup1" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">
&lt;description>Creating a new group testGroup1&lt;/description>
&lt;/group></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0';
//ns1:group[1]/@name</path><content>GAtestGroup1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store groupId"><con:settings/><con:config><script>def groupId = context.expand( '${POST - createGroup - xml#Response#declare namespace ns11=\'http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0\'; //ns11:group[1]/@id}' )
log.info "group Id: " + groupId

testRunner.testCase.testSuite.setPropertyValue("groupId", groupId)</script></con:config></con:testStep><con:testStep type="delay" name="Delay 1"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="restrequest" name="POST - createGroup - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Add a New Group - addGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createGroup - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
"RAX-KSGRP:group": {
"name" : "GAtestGroup2",
"description" : "Creating a new group testGroup2"
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" disabled="true"><con:configuration><path>declare namespace ns1='${#Project#EndpointJson}/${#Project#path}/RAX-GRPADM/groups';
 //ns1:Response[1]/ns1:group[1]/ns1:name[1]</path><content>GAtestGroup2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store groupIdJson"><con:settings/><con:config><script>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;
def response = new JsonSlurper().parseText(context.expand( '${POST - createGroup - json#Response}' ))

log.info response
def groupIdJson = response."RAX-KSGRP:group".id
log.info groupIdJson

testRunner.testCase.testSuite.setPropertyValue("groupIdJson", groupIdJson)</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get Groups - Positive" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="6ddda882-ab95-4061-a10d-8202aa50cc77"><con:settings/><con:testStep type="restrequest" name="GET - getGroups - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Get Groups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroups - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>testGroup1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>testGroup2</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="limit" value="1"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroups - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Get Groups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroups - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>"name":"testGroup2"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>"name":"testGroup1"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroups w/name - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Get Groups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroups w/name - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>testGroup1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains"><con:configuration><token>testGroup2</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="GAtestGroup1"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroups w/ name - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Get Groups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroups w/ name - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>"name":"GAtestGroup2"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains"><con:configuration><token>testGroup1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="GAtestGroup2"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroups w/wildcard name - xml" disabled="true"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Get Groups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroups w/wildcard name - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>testGroup1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains"><con:configuration><token>testGroup2</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains"><con:configuration/></con:assertion><con:assertion type="Simple NotContains" name="Not Contains 1"><con:configuration><token>Admin</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains 2"><con:configuration><token>Default</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="*Group1"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroups w/wildcard name- json" disabled="true"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Get Groups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroups w/wildcard name- json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>"name":"testGroup2"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains"><con:configuration><token>testGroup1</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="*Group2"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroups w/limit - xml" disabled="true"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Get Groups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroups w/limit - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>only one entry should be retrieved</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="limit" value="1"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroups w/limit - json" disabled="true"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Get Groups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroups w/limit - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>only one entry should be retrieved</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="limit" value="3"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroups w/marker - xml" disabled="true"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Get Groups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroups w/marker - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>only one entry should be retrieved</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="limit" value="1"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get Group - Positive" searchProperties="true" id="6fcadaff-2cf4-4351-8907-cbdce166bb45"><con:settings/><con:testStep type="restrequest" name="GET - getGroup - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Get Group - getGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroup - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0';
 //ns1:group[1]/@name</path><content>GAtestGroup1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroup - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Get Group - getGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroup - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" disabled="true"><con:configuration><path>declare namespace ns1='${#Project#EndpointJson}/${#Project#path}/RAX-GRPADM/groups/${#TestSuite#groupIdJson}'; 
//ns1:Response[1]/ns1:group[1]/ns1:name[1]</path><content>testGroup2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Update A Group - Positive" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="692ae6b7-b0e9-4903-8134-ba8ae1b8ada2"><con:settings/><con:testStep type="restrequest" name="PUT - updateGroup - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Update a Group - updateGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateGroup - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>&lt;group name="testGroup1totestGroup3" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">
&lt;description>updating testGroup1 to testGroup3&lt;/description>
&lt;/group></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns6='http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0';
//ns6:group[1]/@name</path><content>testGroup1totestGroup3</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>2000</delay></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroup - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Get Group - getGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroup - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns6='http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0';
//ns6:group[1]/@name</path><content>testGroup1totestGroup3</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - updateGroup - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Update a Group - updateGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateGroup - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
"RAX-KSGRP:group": {
"name" : "testGroup2totestGroup4",
"description" : "updating testGroup2 to testGroup4"
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" disabled="true"><con:configuration><path>declare namespace ns1='${#Project#EndpointJson}/${#Project#path}/RAX-GRPADM/groups/${#TestSuite#groupIdJson}'; 
//ns1:Response[1]/ns1:group[1]/ns1:name[1]</path><content>GAtestGroup4</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay 1"><con:settings/><con:config><delay>2000</delay></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroup - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Get Group - getGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroup - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" disabled="true"><con:configuration><path>declare namespace ns1='${#Project#EndpointJson}/${#Project#path}/RAX-GRPADM/groups/${#TestSuite#groupIdJson}';
 //ns1:Response[1]/ns1:group[1]/ns1:name[1]</path><content>GAtestGroup4</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - updateGroup description - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Update a Group - updateGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateGroup description - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>&lt;group name="testGroup1totestGroup3" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">
&lt;description>updating testGroup1 to testGroup3 description only&lt;/description>
&lt;/group></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>updating testGroup1 to testGroup3 description only</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay 2"><con:settings/><con:config><delay>2000</delay></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroup w/ updated description - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Get Group - getGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroup w/ updated description - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>updating testGroup1 to testGroup3</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - updateGroup w/description null - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Update a Group - updateGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateGroup w/description null - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>&lt;group name="testGroup1totestGroup3" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">
&lt;description>&lt;/description>
&lt;/group></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token/><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" disabled="true"><con:configuration><path>declare namespace ns6='http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0';
//ns6:group[1]/ns6:description[1]</path><content/><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Add A sub User to the Group" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="fa637d98-4295-4845-8b46-e92f6c4861b6"><con:settings/><con:testStep type="restrequest" name="PUT - addUserToGroup - userAdmin - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Add User to Group - addUserToGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addUserToGroup - userAdmin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addUserToGroup2 - userAdmin - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Add User to Group - addUserToGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addUserToGroup2 - userAdmin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupIdJson}"/>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addUserToGroup - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Add User to Group - addUserToGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addUserToGroup - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="userId" value="${#TestSuite#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addUserToGroup - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Add User to Group - addUserToGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addUserToGroup - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupIdJson}"/>
  <con:entry key="userId" value="${#TestSuite#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get Users for Group - Positive" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="a5c1de0b-1df9-4f8b-81ab-e38017d31419"><con:settings/><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroup - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Get Group - getGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroup - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns6='http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0';
//ns6:group[1]/@name</path><content>testGroup1totestGroup3</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUsersForGroup - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users" methodName="Get Users for Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUsersForGroup - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
 //ns7:users[1]/ns7:user/@username</path><content>carlostest1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
 //ns7:users[1]/ns7:user/@id</path><content>${#TestSuite#testuserId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroup - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Get Group - getGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroup - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" disabled="true"><con:configuration><path>declare namespace ns1='${#Project#EndpointJson}/${#Project#path}/RAX-GRPADM/groups/${#TestSuite#groupIdJson}'; 
//ns1:Response[1]/ns1:group[1]/ns1:name[1]</path><content>testGroup2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUsersForGroup - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users" methodName="Get Users for Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUsersForGroup - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#EndpointJson}/${#Project#path}/RAX-GRPADM/groups/${#TestSuite#groupIdJson}/users'; 
//ns1:Response[1]/ns1:users[1]/ns1:e/ns1:id[1]</path><content>${#TestSuite#testuserId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Remove A User from the Group - Positive" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="50fde1ae-d5c6-4cad-9765-dd4dfdf7606d"><con:settings/><con:testStep type="restrequest" name="DELETE - removeUserFromGroup - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Remove User From Group - removeUserFromGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - removeUserFromGroup - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUsersForGroup - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users" methodName="Get Users for Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUsersForGroup - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - removeUserFromGroup - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Remove User From Group - removeUserFromGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - removeUserFromGroup - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupIdJson}"/>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay 1"><con:settings/><con:config><delay>2000</delay></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUsersForGroup - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users" methodName="Get Users for Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUsersForGroup - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - re-addUserToGroup - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Add User to Group - addUserToGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - re-addUserToGroup - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay 2"><con:settings/><con:config><delay>2000</delay></con:config></con:testStep><con:testStep type="restrequest" name="GET - getRe-addedUsersForGroup - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users" methodName="Get Users for Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getRe-addedUsersForGroup - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - re-addUserToGroup - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Add User to Group - addUserToGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - re-addUserToGroup - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupIdJson}"/>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay 3"><con:settings/><con:config><delay>2000</delay></con:config></con:testStep><con:testStep type="restrequest" name="GET - getRe-addedUsersForGroup - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users" methodName="Get Users for Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getRe-addedUsersForGroup - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Add A New Group - Negative" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="a5b73008-fd63-4776-af17-a208c32e4453"><con:settings/><con:testStep type="restrequest" name="POST - createGroup - groupname null - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Add a New Group - addGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createGroup - groupname null - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>&lt;group name="" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">
&lt;description>Creating a new group null&lt;/description>
&lt;/group></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0'; 
//ns1:badRequest[1]/ns1:message[1]</path><content>Invalid group.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - createGroup - groupname null - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Add a New Group - addGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createGroup - groupname null - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
"RAX-KSGRP:group": {
"name" : "",
"description" : "Creating a new group null"
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - createGroup - invalid token - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Add a New Group - addGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createGroup - invalid token - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>&lt;group name="testGroup1" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/
v1.0">
&lt;description>Creating a new group testGroup1&lt;/description>
&lt;/group></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="12345" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - createGroup - invalid token - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Add a New Group - addGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createGroup - invalid token - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
"RAX-KSGRP:group": {
"name" : "testGroup2",
"description" : "Creating a new group testGroup2"
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="12345" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - createGroup - non admin token - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Add a New Group - addGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createGroup - non admin token - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>&lt;group name="testGroup1" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">
&lt;description>Creating a new group testGroup1&lt;/description>
&lt;/group></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - createGroup - non admin token - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Add a New Group - addGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createGroup - non admin token - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
"RAX-KSGRP:group": {
"name" : "testGroup2",
"description" : "Creating a new group testGroup2"
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - createGroup - bad media type - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Add a New Group - addGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createGroup - bad media type - xml" mediaType="text/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
"RAX-KSGRP:group": {
"name" : "testGroup2",
"description" : "Creating a new group testGroup2"
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 415</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - createGroup - bad media type - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Add a New Group - addGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createGroup - bad media type - json" mediaType="text/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
"RAX-KSGRP:group": {
"name" : "testGroup2",
"description" : "Creating a new group testGroup2"
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 415</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - createGroup - long groupname  - xml" disabled="true"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Add a New Group - addGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createGroup - long groupname  - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>&lt;group name="testfdkjghkhfkgjfjghjdfhfgjdhgjdfhgjkdfhfghdgjfhddgkjsdhgdgdjfgdfjghdjghjdhgfjhdjfghdjhgjdfjgdjfghdhgjhdfjghdjfgkjdfgjdfgjdhljgjrgjfdgjdfghdjfhdfljsghlhgjdfhgdfkjlhljghdfgkdfjghdkjfghddjkhgkjfhgdkjfhgkjdfhlgkdfgdfgjgjfgfkjghkjfghfdjhkhgdkfkdkgdkgkdfgkdfjdhjkhjjhkfdjfgjdgfdljfghdljlfjhgdhfgjkdfhdssjghlkjdgfslhgdfgkjsdhfgdkjshfgdfjkhlgkjdfhgkjdfhgkjhdfkjhgjdhjfghkdjfhgkjsdhlgjhkdjhfgkjlhdslkjhgkjsdfhkjlsdhgljdslhgdfkjhgdljfhgjlkghljkddhjkghkjghdfkjghjkgh;khgk;jehrk;jehrjkthekjhrgkjehgkjhdgjsd.vndm vm.dnb f. hjerhtkjerht#!!" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">
&lt;description>Creating a group name with more than 200 characters&lt;/description>
&lt;/group></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 405</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - createGroup - long groupname  - json" disabled="true"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Add a New Group - addGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createGroup - long groupname  - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
"RAX-KSGRP:group": {
"name" : "fhsjfdsjfgjdgfdkgkjdfhjghfdjhgjfhdjgh  jfghfdjhgjkdhfgjhfjhgjhfjghfksjhjkfkdhgsdhfgjkhdgkjfhgjdhfgjhdfjgtrhjkhyrjkthyjrthyjrtyrtyrjtkhyjrthyrtjyrhtrtrtrtrtyrtyhrtjyrtjhyrjthjerhtehrjgtwhghegtrhegjrhtgjhergthjergthjegtherterterteytryrtyrtyryyrtytryrtrffvcxjdfcsbnmhdghdhgjekgjhghjgdhghggg",
"description" : "Creating a group name with more than 200 characters"
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 405</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="restrequest" name="POST - createGroup - groupname special characters - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Add a New Group - addGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createGroup - groupname special characters - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>&lt;group name="test$&amp;amp;#!" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">
&lt;description>Creating a new group null&lt;/description>
&lt;/group></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteGroup - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Delete Group - deleteGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteGroup - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${POST - createGroup - groupname special characters - xml#Response#declare namespace ns11='http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0'; //ns11:group[1]/@id}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - createGroup - existing group name - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Add a New Group - addGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createGroup - existing group name - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>&lt;group name="testGroup3" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">
&lt;description>Creating a new group null&lt;/description>
&lt;/group></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 409</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns2='http://docs.openstack.org/identity/api/v2.0';
//ns2:identityFault[1]/ns2:message[1]</path><content>Group 'testGroup3' already exists.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - createGroup - existing groupname  - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Add a New Group - addGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createGroup - existing groupname  - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
"RAX-KSGRP:group": {
"name" : "testGroup4",
"description" : "Creating a new group null"
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 409</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get Groups - Negative" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="fe4cb865-48a3-4e04-bcba-e2a53fc0705a"><con:settings/><con:testStep type="restrequest" name="GET - getGroups - invalid token - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Get Groups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroups - invalid token - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:unauthorized[1]/ns1:message[1]/text()</path><content>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="testGroup1"/>
  <con:entry key="X-Auth-Token" value="12345"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroups - invalid token - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Get Groups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroups - invalid token - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#EndpointJson}/${#Project#path}/RAX-GRPADM/groups';
//ns1:Fault[1]/ns1:unauthorized[1]/ns1:message[1]</path><content>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="12345" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroups - non admin token - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Get Groups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroups - non admin token - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:forbidden[1]/ns1:message[1]/text()</path><content>Access is denied</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroups - non admin token - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Get Groups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroups - non admin token - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#EndpointJson}/${#Project#path}/RAX-GRPADM/groups';
//ns1:Fault[1]/ns1:forbidden[1]/ns1:message[1]</path><content>Access is denied</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroups w/non existing name - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Get Groups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroups w/non existing name - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Group 'hdhsjgf' was not found.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="hdhsjgf"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroups w/non existing name - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Get Groups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroups w/non existing name - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Group 'dfjsjjdfg' was not found.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1" disabled="true"><con:configuration><token>"name":"testGroup1"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="dfjsjjdfg"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - removeUserFromGroup - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Remove User From Group - removeUserFromGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - removeUserFromGroup - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - removeUserFromGroup2 - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Remove User From Group - removeUserFromGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - removeUserFromGroup2 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupIdJson}"/>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get Group - Negative" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="e7ac6ef6-543c-4d8c-a5c2-54bb708aa4a6"><con:settings/><con:testStep type="restrequest" name="GET - getGroup - group id - string - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Get Group - getGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroup - group id - string - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404
</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="djfhdj"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroup - group id - string - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Get Group - getGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroup - group id - string - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="fdjhfgj"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroup - invalid token - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Get Group - getGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroup - invalid token - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="X-Auth-Token" value="12345"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroup - invalid token - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Get Group - getGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroup - invalid token - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="X-Auth-Token" value="12345"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroup - non admin token - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Get Group - getGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroup - non admin token - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroup - non admin token - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Get Group - getGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroup - non admin token - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroup - invalid group id - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Get Group - getGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroup - invalid group id - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="12345"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroup - invalid group id - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Get Group - getGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroup - invalid group id - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="12345"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Update A Group - Negative" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="7bee456e-6d3c-4222-88a9-0b14bb3a4ffe"><con:settings/><con:testStep type="restrequest" name="PUT - updateGroup - invalid token - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Update a Group - updateGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateGroup - invalid token - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>&lt;group name="testGroup3" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">
&lt;description>updating testGroup1 to testGroup3&lt;/description>
&lt;/group></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="X-Auth-Token" value="12345"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - updateGroup - invalid token - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Update a Group - updateGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateGroup - invalid token - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
"RAX-KSGRP:group": {
"name" : "testGroup4",
"description" : "updating testGroup2 to testGroup4"
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupIdJson}"/>
  <con:entry key="X-Auth-Token" value="12345"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - updateGroup - non admin token - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Update a Group - updateGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateGroup - non admin token - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>&lt;group name="testGroup3" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">
&lt;description>updating testGroup1 to testGroup3&lt;/description>
&lt;/group></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - updateGroup - non admin token - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Update a Group - updateGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateGroup - non admin token - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
"RAX-KSGRP:group": {
"name" : "testGroup4",
"description" : "updating testGroup2 to testGroup4"
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - updateGroup - invalid group id - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Update a Group - updateGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateGroup - invalid group id - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>&lt;group name="testGroup5" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">
&lt;description>update invalid group&lt;/description>
&lt;/group></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="12345"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - updateGroup - invalid group id - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Update a Group - updateGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateGroup - invalid group id - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
"RAX-KSGRP:group": {
"name" : "testGroup5",
"description" : "update invlaid group"
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="12345"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - updateGroup - group already exists - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Update a Group - updateGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateGroup - group already exists - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>&lt;group name="testGroup4" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">
&lt;description>testGroup4 already exists&lt;/description>
&lt;/group></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 409</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - updateGroup - group already exists - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Update a Group - updateGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateGroup - group already exists - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
"RAX-KSGRP:group": {
"name" : "testGroup3",
"description" : "testGroup3 already exists"
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 409</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - updateGroup - group id - string -  xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Update a Group - updateGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateGroup - group id - string -  xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>&lt;group name="testGroup5" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">
&lt;description>update invalid group&lt;/description>
&lt;/group></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="fdjh"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - updateGroup - group id - string - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Update a Group - updateGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateGroup - group id - string - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
"RAX-KSGRP:group": {
"name" : "testGroup5",
"description" : "update invlaid group"
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="fdhfjh"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get Users for Group - Negative" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="f94a73f6-c8a1-45fa-8701-4ec5da194e2b"><con:settings/><con:testStep type="restrequest" name="GET - getUsersForGroup - invalid token - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users" methodName="Get Users for Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUsersForGroup - invalid token - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1" disabled="true"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
 //ns7:users[1]/ns7:user[1]/@id</path><content>${#TestSuite#testuserId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="X-Auth-Token" value="12345"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUsersForGroup - invalid token - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users" methodName="Get Users for Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUsersForGroup - invalid token - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupIdJson}"/>
  <con:entry key="X-Auth-Token" value="12345"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUsersForGroup - non admin token - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users" methodName="Get Users for Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUsersForGroup - non admin token - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUsersForGroup - non admin token - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users" methodName="Get Users for Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUsersForGroup - non admin token - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUsersForGroup - invalid group id - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users" methodName="Get Users for Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUsersForGroup - invalid group id - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="12345"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUsersForGroup - invalid group id - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users" methodName="Get Users for Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUsersForGroup - invalid group id - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="123456"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUsersForGroup w/invalid limit - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users" methodName="Get Users for Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUsersForGroup w/invalid limit - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>java.lang.NumberFormatException: For input string: "sjfdhj"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="limit" value="sjfdhj"/>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUsersForGroup w/invalid limit - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users" methodName="Get Users for Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUsersForGroup w/invalid limit - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>java.lang.NumberFormatException: For input string: "jkfsd"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="limit" value="jkfsd"/>
  <con:entry key="groupId" value="${#TestSuite#groupIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getUsersForGroup w/invalid marker - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users" methodName="Get Users for Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getUsersForGroup w/invalid marker - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1" disabled="true"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
 //ns7:users[1]/ns7:user[1]/@id</path><content>${#TestSuite#testuserId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="marker" value="jfsjdkf"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Add A User to the Group - Negative" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="5febc9a4-d9c3-4c79-9f39-7c7d4a12ca44"><con:settings/><con:testStep type="restrequest" name="PUT - addUserToGroup - invalid user id - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Add User to Group - addUserToGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addUserToGroup - invalid user id - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="userId" value="12345"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addUserToGroup - invalid user id - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Add User to Group - addUserToGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addUserToGroup - invalid user id - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="userId" value="12345"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addUserToGroup - user id - string -  xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Add User to Group - addUserToGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addUserToGroup - user id - string -  xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="userId" value="fdjgh"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addUserToGroup - user id - string - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Add User to Group - addUserToGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addUserToGroup - user id - string - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="userId" value="djffd"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addUserToGroup - invalid token - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Add User to Group - addUserToGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addUserToGroup - invalid token - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="userId" value="${#TestSuite#testuserId}"/>
  <con:entry key="X-Auth-Token" value="12345"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addUserToGroup - invalid token - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Add User to Group - addUserToGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addUserToGroup - invalid token - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupIdJson}"/>
  <con:entry key="userId" value="${#TestSuite#testuserId}"/>
  <con:entry key="X-Auth-Token" value="12345"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addUserToGroup - non admin token - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Add User to Group - addUserToGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addUserToGroup - non admin token - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="userId" value="${#TestSuite#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addUserToGroup - non admin token - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Add User to Group - addUserToGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addUserToGroup - non admin token - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupIdJson}"/>
  <con:entry key="userId" value="${#TestSuite#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addUserToGroup - invalid group id - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Add User to Group - addUserToGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addUserToGroup - invalid group id - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="12345"/>
  <con:entry key="userId" value="${#TestSuite#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addUserToGroup - invalid group id - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Add User to Group - addUserToGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addUserToGroup - invalid group id - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="12345"/>
  <con:entry key="userId" value="${#TestSuite#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addUserToGroup - group id - string - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Add User to Group - addUserToGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addUserToGroup - group id - string - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="fjgf"/>
  <con:entry key="userId" value="${#TestSuite#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addUserToGroup - group id - string - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Add User to Group - addUserToGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addUserToGroup - group id - string - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="dfdjfgh"/>
  <con:entry key="userId" value="${#TestSuite#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Remove A User from the Group - Negative" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="7e121535-2b7a-4d2b-bbe1-c913120e650e"><con:settings/><con:testStep type="restrequest" name="DELETE - removeUserFromGroup - invalid user id - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Remove User From Group - removeUserFromGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - removeUserFromGroup - invalid user id - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="userId" value="12345"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - removeUserFromGroup - invalid user id - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Remove User From Group - removeUserFromGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - removeUserFromGroup - invalid user id - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupIdJson}"/>
  <con:entry key="userId" value="12345"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - removeUserFromGroup - invalid token - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Remove User From Group - removeUserFromGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - removeUserFromGroup - invalid token - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="userId" value="${#TestSuite#testuserId}"/>
  <con:entry key="X-Auth-Token" value="12345"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - removeUserFromGroup - invalid token - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Remove User From Group - removeUserFromGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - removeUserFromGroup - invalid token - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupIdJson}"/>
  <con:entry key="userId" value="${#TestSuite#testuserId}"/>
  <con:entry key="X-Auth-Token" value="12345"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - removeUserFromGroup - non admin token - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Remove User From Group - removeUserFromGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - removeUserFromGroup - non admin token - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="userId" value="${#TestSuite#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - removeUserFromGroup - non admin token - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Remove User From Group - removeUserFromGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - removeUserFromGroup - non admin token - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="userId" value="${#TestSuite#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - removeUserFromGroup - invalid group id - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Remove User From Group - removeUserFromGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - removeUserFromGroup - invalid group id - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="12345"/>
  <con:entry key="userId" value="${#TestSuite#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - removeUserFromGroup - invalid group id - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Remove User From Group - removeUserFromGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - removeUserFromGroup - invalid group id - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="12345"/>
  <con:entry key="userId" value="${#TestSuite#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Delete Group - Negative" searchProperties="true" id="cb5f4b0b-91b8-4ab0-ab88-2ded6b904715"><con:settings/><con:testStep type="restrequest" name="DELETE - deleteGroup - invalid token - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Delete Group - deleteGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteGroup - invalid token - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="X-Auth-Token" value="12345"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteGroup - invalid token - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Delete Group - deleteGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteGroup - invalid token - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupIdJson}"/>
  <con:entry key="X-Auth-Token" value="12345"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteGroup - non admin token - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Delete Group - deleteGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteGroup - non admin token - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteGroup - non admin token - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Delete Group - deleteGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteGroup - non admin token - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteGroup - group does not exists - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Delete Group - deleteGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteGroup - group does not exists - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="12345"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteGroup - group does not exists - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Delete Group - deleteGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteGroup - group does not exists - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="12345"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Delete Group - Positive" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="47ec7c34-97ab-4afb-b6c6-2399e1db3b35"><con:settings/><con:testStep type="restrequest" name="DELETE - deleteGroup - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Delete Group - deleteGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteGroup - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroup - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Get Group - getGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroup - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:itemNotFound[1]/ns1:message[1]</path><content>Group with id: '${#TestSuite#groupId}' was not found.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteGroup - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Delete Group - deleteGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteGroup - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay 1"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroup - json"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Get Group - getGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroup - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#EndpointJson}/${#Project#path}/RAX-GRPADM/groups/${#TestSuite#groupIdJson}'; 
//ns1:Fault[1]/ns1:itemNotFound[1]/ns1:message[1]</path><content>Group with id: '${#TestSuite#groupIdJson}' was not found.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#groupIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - createDeletedGroup - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups" methodName="Add a New Group - addGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createDeletedGroup - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>&lt;group name="testGroup1totestGroup3" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">
&lt;description>Deleted group testGroup3&lt;/description>
&lt;/group></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns6='http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0';
//ns6:group[1]/@name</path><content>testGroup1totestGroup3</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store deleted groupId"><con:settings/><con:config><script>def deletedGroupId = context.expand( '${POST - createDeletedGroup - xml#Response#declare namespace ns11=\'http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0\'; //ns11:group[1]/@id}' )
log.info "deletedGroupId: " + deletedGroupId
testRunner.testCase.testSuite.setPropertyValue("deletedGroupId", deletedGroupId)</script></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteGroup1 - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Delete Group - deleteGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteGroup1 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#deletedGroupId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay2"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteGroup2 - xml"><con:settings/><con:config service="RAX-GRPADM-admin" resourcePath="/${#Project#path}/RAX-GRPADM/groups/{groupId}" methodName="Delete Group - deleteGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteGroup2 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestSuite#deletedGroupId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Delete User" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="b8cd0535-5eef-4324-8022-93e2d55c3e39"><con:settings/><con:testStep type="restrequest" name="DELETE - user - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - user1 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user1 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testuserId1}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - user2 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user2 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testuserId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties><con:property><con:name>username</con:name><con:value>auth</con:value></con:property><con:property><con:name>password</con:name><con:value>auth123</con:value></con:property><con:property><con:name>tokenId</con:name><con:value>2b22218d-9770-44ac-9153-e337c98763a4</con:value></con:property><con:property><con:name>apiKey2</con:name><con:value>1234567890</con:value></con:property><con:property><con:name>username2</con:name><con:value>carlostest1</con:value></con:property><con:property><con:name>tokenId2</con:name><con:value>e14f8bc4-a250-4d6d-bcd3-4a98563097ac</con:value></con:property><con:property><con:name>userId2</con:name><con:value>175015</con:value></con:property><con:property><con:name>testemail</con:name><con:value>testuser1@rackspace.com</con:value></con:property><con:property><con:name>testuser</con:name><con:value>GAuser12</con:value></con:property><con:property><con:name>groupId</con:name><con:value>3536</con:value></con:property><con:property><con:name>groupIdJson</con:name><con:value>3535</con:value></con:property><con:property><con:name>testuserId</con:name><con:value>197261</con:value></con:property><con:property><con:name>deletedGroupId</con:name><con:value>3540</con:value></con:property><con:property><con:name>testuser1</con:name><con:value>GAuser2</con:value></con:property><con:property><con:name>testemail1</con:name><con:value>testuser2@rackspace.com</con:value></con:property><con:property><con:name>testuserId1</con:name><con:value>197262</con:value></con:property><con:property><con:name>testuser2</con:name><con:value>GAuser3</con:value></con:property><con:property><con:name>testemail2</con:name><con:value>testuser3@rackspace.com</con:value></con:property><con:property><con:name>testuserId2</con:name><con:value>197263</con:value></con:property><con:property><con:name>testuser3</con:name><con:value>GAuser4</con:value></con:property><con:property><con:name>testemail3</con:name><con:value>testuser4@rackspace.com</con:value></con:property><con:property><con:name>password2</con:name><con:value>Password58</con:value></con:property><con:property><con:name>userId</con:name><con:value>153345</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="Functional - RAX-Impersonation"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Authentication" searchProperties="true" id="20378943-7827-4b08-bba0-5540c5fe49ec"><con:settings/><con:testStep type="restrequest" name="POST - token - CA - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - CA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#password}" username="${#TestSuite#username}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>token</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access/ns1:token/@id)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store CA token"><con:settings/><con:config><script>def CAtokenId = context.expand( '${POST - token - CA - xml#Response#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:token[1]/@id}' )
log.info "get CATokenId: " + CAtokenId 

testRunner.testCase.testSuite.setPropertyValue("CAtokenId", CAtokenId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#GAadminPwd}" username="${#TestSuite#GAadmin}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>token</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access/ns1:token/@id)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token"><con:settings/><con:config><script>def tokenId = context.expand( '${POST - token - xml#ResponseAsXml#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:token[1]/@id}' )
log.info "get tokenId: " + tokenId
testRunner.testCase.testSuite.setPropertyValue("tokenId", tokenId)</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Impersonate - Positive" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="c380dc4b-1d3c-4394-a35d-94fa43a50aaa"><con:settings/><con:testStep type="transfer" name="Property Transfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>addUserCredentials</con:name><con:sourceType>addUserCredentials</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addUserCredentials - xml</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST - Authenticate Application - xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/tokens" methodName="Authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Authenticate Application - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;authCredentials client_id="18e7a7032733486cd32f472d7bd58f709ac0d221" client_secret="${#TestSuite#clientSecret}" grant_type="CLIENT_CREDENTIALS" xmlns="http://idm.api.rackspace.com/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store tokenId"><con:settings/><con:config><script>def FAtokenId = context.expand( '${POST - Authenticate Application - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:auth[1]/ns3:access_token[1]/@id}' )
log.info "get FAtokenId: " + FAtokenId
testRunner.testCase.testSuite.setPropertyValue("FAtokenId", FAtokenId)</script></con:config></con:testStep><con:testStep type="restrequest" name="Create Application - xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/applications" methodName="Add an Application" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create Application - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;application customerId="RCN-987-654-321" description="Foundation Test App" name="${#TestCase#appName}" xmlns="http://idm.api.rackspace.com/v1.0">&lt;roles/>&lt;/application></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns3='http://idm.api.rackspace.com/v1.0';
//ns3:application[1]/@name</path><content>${#TestCase#appName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#FAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store applicationId"><con:settings/><con:config><script>def applicationId = context.expand( '${Create Application - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:application[1]/@clientId}' )
log.info "get applicationId: " + applicationId

def applicationSecret = context.expand( '${Create Application - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:application[1]/ns3:secretCredentials[1]/@clientSecret}' )
log.info "get applicationSecret: " + applicationSecret

testRunner.testCase.testSuite.setPropertyValue("applicationId",applicationId)
testRunner.testCase.testSuite.setPropertyValue("applicationSecret",applicationSecret)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Create Application - json"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/applications" methodName="Add an Application" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Create Application - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "application": {"customerId": "RCN-987-654-321", "name": "${#TestCase#appNameJson}", "description": "Foundation Test App" } }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" disabled="true"><con:configuration><path>declare namespace ns1='${#Project#EndpointJson}/${#Project#foundationPath}/applications';
//ns1:Response[1]/ns1:application[1]/ns1:clientId[1]</path><content>e928e26acafdc07ebda9ccdcdf545c07d098594a</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>e928e26acafdc07ebda9ccdcdf545c07d098594a</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#FAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store applicationIdJson"><con:settings/><con:config><script>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;


//def applicationIdJson = context.expand( '${POST - Create Application - json#ResponseAsXml#declare namespace ns1=\'${#Project#EndpointJson}/${#Project#foundationPath}/applications\'; //ns1:Response[1]/ns1:application[1]/ns1:clientId[1]}' )
//def applicationIdJson = context.expand( '${POST - Create Application - json#ResponseAsXml#declare namespace ns1=\'https://d-api2.cidm.iad2.corp.rackspace.com/v1/applications\'; //ns1:Response[1]/ns1:application[1]/ns1:clientId[1]}' )
def responseAsXml = context.expand( '${POST - Create Application - json#Response}' )
def jsonRes = new JsonSlurper().parseText(responseAsXml);
def applicationIdJson= jsonRes.'application'.clientId;
//log.info clId;
log.info "get applicationId Json: " + applicationIdJson


//def applicationSecretJson = context.expand( '${POST - Create Application - json#ResponseAsXml#declare namespace ns1=\'${#Project#EndpointJson}/${#Project#foundationPath}/applications\'; //ns1:Response[1]/ns1:application[1]/ns1:secretCredentials[1]/ns1:clientSecret[1]}' )
//def applicationSecretJson = context.expand( '${POST - Create Application - json#ResponseAsXml#declare namespace ns1=\'https://d-api2.cidm.iad2.corp.rackspace.com/v1/applications\'; //ns1:Response[1]/ns1:application[1]/ns1:secretCredentials[1]/ns1:clientSecret[1]}' )
def applicationSecretJson= jsonRes.'application'.'secretCredentials'.clientSecret;
log.info "get applicationSecretJson: " + applicationSecretJson

testRunner.testCase.testSuite.setPropertyValue("applicationIdJson", applicationIdJson)
testRunner.testCase.testSuite.setPropertyValue("applicationSecretJson", applicationSecretJson)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - CreateServiceAdmin - xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/users" methodName="Add a User" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - CreateServiceAdmin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<user customerId="RCN-000-111-000" displayName="test user" email="test.user@example.org" firstName="SAtest" lastName="Smith" middleName="Lee" personId="RPN-111-111-111" prefLanguage="US_en" region="SAT" timeZone="America/Chicago" username="${#TestCase#SAusername}" xmlns="http://idm.api.rackspace.com/v1.0">
<roles id="4"/><secret secretAnswer="Buddy" secretQuestion="What is your dogs name?"/>
<passwordCredentials>
<currentPassword password="${#TestCase#SApassword}"/>
</passwordCredentials>
</user>]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==201</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#FAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store SAuserId"><con:settings/><con:config><script>def userId = context.expand( '${POST - CreateServiceAdmin - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:user[1]/@id}' )
testRunner.testCase.testSuite.setPropertyValue("SAuserId",userId)
log.info "get userId: " + userId
</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - addRole SA -xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/users/{userId}/roles/{roleId}" methodName="Grant User a Global Role" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addRole SA -xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#SAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#FAtokenId}"/>
  <con:entry key="roleId" value="4"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listServiceAdminRole -xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/users/{user_id}/roles" methodName="List User Global Roles - listUserGlobalRoles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listServiceAdminRole -xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:roles[1]/ns7:role[1]/@name</path><content>identity:service-admin</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestSuite#SAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Authenticate ServiceAdmin - xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/tokens" methodName="Authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Authenticate ServiceAdmin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;authCredentials client_id="18e7a7032733486cd32f472d7bd58f709ac0d221" client_secret="password1" grant_type="PASSWORD" password="${#TestCase#SApassword}" username="${#TestCase#SAusername}" xmlns="http://idm.api.rackspace.com/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store SAtokenId"><con:settings/><con:config><script>def SAtokenId = context.expand( '${POST - Authenticate ServiceAdmin - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:auth[1]/ns3:access_token[1]/@id}' )
log.info "get SAtokenId: " + SAtokenId
testRunner.testCase.testSuite.setPropertyValue("SAtokenId",SAtokenId);

</script></con:config></con:testStep><con:testStep type="groovy" name="Create Random UAuserName"><con:settings/><con:config><script>UAuserName = "userAdmin"+System.currentTimeMillis()
log.info UAuserName
testRunner.testCase.testSuite.setPropertyValue("UAuserName", UAuserName)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Create User - v1.1 - xml"><con:settings/><con:config service="Auth V1.1" resourcePath="/${#Project#pathv1.1}/users" methodName="POST - createUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Create User - v1.1 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:user enabled="true" id="${#TestSuite#UAusername}" key="${#TestCase#key}" mossoId="${#TestCase#mossoId}" nastId="${#TestCase#nastId}" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get User By Name - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/users" methodName="Get a User by Name - getUserByName" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get User By Name - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:user[1]/@username</path><content>${#TestSuite#UAusername}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestSuite#UAusername}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store nastId"><con:settings/><con:config><script>def nastId = context.expand( '${POST - Create User - v1.1 - xml#ResponseAsXml#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:user[1]/@nastId}' )
log.info "get nastId: " + nastId
testRunner.testCase.setPropertyValue("nastId", nastId)</script></con:config></con:testStep><con:testStep type="groovy" name="Store UA userId"><con:settings/><con:config><script>def UAuserId = context.expand( '${GET - Get User By Name - xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:user[1]/@id}' )
log.info "get UAuserId: " + UAuserId
testRunner.testCase.testSuite.setPropertyValue("UAuserId", UAuserId)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - List API Key Credentials - xml"><con:settings/><con:config service="RAX-KSKEY-admin" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" methodName="List Credentials - listCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - List API Key Credentials - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns3='http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0';
declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:credentials[1]/ns3:apiKeyCredentials[1]/@username</path><content>${#TestSuite#UAusername}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#UAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - apiKey -  xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - apiKey -  xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0"> &lt;apiKeyCredentials apiKey="${#TestCase#key}" username="${#TestSuite#UAusername}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/> &lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>&lt;token id=</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token) >=1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token/@id) = 1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store UAtokenId"><con:settings/><con:config><script>def UAtokenId = context.expand( '${POST - token - apiKey -  xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info "get UAtokenId: " + UAtokenId
testRunner.testCase.setPropertyValue("UAtokenId", UAtokenId)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - Validate - xml"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - Validate - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#UAtokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUser - v2.0 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user - addUser" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUser - v2.0 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:user display-name="${#TestSuite#GACAdefaultUser}" email="${#TestCase#testEmail}" enabled="true" username="${#TestSuite#GACAdefaultUser}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#UAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store userId1"><con:settings/><con:config><script>def DU1userId = context.expand( '${POST - addUser - v2.0 - xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:user[1]/@id}' )
log.info "get DU1userId: " + DU1userId

def DUpassword = context.expand( '${POST - addUser - v2.0 - xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0\'; declare namespace ns2=\'http://docs.openstack.org/identity/api/v2.0\'; //ns2:user[1]/@ns1:password}' )
log.info "get DUpassword: " + DUpassword

testRunner.testCase.testSuite.setPropertyValue("DU1userId", DU1userId)
testRunner.testCase.testSuite.setPropertyValue("DUpassword", DUpassword)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#DUpassword}" username="${#TestSuite#GACAdefaultUser}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>token id="</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access/ns1:token/@id)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUser - CA - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user - addUser" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUser - CA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:user display-name="${#TestSuite#CAdefaultUser}" email="${#TestCase#testEmail}" enabled="true" username="${#TestSuite#CAdefaultUser}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#UAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store CAuserId" id="3b2db978-895e-4cb3-a96c-4c9a6c614f44"><con:settings/><con:config><script>def CAuserId = context.expand( '${POST - addUser - CA - xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:user[1]/@id}' )
log.info "get CAuserId: " + CAuserId

def CAusername = context.expand( '${POST - addUser - CA - xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:user[1]/@username}' )
log.info "get CAusername: " + CAusername

def CApassword = context.expand( '${POST - addUser - CA - xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0\'; declare namespace ns2=\'http://docs.openstack.org/identity/api/v2.0\'; //ns2:user[1]/@ns1:password}' )
log.info "get CApassword: " + CApassword

testRunner.testCase.testSuite.setPropertyValue("CAuserId", CAuserId)
testRunner.testCase.testSuite.setPropertyValue("CAusername", CAusername)
testRunner.testCase.testSuite.setPropertyValue("CApassword", CApassword)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUserCredentials - xml"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Add user Credential. - addUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUserCredentials - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;apiKeyCredentials xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0" username="${#TestCase#CAusername}" apiKey="7e4a5dda01d9f447695b5ff476a6788f"/> </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1" disabled="true"><con:configuration><token>apiKey="${#TestSuite#apiKey}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 2" disabled="true"><con:configuration><token>username="${#TestSuite#testuser}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" disabled="true"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:RAX-KSKEY:apiKeyCredentials)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>apiKeyCredentials</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#CAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - CA - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - CA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#CApassword}" username="${#TestSuite#CAusername}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>token id="</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access/ns1:token/@id)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Add User - GACA - xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/users" methodName="Add a User" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Add User - GACA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<user customerId="RCN-000-111-000" displayName="Alan Erwin" email="alan.erwin@example.org" firstName="Alan" lastName="Smith" middleName="Lee" personId="RPN-111-111-111" prefLanguage="US_en" region="SAT" timeZone="America/Chicago" username="${#TestSuite#GACAdefaultUser1}" xmlns="http://idm.api.rackspace.com/v1.0">
<roles/><secret secretAnswer="Buddy" secretQuestion="What is your dogs name?"/>
<passwordCredentials>
<currentPassword password="C@n+f001me!"/>
</passwordCredentials>
</user>]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#FAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store GACAuser" id="3a80de62-a2e0-4137-ae98-d083250c6dbe"><con:settings/><con:config><script>
def FApassword = context.expand( '${POST - Add User - GACA - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:user[1]/ns3:passwordCredentials[1]/ns3:currentPassword[1]/@password}' )
log.info "get FApassword: " + FApassword

def FAuserId = context.expand( '${POST - Add User - GACA - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:user[1]/@id}' )
log.info "get FAuserId: " + FAuserId

testRunner.testCase.testSuite.setPropertyValue("FApassword", FApassword)
testRunner.testCase.testSuite.setPropertyValue("FAuserId", FAuserId)</script></con:config></con:testStep><con:testStep type="restrequest" name="PUT - Add UserRole - GACA - xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/users/{userId}/roles/{roleId}" methodName="Grant User a Global Role" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - Add UserRole - GACA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#FAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#FAtokenId}"/>
  <con:entry key="roleId" value="2"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - xml 1"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - xml 1" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#FApassword}" username="${#TestSuite#GACAdefaultUser1}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access/ns1:token/@id)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Add User - GAonlyUser - xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/users" methodName="Add a User" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Add User - GAonlyUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<user customerId="RCN-000-111-000" displayName="Alan Erwin" email="alan.erwin@example.org" firstName="Alan" lastName="Smith" middleName="Lee" personId="RPN-111-111-111" prefLanguage="US_en" region="SAT" timeZone="America/Chicago" username="${#TestSuite#GAdefaultUser}" xmlns="http://idm.api.rackspace.com/v1.0">
<roles/><secret secretAnswer="Buddy" secretQuestion="What is your dogs name?"/>
<passwordCredentials>
<currentPassword password="C@n+f001me!"/>
</passwordCredentials>
</user>]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#FAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store GAonlyUser" id="a77cd7da-fa8a-4846-84c6-56bee1d70f65"><con:settings/><con:config><script>def GAonlyPassword = context.expand( '${POST - Add User - GAonlyUser - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:user[1]/ns3:passwordCredentials[1]/ns3:currentPassword[1]/@password}' )
log.info "get GAonlyPassword: " + GAonlyPassword

def GAonlyUserId = context.expand( '${POST - Add User - GAonlyUser - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:user[1]/@id}' )
log.info "get GAonlyUserId: " + GAonlyUserId

testRunner.testCase.testSuite.setPropertyValue("GAonlyPassword", GAonlyPassword)
testRunner.testCase.testSuite.setPropertyValue("GAonlyUserId", GAonlyUserId)</script></con:config></con:testStep><con:testStep type="restrequest" name="PUT - Add UserRole - GAonlyUser - xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/users/{userId}/roles/{roleId}" methodName="Grant User a Global Role" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - Add UserRole - GAonlyUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#GAonlyUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#FAtokenId}"/>
  <con:entry key="roleId" value="2"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - GAonlyUser - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - GAonlyUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#GAonlyPassword}" username="${#TestSuite#GAdefaultUser}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access/ns1:token/@id)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token" id="3d9cf3ee-2b6a-49e6-bbd8-7906917dc668"><con:settings/><con:config><script>def CAuserTokenId = context.expand( '${POST - token - CA - xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info "get CAuserTokenId: " + CAuserTokenId
testRunner.testCase.setPropertyValue("CAuserTokenId",CAuserTokenId)

def GACAuserTokenId = context.expand( '${POST - token - xml 1#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info "get GACAuserTokenId: " + GACAuserTokenId
testRunner.testCase.setPropertyValue("GACAuserTokenId",GACAuserTokenId)

def GAuserTokenId = context.expand( '${POST - token - GAonlyUser - xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info "get GAuserTokenId: " + GAuserTokenId
testRunner.testCase.setPropertyValue("GAuserTokenId", GAuserTokenId)
</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Authenticate Racker - xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/tokens" methodName="Authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Authenticate Racker - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8"?> &lt;rackerCredentials xmlns="http://idm.api.rackspace.com/v1.0" password="${#TestSuite#rackerPwd}" username="${#TestSuite#racker}" client_secret="${#TestSuite#applicationSecret}" client_id="${#TestSuite#applicationId}" grant_type="PASSWORD" /></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store rackerTokenId"><con:settings/><con:config><script>def rackerTokenId = context.expand( '${POST - Authenticate Racker - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:auth[1]/ns3:access_token[1]/@id}' )
log.info"get rackerTokenId: " + rackerTokenId
testRunner.testCase.testSuite.setPropertyValue("rackerTokenId", rackerTokenId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Authenticate Racker - json"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/tokens" methodName="Authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Authenticate Racker - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"rackerCredentials":{ "grant_type": "PASSWORD", "client_id": "${#TestSuite#applicationIdJson}", "client_secret": "${#TestSuite#applicationSecretJson}", "username": "${#TestSuite#racker}", "password": "${#TestSuite#rackerPwd}" } }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" disabled="true"><con:configuration><path>declare namespace ns1='${#Project#EndpointJson}/${#Project#foundationPath}/tokens';
//ns1:Response[1]/ns1:auth[1]/ns1:racker[1]/ns1:username[1]</path><content>${#TestSuite#racker}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store rackerTokenIdJson"><con:settings/><con:config><script>//def rackerTokenIdJson = context.expand( '${POST - Authenticate Racker - json#ResponseAsXml#declare namespace ns1=\'${#Project#EndpointJson}/${#Project#foundationPath}/tokens\'; //ns1:Response[1]/ns1:auth[1]/ns1:access_token[1]/ns1:id[1]}' )
def rackerTokenIdJson = context.expand( '${POST - Authenticate Racker - json#ResponseAsXml#declare namespace ns1=\'https://d-api1.cidm.iad2.corp.rackspace.com/v1/tokens\'; //ns1:Response[1]/ns1:auth[1]/ns1:access_token[1]/ns1:id[1]}' )

log.info "rackerTokenIdJson: " + rackerTokenIdJson
testRunner.testCase.testSuite.setPropertyValue("rackerTokenIdJson", rackerTokenIdJson)</script></con:config></con:testStep><con:testStep type="restrequest" name="Add tenant"><con:settings/><con:config service="FoundationAuth-GA" resourcePath="/${#Project#foundationPath}/tenants" methodName="add Tenant - add Tenant" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add tenant" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;ns4:tenant xmlns:ns2="http://www.w3.org/2005/Atom" xmlns:ns3="http://fault.
common.api.rackspace.com/v1.0" xmlns:ns4="http://idm.api.rackspace.com/v1.0"
display-name="test Tenant" name="testTenant127" id="${#TestSuite#tenantId}">
&lt;description>Test tenant&lt;/description>
&lt;/ns4:tenant>
</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseSatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#FAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - Add Role to user on tenant - GAdefaultUser - xml"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}" methodName="Add roles to a user on a tenant. - addRolesToUserOnTenant" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - Add Role to user on tenant - GAdefaultUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="testTenant:001"/>
  <con:entry key="userId" value="${#TestSuite#GAonlyUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}"/>
  <con:entry key="roleId" value="6"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - Add Role to user on tenant - GACAdefaultUser - xml"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}" methodName="Add roles to a user on a tenant. - addRolesToUserOnTenant" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - Add Role to user on tenant - GACAdefaultUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="testTenant:001"/>
  <con:entry key="userId" value="${#TestSuite#FAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}"/>
  <con:entry key="roleId" value="6"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Service Admin Imper CA Admin - xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Service Admin Imper CA Admin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestSuite#username}"/>
&lt;/impersonation></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Racker Imper CA Admin - xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Racker Imper CA Admin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestSuite#username}"/>
&lt;/impersonation></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Service Admin Imper GA Admin - xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Service Admin Imper GA Admin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestSuite#GAadmin}"/>
&lt;/impersonation></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Racker Imper GA Admin - xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Racker Imper GA Admin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestSuite#GAadmin}"/>
&lt;/impersonation></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Service Admin Imper User Admin - xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Service Admin Imper User Admin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestSuite#UAusername}"/>
&lt;/impersonation></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store SAimpersonateUAtoken"><con:settings/><con:config><script>def SAimpersonateUAtoken = context.expand( '${POST - impersonateUser - Service Admin Imper User Admin - xml#ResponseAsXml#declare namespace ns14=\'http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0\'; //ns14:access[1]/ns14:token[1]/@id}' )
testRunner.testCase.setPropertyValue("SAimpersonateUAtoken",SAimpersonateUAtoken);
log.info "get SAimpersonateUAtoken: " +  SAimpersonateUAtoken</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - Endpoints  SAimpersonateUAtoken- xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" methodName="List Endoints for a Token - listEndpointsForToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Endpoints  SAimpersonateUAtoken- xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#SAimpersonateUAtoken}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - Validate - SA Imper UA - xml"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - Validate - SA Imper UA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns7:user[1]/@name</path><content>${#TestSuite#UAusername}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns14='http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0';
declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns14:impersonator[1]/@name</path><content>${#TestCase#SAusername}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns14='http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0';
declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns14:impersonator[1]/ns7:roles[1]/ns7:role[1]/@id</path><content>4</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 3"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns7:token[1]/@id</path><content>${#TestCase#SAimpersonateUAtoken}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#SAimpersonateUAtoken}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - Validate - SA Imper UA - 401 - xml"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - Validate - SA Imper UA - 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#SAimpersonateUAtoken}"/>
  <con:entry key="X-Auth-Token" value="12345"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants - SAimpersonateUAtoken - 200 - xml"><con:settings/><con:config service="identity-admin" methodName="Get Tenants - listTenants" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants - SAimpersonateUAtoken - 200 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200

log.info "GET - tenants - xml - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#SAimpersonateUAtoken}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles - SAimpersonateUAtoken - 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Roles - listRoles" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles - SAimpersonateUAtoken - 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#SAimpersonateUAtoken}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Auth with tenant and User Admin - SA - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Auth with tenant and User Admin - SA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="${#TestCase#mossoId}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;token id="${#TestCase#UAtokenId}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Auth with tenant and Imp User Admin - SA - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Auth with tenant and Imp User Admin - SA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="${#TestCase#mossoId}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;token id="${#TestCase#SAimpersonateUAtoken}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Auth with invalid tenant and Imp User Admin - SA - xml" id="d9347867-7342-405e-ada4-0bf51aaaf170"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Auth with invalid tenant and Imp User Admin - SA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="Te567st" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;token id="${#TestCase#SAimpersonateUAtoken}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Token doesn't belong to Tenant with Id/Name: 'Te567st'</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Auth with tenant null and Imp User Admin - SA - xml" id="5cec3674-cc96-4cc0-8244-8b05a20f4925"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Auth with tenant null and Imp User Admin - SA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;token id="${#TestCase#SAimpersonateUAtoken}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Expecting a valid Tenant Id or Name.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Auth with tenant empty string and Imp User Admin - SA - xml" id="5124fd35-77e4-4121-88df-35c684cbf6f3"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Auth with tenant empty string and Imp User Admin - SA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="   " xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;token id="${#TestCase#SAimpersonateUAtoken}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Token doesn't belong to Tenant with Id/Name: ''</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Auth with nast tenant and Imp User Admin - SA - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Auth with nast tenant and Imp User Admin - SA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="${#TestCase#nastId}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;token id="${#TestCase#SAimpersonateUAtoken}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - RAC Imper UA - xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - RAC Imper UA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestSuite#UAusername}"/>
&lt;/impersonation></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store UAtokenId"><con:settings/><con:config><script>def UAtokenId = context.expand( '${POST - impersonateUser - RAC Imper UA - xml#Response#declare namespace ns14=\'http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0\'; //ns14:access[1]/ns14:token[1]/@id}' )
log.info "get UAtokenId: " + UAtokenId 

testRunner.testCase.setPropertyValue("UAtokenId", UAtokenId)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - Endpoints RACImpersonateUA - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" methodName="List Endoints for a Token - listEndpointsForToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Endpoints RACImpersonateUA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#UAtokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - Validate - RAC Imper UA - xml"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - Validate - RAC Imper UA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns7:user[1]/@name</path><content>${#TestSuite#UAusername}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns14='http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0';
declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns14:impersonator[1]/@id</path><content>${#TestSuite#racker}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns14='http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0';
declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns14:impersonator[1]/ns7:roles[1]/ns7:role[1]/@id</path><content>9</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#UAtokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - Validate - RAC Imper UA - 401 - xml"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - Validate - RAC Imper UA - 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#UAtokenId}"/>
  <con:entry key="X-Auth-Token" value="12345"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants - RAC Imper UA - 200 - xml"><con:settings/><con:config service="identity-admin" methodName="Get Tenants - listTenants" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants - RAC Imper UA - 200 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200

log.info "GET - tenants - xml - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#UAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store tenantId"><con:settings/><con:config><script>def tenantId = context.expand( '${GET - tenants - RAC Imper UA - 200 - xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:tenants[1]/ns1:tenant[2]/@id}' )
log.info "get tenantId: " + tenantId
testRunner.testCase.setPropertyValue("tenantId", tenantId)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles - RAC Imper UA - 403 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Roles - listRoles" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles - RAC Imper UA - 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#UAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - ServiceAdmin Imper GAdefaultUser- xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - ServiceAdmin Imper GAdefaultUser- xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestSuite#GAdefaultuser}"/>
&lt;/impersonation></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store SAimpersonateDU1"><con:settings/><con:config><script>def SAimpersonateDU1 = context.expand( '${POST - impersonateUser - ServiceAdmin Imper GAdefaultUser- xml#ResponseAsXml#declare namespace ns14=\'http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0\'; //ns14:access[1]/ns14:token[1]/@id}' )
log.info "get SAimpersonateDU1: " + SAimpersonateDU1
testRunner.testCase.setPropertyValue("SAimpersonateDU1", SAimpersonateDU1)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - Endpoints SAImper GAdef - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" methodName="List Endoints for a Token - listEndpointsForToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Endpoints SAImper GAdef - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#SAimpersonateDU1}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - Validate - SA Validate GAdefaultUser - xml"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - Validate - SA Validate GAdefaultUser - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns7:user[1]/@name</path><content>${#TestSuite#GAdefaultUser}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns14='http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0';
declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns14:impersonator[1]/@name</path><content>${#TestCase#SAusername}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns14='http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0';
declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns14:impersonator[1]/ns7:roles[1]/ns7:role[1]/@id</path><content>4</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#SAimpersonateDU1}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - Validate - SA Validate GAdefaultUser - 401 - xml"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - Validate - SA Validate GAdefaultUser - 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#SAimpersonateDU1}"/>
  <con:entry key="X-Auth-Token" value="12345"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants - SA Imper GAdefaultUser - 200 - xml"><con:settings/><con:config service="identity-admin" methodName="Get Tenants - listTenants" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants - SA Imper GAdefaultUser - 200 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - tenants - xml - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>tenants</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" disabled="true"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:tenants[1]/ns1:tenant)>1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#SAimpersonateDU1}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles - SA Imper GAdefaultUser - 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Roles - listRoles" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles - SA Imper GAdefaultUser - 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#SAimpersonateDU1}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Auth with tenant and GAdefaultUser token - SA - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Auth with tenant and GAdefaultUser token - SA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="${#TestSuite#tenantId}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;token id="${#TestCase#GAuserTokenId}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Auth with tenant and Imp GAdefaultUser - SA - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Auth with tenant and Imp GAdefaultUser - SA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="${#TestSuite#tenantId}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;token id="${#TestCase#SAimpersonateDU1}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Auth with invalid tenant and Imp GAdefaultUser - SA - xml" id="fc86f6e4-dcde-4140-a7e4-c24d9c5bc14c"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Auth with invalid tenant and Imp GAdefaultUser - SA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="plm345as" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;token id="${#TestCase#SAimpersonateDU1}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Token doesn't belong to Tenant with Id/Name: 'plm345as'</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Auth with tenant null and Imp GAdefaultUser - SA - xml" id="6b4a815e-0aa9-44bd-b9b2-af57b3d426ca"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Auth with tenant null and Imp GAdefaultUser - SA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;token id="${#TestCase#SAimpersonateDU1}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Invalid request. Specify tenantId or tenantName.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Auth with tenant empty string and Imp GAdefaultUser - SA - xml" id="ba37bd44-b445-4c1c-8b51-f30d4881b845"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Auth with tenant empty string and Imp GAdefaultUser - SA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="   " xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;token id="${#TestCase#SAimpersonateDU1}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Invalid request. Specify tenantId or tenantName.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - RAC Imper GAdefaultUser - xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - RAC Imper GAdefaultUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestSuite#GAdefaultUser}"/>
&lt;/impersonation></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store tokenId1"><con:settings/><con:config><script>def tokenId1 = context.expand( '${POST - impersonateUser - RAC Imper GAdefaultUser - xml#ResponseAsXml#declare namespace ns14=\'http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0\'; //ns14:access[1]/ns14:token[1]/@id}' )

log.info "get tokenId1: " + tokenId1 

testRunner.testCase.setPropertyValue("tokenId1", tokenId1)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - Endpoints RACImperGAdef - xml" id="7073efaf-ca79-4f55-bb0f-f219a8ceb784"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" methodName="List Endoints for a Token - listEndpointsForToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Endpoints RACImperGAdef - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#tokenId1}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - Validate - RAC Imper GAdefaultUser - xml"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - Validate - RAC Imper GAdefaultUser - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns7:user[1]/@name</path><content>${#TestSuite#GAdefaultUser}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns14='http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0';
declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns14:impersonator[1]/@id</path><content>${#TestSuite#racker}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns14='http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0';
declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns14:impersonator[1]/ns7:roles[1]/ns7:role[1]/@id</path><content>9</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#tokenId1}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - Validate - RAC Imper GAdefaultUser - 401 - xml"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - Validate - RAC Imper GAdefaultUser - 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#tokenId1}"/>
  <con:entry key="X-Auth-Token" value="12345"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants - RAC Imper GAdefaultUser - 200 - xml"><con:settings/><con:config service="identity-admin" methodName="Get Tenants - listTenants" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants - RAC Imper GAdefaultUser - 200 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - tenants - xml - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>tenants</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" disabled="true"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:tenants[1]/ns1:tenant)>1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#tokenId1}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles - RAC Imper GAdefaultUser - 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Roles - listRoles" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles - RAC Imper GAdefaultUser - 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#tokenId1}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - ServiceAdmin Imper GACAdefaultUser - xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - ServiceAdmin Imper GACAdefaultUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestSuite#GACAdefaultUser1}"/>
&lt;/impersonation></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store SAimpersonateDU2"><con:settings/><con:config><script>def SAimpersonateDU2 = context.expand( '${POST - impersonateUser - ServiceAdmin Imper GACAdefaultUser - xml#ResponseAsXml#declare namespace ns14=\'http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0\'; //ns14:access[1]/ns14:token[1]/@id}' )
log.info "get SAimpersonateDU2: " + SAimpersonateDU2
testRunner.testCase.setPropertyValue("SAimpersonateDU2", SAimpersonateDU2)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - Endpoints SAImper GACAdef - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" methodName="List Endoints for a Token - listEndpointsForToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Endpoints SAImper GACAdef - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#SAimpersonateDU2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - Validate - SA Validate GACAdefaultUser - xml"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - Validate - SA Validate GACAdefaultUser - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns7:user[1]/@name</path><content>${#TestSuite#GACAdefaultuser1}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns14='http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0';
declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns14:impersonator[1]/@name</path><content>${#TestCase#SAusername}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns14='http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0';
declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns14:impersonator[1]/ns7:roles[1]/ns7:role[1]/@id</path><content>4</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#SAimpersonateDU2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - Validate - SA Validate GACAdefaultUser - 401 - xml"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - Validate - SA Validate GACAdefaultUser - 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#SAimpersonateDU2}"/>
  <con:entry key="X-Auth-Token" value="12345"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants - SA Imper GACAdefaultUser - 200 - xml"><con:settings/><con:config service="identity-admin" methodName="Get Tenants - listTenants" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants - SA Imper GACAdefaultUser - 200 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200

log.info "GET - tenants - xml - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" disabled="true"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:tenants[1]/ns1:tenant)>1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#SAimpersonateDU2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles - SA Imper GACAdefaultUser - 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Roles - listRoles" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles - SA Imper GACAdefaultUser - 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#SAimpersonateDU2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Auth with tenant and GACAdefaultUser token - SA - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Auth with tenant and GACAdefaultUser token - SA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="${#TestSuite#tenantId}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;token id="${#TestCase#GACAuserTokenId}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Auth with tenant and Imp GACAdefaultUser - SA - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Auth with tenant and Imp GACAdefaultUser - SA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="${#TestSuite#tenantId}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;token id="${#TestCase#SAimpersonateDU2}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Auth with invalid tenant and Imp GACAdefaultUser - SA - xml" id="ea043abc-3d7f-4a5a-9259-79b8baf85125"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Auth with invalid tenant and Imp GACAdefaultUser - SA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="Tgh67kl" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;token id="${#TestCase#SAimpersonateDU2}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Token doesn't belong to Tenant with Id/Name: 'Tgh67kl'</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Auth with tenant null and Imp GACAdefaultUser - SA - xml" id="d2a83205-fa5a-4f06-b550-bf709c090dd5"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Auth with tenant null and Imp GACAdefaultUser - SA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;token id="${#TestCase#SAimpersonateDU2}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Invalid request. Specify tenantId or tenantName.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Auth with tenant empty string and Imp GACAdefaultUser - SA - xml" id="dfade1b3-88b0-4dda-aee8-0529e279d4d0"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Auth with tenant empty string and Imp GACAdefaultUser - SA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="  " xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;token id="${#TestCase#SAimpersonateDU2}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Invalid request. Specify tenantId or tenantName.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - RAC Imper GACAdefaultUser - xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - RAC Imper GACAdefaultUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestSuite#GACAdefaultUser1}"/>
&lt;/impersonation></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store tokenId2"><con:settings/><con:config><script>def tokenId2 = context.expand( '${POST - impersonateUser - RAC Imper GACAdefaultUser - xml#ResponseAsXml#declare namespace ns14=\'http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0\'; //ns14:access[1]/ns14:token[1]/@id}' )

log.info "get tokenId2: " + tokenId2 

testRunner.testCase.setPropertyValue("tokenId2", tokenId2)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - Endpoints RACImper GACAdef - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" methodName="List Endoints for a Token - listEndpointsForToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Endpoints RACImper GACAdef - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#tokenId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - Validate - RAC Imper GACAdefaultUser - xml"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - Validate - RAC Imper GACAdefaultUser - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns7:user[1]/@name</path><content>${#TestSuite#GACAdefaultuser1}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns14='http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0';
declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns14:impersonator[1]/@id</path><content>${#TestSuite#racker}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns14='http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0';
declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns14:impersonator[1]/ns7:roles[1]/ns7:role[1]/@id</path><content>9</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#tokenId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - Validate - RAC Imper GACAdefaultUser - 401 - xml"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - Validate - RAC Imper GACAdefaultUser - 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns7:user[1]/@name</path><content>${#TestSuite#GACAdefaultuser1}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns14='http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0';
declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns14:impersonator[1]/@id</path><content>${#TestSuite#racker}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns14='http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0';
declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns14:impersonator[1]/ns7:roles[1]/ns7:role[1]/@id</path><content>9</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#tokenId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="wait1"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants - RAC Imper GACAdefaultUser - 200 - xml"><con:settings/><con:config service="identity-admin" methodName="Get Tenants - listTenants" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants - RAC Imper GACAdefaultUser - 200 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - tenants - xml - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" disabled="true"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:tenants[1]/ns1:tenant)>1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#tokenId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles - RAC Imper GACAdefaultUser - 401 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Roles - listRoles" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles - RAC Imper GACAdefaultUser - 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#tokenId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - SA Imper CA Default User- xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - SA Imper CA Default User- xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestSuite#CAdefaultUser}"/>
&lt;/impersonation></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store SAimperCAuser"><con:settings/><con:config><script>def SAimperCAuser = context.expand( '${POST - impersonateUser - SA Imper CA Default User- xml#ResponseAsXml#declare namespace ns14=\'http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0\'; //ns14:access[1]/ns14:token[1]/@id}' )
log.info "get SAimperCAuser: " + SAimperCAuser
testRunner.testCase.setPropertyValue("SAimperCAuser", SAimperCAuser)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - Endpoints SAImper CAdef - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" methodName="List Endoints for a Token - listEndpointsForToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Endpoints SAImper CAdef - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#SAimperCAuser}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - Validate - SA Imper CAdefaultUser - xml"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - Validate - SA Imper CAdefaultUser - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns7:user[1]/@name</path><content>${#TestSuite#CAdefaultuser}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns14='http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0';
declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns14:impersonator[1]/@name</path><content>${#TestCase#SAusername}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns14='http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0';
declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns14:impersonator[1]/ns7:roles[1]/ns7:role[1]/@id</path><content>4</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#SAimperCAuser}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - Validate - SA Imper CAdefaultUser - 401 - xml"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - Validate - SA Imper CAdefaultUser - 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns7:user[1]/@name</path><content>${#TestSuite#CAdefaultuser}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns14='http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0';
declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns14:impersonator[1]/@name</path><content>${#TestCase#SAusername}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns14='http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0';
declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns14:impersonator[1]/ns7:roles[1]/ns7:role[1]/@id</path><content>4</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#SAimperCAuser}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants - SAimperCAdefaultUser - xml"><con:settings/><con:config service="identity-admin" methodName="Get Tenants - listTenants" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants - SAimperCAdefaultUser - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - tenants - xml - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#SAimperCAuser}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles - SAimperCAdefaultUser - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Roles - listRoles" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles - SAimperCAdefaultUser - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#SAimperCAuser}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Auth with tenant and CAdefaultUser token - SA - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Auth with tenant and CAdefaultUser token - SA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="${#TestCase#mossoId}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;token id="${#TestCase#CAuserTokenId}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Auth with tenant and Imp CAdefaultUser - SA - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Auth with tenant and Imp CAdefaultUser - SA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="${#TestCase#mossoId}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;token id="${#TestCase#SAimperCAuser}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Auth with invalid tenant and Imp CAdefaultUser - SA - xml" id="12ea9306-dc18-4931-bff3-6bbdd323c33a"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Auth with invalid tenant and Imp CAdefaultUser - SA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="Yd56dff" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;token id="${#TestCase#SAimperCAuser}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Auth with tenant null and Imp CAdefaultUser - SA - xml" id="bff06f8f-2a38-4962-85c2-5c32ac12a902"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Auth with tenant null and Imp CAdefaultUser - SA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;token id="${#TestCase#SAimperCAuser}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Auth with tenant empty string and Imp CAdefaultUser - SA - xml" id="9fd78a4e-fb40-447f-a4c6-f755d95f3c4d"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Auth with tenant empty string and Imp CAdefaultUser - SA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="   " xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;token id="${#TestCase#SAimperCAuser}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Auth with nastId and Imp CAdefaultUser - SA - xml" id="ace67490-cd28-4233-8a70-6f82cf922134"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Auth with nastId and Imp CAdefaultUser - SA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="${#TestCase#nastId}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;token id="${#TestCase#SAimperCAuser}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Racker Imper CA Default User- xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Racker Imper CA Default User- xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestSuite#CAdefaultUser}"/>
&lt;/impersonation></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store RACimperCAuser"><con:settings/><con:config><script>def RACimperCAuser = context.expand( '${POST - impersonateUser - Racker Imper CA Default User- xml#ResponseAsXml#declare namespace ns14=\'http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0\'; //ns14:access[1]/ns14:token[1]/@id}' )
log.info "get RACimperCAuser: " + RACimperCAuser
testRunner.testCase.setPropertyValue("RACimperCAuser", RACimperCAuser)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - Endpoints RACImper CAdef - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" methodName="List Endoints for a Token - listEndpointsForToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Endpoints RACImper CAdef - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#RACimperCAuser}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - Validate - RAC Imper CAdefaultUser - xml"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - Validate - RAC Imper CAdefaultUser - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns7:user[1]/@name</path><content>${#TestSuite#CAdefaultuser}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns14='http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0';
declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns14:impersonator[1]/@id</path><content>${#TestSuite#racker}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns14='http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0';
declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns14:impersonator[1]/ns7:roles[1]/ns7:role[1]/@id</path><content>9</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#RACimperCAuser}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - Validate - RAC Imper CAdefaultUser - 401 - xml"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - Validate - RAC Imper CAdefaultUser - 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns7:user[1]/@name</path><content>${#TestSuite#CAdefaultuser}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns14='http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0';
declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns14:impersonator[1]/@id</path><content>${#TestSuite#racker}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns14='http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0';
declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns14:impersonator[1]/ns7:roles[1]/ns7:role[1]/@id</path><content>9</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#RACimperCAuser}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants - RACimperCAdefaultUser - xml"><con:settings/><con:config service="identity-admin" methodName="Get Tenants - listTenants" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants - RACimperCAdefaultUser - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - tenants - xml - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#RACimperCAuser}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles - RACimperCAdefaultUser - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Roles - listRoles" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles - RACimperCAdefaultUser - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#RACimperCAuser}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Request - Json" id="1829b009-1245-4bc8-a8f5-88af6ff5c023"><con:settings/><con:config><script>def authWithTenantAndUserAdminJson = '{"auth": {"tenantId": "${#TestCase#mossoId}", "token": {"id": "${#TestCase#SAimpersonateUAtokenJson}"}}}'
testRunner.testCase.testSteps["POST - Auth with tenant and Imp User Admin - SA - json"].setPropertyValue("Request",authWithTenantAndUserAdminJson)

def authWithTenantAndServiceAdminGAdefaultUserJson = '{"auth": {"tenantId": "${#TestSuite#tenantId}", "token": {"id": "${#TestCase#SAimpersonateDU1Json}"}}}'
testRunner.testCase.testSteps["POST - Auth with tenant and Imp GAdefaultUser - SA - json"].setPropertyValue("Request",authWithTenantAndServiceAdminGAdefaultUserJson)

def authWithTenantAndServiceAdminGACAdefaultUserJson = '{"auth": {"tenantId": "${#TestSuite#tenantId}", "token": {"id": "${#TestCase#tokenId1Json}"}}}'
testRunner.testCase.testSteps["POST - Auth with tenant and Imp GACAdefaultUser - SA - json"].setPropertyValue("Request",authWithTenantAndServiceAdminGACAdefaultUserJson)

def authWithTenantAndServiceAdminCAdefaultUserJson = '{"auth": {"tenantId": "${#TestCase#mossoId}", "token": {"id": "${#TestCase#SAimperCAuserJson}"}}}'
testRunner.testCase.testSteps["POST - Auth with tenant and Imp CAdefaultUser - SA - json"].setPropertyValue("Request",authWithTenantAndServiceAdminCAdefaultUserJson)

def authWithTenantAndUserAdminToken = '{"auth": {"tenantId": "${#TestCase#mossoId}", "token": {"id": "${#TestCase#UAtokenId}"}}}'
testRunner.testCase.testSteps["POST - Auth with tenant and User Admin - SA - json"].setPropertyValue("Request",authWithTenantAndUserAdminToken)

def authWithTenantAndGAdefaultUserToken = '{"auth": {"tenantId": "${#TestSuite#tenantId}", "token": {"id": "${#TestCase#GAuserTokenId}"}}}'
testRunner.testCase.testSteps["POST - Auth with tenant and GAdefaultUser - SA - json"].setPropertyValue("Request",authWithTenantAndGAdefaultUserToken)

def authWithTenantAndGACAdefaultUserToken = '{"auth": {"tenantId": "${#TestSuite#tenantId}", "token": {"id": "${#TestCase#GACAuserTokenId}"}}}'
testRunner.testCase.testSteps["POST - Auth with tenant and GACAdefaultUser - SA - json"].setPropertyValue("Request",authWithTenantAndGACAdefaultUserToken)

def authWithTenantAndCAdefaultUserToken = '{"auth": {"tenantId": "${#TestCase#mossoId}", "token": {"id": "${#TestCase#CAuserTokenId}"}}}'
testRunner.testCase.testSteps["POST - Auth with tenant and CAdefaultUser - SA - json"].setPropertyValue("Request",authWithTenantAndCAdefaultUserToken)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - SA Imper CA Admin - json"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - SA Imper CA Admin - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestSuite#username}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Racker Imper CA Admin - json"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Racker Imper CA Admin - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestSuite#username}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenIdJson}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - SA Imper GA Admin - json"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - SA Imper GA Admin - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestSuite#username}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Racker Imper GA Admin - json"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Racker Imper GA Admin - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestSuite#username}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenIdJson}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - SA Imper UA - json"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - SA Imper UA - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestSuite#UAusername}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store SAimpersonateUAtokenJson"><con:settings/><con:config><script>//def SAimpersonateUAtokenJson = context.expand( '${POST - impersonateUser - SA Imper UA - json#ResponseAsXml#declare namespace ns1=\'${#Project#EndpointJson}/${#Project#path}/RAX-AUTH/impersonation-tokens\'; //ns1:Response[1]/ns1:access[1]/ns1:token[1]/ns1:id[1]}' )
def SAimpersonateUAtokenJson = context.expand( '${POST - impersonateUser - SA Imper UA - json#ResponseAsXml#declare namespace ns1=\'https://d-api1.cidm.iad2.corp.rackspace.com/cloud/v2.0/RAX-AUTH/impersonation-tokens\'; //ns1:Response[1]/ns1:access[1]/ns1:token[1]/ns1:id[1]}' )
log.info "get SAimpersonateUAtokenJson: " + SAimpersonateUAtokenJson
testRunner.testCase.setPropertyValue("SAimpersonateUAtokenJson", SAimpersonateUAtokenJson)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - Endpoints SA Impr UA - json"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" methodName="List Endoints for a Token - listEndpointsForToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Endpoints SA Impr UA - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#SAimpersonateUAtokenJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - Validate - SA Imper UA - json"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - Validate - SA Imper UA - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>token</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>roles</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 2"><con:configuration><token>${#TestCase#SAimpersonateUAtokenJson}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 3"><con:configuration><token>"RAX-AUTH:impersonator":{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#SAimpersonateUAtokenJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - Validate - SA Imper UA - 401 - json" id="18bd5bbd-c81a-4812-bf9e-a4699f8e54b1"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - Validate - SA Imper UA - 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#SAimpersonateUAtokenJson}"/>
  <con:entry key="X-Auth-Token" value="12345"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants - SAimpersonateUAtoken - 200 - json"><con:settings/><con:config service="identity-admin" methodName="Get Tenants - listTenants" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants - SAimpersonateUAtoken - 200 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - tenants - xml - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>"tenants":[{"id"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" disabled="true"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/tenants';
count(//ns1:Response[1]/ns1:tenants[1]/ns1:e)>1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#SAimpersonateUAtokenJson}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles - SAimpersonateUAtoken - 403 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Roles - listRoles" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles - SAimpersonateUAtoken - 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#SAimpersonateUAtokenJson}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Auth with tenant and User Admin - SA - json" id="42abd525-5969-40e0-8f1b-77e310992778"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Auth with tenant and User Admin - SA - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"auth": {"tenantId": "${#TestCase#mossoId}", "token": {"id": "${#TestCase#UAtokenId}"}}}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Auth with tenant and Imp User Admin - SA - json" id="a3b246e1-4e89-46a3-9901-76fba68a16f9"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Auth with tenant and Imp User Admin - SA - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"auth": {"tenantId": "${#TestCase#mossoId}", "token": {"id": "${#TestCase#SAimpersonateUAtokenJson}"}}}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - RAC Imper UA - json"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - RAC Imper UA - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestSuite#UAusername}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenIdJson}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store UAtokenIdJson"><con:settings/><con:config><script>//def UAtokenIdJson = context.expand( '${POST - impersonateUser - RAC Imper UA - json#ResponseAsXml#declare namespace ns1=\'${#Project#EndpointJson}/${#Project#path}/RAX-AUTH/impersonation-tokens\'; //ns1:Response[1]/ns1:access[1]/ns1:token[1]/ns1:id[1]}' )
def UAtokenIdJson = context.expand( '${POST - impersonateUser - RAC Imper UA - json#ResponseAsXml#declare namespace ns1=\'https://d-api1.cidm.iad2.corp.rackspace.com/cloud/v2.0/RAX-AUTH/impersonation-tokens\'; //ns1:Response[1]/ns1:access[1]/ns1:token[1]/ns1:id[1]}' )

log.info "get UAtokenIdJson: " + UAtokenIdJson 

testRunner.testCase.setPropertyValue("UAtokenIdJson", UAtokenIdJson)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - Endpoints RAC Impr UA - json"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" methodName="List Endoints for a Token - listEndpointsForToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Endpoints RAC Impr UA - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#UAtokenIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - Validate - RAC Imper UA - json"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - Validate - RAC Imper UA - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>token</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>roles</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 2"><con:configuration><token>${#TestCase#UAtokenIdJson}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 3"><con:configuration><token>"RAX-AUTH:impersonator":{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#UAtokenIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - Validate - RAC Imper UA - 401 - json" id="fbfac6fe-76a5-46a6-821d-bff9e8a7b8f6"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - Validate - RAC Imper UA - 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#UAtokenIdJson}"/>
  <con:entry key="X-Auth-Token" value="12345"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants - RAC Imper UA - 200 - json"><con:settings/><con:config service="identity-admin" methodName="Get Tenants - listTenants" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants - RAC Imper UA - 200 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - tenants - xml - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>"tenants":[{"id"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" disabled="true"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/tenants';
count(//ns1:Response[1]/ns1:tenants[1]/ns1:e)>=1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#UAtokenIdJson}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles - RAC Imper UA - 403 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Roles - listRoles" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles - RAC Imper UA - 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#UAtokenIdJson}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - SA Imper GAdefaultUser - json"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - SA Imper GAdefaultUser - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestSuite#GAdefaultUser}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store SAimpersonateDU1Json"><con:settings/><con:config><script>//def SAimpersonateDU1Json = context.expand( '${POST - impersonateUser - SA Imper GAdefaultUser - json#ResponseAsXml#declare namespace ns1=\'${#Project#EndpointJson}/${#Project#path}/RAX-AUTH/impersonation-tokens\'; //ns1:Response[1]/ns1:access[1]/ns1:token[1]/ns1:id[1]}' )
def SAimpersonateDU1Json = context.expand( '${POST - impersonateUser - SA Imper GAdefaultUser - json#ResponseAsXml#declare namespace ns1=\'https://d-api1.cidm.iad2.corp.rackspace.com/cloud/v2.0/RAX-AUTH/impersonation-tokens\'; //ns1:Response[1]/ns1:access[1]/ns1:token[1]/ns1:id[1]}' )

log.info "get SAimpersonateDU1Json:" + SAimpersonateDU1Json
testRunner.testCase.setPropertyValue("SAimpersonateDU1Json", SAimpersonateDU1Json)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - EndpointsSA Impr GADefuser - json"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" methodName="List Endoints for a Token - listEndpointsForToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - EndpointsSA Impr GADefuser - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#SAimpersonateDU1Json}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - Validate - SA Imper GAdefaultUser - json"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - Validate - SA Imper GAdefaultUser - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>token</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>roles</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 2"><con:configuration><token>${#TestCase#SAimpersonateDU1Json}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 3"><con:configuration><token>"RAX-AUTH:impersonator":{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#SAimpersonateDU1Json}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - Validate - SA Imper GAdefaultUser - 401 - json" id="5b91808e-4e71-4244-8fc6-12cf8bdb251a"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - Validate - SA Imper GAdefaultUser - 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#SAimpersonateDU1Json}"/>
  <con:entry key="X-Auth-Token" value="12345"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants - SA Imper GAdefaultUser - 200 - json"><con:settings/><con:config service="identity-admin" methodName="Get Tenants - listTenants" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants - SA Imper GAdefaultUser - 200 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - tenants - xml - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>"tenants":[{"id"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" disabled="true"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/tenants';
count(//ns1:Response[1]/ns1:tenants[1]/ns1:e)>1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#SAimpersonateDU1Json}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles - SA Imper GAdefaultUser - 401 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Roles - listRoles" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles - SA Imper GAdefaultUser - 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#SAimpersonateDU1Json}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Auth with tenant and GAdefaultUser - SA - json" id="86755bb5-3681-4131-81c0-ec03f4495e93"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Auth with tenant and GAdefaultUser - SA - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"auth": {"tenantId": "${#TestSuite#tenantId}", "token": {"id": "${#TestCase#GAuserTokenId}"}}}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Auth with tenant and Imp GAdefaultUser - SA - json"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Auth with tenant and Imp GAdefaultUser - SA - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"auth": {"tenantId": "${#TestSuite#tenantId}", "token": {"id": "${#TestCase#SAimpersonateDU1Json}"}}}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - RAC Imper GAdefaultUser - json"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - RAC Imper GAdefaultUser - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestSuite#GAdefaultUser}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenIdJson}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store tokenId1Json"><con:settings/><con:config><script>//def tokenId1Json = context.expand( '${POST - impersonateUser - RAC Imper GAdefaultUser - json#ResponseAsXml#declare namespace ns1=\'${#Project#EndpointJson}/${#Project#path}/RAX-AUTH/impersonation-tokens\'; //ns1:Response[1]/ns1:access[1]/ns1:token[1]/ns1:id[1]}' )

def tokenId1Json = context.expand( '${POST - impersonateUser - RAC Imper GAdefaultUser - json#ResponseAsXml#declare namespace ns1=\'https://d-api1.cidm.iad2.corp.rackspace.com/cloud/v2.0/RAX-AUTH/impersonation-tokens\'; //ns1:Response[1]/ns1:access[1]/ns1:token[1]/ns1:id[1]}' )

log.info "get tokenId1Json: " + tokenId1Json 

testRunner.testCase.setPropertyValue("tokenId1Json", tokenId1Json)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - Endpoints RACImpr GADefuser - json"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" methodName="List Endoints for a Token - listEndpointsForToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Endpoints RACImpr GADefuser - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#tokenId1Json}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - Validate - RAC Imper GAdefaultUser - json"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - Validate - RAC Imper GAdefaultUser - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>token</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>roles</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 2"><con:configuration><token>"RAX-AUTH:impersonator":{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#tokenId1Json}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - Validate - RAC Imper GAdefaultUser - 401 - json" id="b06a3344-1acc-4467-b42f-68feeda3bc58"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - Validate - RAC Imper GAdefaultUser - 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#tokenId1Json}"/>
  <con:entry key="X-Auth-Token" value="12345"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants - RAC Imper GAdefaultUser - 200 - json"><con:settings/><con:config service="identity-admin" methodName="Get Tenants - listTenants" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants - RAC Imper GAdefaultUser - 200 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - tenants - xml - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>"tenants":[{"id"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" disabled="true"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#Path}/tenants';
count(//ns1:Response[1]/ns1:tenants[1]/ns1:e)>1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#tokenId1json}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles - RAC Imper GAdefaultUser - 401 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Roles - listRoles" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles - RAC Imper GAdefaultUser - 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#tokenId1json}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - SA Imper GACAdefaultUser - json"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - SA Imper GACAdefaultUser - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestSuite#GACAdefaultUser1}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store SAimpersonateDU2Json"><con:settings/><con:config><script>//def SAimpersonateDU2Json = context.expand( '${POST - impersonateUser - SA Imper GACAdefaultUser - json#ResponseAsXml#declare namespace ns1=\'${#Project#EndpointJson}/${#Project#path}/RAX-AUTH/impersonation-tokens\'; //ns1:Response[1]/ns1:access[1]/ns1:token[1]/ns1:id[1]}' )

def SAimpersonateDU2Json = context.expand( '${POST - impersonateUser - SA Imper GACAdefaultUser - json#ResponseAsXml#declare namespace ns1=\'https://d-api1.cidm.iad2.corp.rackspace.com/cloud/v2.0/RAX-AUTH/impersonation-tokens\'; //ns1:Response[1]/ns1:access[1]/ns1:token[1]/ns1:id[1]}' )

log.info "get SAimpersonateDU2Json: " + SAimpersonateDU2Json
testRunner.testCase.setPropertyValue("SAimpersonateDU2Json", SAimpersonateDU2Json)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - Endpoints SAImpr GACADefuser - json"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" methodName="List Endoints for a Token - listEndpointsForToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Endpoints SAImpr GACADefuser - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#SAimpersonateDU2Json}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - Validate - SA Imper GACAdefaultUser - json"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - Validate - SA Imper GACAdefaultUser - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>token</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>roles</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 2"><con:configuration><token>${#TestCase#SAimpersonateDU2Json}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 3"><con:configuration><token>"RAX-AUTH:impersonator":{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#SAimpersonateDU2Json}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - Validate - SA Imper GACAdefaultUser - 401 - json" id="f78f8538-ff7a-4d40-ae5b-81ff098fbef9"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - Validate - SA Imper GACAdefaultUser - 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#SAimpersonateDU2Json}"/>
  <con:entry key="X-Auth-Token" value="12345"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants - SAimpersonateGACAdefaultUser - 200 - json"><con:settings/><con:config service="identity-admin" methodName="Get Tenants - listTenants" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants - SAimpersonateGACAdefaultUser - 200 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - tenants - xml - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" disabled="true"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:tenants[1]/ns1:tenant)>1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#SAimpersonateDU2Json}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles - SAimpersonateGACAdefaultUser - 401 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Roles - listRoles" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles - SAimpersonateGACAdefaultUser - 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#SAimpersonateDU2Json}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Auth with tenant and GACAdefaultUser - SA - json" id="d9634b91-5a78-4e85-9bb9-9b370d56f04c"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Auth with tenant and GACAdefaultUser - SA - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"auth": {"tenantId": "${#TestSuite#tenantId}", "token": {"id": "${#TestCase#GACAuserTokenId}"}}}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Auth with tenant and Imp GACAdefaultUser - SA - json" id="42893b38-4f46-4127-a5e5-ad1cd6275ea3"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Auth with tenant and Imp GACAdefaultUser - SA - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"auth": {"tenantId": "${#TestSuite#tenantId}", "token": {"id": "${#TestCase#tokenId1Json}"}}}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - RAC Imper GACAdefaultUser - json"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - RAC Imper GACAdefaultUser - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestSuite#GACAdefaultUser1}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenIdJson}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store tokenId2Json"><con:settings/><con:config><script>//def tokenId2Json = context.expand( '${POST - impersonateUser - RAC Imper GACAdefaultUser - json#ResponseAsXml#declare namespace ns1=\'${#Project#EndpointJson}/${#Project#path}/RAX-AUTH/impersonation-tokens\'; //ns1:Response[1]/ns1:access[1]/ns1:token[1]/ns1:id[1]}' )
def tokenId2Json = context.expand( '${POST - impersonateUser - RAC Imper GACAdefaultUser - json#ResponseAsXml#declare namespace ns1=\'https://d-api1.cidm.iad2.corp.rackspace.com/cloud/v2.0/RAX-AUTH/impersonation-tokens\'; //ns1:Response[1]/ns1:access[1]/ns1:token[1]/ns1:id[1]}' )

log.info "get tokenId2Json: " + tokenId2Json

testRunner.testCase.setPropertyValue("tokenId2Json", tokenId2Json)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - Endpoints RACImpr GACADefuser - json"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" methodName="List Endoints for a Token - listEndpointsForToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Endpoints RACImpr GACADefuser - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#tokenId2Json}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - Validate - RAC Imper GACAdefaultUser - json"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - Validate - RAC Imper GACAdefaultUser - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>token</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>roles</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 2"><con:configuration><token>"RAX-AUTH:impersonator":{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#tokenId2Json}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - Validate - RAC Imper GACAdefaultUser - 401 - json" id="1eff2849-f657-47ae-b144-3d2576156719"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - Validate - RAC Imper GACAdefaultUser - 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#tokenId2Json}"/>
  <con:entry key="X-Auth-Token" value="12345"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants - RAC Imper GACAdefaultUser - 200 - json"><con:settings/><con:config service="identity-admin" methodName="Get Tenants - listTenants" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants - RAC Imper GACAdefaultUser - 200 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - tenants - xml - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" disabled="true"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:tenants[1]/ns1:tenant)>1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#tokenId2json}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles - RAC Imper GACAdefaultUser - 401 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Roles - listRoles" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles - RAC Imper GACAdefaultUser - 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#tokenId2json}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - SA Imper CA Default User - json"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - SA Imper CA Default User - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestSuite#CAdefaultUser}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store SAimperCAuserJson"><con:settings/><con:config><script>//def SAimperCAuserJson = context.expand( '${POST - impersonateUser - SA Imper CA Default User - json#ResponseAsXml#declare namespace ns1=\'${#Project#EndpointJson}/${#Project#path}/RAX-AUTH/impersonation-tokens\'; //ns1:Response[1]/ns1:access[1]/ns1:token[1]/ns1:id[1]}' )
def SAimperCAuserJson = context.expand( '${POST - impersonateUser - SA Imper CA Default User - json#ResponseAsXml#declare namespace ns1=\'https://d-api1.cidm.iad2.corp.rackspace.com/cloud/v2.0/RAX-AUTH/impersonation-tokens\'; //ns1:Response[1]/ns1:access[1]/ns1:token[1]/ns1:id[1]}' )

log.info "get SAimperCAuserJson: " + SAimperCAuserJson
testRunner.testCase.setPropertyValue("SAimperCAuserJson", SAimperCAuserJson)
</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - Endpoints SAImpr CADefuser - json"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" methodName="List Endoints for a Token - listEndpointsForToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Endpoints SAImpr CADefuser - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#SAimperCAuserJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - Validate - SA Imper CA Default User - json"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - Validate - SA Imper CA Default User - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>token</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>roles</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 2"><con:configuration><token>${#TestCase#SAimperCAuserJson}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 3"><con:configuration><token>"RAX-AUTH:impersonator":{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#SAimperCAuserJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - Validate - SA Imper CA Default User - 401 - json" id="947960e0-2689-4c32-86e8-8698b98cee54"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - Validate - SA Imper CA Default User - 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>token</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>roles</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 2"><con:configuration><token>${#TestCase#SAimperCAuserJson}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 3"><con:configuration><token>"RAX-AUTH:impersonator":{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#SAimperCAuserJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants - SA Imper CA Default User - 200 - json"><con:settings/><con:config service="identity-admin" methodName="Get Tenants - listTenants" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants - SA Imper CA Default User - 200 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - tenants - xml - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#SAimperCAuserJson}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles - SA Imper CA Default User - 403 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Roles - listRoles" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles - SA Imper CA Default User - 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#SAimperCAuserJson}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Auth with tenant and CAdefaultUser - SA - json" id="f394cdfa-23de-4f26-a604-a1873f556bed"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Auth with tenant and CAdefaultUser - SA - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"auth": {"tenantId": "${#TestCase#mossoId}", "token": {"id": "${#TestCase#CAuserTokenId}"}}}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Auth with tenant and Imp CAdefaultUser - SA - json" id="5017d70a-b1ac-4dc4-b5b5-8490d8e64e48"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Auth with tenant and Imp CAdefaultUser - SA - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"auth": {"tenantId": "${#TestCase#mossoId}", "token": {"id": "${#TestCase#SAimperCAuserJson}"}}}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Auth with nastId and Imp CAdefaultUser - SA - json" id="8e448144-f4ef-436d-8520-4fe6c997d295"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Auth with nastId and Imp CAdefaultUser - SA - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"auth": {"tenantId": "${#TestCase#nastId}", "token": {"id": "${#TestCase#SAimperCAuserJson}"}}}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - RAC Imper CA Default User - json"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - RAC Imper CA Default User - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestSuite#CAdefaultUser}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store RACimperCAdefaultUserJson"><con:settings/><con:config><script>//def RACimperCAdefaultUserJson = context.expand( '${POST - impersonateUser - RAC Imper CA Default User - json#ResponseAsXml#declare namespace ns1=\'${#Project#EndpointJson}/${#Project#path}/RAX-AUTH/impersonation-tokens\'; //ns1:Response[1]/ns1:access[1]/ns1:token[1]/ns1:id[1]}' )
def RACimperCAdefaultUserJson = context.expand( '${POST - impersonateUser - RAC Imper CA Default User - json#ResponseAsXml#declare namespace ns1=\'https://d-api1.cidm.iad2.corp.rackspace.com/cloud/v2.0/RAX-AUTH/impersonation-tokens\'; //ns1:Response[1]/ns1:access[1]/ns1:token[1]/ns1:id[1]}' )

log.info "get RACimperCAdefaultUserJson: " + RACimperCAdefaultUserJson
testRunner.testCase.setPropertyValue("RACimperCAdefaultUserJson",RACimperCAdefaultUserJson)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - Endpoints RAC Impr CADefuser - json"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" methodName="List Endoints for a Token - listEndpointsForToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Endpoints RAC Impr CADefuser - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#RACimperCAdefaultUserJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - Validate - RAC Imper CA Default User - json"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - Validate - RAC Imper CA Default User - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>token</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>roles</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 2"><con:configuration><token>${#TestCase#RACimperCAdefaultUserJson}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 3"><con:configuration><token>"RAX-AUTH:impersonator":{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#RACimperCAdefaultUserJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - Validate - RAC Imper CA Default User - 401 - json" id="3950aec7-333b-4796-909b-dae877b05dc4"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - Validate - RAC Imper CA Default User - 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#RACimperCAdefaultUserJson}"/>
  <con:entry key="X-Auth-Token" value="12345"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants - RAC Imper CA Default User - 200 - json"><con:settings/><con:config service="identity-admin" methodName="Get Tenants - listTenants" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants - RAC Imper CA Default User - 200 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - tenants - xml - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#RACimperCAdefaultUserJson}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRoles - RAC Imper CA Default User - 403 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Roles - listRoles" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRoles - RAC Imper CA Default User - 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#RACimperCAdefaultUserJson}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUser - disabled - userAdmin - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user - updateUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUser - disabled - userAdmin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:user enabled="false" id="${#TestSuite#UAuserId}" username="${#TestSuite#UAusername}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#newemail}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#UAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - SA Imper UA AfterDisabled - xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - SA Imper UA AfterDisabled - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestSuite#UAusername}"/>
&lt;/impersonation></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User cannot be impersonated; User is not enabled</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - SA Imper UA After Disabled - json"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - SA Imper UA After Disabled - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestSuite#UAusername}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User cannot be impersonated; User is not enabled</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - RAC Imper UA AfterDisabled - xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - RAC Imper UA AfterDisabled - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestSuite#UAusername}"/>
&lt;/impersonation></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User cannot be impersonated; User is not enabled</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - RAC Imper UA After Disabled - json"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - RAC Imper UA After Disabled - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestSuite#UAusername}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User cannot be impersonated; User is not enabled</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUser - enabled - userAdmin - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user - updateUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUser - enabled - userAdmin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:user enabled="true" id="${#TestSuite#UAuserId}" username="${#TestSuite#UAusername}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#newemail}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#UAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - SA Imper UA AfterEnabled - xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - SA Imper UA AfterEnabled - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestSuite#UAusername}"/>
&lt;/impersonation></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - SA Imper UA After Enabled - json" id="1409473b-6ebd-455d-b9ba-415f5b81c8bd"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - SA Imper UA After Enabled - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestSuite#UAusername}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User cannot be impersonated; User is not enabled</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - RAC Imper UA After Enabled - xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - RAC Imper UA After Enabled - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestSuite#UAusername}"/>
&lt;/impersonation></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - RAC Imper UA After Enabled - json" id="a12e03c6-9a72-47ff-81da-397c6ca5eb1e"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - RAC Imper UA After Enabled - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestSuite#UAusername}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User cannot be impersonated; User is not enabled</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store RACImperUA"><con:settings/><con:config><script>def RACimperUA = context.expand( '${POST - impersonateUser - RAC Imper UA After Enabled - xml#ResponseAsXml#declare namespace ns1=\'http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info "get RACimperUA: " + RACimperUA
testRunner.testCase.testSuite.setPropertyValue("RACimperUA", RACimperUA)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - Endpoints Imp Enabled UA - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" methodName="List Endoints for a Token - listEndpointsForToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Endpoints Imp Enabled UA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#RACimperUA}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUser - disabled - GAdefaultUser - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user - updateUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUser - disabled - GAdefaultUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:user enabled="false" id="${#TestSuite#GAonlyUserId}" username="${#TestSuite#GAdefaultUser}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#newemail}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#GAonlyUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - SA Imper GAdefaultUser AfterDisabled - xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - SA Imper GAdefaultUser AfterDisabled - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestSuite#GAdefaultUser}"/>
&lt;/impersonation></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User cannot be impersonated; User is not enabled</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - SA Imper GAdefaultUser After Disabled - json"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - SA Imper GAdefaultUser After Disabled - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestSuite#GAdefaultUser}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User cannot be impersonated; User is not enabled</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - RAC Imper GAdefaultUser AfterDisabled - xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - RAC Imper GAdefaultUser AfterDisabled - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestSuite#GAdefaultUser}"/>
&lt;/impersonation></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - RAC Imper GAdefaultUser After Disabled - json"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - RAC Imper GAdefaultUser After Disabled - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestSuite#GAdefaultUser}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User cannot be impersonated; User is not enabled</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUser - enabled - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user - updateUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUser - enabled - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:user enabled="true" id="${#TestSuite#GAonlyUserId}" username="${#TestSuite#GAdefaultUser}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#newemail}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#GAonlyUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - SA Imper GAdefaultUser AfterEnabled - xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - SA Imper GAdefaultUser AfterEnabled - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestSuite#GAdefaultUser}"/>
&lt;/impersonation></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - SA Imper GAdefaultUser After Enabled - json"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - SA Imper GAdefaultUser After Enabled - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestSuite#GAdefaultUser}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - RAC Imper GAdefaultUser AfterEnabled - xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - RAC Imper GAdefaultUser AfterEnabled - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestSuite#GAdefaultUser}"/>
&lt;/impersonation></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - RAC Imper GAdefaultUser After Enabled - json"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - RAC Imper GAdefaultUser After Enabled - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestSuite#GAdefaultUser}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store tokenId3"><con:settings/><con:config><script>def tokenId3 = context.expand( '${POST - impersonateUser - RAC Imper GAdefaultUser AfterEnabled - xml#ResponseAsXml#declare namespace ns14=\'http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0\'; //ns14:access[1]/ns14:token[1]/@id}' )
log.info "get tokenId3: " + tokenId3
testRunner.testCase.testSuite.setPropertyValue("tokenId3",tokenId3)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - Endpoints RAC Impr Enabled GADefUser - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" methodName="List Endoints for a Token - listEndpointsForToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Endpoints RAC Impr Enabled GADefUser - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId3}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUser - disabled - GACAdefaultUser - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user - updateUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUser - disabled - GACAdefaultUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:user enabled="false" id="${#TestSuite#FAuserId}" username="${#TestSuite#GACAdefaultUser1}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#newemail}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#FAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>3000</delay></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - SA Imper GACAdefaultUser AfterDisabled - xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - SA Imper GACAdefaultUser AfterDisabled - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestSuite#GACAdefaultUser1}"/>
&lt;/impersonation></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User cannot be impersonated; User is not enabled</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - SA Imper GACAdefaultUser After Disabled - json"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - SA Imper GACAdefaultUser After Disabled - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestSuite#GACAdefaultUser1}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User cannot be impersonated; User is not enabled</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - RAC Imper GACAdefaultUser AfterDisabled - xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - RAC Imper GACAdefaultUser AfterDisabled - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestSuite#GACAdefaultUser1}"/>
&lt;/impersonation></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - RAC Imper GACAdefaultUser After Disabled - json"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - RAC Imper GACAdefaultUser After Disabled - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestSuite#GACAdefaultUser1}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User cannot be impersonated; User is not enabled</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUser - enabled - defaultUser2 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user - updateUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUser - enabled - defaultUser2 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:user enabled="true" id="${#TestSuite#FAuserId}" username="${#TestSuite#GACAdefaultUser1}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#newemail}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#FAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - SA Imper GACAdefaultUser AfterEnabled - xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - SA Imper GACAdefaultUser AfterEnabled - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestSuite#GACAdefaultUser1}"/>
&lt;/impersonation></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - SA Imper GACAdefaultUser After Enabled - json"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - SA Imper GACAdefaultUser After Enabled - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestSuite#GACAdefaultUser1}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - RAC Imper GACAdefaultUser AfterEnabled - xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - RAC Imper GACAdefaultUser AfterEnabled - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestSuite#GACAdefaultUser1}"/>
&lt;/impersonation></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - RAC Imper GACAdefaultUser After Enabled - json"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - RAC Imper GACAdefaultUser After Enabled - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestSuite#GACAdefaultUser1}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store tokenId4"><con:settings/><con:config><script>def tokenId4 = context.expand( '${POST - impersonateUser - RAC Imper GACAdefaultUser AfterEnabled - xml#ResponseAsXml#declare namespace ns14=\'http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0\'; //ns14:access[1]/ns14:token[1]/@id}' )
log.info "get tokenId4: " + tokenId4
testRunner.testCase.testSuite.setPropertyValue("tokenId4", tokenId4)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - Endpoints RAC Impr Enabled GACADefUser - json"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" methodName="List Endoints for a Token - listEndpointsForToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Endpoints RAC Impr Enabled GACADefUser - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId4}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Endpoints RAC Impr Enabled GACADefUser  invalid Auth 401 - xml" id="5695c0f9-7d85-49b8-a524-91cc4d8ff09e"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" methodName="List Endoints for a Token - listEndpointsForToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Endpoints RAC Impr Enabled GACADefUser  invalid Auth 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId4}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}34"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Endpoints RAC Impr Enabled GACADefUser  invalid Auth 401 - json"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" methodName="List Endoints for a Token - listEndpointsForToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Endpoints RAC Impr Enabled GACADefUser  invalid Auth 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId4}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}34"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Endpoints RAC Impr Enabled GACADefUser /w own token 403 - xml" id="3961e3a0-3a9c-466e-b7a2-ee8c8bda4585"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" methodName="List Endoints for a Token - listEndpointsForToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Endpoints RAC Impr Enabled GACADefUser /w own token 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId4}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId4}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Endpoints RAC Impr Enabled GACADefUser /w own token 403 - json"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" methodName="List Endoints for a Token - listEndpointsForToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Endpoints RAC Impr Enabled GACADefUser /w own token 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId4}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId4}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUser - disabled - CAdefaultUser - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user - updateUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUser - disabled - CAdefaultUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:user enabled="false" id="${#TestSuite#CAuserId}" username="${#TestSuite#CAdefaultUser}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#newemail}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#CAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - SA Imper CAdefaultUser After Disabled - xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - SA Imper CAdefaultUser After Disabled - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestSuite#CAdefaultUser}"/>
&lt;/impersonation></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User cannot be impersonated; User is not enabled</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - SA Imper CAdefaultUser After Disabled - json" id="261ba9eb-5d07-4a8b-b7a7-7feae8663995"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - SA Imper CAdefaultUser After Disabled - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestSuite#CAdefaultUser}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User cannot be impersonated; User is not enabled</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - RAC Imper CAdefaultUser After Disabled - xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - RAC Imper CAdefaultUser After Disabled - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestSuite#CAdefaultUser}"/>
&lt;/impersonation></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User cannot be impersonated; User is not enabled</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - RAC Imper CAdefaultUser After Disabled - json"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - RAC Imper CAdefaultUser After Disabled - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestSuite#CAdefaultUser}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User cannot be impersonated; User is not enabled</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUser - enabled - CAdefaultUser - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user - updateUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUser - enabled - CAdefaultUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:user enabled="true" id="${#TestSuite#CAuserId}" username="${#TestSuite#CAdefaultUser}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#newemail}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#CAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - SA Imper CAdefaultUser AfterEnabled - xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - SA Imper CAdefaultUser AfterEnabled - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestSuite#CAdefaultUser}"/>
&lt;/impersonation></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - SA Imper CAdefaultUser After Enabled - json"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - SA Imper CAdefaultUser After Enabled - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestSuite#CAdefaultUser}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - RAC Imper CAdefaultUser AfterEnabled - xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - RAC Imper CAdefaultUser AfterEnabled - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestSuite#CAdefaultUser}"/>
&lt;/impersonation></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - RAC Imper CAdefaultUser After Enabled - json"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - RAC Imper CAdefaultUser After Enabled - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestSuite#CAdefaultUser}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>applicationId</con:name><con:value>1bb759a40d7e4c9946e9e0cb99a43e9997737be7</con:value></con:property><con:property><con:name>applicationSecret</con:name><con:value>244649cde0f62c0043ef664de6777603b1c37a63</con:value></con:property><con:property><con:name>tokenId</con:name><con:value>6348cb5f897f4fae8a2eb1327abb9f8f</con:value></con:property><con:property><con:name>appName</con:name><con:value>foundApp5</con:value></con:property><con:property><con:name>appNameJson</con:name><con:value>foundApp6</con:value></con:property><con:property><con:name>applicationIdJson</con:name><con:value>e928e26acafdc07ebda9ccdcdf545c07d098594a</con:value></con:property><con:property><con:name>applicationSecretJson</con:name><con:value>6b66ebcbd3ccd81b33635488fddafe16d7db7933</con:value></con:property><con:property><con:name>SAuserId</con:name><con:value>10012324</con:value></con:property><con:property><con:name>SAusername</con:name><con:value>cloudfiles</con:value></con:property><con:property><con:name>SApassword</con:name><con:value>Ud2ack8hibJ5bje2lks</con:value></con:property><con:property><con:name>SAtokenId</con:name><con:value>da8a0c332b444e74bcf0ed9d1fd9ee01</con:value></con:property><con:property><con:name>SAimpersonateUAtoken</con:name><con:value>3588f0cbcafb4bd2adb467732e6e0b84</con:value></con:property><con:property><con:name>SAimpersonateDU1</con:name><con:value>71b9bf43d7db4c7fab65022935c78dca</con:value></con:property><con:property><con:name>SAimpersonateDU2</con:name><con:value>1429760f39f74498bc8aa31833931c45</con:value></con:property><con:property><con:name>SAimpersonateUAtokenJson</con:name><con:value>3588f0cbcafb4bd2adb467732e6e0b84</con:value></con:property><con:property><con:name>SAimpersonateDU1Json</con:name><con:value>71b9bf43d7db4c7fab65022935c78dca</con:value></con:property><con:property><con:name>SAimpersonateDU2Json</con:name><con:value>1429760f39f74498bc8aa31833931c45</con:value></con:property><con:property><con:name>userName</con:name><con:value>userAdmin</con:value></con:property><con:property><con:name>key</con:name><con:value>ba04b108b7cefcbcbf7c4d8bd05e3857</con:value></con:property><con:property><con:name>mossoId</con:name><con:value>5800602</con:value></con:property><con:property><con:name>nastId</con:name><con:value>StagingUS_6736c13b-5ab6-4345-b96a-41b156c68360</con:value></con:property><con:property><con:name>userId</con:name><con:value>185948</con:value></con:property><con:property><con:name>userName2</con:name><con:value>defaultUser</con:value></con:property><con:property><con:name>testEmail</con:name><con:value>testUser1@rackspace.com</con:value></con:property><con:property><con:name>RACimperUA</con:name><con:value>24ca682ad186435a8ed7a26f94d58366</con:value></con:property><con:property><con:name>userId1</con:name><con:value/></con:property><con:property><con:name>UAtokenId</con:name><con:value>7fa44b8968ab408b893c267c94df91d3</con:value></con:property><con:property><con:name>DUusername</con:name><con:value>GACAdefaultUser</con:value></con:property><con:property><con:name>DUpassword</con:name><con:value>dIX5oON6</con:value></con:property><con:property><con:name>UAuserId</con:name><con:value>186189</con:value></con:property><con:property><con:name>tokenId1</con:name><con:value>2584fb96880f4144828a052b205325b6</con:value></con:property><con:property><con:name>tokenId2</con:name><con:value>3cb9003cc55e4072a7fbdf23fba32d73</con:value></con:property><con:property><con:name>UAtokenIdJson</con:name><con:value>7fa44b8968ab408b893c267c94df91d3</con:value></con:property><con:property><con:name>tokenId1Json</con:name><con:value>2584fb96880f4144828a052b205325b6</con:value></con:property><con:property><con:name>tokenId2Json</con:name><con:value>3cb9003cc55e4072a7fbdf23fba32d73</con:value></con:property><con:property><con:name>DU1userId</con:name><con:value>187492</con:value></con:property><con:property><con:name>CAuserId</con:name><con:value>187493</con:value></con:property><con:property><con:name>CAusername</con:name><con:value>CAdefaultUser</con:value></con:property><con:property><con:name>CApassword</con:name><con:value>cl9IxV1R</con:value></con:property><con:property><con:name>addUserCredentials</con:name><con:value>&lt;apiKeyCredentials xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0" username="${#TestCase#CAusername}" apiKey="7e4a5dda01d9f447695b5ff476a6788f"/> </con:value></con:property><con:property><con:name>SAimperCAuser</con:name><con:value/></con:property><con:property><con:name>RACimperCAuser</con:name><con:value/></con:property><con:property><con:name>SAimperCAuserJson</con:name><con:value/></con:property><con:property><con:name>RACimperCAdefaultUserJson</con:name><con:value/></con:property><con:property><con:name>tenantId</con:name><con:value>StagingUS_6736c13b-5ab6-4345-b96a-41b156c68360</con:value></con:property><con:property><con:name>Request</con:name><con:value>8d8fbe4ef21445da974b149db8ae39e2</con:value></con:property><con:property><con:name>CAuserTokenId</con:name><con:value/></con:property><con:property><con:name>GACAuserTokenId</con:name><con:value>d59d272c7408426d9c9d621a7dd9139c</con:value></con:property><con:property><con:name>GAuserTokenId</con:name><con:value>a16a3f7c96644b60809666169694392d</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>3b2db978-895e-4cb3-a96c-4c9a6c614f44</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3a80de62-a2e0-4137-ae98-d083250c6dbe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a77cd7da-fa8a-4846-84c6-56bee1d70f65</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3d9cf3ee-2b6a-49e6-bbd8-7906917dc668</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>18bd5bbd-c81a-4812-bf9e-a4699f8e54b1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fbfac6fe-76a5-46a6-821d-bff9e8a7b8f6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5b91808e-4e71-4244-8fc6-12cf8bdb251a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b06a3344-1acc-4467-b42f-68feeda3bc58</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f78f8538-ff7a-4d40-ae5b-81ff098fbef9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1eff2849-f657-47ae-b144-3d2576156719</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>947960e0-2689-4c32-86e8-8698b98cee54</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3950aec7-333b-4796-909b-dae877b05dc4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a3b246e1-4e89-46a3-9901-76fba68a16f9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1829b009-1245-4bc8-a8f5-88af6ff5c023</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42893b38-4f46-4127-a5e5-ad1cd6275ea3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5017d70a-b1ac-4dc4-b5b5-8490d8e64e48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42abd525-5969-40e0-8f1b-77e310992778</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>86755bb5-3681-4131-81c0-ec03f4495e93</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9634b91-5a78-4e85-9bb9-9b370d56f04c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f394cdfa-23de-4f26-a604-a1873f556bed</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9347867-7342-405e-ada4-0bf51aaaf170</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5cec3674-cc96-4cc0-8244-8b05a20f4925</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5124fd35-77e4-4121-88df-35c684cbf6f3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fc86f6e4-dcde-4140-a7e4-c24d9c5bc14c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6b4a815e-0aa9-44bd-b9b2-af57b3d426ca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ba37bd44-b445-4c1c-8b51-f30d4881b845</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ea043abc-3d7f-4a5a-9259-79b8baf85125</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d2a83205-fa5a-4f06-b550-bf709c090dd5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>dfade1b3-88b0-4dda-aee8-0529e279d4d0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>12ea9306-dc18-4931-bff3-6bbdd323c33a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bff06f8f-2a38-4962-85c2-5c32ac12a902</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9fd78a4e-fb40-447f-a4c6-f755d95f3c4d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>261ba9eb-5d07-4a8b-b7a7-7feae8663995</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8e448144-f4ef-436d-8520-4fe6c997d295</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ace67490-cd28-4233-8a70-6f82cf922134</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7073efaf-ca79-4f55-bb0f-f219a8ceb784</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5695c0f9-7d85-49b8-a524-91cc4d8ff09e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3961e3a0-3a9c-466e-b7a2-ee8c8bda4585</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1409473b-6ebd-455d-b9ba-415f5b81c8bd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a12e03c6-9a72-47ff-81da-397c6ca5eb1e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Impersonate - Negative" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="dad9d7ee-52d7-4905-8dc9-67e62dcee516"><con:settings/><con:testStep type="restrequest" name="POST - impersonateUser - UserAdminAsAdmin - xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - UserAdminAsAdmin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestSuite#UAusername}"/>
&lt;/impersonation></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Not authorized.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - UserAdminAsAdmin - json"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - UserAdminAsAdmin - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestSuite#UAusername}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Not authorized.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - GAdefaultUserAsAdmin - xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - GAdefaultUserAsAdmin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestSuite#GAdefaultUser}"/>
&lt;/impersonation></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Not authorized.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - GAdefaultUserAsAdmin - json"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - GAdefaultUserAsAdmin - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestSuite#GAdefaultUser}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Not authorized.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - GACAdefaultUserAsAdmin - xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - GACAdefaultUserAsAdmin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestSuite#GACAdefaultUser}"/>
&lt;/impersonation></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Not authorized.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - GACAdefaultUserAsAdmin - json"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - GACAdefaultUserAsAdmin - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestSuite#GACAdefaultUser}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Not authorized.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - CAdefaultUserAsAdmin - xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - CAdefaultUserAsAdmin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestSuite#CAdefaultUser}"/>
&lt;/impersonation></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Not authorized.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - CAdefaultUserAsAdmin - json"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - CAdefaultUserAsAdmin - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestSuite#CAdefaultUser}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Not authorized.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - SAtoken - 400 - xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - SAtoken - 400 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;!--&lt;user username="cmarin3"/-->
&lt;/impersonation></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - RACtoken - xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - RACtoken - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;!--&lt;user username="cmarin3"/-->
&lt;/impersonation></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Disabled POST - impersonateUser  - RACtoken - json" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Disabled POST - impersonateUser  - RACtoken - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "cmarin1"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - SAtoken - username empty - 400 - xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - SAtoken - username empty - 400 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username=""/>
&lt;/impersonation></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - SAtoken - username empty - 400 - json"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - SAtoken - username empty - 400 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": ""
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - RACtoken - username empty - 400 - xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - RACtoken - username empty - 400 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username=""/>
&lt;/impersonation></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - RACtoken - username empty - 400 - json"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - RACtoken - username empty - 400 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": ""
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - SAtoken - username null - 400 - xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - SAtoken - username null - 400 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="   "/>
&lt;/impersonation></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - SAtoken - username null - 400 - json"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - SAtoken - username null - 400 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "  "
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - RACtoken - username null - 400 - xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - RACtoken - username null - 400 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="   "/>
&lt;/impersonation></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - RACtoken - username null - 400 - json"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - RACtoken - username null - 400 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "  "
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - invalidTokenIdUA - xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - invalidTokenIdUA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestSuite#UAusername}"/>
&lt;/impersonation></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="1234567890" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - invalidTokenIdUA - json"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - invalidTokenIdUA - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestSuite#UAusername}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="1234567890" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - invalidTokenIdGAdefaultUser - xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - invalidTokenIdGAdefaultUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestSuite#GAdefaultUser}"/>
&lt;/impersonation></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="1234567890" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - invalidTokenIdGAdefaultUser - json"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - invalidTokenIdGAdefaultUser - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestSuite#GAdefaultUser}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="1234567890" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - invalidTokenIdGACAdefaultUser - xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - invalidTokenIdGACAdefaultUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestSuite#GACAdefaultUser}"/>
&lt;/impersonation></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="1234567890" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - invalidTokenIdGACAdefaultUser - json"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - invalidTokenIdGACAdefaultUser - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestSuite#GACAdefaultUser}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="1234567890" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - invalidTokenIdCAdefaultUser - xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - invalidTokenIdCAdefaultUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestSuite#CAdefaultUser}"/>
&lt;/impersonation></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="1234567890" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - invalidTokenIdCAdefaultUser - json"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - invalidTokenIdCAdefaultUser - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestSuite#CAdefaultUser}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="1234567890" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser  - SAtoken - 404 - xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser  - SAtoken - 404 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="shan0433"/>
&lt;/impersonation></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - SAtoken - 404 - json"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - SAtoken - 404 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "shan0433"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser  - RACtoken - 404 - xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser  - RACtoken - 404 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="shan0433"/>
&lt;/impersonation></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - RACtoken - 404 - json"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - RACtoken - 404 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "shan0433"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - SAimperAdmin - 415 - xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - SAimperAdmin - 415 - xml" mediaType="text/xml" postQueryString="false" accept="text/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="auth"/>
&lt;/impersonation></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 415</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - SAimperAdmin - 415 - json"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - SAimperAdmin - 415 - json" mediaType="text/xml" postQueryString="false" accept="text/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "cmarin1"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 415</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - SAimperSA - 415 - xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - SAimperSA - 415 - xml" mediaType="text/xml" postQueryString="false" accept="text/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestSuite#SAusername}"/>
&lt;/impersonation></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 415</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - SAimperSA - 415 - json"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - SAimperSA - 415 - json" mediaType="text/xml" postQueryString="false" accept="text/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestSuite#SAusername}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 415</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - SAimperUA - 415 - xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - SAimperUA - 415 - xml" mediaType="text/xml" postQueryString="false" accept="text/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestSuite#UAusername}"/>
&lt;/impersonation></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 415</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - SAimperUA - 415 - json"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - SAimperUA - 415 - json" mediaType="text/xml" postQueryString="false" accept="text/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestSuite#UAusername}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 415</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - SAimperGAdefaultUser - 415 - xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - SAimperGAdefaultUser - 415 - xml" mediaType="text/xml" postQueryString="false" accept="text/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestSuite#GAonlyUsername}"/>
&lt;/impersonation></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 415</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - SAimperGAdefaultUser - 415 - json"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - SAimperGAdefaultUser - 415 - json" mediaType="text/xml" postQueryString="false" accept="text/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestSuite#GAonlyUsername}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 415</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - SAimperGACAdefaultUser - 415 - xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - SAimperGACAdefaultUser - 415 - xml" mediaType="text/xml" postQueryString="false" accept="text/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestSuite#GACAdefaultUser}"/>
&lt;/impersonation></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 415</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - SAimperGACAdefaultUser - 415 - json"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - SAimperGACAdefaultUser - 415 - json" mediaType="text/xml" postQueryString="false" accept="text/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestSuite#GACAdefaultUser}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 415</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - SAimperCAdefaultUser - 415 - xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - SAimperCAdefaultUser - 415 - xml" mediaType="text/xml" postQueryString="false" accept="text/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestSuite#CAdefaultUser}"/>
&lt;/impersonation></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 415</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - SAimperCAdefaultUser - 415 - json"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - SAimperCAdefaultUser - 415 - json" mediaType="text/xml" postQueryString="false" accept="text/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestSuite#CAdefaultUser}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 415</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - RACimperAdmin - 415 xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - RACimperAdmin - 415 xml" mediaType="text/xml" postQueryString="false" accept="text/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="cmarin1"/>
&lt;/impersonation></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 415</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - RACimperAdmin - 415 - json"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - RACimperAdmin - 415 - json" mediaType="text/xml" postQueryString="false" accept="text/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "cmarin1"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 415</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - RACimperSA - 415 xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - RACimperSA - 415 xml" mediaType="text/xml" postQueryString="false" accept="text/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestSuite#SAusername}"/>
&lt;/impersonation></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 415</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - RACimperSA - 415 - json"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - RACimperSA - 415 - json" mediaType="text/xml" postQueryString="false" accept="text/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestSuite#SAusername}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 415</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - RACimperUA - 415 xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - RACimperUA - 415 xml" mediaType="text/xml" postQueryString="false" accept="text/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestSuite#UAusername}"/>
&lt;/impersonation></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 415</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - RACimperUA - 415 - json"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - RACimperUA - 415 - json" mediaType="text/xml" postQueryString="false" accept="text/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestSuite#UAusername}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 415</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - RACimperGAdefaultUser - 415 xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - RACimperGAdefaultUser - 415 xml" mediaType="text/xml" postQueryString="false" accept="text/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestSuite#GAdefaultUser}"/>
&lt;/impersonation></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 415</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - RACimperGAdefaultUser - 415 - json"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - RACimperGAdefaultUser - 415 - json" mediaType="text/xml" postQueryString="false" accept="text/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestSuite#GAdefaultUser}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 415</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - RACimperGACAdefaultUser - 415 - xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - RACimperGACAdefaultUser - 415 - xml" mediaType="text/xml" postQueryString="false" accept="text/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;&lt;user username="${#TestSuite#GACAdefaultUser}"/>
&lt;/impersonation></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 415</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - RACimperGACAdefaultuser - 415 - json"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - RACimperGACAdefaultuser - 415 - json" mediaType="text/xml" postQueryString="false" accept="text/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestSuite#GACAdefaultUser}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 415</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - RACimperCAdefaultUser - 415 - xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - RACimperCAdefaultUser - 415 - xml" mediaType="text/xml" postQueryString="false" accept="text/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;&lt;user username="${#TestSuite#CAdefaultUser}"/>
&lt;/impersonation></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 415</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - RACimperCAdefaultuser - 415 - json"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - RACimperCAdefaultuser - 415 - json" mediaType="text/xml" postQueryString="false" accept="text/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestSuite#CAdefaultUser}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 415</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Endpoints invalid Impr token 404 - json"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" methodName="List Endoints for a Token - listEndpointsForToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Endpoints invalid Impr token 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId4}45"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Endpoints invalid Impr token 404 - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" methodName="List Endoints for a Token - listEndpointsForToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Endpoints invalid Impr token 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId4}45"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DEL - Delete Application - xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/applications/{applicationId}" methodName="Delete an Application" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DEL - Delete Application - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="applicationId" value="${#TestSuite#applicationId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#FAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DEL - Delete Application - json"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/applications/{applicationId}" methodName="Delete an Application" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DEL - Delete Application - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="applicationId" value="${#TestSuite#applicationIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#FAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - user - CAdefaultUser - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user - CAdefaultUser - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#CAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - user - GACAdefaultUser - v2.0 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user - GACAdefaultUser - v2.0 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#DU1userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE UserAdmin - v1.1 - xml"><con:settings/><con:config service="Auth V1.1" resourcePath="/${#Project#pathv1.1}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE UserAdmin - v1.1 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#UAusername}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DEL - Delete User - GAdefaultUser - xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/users/{userId}" methodName="Delete a User" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DEL - Delete User - GAdefaultUser - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#GAonlyUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#FAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE -  softDeleteGAdefaultUser"><con:settings/><con:config service="GA-SoftDelete" resourcePath="/${#Project#pathSD}/softDeleted/users/{user_id}" methodName="Delete from soft delete - softDeleted" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE -  softDeleteGAdefaultUser" mediaType="application/xml" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestSuite#GAonlyUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE FounadationAPI - GACAdefaultUser - xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/users/{userId}" methodName="Delete a User" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE FounadationAPI - GACAdefaultUser - xml" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#FAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#FAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE -  softDelete-FounadationAPI - GACAdefaultUser - xml"><con:settings/><con:config service="GA-SoftDelete" resourcePath="/${#Project#pathSD}/softDeleted/users/{user_id}" methodName="Delete from soft delete - softDeleted" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE -  softDelete-FounadationAPI - GACAdefaultUser - xml" mediaType="application/xml" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestSuite#FAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE deleteServiceAdmin - xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/users/{userId}" methodName="Delete a User" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE deleteServiceAdmin - xml" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#SAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#FAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE -  softDeleteServiceAdmin"><con:settings/><con:config service="GA-SoftDelete" resourcePath="/${#Project#pathSD}/softDeleted/users/{user_id}" methodName="Delete from soft delete - softDeleted" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE -  softDeleteServiceAdmin" mediaType="application/xml" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestSuite#SAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Expire-in to Impersonation" searchProperties="true" id="8c3d2675-4f9a-47b8-8efd-35caf2f5429a" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="transfer" name="Property Transfer"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>addUserCredentials</con:name><con:sourceType>addUserCredentials</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - addUserCredentials - xml</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - Cloud - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - Cloud - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#password}" username="${#TestSuite#username}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>token</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access/ns1:token/@id)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store cloud token"><con:settings/><con:config><script>def CAtokenId = context.expand( '${POST - token - Cloud - xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info "get TokenId: " + CAtokenId 
testRunner.testCase.testSuite.setPropertyValue("CAtokenId", CAtokenId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - GA token - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - GA token - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#GAadminPwd}" username="${#TestSuite#GAadmin}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>token</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access/ns1:token/@id)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token"><con:settings/><con:config><script>def tokenId = context.expand( '${POST - GA token - xml#ResponseAsXml#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:token[1]/@id}' )
log.info "get tokenId: " + tokenId
testRunner.testCase.testSuite.setPropertyValue("tokenId", tokenId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Authenticate Application - xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/tokens" methodName="Authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Authenticate Application - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;authCredentials client_id="18e7a7032733486cd32f472d7bd58f709ac0d221" client_secret="${#TestSuite#clientSecret}" grant_type="CLIENT_CREDENTIALS" xmlns="http://idm.api.rackspace.com/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store tokenId"><con:settings/><con:config><script>def FAtokenId = context.expand( '${POST - Authenticate Application - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:auth[1]/ns3:access_token[1]/@id}' )
log.info "get FAtokenId: " + FAtokenId
testRunner.testCase.testSuite.setPropertyValue("FAtokenId", FAtokenId)</script></con:config></con:testStep><con:testStep type="groovy" name="Test Data"><con:settings/><con:config><script>appName = "appName" + System.currentTimeMillis()
log.info "get appName: " + appName
testRunner.testCase.setPropertyValue("appName", appName)

appNameJson = "appNameJson" + System.currentTimeMillis()
log.info "get appNameJson: " + appNameJson
testRunner.testCase.setPropertyValue("appNameJson",appNameJson)





</script></con:config></con:testStep><con:testStep type="restrequest" name="Create Application - xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/applications" methodName="Add an Application" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create Application - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;application customerId="RCN-987-654-321" description="Foundation Test App" name="${#TestCase#appName}" xmlns="http://idm.api.rackspace.com/v1.0">&lt;roles/>&lt;/application></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns3='http://idm.api.rackspace.com/v1.0';
//ns3:application[1]/@name</path><content>${#TestCase#appName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#FAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store applicationId"><con:settings/><con:config><script>def applicationId = context.expand( '${Create Application - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:application[1]/@clientId}' )
log.info "get applicationId: " + applicationId

def applicationSecret = context.expand( '${Create Application - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:application[1]/ns3:secretCredentials[1]/@clientSecret}' )
log.info "get applicationSecret: " + applicationSecret

testRunner.testCase.testSuite.setPropertyValue("applicationId",applicationId)
testRunner.testCase.testSuite.setPropertyValue("applicationSecret",applicationSecret)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Create Application - json"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/applications" methodName="Add an Application" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Create Application - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "application": {"customerId": "RCN-987-654-321", "name": "${#TestCase#appNameJson}", "description": "Foundation Test App" } }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#appNameJson}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#FAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store applicationIdJson"><con:settings/><con:config><script>def applicationIdJson = context.expand( '${POST - Create Application - json#ResponseAsXml#declare namespace ns1=\'${#Project#EndpointJson}/${#Project#foundationPath}/applications\'; //ns1:Response[1]/ns1:application[1]/ns1:clientId[1]}' )

log.info "get applicationId Json: " + applicationIdJson

def applicationSecretJson = context.expand( '${POST - Create Application - json#ResponseAsXml#declare namespace ns1=\'${#Project#EndpointJson}/${#Project#foundationPath}/applications\'; //ns1:Response[1]/ns1:application[1]/ns1:secretCredentials[1]/ns1:clientSecret[1]}' )
log.info "get applicationSecretJson: " + applicationSecretJson

testRunner.testCase.testSuite.setPropertyValue("applicationIdJson", applicationIdJson)
testRunner.testCase.testSuite.setPropertyValue("applicationSecretJson", applicationSecretJson)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - CreateServiceAdmin - xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/users" methodName="Add a User" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - CreateServiceAdmin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<user customerId="RCN-000-111-000" displayName="test user" email="test.user@example.org" firstName="SAtest" lastName="Smith" middleName="Lee" personId="RPN-111-111-111" prefLanguage="US_en" region="SAT" timeZone="America/Chicago" username="${#TestCase#serviceAdmin}" xmlns="http://idm.api.rackspace.com/v1.0">
<roles id="4"/><secret secretAnswer="Buddy" secretQuestion="What is your dogs name?"/>
<passwordCredentials>
<currentPassword password="${#TestCase#serviceAdminPwd}"/>
</passwordCredentials>
</user>]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#FAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store SAuserId"><con:settings/><con:config><script>def userId = context.expand( '${POST - CreateServiceAdmin - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:user[1]/@id}' )
testRunner.testCase.testSuite.setPropertyValue("SAuserId",userId)
log.info "get userId: " + userId
</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - addRole SA -xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/users/{userId}/roles/{roleId}" methodName="Grant User a Global Role" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addRole SA -xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#SAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#FAtokenId}"/>
  <con:entry key="roleId" value="4"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listServiceAdminRole -xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/users/{user_id}/roles" methodName="List User Global Roles - listUserGlobalRoles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listServiceAdminRole -xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:roles[1]/ns7:role[1]/@name</path><content>identity:service-admin</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestSuite#SAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Authenticate ServiceAdmin - xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/tokens" methodName="Authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Authenticate ServiceAdmin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;authCredentials client_id="18e7a7032733486cd32f472d7bd58f709ac0d221" client_secret="password1" grant_type="PASSWORD" password="${#TestCase#serviceAdminPwd}" username="${#TestCase#serviceAdmin}" xmlns="http://idm.api.rackspace.com/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store SAtokenId"><con:settings/><con:config><script>def SAtokenId = context.expand( '${POST - Authenticate ServiceAdmin - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:auth[1]/ns3:access_token[1]/@id}' )
log.info "get SAtokenId: " + SAtokenId
testRunner.testCase.testSuite.setPropertyValue("SAtokenId",SAtokenId);

def SAusername = context.expand( '${POST - Authenticate ServiceAdmin - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:auth[1]/ns3:user[1]/@username}' )
log.info "get SAusername: " + SAusername
testRunner.testCase.testSuite.setPropertyValue("SAusername",SAusername)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Create User - v1.1 - xml"><con:settings/><con:config service="Auth V1.1" resourcePath="/${#Project#pathv1.1}/users" methodName="POST - createUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Create User - v1.1 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:user enabled="true" id="${#TestCase#userAdmin}" key="${#TestCase#key}" mossoId="${#TestCase#mossoId}" nastId="${#TestCase#nastId}" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get User By Name - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/users" methodName="Get a User by Name - getUserByName" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get User By Name - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:user[1]/@username</path><content>${#TestCase#userAdmin}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestCase#userAdmin}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store UA userId"><con:settings/><con:config><script>def UAuserId = context.expand( '${GET - Get User By Name - xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:user[1]/@id}' )
log.info "get UAuserId: " + UAuserId
testRunner.testCase.setPropertyValue("UAuserId", UAuserId)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - List API Key Credentials - xml"><con:settings/><con:config service="RAX-KSKEY-admin" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" methodName="List Credentials - listCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - List API Key Credentials - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns3='http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0';
declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:credentials[1]/ns3:apiKeyCredentials[1]/@username</path><content>${#TestCase#userAdmin}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#UAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - apiKey -  xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - apiKey -  xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0"> &lt;apiKeyCredentials apiKey="${#TestCase#key}" username="${#TestCase#userAdmin}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/> &lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>&lt;token id=</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token) >=1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token/@id) = 1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store UAtokenId"><con:settings/><con:config><script>def UAtokenId = context.expand( '${POST - token - apiKey -  xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info "get UAtokenId: " + UAtokenId
testRunner.testCase.setPropertyValue("UAtokenId", UAtokenId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUser - v2.0 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user - addUser" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUser - v2.0 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:user display-name="${#TestCase#GACAdefaultUser1}" email="${#TestCase#testEmail}" enabled="true" username="${#TestCase#GACAdefaultUser}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#UAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store userId1"><con:settings/><con:config><script>def DU1userId = context.expand( '${POST - addUser - v2.0 - xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:user[1]/@id}' )
log.info "get DU1userId: " + DU1userId


def DUpassword = context.expand( '${POST - addUser - v2.0 - xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0\'; declare namespace ns2=\'http://docs.openstack.org/identity/api/v2.0\'; //ns2:user[1]/@ns1:password}' )
log.info "get DUpassword: " + DUpassword

testRunner.testCase.setPropertyValue("DU1userId", DU1userId)
testRunner.testCase.setPropertyValue("DUpassword", DUpassword)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#DUpassword}" username="${#TestCase#GACAdefaultUser}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>token id="</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access/ns1:token/@id)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUser - CA - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user - addUser" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUser - CA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:user display-name="${#TestCase#CAdefaultUser}" email="${#TestCase#testEmail}" enabled="true" username="${#TestCase#CAdefaultUser}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#UAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store CAuserId"><con:settings/><con:config><script>def CAuserId = context.expand( '${POST - addUser - CA - xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:user[1]/@id}' )
log.info "get CAuserId: " + CAuserId

def CApassword = context.expand( '${POST - addUser - CA - xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0\'; declare namespace ns2=\'http://docs.openstack.org/identity/api/v2.0\'; //ns2:user[1]/@ns1:password}' )
log.info "get CApassword: " + CApassword

testRunner.testCase.setPropertyValue("CAuserId", CAuserId)
testRunner.testCase.setPropertyValue("CApassword", CApassword)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUserCredentials - xml"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Add user Credential. - addUserCredential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUserCredentials - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;apiKeyCredentials xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0" username="${#TestCase#CAdefaultUser}" apiKey="7e4a5dda01d9f447695b5ff476a6788f"/> </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1" disabled="true"><con:configuration><token>apiKey="${#TestSuite#apiKey}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 2" disabled="true"><con:configuration><token>username="${#TestSuite#testuser}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" disabled="true"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:RAX-KSKEY:apiKeyCredentials)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>true</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>apiKeyCredentials</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#CAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - CA - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - CA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#CApassword}" username="${#TestCase#CAdefaultUser}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>token id="</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access/ns1:token/@id)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Add User - GACA - xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/users" methodName="Add a User" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Add User - GACA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<user customerId="RCN-000-111-000" displayName="Alan Erwin" email="alan.erwin@example.org" firstName="Alan" lastName="Smith" middleName="Lee" personId="RPN-111-111-111" prefLanguage="US_en" region="SAT" timeZone="America/Chicago" username="${#TestCase#GACAdefaultUser1}" xmlns="http://idm.api.rackspace.com/v1.0">
<roles/><secret secretAnswer="Buddy" secretQuestion="What is your dogs name?"/>
<passwordCredentials>
<currentPassword password="C@n+f001me!"/>
</passwordCredentials>
</user>]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#FAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store GACAuser"><con:settings/><con:config><script>

def FApassword = context.expand( '${POST - Add User - GACA - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:user[1]/ns3:passwordCredentials[1]/ns3:currentPassword[1]/@password}' )
log.info "get FApassword: " + FApassword

def FAuserId = context.expand( '${POST - Add User - GACA - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:user[1]/@id}' )
log.info "get FAuserId: " + FAuserId


testRunner.testCase.setPropertyValue("FApassword", FApassword)
testRunner.testCase.setPropertyValue("FAuserId", FAuserId)</script></con:config></con:testStep><con:testStep type="restrequest" name="PUT - Add UserRole - GACA - xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/users/{userId}/roles/{roleId}" methodName="Grant User a Global Role" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - Add UserRole - GACA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#FAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#FAtokenId}"/>
  <con:entry key="roleId" value="2"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - xml 1"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - xml 1" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#FApassword}" username="${#TestCase#GACAdefaultUser1}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access/ns1:token/@id)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Add User - GAonlyUser - xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/users" methodName="Add a User" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Add User - GAonlyUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<user customerId="RCN-000-111-000" displayName="Alan Erwin" email="alan.erwin@example.org" firstName="Alan" lastName="Smith" middleName="Lee" personId="RPN-111-111-111" prefLanguage="US_en" region="SAT" timeZone="America/Chicago" username="${#TestCase#GAdefaultUser}" xmlns="http://idm.api.rackspace.com/v1.0">
<roles/><secret secretAnswer="Buddy" secretQuestion="What is your dogs name?"/>
<passwordCredentials>
<currentPassword password="C@n+f001me!"/>
</passwordCredentials>
</user>]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#FAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store GAonlyUser"><con:settings/><con:config><script>

def GAonlyPassword = context.expand( '${POST - Add User - GAonlyUser - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:user[1]/ns3:passwordCredentials[1]/ns3:currentPassword[1]/@password}' )
log.info "get GAonlyPassword: " + GAonlyPassword

def GAonlyUserId = context.expand( '${POST - Add User - GAonlyUser - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:user[1]/@id}' )
log.info "get GAonlyUserId: " + GAonlyUserId


testRunner.testCase.setPropertyValue("GAonlyPassword", GAonlyPassword)
testRunner.testCase.setPropertyValue("GAonlyUserId", GAonlyUserId)</script></con:config></con:testStep><con:testStep type="restrequest" name="PUT - Add UserRole - GAonlyUser - xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/users/{userId}/roles/{roleId}" methodName="Grant User a Global Role" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - Add UserRole - GAonlyUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#GAonlyUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#FAtokenId}"/>
  <con:entry key="roleId" value="2"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - GAonlyUser - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - GAonlyUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#GAonlyPassword}" username="${#TestCase#GAdefaultUser}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access/ns1:token/@id)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Authenticate Racker - xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/tokens" methodName="Authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Authenticate Racker - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8"?> &lt;rackerCredentials xmlns="http://idm.api.rackspace.com/v1.0" password="${#TestSuite#rackerPwd}" username="${#TestSuite#racker}" client_secret="${#TestSuite#applicationSecret}" client_id="${#TestSuite#applicationId}" grant_type="PASSWORD" /></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store rackerTokenId"><con:settings/><con:config><script>def rackerTokenId = context.expand( '${POST - Authenticate Racker - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:auth[1]/ns3:access_token[1]/@id}' )
log.info"get rackerTokenId: " + rackerTokenId
testRunner.testCase.testSuite.setPropertyValue("rackerTokenId", rackerTokenId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Service Admin Imper User Admin - Expires-in > 3hrs - xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Service Admin Imper User Admin - Expires-in > 3hrs - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
<user username="${#TestCase#userAdmin}"/>
<expire-in-seconds>10801</expire-in-seconds>
</impersonation> ]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Expire in element cannot be more than 10800</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser -  Service Admin Imper User Admin - Expires-in >3 hrs - json"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser -  Service Admin Imper User Admin - Expires-in >3 hrs - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#userAdmin}"
}
"expire-in-seconds": 10805
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Expire in element cannot be more than 10800</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Service Admin Imper User Admin > 3hrs - Default - xml" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Service Admin Imper User Admin > 3hrs - Default - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestCase#userAdmin}"/>
&lt;/impersonation> </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser -  Service Admin Imper User Admin >3 hrs - Default - json" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser -  Service Admin Imper User Admin >3 hrs - Default - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#userAdmin}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Service Admin Imper User Admin - Expires-in - xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Service Admin Imper User Admin - Expires-in - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
<user username="${#TestCase#userAdmin}"/>
<expire-in-seconds>2</expire-in-seconds>
</impersonation> ]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser -  Service Admin Imper User Admin - Expires-in - json"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser -  Service Admin Imper User Admin - Expires-in - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#userAdmin}"
}
"expire-in-seconds": 2
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store1"><con:settings/><con:config><script>def SAimpersonateUAtoken = context.expand( '${POST - impersonateUser - Service Admin Imper User Admin - Expires-in - xml#ResponseAsXml#declare namespace ns1=\'http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info "get SAimpersonateUAtoken: " + SAimpersonateUAtoken
testRunner.testCase.setPropertyValue("SAimpersonateUAtoken",SAimpersonateUAtoken)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Auth with tenant and Imp User Admin - xml" id="93af7745-e7ba-4e01-a28f-fb9ac185fc7e" disabled="true"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Auth with tenant and Imp User Admin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="${#TestCase#mossoId}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;token id="${#TestCase#SAimpersonateUAtoken}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay7"><con:settings/><con:config><delay>150000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Copy of GET - tokenById - Validate - SA Imper UA - xml" id="aed21711-db80-424a-a0ef-88f7f8b7218a"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of GET - tokenById - Validate - SA Imper UA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns7:user[1]/@name</path><content>${#TestSuite#UAusername}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns14='http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0';
declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns14:impersonator[1]/@name</path><content>${#TestCase#SAusername}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns14='http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0';
declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns14:impersonator[1]/ns7:roles[1]/ns7:role[1]/@id</path><content>4</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 3"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns7:token[1]/@id</path><content>${#TestCase#SAimpersonateUAtoken}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#SAimpersonateUAtoken}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Auth with tenant and Imp User Admin - after expiration - xml" id="72d6c197-0ba1-44b0-903a-750256aa6e02"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Auth with tenant and Imp User Admin - after expiration - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="${#TestCase#mossoId}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;token id="${#TestCase#SAimpersonateUAtoken}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Service Admin Imper User Admin - After Expiration - xml"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Service Admin Imper User Admin - After Expiration - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestCase#userAdmin}"/>
&lt;/impersonation> </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser -  Service Admin Imper User Admin - After Expiration - json"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser -  Service Admin Imper User Admin - After Expiration - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#userAdmin}"
}
"expire-in-seconds": 5
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Racker Imper User Admin - Expires-in >3hrs - xml" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Racker Imper User Admin - Expires-in >3hrs - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
<user username="${#TestCase#userAdmin}"/>
<expire-in-seconds>11400</expire-in-seconds>
</impersonation> ]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser -  Racker Imper User Admin - Expires-in >3 hrs - json" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser -  Racker Imper User Admin - Expires-in >3 hrs - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#userAdmin}"
}
"expire-in-seconds": 11400
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Racker Imper User Admin - Expires-in >3hrs - After Expiration - xml" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Racker Imper User Admin - Expires-in >3hrs - After Expiration - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestCase#userAdmin}"/>
&lt;/impersonation> </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser -  Racker Imper User Admin - Expires-in >3 hrs - After Expiration - json" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser -  Racker Imper User Admin - Expires-in >3 hrs - After Expiration - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#userAdmin}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Racker Imper User Admin - Expires-in - xml" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Racker Imper User Admin - Expires-in - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
<user username="${#TestCase#userAdmin}"/>
<expire-in-seconds>5</expire-in-seconds>
</impersonation> ]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser -  Racker Imper User Admin - Expires-in - json" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser -  Racker Imper User Admin - Expires-in - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#userAdmin}"
}
"expire-in-seconds": 5
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay8" disabled="true"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Racker Imper User Admin - After Expiration - default - xml" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Racker Imper User Admin - After Expiration - default - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestCase#userAdmin}"/>
&lt;/impersonation> </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser -  Racker Imper User Admin - After Expiration - default - json" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser -  Racker Imper User Admin - After Expiration - default - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#userAdmin}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Service Admin Imper User Admin - xml" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Service Admin Imper User Admin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestCase#userAdmin}"/>
&lt;/impersonation> </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser -  Service Admin Imper User Admin - json" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser -  Service Admin Imper User Admin - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#userAdmin}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Service Admin Imper User Admin - xml1" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Service Admin Imper User Admin - xml1" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestCase#userAdmin}"/>
&lt;/impersonation> </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser -  Service Admin Imper User Admin - json1" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser -  Service Admin Imper User Admin - json1" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#userAdmin}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Racker Imper User Admin - xml" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Racker Imper User Admin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestCase#userAdmin}"/>
&lt;/impersonation> </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser -  Racker Imper User Admin - json" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser -  Racker Imper User Admin - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#userAdmin}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Racker Imper User Admin - xml1" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Racker Imper User Admin - xml1" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestCase#userAdmin}"/>
&lt;/impersonation> </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser -  Racker Imper User Admin - json1" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser -  Racker Imper User Admin - json1" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#userAdmin}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Service Admin Imper  User Admin - Expires-in 0 - xml" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Service Admin Imper  User Admin - Expires-in 0 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
<user username="${#TestCase#userAdmin}"/>
<expire-in-seconds>0</expire-in-seconds>
</impersonation> ]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser -  Service Admin Imper User Admin - Expires-in 0 - json" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser -  Service Admin Imper User Admin - Expires-in 0 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#userAdmin}"
}
"expire-in-seconds": 0
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Expire in element cannot be less than 1.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Service Admin Imper User Admin - Expires-in -1 - xml" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Service Admin Imper User Admin - Expires-in -1 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
<user username="${#TestCase#userAdmin}"/>
<expire-in-seconds>-1</expire-in-seconds>
</impersonation> ]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser -  Service Admin Imper User Admin - Expires-in -1 - json" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser -  Service Admin Imper User Admin - Expires-in -1 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#userAdmin}"
}
"expire-in-seconds": -1
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Expire in element cannot be less than 1.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Service Admin Imper User Admin - Expires-in empty string - xml" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Service Admin Imper User Admin - Expires-in empty string - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
<user username="${#TestCase#userAdmin}"/>
<expire-in-seconds>  </expire-in-seconds>
</impersonation> ]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser -  Service Admin Imper User Admin - Expires-in empty string - json" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser -  Service Admin Imper User Admin - Expires-in empty string - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#userAdmin}"
}
"expire-in-seconds":   
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Service Admin Imper User Admin  - Expires-in - xml" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Service Admin Imper User Admin  - Expires-in - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
<user username="${#TestCase#userAdmin}"/>
<expire-in-seconds></expire-in-seconds>
</impersonation> ]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Expire in element cannot be less than 1.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Copy oPOST - impersonateUser -  Service Admin Imper User Admin - Expires-in - json" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy oPOST - impersonateUser -  Service Admin Imper User Admin - Expires-in - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#userAdmin}"
}
"expire-in-seconds": 
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Service Admin Imper GACAdefaultUser > 3hrs - xml" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Service Admin Imper GACAdefaultUser > 3hrs - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
<user username="${#TestCase#GACAdefaultUser1}"/>
<expire-in-seconds>10801</expire-in-seconds>
</impersonation> ]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Expire in element cannot be more than 10800</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Service Admin Imper GACAdefaultUser > 3hrs - json" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Service Admin Imper GACAdefaultUser > 3hrs - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#GACAdefaultUser1}"
}
"expire-in-seconds": 10805
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Service Admin Imper GACAdefaultUser > 3hrs - After Expiration - xml" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Service Admin Imper GACAdefaultUser > 3hrs - After Expiration - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestCase#GACAdefaultUser1}"/>
&lt;/impersonation> </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Service Admin Imper GACAdefaultUser > 3hrs - After Expiration - json" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Service Admin Imper GACAdefaultUser > 3hrs - After Expiration - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#GACAdefaultUser1}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Racker Imper GACAdefaultUser > 3hrs - xml" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Racker Imper GACAdefaultUser > 3hrs - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
<user username="${#TestCase#GACAdefaultUser1}"/>
<expire-in-seconds>11400</expire-in-seconds>
</impersonation> ]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Racker Imper GACAdefaultUser > 3hrs - json" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Racker Imper GACAdefaultUser > 3hrs - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#GACAdefaultUser1}"
}
"expire-in-seconds": 11400
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Service Admin Imper GACAdefaultUser - Expires-in - xml" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Service Admin Imper GACAdefaultUser - Expires-in - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
<user username="${#TestCase#GACAdefaultUser1}"/>
<expire-in-seconds>5</expire-in-seconds>
</impersonation> ]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Service Admin Imper GACAdefaultUser - Expires-in - json" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Service Admin Imper GACAdefaultUser - Expires-in - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#GACAdefaultUser1}"
}
"expire-in-seconds": 5
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store Token" disabled="true"><con:settings/><con:config><script>def GACAtoken = context.expand( '${POST - impersonateUser - Service Admin Imper GACAdefaultUser - Expires-in - xml#ResponseAsXml#declare namespace ns14=\'http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0\'; //ns14:access[1]/ns14:token[1]/@id}' )
log.info GACAtoken
testRunner.testCase.setPropertyValue("GACAtoken", GACAtoken)</script></con:config></con:testStep><con:testStep type="delay" name="Delay" disabled="true"><con:settings/><con:config><delay>10000</delay></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Service Admin Imper GACAdefaultUser - After Expiration - default - xml" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Service Admin Imper GACAdefaultUser - After Expiration - default - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestCase#GACAdefaultUser1}"/>
&lt;/impersonation> </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Service Admin Imper GACAdefaultUser - After Expiration - default - json" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Service Admin Imper GACAdefaultUser - After Expiration - default - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#GACAdefaultUser1}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Racker Imper GACAdefaultUser - Expires-in - xml" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Racker Imper GACAdefaultUser - Expires-in - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
<user username="${#TestCase#GACAdefaultUser1}"/>
<expire-in-seconds>3</expire-in-seconds>
</impersonation> ]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser -  Racker Imper GACAdefaultUser - Expires-in - json" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser -  Racker Imper GACAdefaultUser - Expires-in - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#GACAdefaultUser1}"
}
"expire-in-seconds": 5
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay 1" disabled="true"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Racker Imper GACAdefaultUser - After Expiration - xml" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Racker Imper GACAdefaultUser - After Expiration - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestCase#GACAdefaultUser1}"/>
&lt;/impersonation> </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser -  Racker Imper GACAdefaultUser - After Expiration - json" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser -  Racker Imper GACAdefaultUser - After Expiration - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#GACAdefaultUser1}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Service Admin Imper GACAdefaultUser - xml" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Service Admin Imper GACAdefaultUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestCase#GACAdefaultUser1}"/>
&lt;/impersonation> </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" disabled="true"><con:settings/><con:config><script>import java.util.Calendar
import java.util.TimeZone
import javax.xml.bind.DatatypeConverter
def s = context.expand( '${POST - impersonateUser - Service Admin Imper GACAdefaultUser - xml#ResponseAsXml#declare namespace ns14=\'http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0\'; //ns14:access[1]/ns14:token[1]/@expires}' )
log.info s
Calendar c =DatatypeConverter.parseDateTime(s);
log.info "Expiry time" + c.getTime();
Calendar c2 = Calendar.getInstance();
log.info "Currnet time" + c2.getTime();
c2.add(java.util.Calendar.HOUR,2);
c2.add(java.util.Calendar.MINUTE,59); // add only 2hrs 59 minutes
log.info ("After adding 3 hrs" + c2.getTime())
boolean b = c.after(c2);
assert b == true</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser -  Service Admin Imper GACAdefaultUser - json" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser -  Service Admin Imper GACAdefaultUser - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#GACAdefaultUser1}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Service Admin Imper GACAdefaultUser - xml1" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Service Admin Imper GACAdefaultUser - xml1" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestCase#GACAdefaultUser1}"/>
&lt;/impersonation> </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser -  Service Admin Imper GACAdefaultUser - json1" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser -  Service Admin Imper GACAdefaultUser - json1" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#GACAdefaultUser1}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Racker Imper GACAdefaultUser - xml" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Racker Imper GACAdefaultUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestCase#GACAdefaultUser1}"/>
&lt;/impersonation> </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser -  Racker Imper GACAdefaultUser - json" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser -  Racker Imper GACAdefaultUser - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#GACAdefaultUser1}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Racker Imper GACAdefaultUser - xml1" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Racker Imper GACAdefaultUser - xml1" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestCase#GACAdefaultUser1}"/>
&lt;/impersonation> </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser -  Racker Imper GACAdefaultUser - json1" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser -  Racker Imper GACAdefaultUser - json1" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#GACAdefaultUser1}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Service Admin Imper  GACAdefaultUser - Expires-in 0 - xml" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Service Admin Imper  GACAdefaultUser - Expires-in 0 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
<user username="${#TestCase#GACAdefaultUser1}"/>
<expire-in-seconds>0</expire-in-seconds>
</impersonation> ]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Expire in element cannot be less than 1.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser -  Service Admin Imper GACAdefaultUser - Expires-in 0 - json" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser -  Service Admin Imper GACAdefaultUser - Expires-in 0 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#GACAdefaultUser1}"
}
"expire-in-seconds": 0
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Expire in element cannot be less than 1.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Service Admin Imper GACAdefaultUser - Expires-in -1 - xml" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Service Admin Imper GACAdefaultUser - Expires-in -1 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
<user username="${#TestCase#GACAdefaultUser1}"/>
<expire-in-seconds>-1</expire-in-seconds>
</impersonation> ]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Expire in element cannot be less than 1.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser -  Service Admin Imper GACAdefaultuser - Expires-in -1 - json" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser -  Service Admin Imper GACAdefaultuser - Expires-in -1 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#GACAdefaultUser1}"
}
"expire-in-seconds": -1
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Expire in element cannot be less than 1.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Service Admin Imper GACAdefaultUser - Expires-in empty string - xml" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Service Admin Imper GACAdefaultUser - Expires-in empty string - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
<user username="${#TestCase#GACAdefaultUser1}"/>
<expire-in-seconds>  </expire-in-seconds>
</impersonation> ]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Expire in element cannot be less than 1.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser -  Service Admin Imper GACAdefaultuser - Expires-in empty string - json" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser -  Service Admin Imper GACAdefaultuser - Expires-in empty string - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#GACAdefaultUser1}"
}
"expire-in-seconds":   
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Service Admin Imper GACAdefaultuser - Expires-in - xml" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Service Admin Imper GACAdefaultuser - Expires-in - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
<user username="${#TestCase#GACAdefaultUser1}"/>
<expire-in-seconds></expire-in-seconds>
</impersonation> ]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Expire in element cannot be less than 1.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser -  Service Admin Imper GACAdefaultuser - Expires-in - json" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser -  Service Admin Imper GACAdefaultuser - Expires-in - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#GACAdefaultUser1}"
}
"expire-in-seconds": 
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Service Admin Imper CAdefaultUser > 3hrs - xml" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Service Admin Imper CAdefaultUser > 3hrs - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
<user username="${#TestCase#CAdefaultUser}"/>
<expire-in-seconds>10801</expire-in-seconds>
</impersonation> ]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Expire in element cannot be more than 10800</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser -  Service Admin Imper CAdefaultUser > 3 hrs - json" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser -  Service Admin Imper CAdefaultUser > 3 hrs - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#CAdefaultUser}"
}
"expire-in-seconds": 10801
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Service Admin Imper CAdefaultUser > 3hrs - After Expiration - xml" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Service Admin Imper CAdefaultUser > 3hrs - After Expiration - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestCase#CAdefaultUser}"/>
&lt;/impersonation> </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser -  Service Admin Imper CAdefaultUser > 3 hrs - After Expiration - json" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser -  Service Admin Imper CAdefaultUser > 3 hrs - After Expiration - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#CAdefaultUser}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Racker Imper CAdefaultUser > 3hrs - xml" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Racker Imper CAdefaultUser > 3hrs - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
<user username="${#TestCase#CAdefaultUser}"/>
<expire-in-seconds>11400</expire-in-seconds>
</impersonation> ]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser -  Racker Imper CAdefaultUser > 3 hrs - json" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser -  Racker Imper CAdefaultUser > 3 hrs - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#CAdefaultUser}"
}
"expire-in-seconds": 11400
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Service Admin Imper CAdefaultUser - Expires-in - xml" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Service Admin Imper CAdefaultUser - Expires-in - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
<user username="${#TestCase#CAdefaultUser}"/>
<expire-in-seconds>3</expire-in-seconds>
</impersonation> ]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser -  Service Admin Imper CAdefaultUser - Expires-in - json" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser -  Service Admin Imper CAdefaultUser - Expires-in - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#CAdefaultUser}"
}
"expire-in-seconds": 5
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay2" disabled="true"><con:settings/><con:config><delay>3000</delay></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Service Admin Imper  CAdefaultUser - After Expiration - default - xml" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Service Admin Imper  CAdefaultUser - After Expiration - default - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestCase#CAdefaultUser}"/>
&lt;/impersonation> </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser -  Service Admin Imper CAdefaultUser - After Expiration - default - json" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser -  Service Admin Imper CAdefaultUser - After Expiration - default - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#CAdefaultUser}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Racker Imper CAdefaultUser - Expires-in - xml" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Racker Imper CAdefaultUser - Expires-in - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
<user username="${#TestCase#CAdefaultUser}"/>
<expire-in-seconds>3</expire-in-seconds>
</impersonation> ]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Racker Imper CAdefaultUser - Expires-in - json" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Racker Imper CAdefaultUser - Expires-in - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#CAdefaultUser}"
}
"expire-in-seconds": 5
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay4" disabled="true"><con:settings/><con:config><delay>3000</delay></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Racker Imper CAdefaultUser - After Expiration - default - xml" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Racker Imper CAdefaultUser - After Expiration - default - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestCase#CAdefaultUser}"/>
&lt;/impersonation> </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Racker Imper CAdefaultUser - After Expiration - default - json" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Racker Imper CAdefaultUser - After Expiration - default - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#CAdefaultUser}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Service Admin Imper CAdefaultUser - xml" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Service Admin Imper CAdefaultUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestCase#CAdefaultUser}"/>
&lt;/impersonation> </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser -  Service Admin Imper CAdefaultUser - json" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser -  Service Admin Imper CAdefaultUser - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#CAdefaultUser}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Service Admin Imper CAdefaultUser - xml1" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Service Admin Imper CAdefaultUser - xml1" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestCase#CAdefaultUser}"/>
&lt;/impersonation> </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser -  Service Admin Imper CAdefaultUser - json1" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser -  Service Admin Imper CAdefaultUser - json1" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#CAdefaultUser}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Racker Imper CAdefaultUser - xml" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Racker Imper CAdefaultUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestCase#CAdefaultUser}"/>
&lt;/impersonation> </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser -  Racker Imper CAdefaultUser - json" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser -  Racker Imper CAdefaultUser - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#CAdefaultUser}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Racker Imper CAdefaultUser - xml1" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Racker Imper CAdefaultUser - xml1" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestCase#CAdefaultUser}"/>
&lt;/impersonation> </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser -  Racker Imper CAdefaultUser - json1" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser -  Racker Imper CAdefaultUser - json1" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#CAdefaultUser}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Service Admin Imper  CAdefaultUser - Expires-in 0 - xml" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Service Admin Imper  CAdefaultUser - Expires-in 0 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
<user username="${#TestCase#CAdefaultUser}"/>
<expire-in-seconds>0</expire-in-seconds>
</impersonation> ]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Expire in element cannot be less than 1.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser -  Service Admin Imper CAdefaultUser - Expires-in 0 - json" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser -  Service Admin Imper CAdefaultUser - Expires-in 0 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#CAdefaultUser}"
}
"expire-in-seconds": 0
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Expire in element cannot be less than 1.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Service Admin Imper  CAdefaultUser - Expires-in -1 - xml" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Service Admin Imper  CAdefaultUser - Expires-in -1 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
<user username="${#TestCase#CAdefaultUser}"/>
<expire-in-seconds>-1</expire-in-seconds>
</impersonation> ]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Expire in element cannot be less than 1.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser -  Service Admin Imper CAdefaultUser - Expires-in -1 - json" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser -  Service Admin Imper CAdefaultUser - Expires-in -1 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#CAdefaultUser}"
}
"expire-in-seconds": -1
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Expire in element cannot be less than 1.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Service Admin Imper  CAdefaultUser - Expires-in empty string - xml" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Service Admin Imper  CAdefaultUser - Expires-in empty string - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
<user username="${#TestCase#CAdefaultUser}"/>
<expire-in-seconds>  </expire-in-seconds>
</impersonation> ]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser -  Service Admin Imper CAdefaultUser - Expires-in empty string - json" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser -  Service Admin Imper CAdefaultUser - Expires-in empty string - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#CAdefaultUser}"
}
"expire-in-seconds":   
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Service Admin Imper  CAdefaultUser - Expires-in - xml" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Service Admin Imper  CAdefaultUser - Expires-in - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
<user username="${#TestCase#CAdefaultUser}"/>
<expire-in-seconds></expire-in-seconds>
</impersonation> ]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser -  Service Admin Imper CAdefaultUser - Expires-in - json 1" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser -  Service Admin Imper CAdefaultUser - Expires-in - json 1" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#CAdefaultUser}"
}
"expire-in-seconds": 
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Service Admin Imper GAdefaultUser > 3hrs - xml" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Service Admin Imper GAdefaultUser > 3hrs - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
<user username="${#TestCase#GAdefaultUser}"/>
<expire-in-seconds>10801</expire-in-seconds>
</impersonation> ]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Expire in element cannot be more than 10800</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser -  Service Admin Imper GAdefaultUser >3 hrs - json" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser -  Service Admin Imper GAdefaultUser >3 hrs - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#GAdefaultUser}"
}
"expire-in-seconds": 10805
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Expire in element cannot be more than 10800</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Service Admin Imper GAdefaultUser - xml" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Service Admin Imper GAdefaultUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestCase#GAdefaultUser}"/>
&lt;/impersonation> </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Service Admin Imper GAdefaultUser - xml1" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Service Admin Imper GAdefaultUser - xml1" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestCase#GAdefaultUser}"/>
&lt;/impersonation> </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser -  Service Admin Imper GAdefaultUser - json" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser -  Service Admin Imper GAdefaultUser - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#GAdefaultUser}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser -  Service Admin Imper GAdefaultUser - json1" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser -  Service Admin Imper GAdefaultUser - json1" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#GAdefaultUser}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Racker Imper GAdefaultUser > 3hrs - xml" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Racker Imper GAdefaultUser > 3hrs - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
<user username="${#TestCase#GAdefaultUser}"/>
<expire-in-seconds>11400</expire-in-seconds>
</impersonation> ]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser -  Racker Imper GAdefaultUser >3 hrs - json" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser -  Racker Imper GAdefaultUser >3 hrs - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#GAdefaultUser}"
}
"expire-in-seconds": 11400
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Racker Imper GAdefaultUser - xml" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Racker Imper GAdefaultUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestCase#GAdefaultUser}"/>
&lt;/impersonation> </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Racker Imper GAdefaultUser - xml1" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Racker Imper GAdefaultUser - xml1" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestCase#GAdefaultUser}"/>
&lt;/impersonation> </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser -  Racker Imper GAdefaultUser - json" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser -  Racker Imper GAdefaultUser - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#GAdefaultUser}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser -  Racker Imper GAdefaultUser - json1" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser -  Racker Imper GAdefaultUser - json1" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#GAdefaultUser}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Service Admin Imper GAdefaultUser - Expires-in - xml" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Service Admin Imper GAdefaultUser - Expires-in - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
<user username="${#TestCase#GAdefaultUser}"/>
<expire-in-seconds>3</expire-in-seconds>
</impersonation> ]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser -  Service Admin Imper GAdefaultUser - Expires-in - json" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser -  Service Admin Imper GAdefaultUser - Expires-in - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#GAdefaultUser}"
}
"expire-in-seconds": 3
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay5" disabled="true"><con:settings/><con:config><delay>3000</delay></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Service Admin Imper GAdefaultUser - Atfer Expiration - xml" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Service Admin Imper GAdefaultUser - Atfer Expiration - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestCase#GAdefaultUser}"/>
&lt;/impersonation> </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser -  Service Admin Imper GAdefaultUser - After Expiration - json" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser -  Service Admin Imper GAdefaultUser - After Expiration - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#GAdefaultUser}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Racker Imper GAdefaultUser - Expires-in - xml" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Racker Imper GAdefaultUser - Expires-in - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
<user username="${#TestCase#GAdefaultUser}"/>
<expire-in-seconds>3</expire-in-seconds>
</impersonation> ]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser -  Racker Imper GAdefaultUser - Expires-in - json" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser -  Racker Imper GAdefaultUser - Expires-in - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#GAdefaultUser}"
}
"expire-in-seconds": 3
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay6" disabled="true"><con:settings/><con:config><delay>3000</delay></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Racker Imper GAdefaultUser - After Expiration - xml" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Racker Imper GAdefaultUser - After Expiration - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
&lt;impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
&lt;user username="${#TestCase#GAdefaultUser}"/>
&lt;/impersonation> </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser -  Racker Imper GAdefaultUser - After Expiration - json" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser -  Racker Imper GAdefaultUser - After Expiration - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#GAdefaultUser}"
}
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Service Admin Imper  GAdefaultUser - Expires-in 0 - xml" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Service Admin Imper  GAdefaultUser - Expires-in 0 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
<user username="${#TestCase#GAdefaultUser}"/>
<expire-in-seconds>0</expire-in-seconds>
</impersonation> ]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser -  Service Admin Imper GAdefaultUser - Expires-in 0 - json" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser -  Service Admin Imper GAdefaultUser - Expires-in 0 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#GAdefaultUser}"
}
"expire-in-seconds": 0
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Expire in element cannot be less than 1.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Service Admin Imper  GAdefaultUser - Expires-in empty string - xml" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Service Admin Imper  GAdefaultUser - Expires-in empty string - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
<user username="${#TestCase#GAdefaultUser}"/>
<expire-in-seconds>  </expire-in-seconds>
</impersonation> ]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser -  Service Admin Imper GAdefaultUser - Expires-in empty string - json" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser -  Service Admin Imper GAdefaultUser - Expires-in empty string - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#GAdefaultUser}"
}
"expire-in-seconds":   
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser - Service Admin Imper  GAdefaultUser - Expires-in - xml" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser - Service Admin Imper  GAdefaultUser - Expires-in - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<impersonation
xmlns="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"
xmlns:ns2="http://docs.openstack.org/identity/api/v2.0"
xmlns:ns3="http://www.w3.org/2005/Atom">
<user username="${#TestCase#GAdefaultUser}"/>
<expire-in-seconds></expire-in-seconds>
</impersonation> ]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - impersonateUser -  Service Admin Imper GAdefaultUser - Expires-in - json 1" disabled="true"><con:settings/><con:config service="RAX-Impersonation" resourcePath="/${#Project#path}/RAX-AUTH/impersonation-tokens" methodName="Impersonate User - impersonateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - impersonateUser -  Service Admin Imper GAdefaultUser - Expires-in - json 1" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{
"RAX-AUTH:impersonation" : {
"user": {
"username": "${#TestCase#GAdefaultUser}"
}
"expire-in-seconds": 
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DEL - Delete Application - xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/applications/{applicationId}" methodName="Delete an Application" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DEL - Delete Application - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="applicationId" value="${#TestSuite#applicationId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#FAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DEL - Delete Application - json"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/applications/{applicationId}" methodName="Delete an Application" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DEL - Delete Application - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="applicationId" value="${#TestSuite#applicationIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#FAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - user - GACAdefaultUser - v2.0 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user - GACAdefaultUser - v2.0 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DU1userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - user - CAdefaultUser - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user - CAdefaultUser - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#CAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE FounadationAPI - GACAdefaultUser - xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/users/{userId}" methodName="Delete a User" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE FounadationAPI - GACAdefaultUser - xml" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#FAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#FAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE -  softDelete-FounadationAPI - GACAdefaultUser - xml"><con:settings/><con:config service="GA-SoftDelete" resourcePath="/${#Project#pathSD}/softDeleted/users/{user_id}" methodName="Delete from soft delete - softDeleted" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE -  softDelete-FounadationAPI - GACAdefaultUser - xml" mediaType="application/xml" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestCase#FAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DEL - Delete User - GAdefaultUser - xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/users/{userId}" methodName="Delete a User" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DEL - Delete User - GAdefaultUser - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#GAonlyUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#FAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE -  softDeleteGAdefaultUser"><con:settings/><con:config service="GA-SoftDelete" resourcePath="/${#Project#pathSD}/softDeleted/users/{user_id}" methodName="Delete from soft delete - softDeleted" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE -  softDeleteGAdefaultUser" mediaType="application/xml" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestCase#GAonlyUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE UserAdmin - v1.1 - xml"><con:settings/><con:config service="Auth V1.1" resourcePath="/${#Project#pathv1.1}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE UserAdmin - v1.1 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#userAdmin}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE deleteServiceAdmin - xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/users/{userId}" methodName="Delete a User" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE deleteServiceAdmin - xml" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#SAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#FAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE -  softDeleteServiceAdmin"><con:settings/><con:config service="GA-SoftDelete" resourcePath="/${#Project#pathSD}/softDeleted/users/{user_id}" methodName="Delete from soft delete - softDeleted" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE -  softDeleteServiceAdmin" mediaType="application/xml" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestSuite#SAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>appName</con:name><con:value>appName1344198141443</con:value></con:property><con:property><con:name>appNameJson</con:name><con:value>appNameJson1344198141443</con:value></con:property><con:property><con:name>serviceAdminPwd</con:name><con:value>Password1</con:value></con:property><con:property><con:name>key</con:name><con:value>ba04b108b7cefcbcbf7c4d8bd05e3857</con:value></con:property><con:property><con:name>mossoId</con:name><con:value>5800414</con:value></con:property><con:property><con:name>nastId</con:name><con:value/></con:property><con:property><con:name>testEmail</con:name><con:value>testEmail@rackspace.com</con:value></con:property><con:property><con:name>serviceAdmin</con:name><con:value>serviceAdmin1</con:value></con:property><con:property><con:name>userAdmin</con:name><con:value>userAdmin9</con:value></con:property><con:property><con:name>GACAdefaultUser1</con:name><con:value>GACAdefaultUserImp1</con:value></con:property><con:property><con:name>CAdefaultUser</con:name><con:value>CAdefaultUserImp</con:value></con:property><con:property><con:name>UAtokenId</con:name><con:value>2c82aaac-c44c-4d1f-9598-eca1a2619b13</con:value></con:property><con:property><con:name>DU1userId</con:name><con:value>199387</con:value></con:property><con:property><con:name>DUpassword</con:name><con:value>0oxKj0PZ</con:value></con:property><con:property><con:name>CAuserId</con:name><con:value>199388</con:value></con:property><con:property><con:name>CApassword</con:name><con:value>AVb2ye6M</con:value></con:property><con:property><con:name>UAuserId</con:name><con:value>199386</con:value></con:property><con:property><con:name>addUserCredentials</con:name><con:value>&lt;apiKeyCredentials xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0" username="${#TestCase#CAdefaultUser}" apiKey="7e4a5dda01d9f447695b5ff476a6788f"/> </con:value></con:property><con:property><con:name>GAusername</con:name><con:value>GACAdefaultUser1</con:value></con:property><con:property><con:name>FAusername</con:name><con:value>GACAdefaultUser1</con:value></con:property><con:property><con:name>FApassword</con:name><con:value>C@n+f001me!</con:value></con:property><con:property><con:name>FAuserId</con:name><con:value>10035939</con:value></con:property><con:property><con:name>GAdefaultUser</con:name><con:value>GAdefaultUserImp</con:value></con:property><con:property><con:name>GAonlyPassword</con:name><con:value>C@n+f001me!</con:value></con:property><con:property><con:name>GAonlyUserId</con:name><con:value>10035940</con:value></con:property><con:property><con:name>GACAtoken</con:name><con:value>bffcf8cd3bd0496887e078b1fefad9b8</con:value></con:property><con:property><con:name>GACAdefaultUser</con:name><con:value>GACAdefaultUserImp</con:value></con:property><con:property><con:name>SAimpersonateUAtoken</con:name><con:value>1cb5e86776ce46989f1764db137adab1</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>93af7745-e7ba-4e01-a28f-fb9ac185fc7e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>72d6c197-0ba1-44b0-903a-750256aa6e02</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aed21711-db80-424a-a0ef-88f7f8b7218a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase 5" searchProperties="true" id="c0dea439-ef3c-4ca2-95ed-8a28f8dad33c"><con:settings/><con:properties/><con:reportParameters/></con:testCase><con:properties><con:property><con:name>rackerTokenId</con:name><con:value>49b05975498646bb8c052afd42ba97ef</con:value></con:property><con:property><con:name>username</con:name><con:value>auth</con:value></con:property><con:property><con:name>password</con:name><con:value>auth123</con:value></con:property><con:property><con:name>tokenId</con:name><con:value>5b908e5d-fe9e-48c4-811b-185954174c9d</con:value></con:property><con:property><con:name>apikey</con:name><con:value>11111111222222223333333333</con:value></con:property><con:property><con:name>authToken</con:name><con:value>ebe7baaf-f19e-4ae4-a297-7a95332f6fa3</con:value></con:property><con:property><con:name>adminId</con:name><con:value>153345</con:value></con:property><con:property><con:name>adminRoleId</con:name><con:value>1</con:value></con:property><con:property><con:name>adminRoleName</con:name><con:value>identity:admin</con:value></con:property><con:property><con:name>adminRoleDesc</con:name><con:value>Admin Role.</con:value></con:property><con:property><con:name>tokenId1</con:name><con:value>7b800f8a55274c06b4581d2500767ceb</con:value></con:property><con:property><con:name>tokenId2</con:name><con:value>8d427c2d1eff4934afde8d931294cdcc</con:value></con:property><con:property><con:name>tokenId1Json</con:name><con:value>d7b0bbfca8b743bb86f20aba339628b5</con:value></con:property><con:property><con:name>tokenId2Json</con:name><con:value>ad5056f7c1ab477abc231e02ee8591d3</con:value></con:property><con:property><con:name>UAtokenId</con:name><con:value>c5476cf2ae234883bb806365810ea069</con:value></con:property><con:property><con:name>UAtokenIdJson</con:name><con:value>359226b9a0734f51a1aba04a2fd1bf53</con:value></con:property><con:property><con:name>clientSecret</con:name><con:value>password1</con:value></con:property><con:property><con:name>applicationId</con:name><con:value>410105d4c4f2761c277f11304583fc2ff04a510a</con:value></con:property><con:property><con:name>appTokenId</con:name><con:value>32c27f6d22724146964d63a90b01a6ae</con:value></con:property><con:property><con:name>tokenId3</con:name><con:value>2aaf51cad6fd4b1da3745d26a491db0e</con:value></con:property><con:property><con:name>tokenId4</con:name><con:value>db0d42c6aaad4436a2104478af7809c0</con:value></con:property><con:property><con:name>rackerTokenIdJson</con:name><con:value>e1d59ed21a6647a8a5d4462c56df810f</con:value></con:property><con:property><con:name>RACimperUA</con:name><con:value>6e54a7599d2b4ce68a9d23b71f2bf999</con:value></con:property><con:property><con:name>SAimperUA</con:name><con:value>e62942bd99d34887ac1ac019895df0ed</con:value></con:property><con:property><con:name>SAimperDU1</con:name><con:value>79d334d7dfff4a3e95badd3ac9a20fb6</con:value></con:property><con:property><con:name>SAimperDU2</con:name><con:value>2f3696bd4ec54caaae5159487969e14d</con:value></con:property><con:property><con:name>SAtokenId</con:name><con:value>a94a123adee64ea99c23b15e45bc32f2</con:value></con:property><con:property><con:name>UAusername</con:name><con:value>userAdmin1344186046402</con:value></con:property><con:property><con:name>FAtokenId</con:name><con:value>ba06c9cceeea461b8f92706fd5a41b31</con:value></con:property><con:property><con:name>applicationSecret</con:name><con:value>db65bcf97b61f95c916659e23f28dd6901b36fbe</con:value></con:property><con:property><con:name>applicationIdJson</con:name><con:value>834a78a8da2cc6cc139d0c7eaeab7b1ff504ada7</con:value></con:property><con:property><con:name>applicationSecretJson</con:name><con:value>27f234f22aae7baee3de374e480ab66251ceba97</con:value></con:property><con:property><con:name>SAuserId</con:name><con:value>10035938</con:value></con:property><con:property><con:name>UAuserId</con:name><con:value>199374</con:value></con:property><con:property><con:name>DU1userId</con:name><con:value>199375</con:value></con:property><con:property><con:name>DU2userId</con:name><con:value>104472</con:value></con:property><con:property><con:name>FApassword</con:name><con:value>C@n+f001me!</con:value></con:property><con:property><con:name>FAuserId</con:name><con:value>10035927</con:value></con:property><con:property><con:name>GAonlyPassword</con:name><con:value>C@n+f001me!</con:value></con:property><con:property><con:name>GAonlyUserId</con:name><con:value>10035928</con:value></con:property><con:property><con:name>DUpassword</con:name><con:value>r1NW6aWE</con:value></con:property><con:property><con:name>CAuserId</con:name><con:value>199376</con:value></con:property><con:property><con:name>CApassword</con:name><con:value>9Hq8DKea</con:value></con:property><con:property><con:name>SAusername</con:name><con:value>serviceAdmin1</con:value></con:property><con:property><con:name>CAtokenId</con:name><con:value>5b908e5d-fe9e-48c4-811b-185954174c9d</con:value></con:property><con:property><con:name>GACAdefaultUser</con:name><con:value>GACAdefaultUser</con:value></con:property><con:property><con:name>GACAdefaultUser1</con:name><con:value>GACAdefaultUser1</con:value></con:property><con:property><con:name>CAdefaultUser</con:name><con:value>CAdefaultUser</con:value></con:property><con:property><con:name>GAdefaultUser</con:name><con:value>GAdefaultUser</con:value></con:property><con:property><con:name>CAusername</con:name><con:value>CAdefaultUser</con:value></con:property><con:property><con:name>GAadmin</con:name><con:value>auth</con:value></con:property><con:property><con:name>GAadminPwd</con:name><con:value>Auth1234</con:value></con:property><con:property><con:name>racker</con:name><con:value>mant0623</con:value></con:property><con:property><con:name>rackerPwd</con:name><con:value>Racker39</con:value></con:property><con:property><con:name>tenantId</con:name><con:value>testTenant:001</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="Functional"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validate Racker Token through Keystone API" searchProperties="true" id="ad3af743-cf61-4383-8417-ec3762ce633b" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="POST - token - CA - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - CA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#password}" username="${#TestSuite#username}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>token</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access/ns1:token/@id)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token"><con:settings/><con:config><script>def CAtokenId = context.expand( '${POST - token - CA - xml#Response#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:token[1]/@id}' )
log.info "get CAtokenId: " + CAtokenId 

testRunner.testCase.testSuite.setPropertyValue("CAtokenId", CAtokenId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#GAadminPwd}" username="${#TestCase#GAadmin}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>token</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access/ns1:token/@id)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store token"><con:settings/><con:config><script>def tokenId = context.expand( '${POST - token - xml#ResponseAsXml#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:token[1]/@id}' )
log.info "get tokenId: " + tokenId
testRunner.testCase.testSuite.setPropertyValue("tokenId" , tokenId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Authenticate Application - xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/tokens" methodName="Authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Authenticate Application - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;authCredentials client_id="18e7a7032733486cd32f472d7bd58f709ac0d221" client_secret="${#TestSuite#clientSecret}" grant_type="CLIENT_CREDENTIALS" xmlns="http://idm.api.rackspace.com/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store tokenId"><con:settings/><con:config><script>def FAtokenId = context.expand( '${POST - Authenticate Application - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:auth[1]/ns3:access_token[1]/@id}' )
log.info "get FAtokenId: " + FAtokenId
testRunner.testCase.setPropertyValue("FAtokenId", FAtokenId)</script></con:config></con:testStep><con:testStep type="restrequest" name="Create Application - xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/applications" methodName="Add an Application" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create Application - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;application customerId="RCN-987-654-321" description="Foundation Test App" name="${#TestSuite#appName}" xmlns="http://idm.api.rackspace.com/v1.0">&lt;roles/>&lt;/application></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns3='http://idm.api.rackspace.com/v1.0';
//ns3:application[1]/@name</path><content>${#TestSuite#appName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#FAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store applicationId"><con:settings/><con:config><script>def applicationId = context.expand( '${Create Application - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:application[1]/@clientId}' )
log.info "get applicationId: " + applicationId

def applicationSecret = context.expand( '${Create Application - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:application[1]/ns3:secretCredentials[1]/@clientSecret}' )
log.info "get applicationSecret: " + applicationSecret

testRunner.testCase.testSuite.setPropertyValue("applicationId",applicationId)
testRunner.testCase.testSuite.setPropertyValue("applicationSecret",applicationSecret)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Create Application - json"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/applications" methodName="Add an Application" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Create Application - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "application": {"customerId": "RCN-987-654-321", "name": "${#TestSuite#appNameJson}", "description": "Foundation Test App" } }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#EndpointJson}/${#Project#foundationPath}/applications';
//ns1:Response[1]/ns1:application[1]/ns1:name[1]</path><content>${#TestSuite#appNameJson}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#FAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store applicationIdJson"><con:settings/><con:config><script>def applicationIdJson = context.expand( '${POST - Create Application - json#ResponseAsXml#declare namespace ns1=\'${#Project#EndpointJson}/${#Project#foundationPath}/applications\'; //ns1:Response[1]/ns1:application[1]/ns1:clientId[1]}' )
log.info "get applicationId Json: " + applicationIdJson

def applicationSecretJson = context.expand( '${POST - Create Application - json#ResponseAsXml#declare namespace ns1=\'${#Project#EndpointJson}/${#Project#foundationPath}/applications\'; //ns1:Response[1]/ns1:application[1]/ns1:secretCredentials[1]/ns1:clientSecret[1]}' )
log.info "get applicationSecretJson: " + applicationSecretJson

testRunner.testCase.testSuite.setPropertyValue("applicationIdJson", applicationIdJson)
testRunner.testCase.testSuite.setPropertyValue("applicationSecretJson", applicationSecretJson)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Authenticate Racker - xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/tokens" methodName="Authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Authenticate Racker - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8"?> &lt;rackerCredentials xmlns="http://idm.api.rackspace.com/v1.0" password="Ocean1098!" username="shan0433" client_secret="${#TestSuite#applicationSecret}" client_id="${#TestSuite#applicationId}" grant_type="PASSWORD" /></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store rackerTokenId"><con:settings/><con:config><script>def rackerTokenId = context.expand( '${POST - Authenticate Racker - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:auth[1]/ns3:access_token[1]/@id}' )
log.info "get rackerTokenId: " + rackerTokenId
testRunner.testCase.testSuite.setPropertyValue("rackerTokenId", rackerTokenId)
</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Authenticate Racker - json"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/tokens" methodName="Authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Authenticate Racker - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"rackerCredentials":{ "grant_type": "PASSWORD", "client_id": "${#TestSuite#applicationIdJson}", "client_secret": "${#TestSuite#applicationSecretJson}", "username": "shan0433", "password": "Ocean1098!" } }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#EndpointJson}/${#Project#foundationPath}/tokens';
//ns1:Response[1]/ns1:auth[1]/ns1:racker[1]/ns1:username[1]</path><content>shan0433</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store rackerTokenIdJson"><con:settings/><con:config><script>def rackerTokenIdJson = context.expand( '${POST - Authenticate Racker - json#ResponseAsXml#declare namespace ns1=\'${#Project#EndpointJson}/${#Project#foundationPath}/tokens\'; //ns1:Response[1]/ns1:auth[1]/ns1:access_token[1]/ns1:id[1]}' )
log.info "rackerTokenIdJson: " + rackerTokenIdJson
testRunner.testCase.testSuite.setPropertyValue("rackerTokenIdJson", rackerTokenIdJson)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - Validate Token - FA - xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/tokens/{tokenId}" methodName="Validate Token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Validate Token - FA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns3='http://idm.api.rackspace.com/v1.0';
//ns3:auth[1]/ns3:racker[1]/ns3:roles[1]/ns3:role[1]/@name</path><content>Domain Users</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns3='http://idm.api.rackspace.com/v1.0';
//ns3:auth[1]/ns3:racker[1]/ns3:roles[1]/ns3:role[2]/@name</path><content>dl_RackGlobal</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns3='http://idm.api.rackspace.com/v1.0';
//ns3:auth[1]/ns3:racker[1]/ns3:roles[1]/ns3:role[3]/@name</path><content>fs_public</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 3"><con:configuration><path>declare namespace ns3='http://idm.api.rackspace.com/v1.0';
//ns3:auth[1]/ns3:racker[1]/ns3:roles[1]/ns3:role[4]/@name</path><content>dl_RackUSA</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 4"><con:configuration><path>declare namespace ns3='http://idm.api.rackspace.com/v1.0';
//ns3:auth[1]/ns3:racker[1]/ns3:roles[1]/ns3:role[5]/@name</path><content>af_sat6</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 5"><con:configuration><path>declare namespace ns3='http://idm.api.rackspace.com/v1.0';
//ns3:auth[1]/ns3:racker[1]/ns3:roles[1]/ns3:role[6]/@name</path><content>dl_it-qe.so</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#rackerTokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#FAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Validate Token - FA - json"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/tokens/{tokenId}" methodName="Validate Token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Validate Token - FA - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Domain Users</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>dl_RackGlobal</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 2"><con:configuration><token>fs_public</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 3"><con:configuration><token>dl_RackUSA</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 4"><con:configuration><token>af_sat6</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 5"><con:configuration><token>dl_it-qe.so</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#rackerTokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#FAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - validate - xml"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - validate - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>token</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>roles</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:token[1]/@id</path><content>${#TestSuite#rackerTokenId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns7:user[1]/ns7:roles[1]/ns7:role[1]/@name</path><content>Racker</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns7:user[1]/ns7:roles[1]/ns7:role[1]/@id</path><content>9</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 3"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns7:user[1]/ns7:roles[1]/ns7:role[2]/@name</path><content>Domain Users</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 4"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns7:user[1]/ns7:roles[1]/ns7:role[3]/@name</path><content>dl_RackGlobal</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 5"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns7:user[1]/ns7:roles[1]/ns7:role[4]/@name</path><content>fs_public</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 6"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns7:user[1]/ns7:roles[1]/ns7:role[5]/@name</path><content>dl_RackUSA</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 7"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns7:user[1]/ns7:roles[1]/ns7:role[6]/@name</path><content>af_sat6</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 8"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns7:user[1]/ns7:roles[1]/ns7:role[7]/@name</path><content>dl_it-qe.so</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#rackerTokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - validate - json"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - validate - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"access":{"token":{"id":"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>Racker</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 2"><con:configuration><token>9</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains"><con:configuration/></con:assertion><con:assertion type="Simple Contains"><con:configuration/></con:assertion><con:assertion type="Simple Contains" name="Contains 3"><con:configuration><token>Domain Users</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 4"><con:configuration><token>dl_RackGlobal</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 5"><con:configuration><token>fs_public</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains"><con:configuration/></con:assertion><con:assertion type="Simple Contains" name="Contains 6"><con:configuration><token>dl_RackUSA</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 7"><con:configuration><token>af_sat6</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains"><con:configuration/></con:assertion><con:assertion type="Simple Contains" name="Contains 8"><con:configuration><token>dl_it-qe.so</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#rackerTokenIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - validate - tokenId empty string - 400 - xml"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - validate - tokenId empty string - 400 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Token cannot be empty.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="   "/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - validate - tokenId empty string - 400 - json"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - validate - tokenId empty string - 400 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Token cannot be empty.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="   "/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - validate - invalid X-Auth-Token - 401 - xml"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - validate - invalid X-Auth-Token - 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#rackerTokenId}"/>
  <con:entry key="X-Auth-Token" value="1234567890"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - validate - invalid X-Auth-Token - 401 - json"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - validate - invalid X-Auth-Token - 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"unauthorized":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#rackerTokenIdJson}"/>
  <con:entry key="X-Auth-Token" value="1234567890"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - validate - invalid tokenId - 404 - xml"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - validate - invalid tokenId - 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Invalid Token, not found.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="1234567890"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - validate - invalid tokenId - 404 - json"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - validate - invalid tokenId - 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>Invalid Token, not found.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"itemNotFound":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="1234567890"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - validate - tokenId null - 405 - xml"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - validate - tokenId null - 405 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 405</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - validate - tokenId null - 405 - json"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - validate - tokenId null - 405 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 405</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"methodNotAllowed":{"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DEL - Revoke Token - xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/tokens/{tokenId}" methodName="Revoke Token" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DEL - Revoke Token - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#rackerTokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#FAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>10000</delay></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - validate revoked token - xml"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - validate revoked token - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Token not found</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#rackerTokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Authenticate Racker - After Revoke Token - xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/tokens" methodName="Authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Authenticate Racker - After Revoke Token - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;rackerCredentials password="Racker39" username="mant0623" client_secret="${#TestSuite#applicationSecret}" client_id="${#TestSuite#applicationId}" grant_type="PASSWORD" xmlns="http://idm.api.rackspace.com/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store rackerTokenId1"><con:settings/><con:config><script>def rackerTokenId1 = context.expand( '${POST - Authenticate Racker - After Revoke Token - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:auth[1]/ns3:access_token[1]/@id}' )
log.info "get rackerTokenId1: " + rackerTokenId1

def rackerId = context.expand( '${POST - Authenticate Racker - After Revoke Token - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:auth[1]/ns3:racker[1]/@username}' )
log.info "get rackerId: " + rackerId

testRunner.testCase.testSuite.setPropertyValue("rackerTokenId1", rackerTokenId1)
testRunner.testCase.testSuite.setPropertyValue("rackerId", rackerId)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - validate - After Rovoked Token - xml"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - validate - After Rovoked Token - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>token</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>roles</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns7:user[1]/ns7:roles[1]/ns7:role[1]/@name</path><content>Racker</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns7:user[1]/ns7:roles[1]/ns7:role[1]/@id</path><content>9</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#rackerTokenId1}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DEL - Delete Racker - xml"><con:settings/><con:config service="FoundationAuth-GA" resourcePath="/${#Project#foundationPath}/rackers/{rackerId}" methodName="deleteRacker - deleteRacker" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DEL - Delete Racker - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="${#TestCase#FAtokenId}"/>
  <con:entry key="rackerId" value="${#TestSuite#rackerId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - validate token of deleted Racker - xml"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - validate token of deleted Racker - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Invalid Token, not found.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#rackerTokenId1}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DEL - Delete Application - xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/applications/{applicationId}" methodName="Delete an Application" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DEL - Delete Application - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="applicationId" value="${#TestSuite#applicationId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#FAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DEL - Delete Application - json"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/applications/{applicationId}" methodName="Delete an Application" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DEL - Delete Application - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="applicationId" value="${#TestSuite#applicationIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#FAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>FAtokenId</con:name><con:value/></con:property><con:property><con:name>GAadmin</con:name><con:value>auth</con:value></con:property><con:property><con:name>GAadminPwd</con:name><con:value>Auth1234</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Default Region" searchProperties="true" id="13c8f689-57f9-414b-b5a2-34db774ba263" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="POST - token - CA - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - CA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#password}" username="${#TestSuite#username}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>token</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access/ns1:token/@id)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token"><con:settings/><con:config><script>def CAtokenId = context.expand( '${POST - token - CA - xml#Response#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:token[1]/@id}' )
log.info "get CAtokenId: " + CAtokenId 

testRunner.testCase.testSuite.setPropertyValue("CAtokenId", CAtokenId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Create User - userAdmin - xml" disabled="true"><con:settings/><con:config service="Auth V1.1" resourcePath="/${#Project#pathv1.1}/users" methodName="POST - createUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Create User - userAdmin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:user  enabled="true" id="${#TestCase#DRuserAdmin}" key="${#TestCase#key}" mossoId="${#TestCase#mossoId}" nastId="${#TestCase#nastId}" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/>
                   </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#basicAuth}</con:username><con:password>${#TestSuite#basicAuthPwd}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userByName- xml" disabled="true"><con:settings/><con:config service="identity-admin" methodName="Get a User by Name - getUserByName" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userByName- xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - userByName - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="UserId" disabled="true"><con:configuration><token>id="${#TestSuite#userId}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="UserName"><con:configuration><token> username="${#TestCase#DRuserAdmin}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:user[1]) >=1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestCase#DRuserAdmin}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store UAuserId" disabled="true"><con:settings/><con:config><script>def UAuserId = context.expand( '${GET - userByName- xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:user[1]/@id}' )
log.info "get UAuserId: " + UAuserId
testRunner.testCase.setPropertyValue("UAuserId" , UAuserId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Authenticate - userAdmin - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Authenticate - userAdmin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0"> &lt;apiKeyCredentials apiKey="${#TestCase#key}" username="${#TestCase#DRuserAdmin}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/> &lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store UAtokenId"><con:settings/><con:config><script>def UAtokenId = context.expand( '${POST - Authenticate - userAdmin - xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info "get UAtokenId: " + UAtokenId
testRunner.testCase.setPropertyValue("UAtokenId", UAtokenId)</script></con:config></con:testStep><con:testStep type="restrequest" name="REST Test Request"><con:settings/><con:config service="OS-KSCATALOG-admin" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints" methodName="Add Endpoint - addEndpoint" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="REST Test Request" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:35357</con:endpoint><con:request>&lt;v1:endpointTemplate xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Create User - defaultUser - xml"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users" methodName="Add user - addUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Create User - defaultUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;user RAX-AUTH:defaultRegion="US" email="DRdefaultUser@rackspace.com" enabled="true" username="${#TestCase#DRdefaultuser}" xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:RAX-AUTH="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns4='http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0';
declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:user[1]/@ns4:defaultRegion</path><content>US</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#UAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Request - Json"><con:settings/><con:config><script>def defaultUserJson = '{  "user": {    "username": "${#TestCase#DRdefaultUserJson}",    "email": "DRdefaultUserJson@rackspace.com",    "enabled": true,    "RAX-AUTH:defaultRegion" : "US"  }}'
testRunner.testCase.testSteps["POST - Create User - defaultUserJson - json"].setPropertyValue("Request",defaultUserJson)

def defaultUserNullJson = '{  "user": {    "username": "${#TestCase#DRdefaultUser1Json}",    "email": "DRdefaultUser1Json@rackspace.com",    "enabled": true,    "RAX-AUTH:defaultRegion" : ""  }}'
testRunner.testCase.testSteps["POST - Create User - defaultUser1Json null - json"].setPropertyValue("Request",defaultUserNullJson)

def defaultUserEmptyStringJson = '{  "user": {    "username": "${#TestCase#DRdefaultUser2Json}",    "email": "DRdefaultUser2Json@rackspace.com",    "enabled": true,    "RAX-AUTH:defaultRegion" : "  "  }}'
testRunner.testCase.testSteps["POST - Create User - defaultUser2Json empty string - json"].setPropertyValue("Request",defaultUserEmptyStringJson)

def defaultUserIgnoreSpacesJson = '{  "user": {    "username": "${#TestCase#DRdefaultUser3Json}",    "email": "DRdefaultUser3Json@rackspace.com",    "enabled": true,    "RAX-AUTH:defaultRegion" : "  UK  "  }}'
testRunner.testCase.testSteps["POST - Create User - defaultUser3Json ignore spaces - json"].setPropertyValue("Request",defaultUserIgnoreSpacesJson)

def defaultUserUsernameNullJson = '{  "user": {    "username": "",    "email": "DRdefaultUserJson@rackspace.com",    "enabled": true,    "RAX-AUTH:defaultRegion" : "UK"  }}'
testRunner.testCase.testSteps["POST - Create User - defaultUserJson - username null - json"].setPropertyValue("Request",defaultUserUsernameNullJson)

def defaultUserPasswordNullJson = '{  "user": {    "username": "${#TestCase#DRdefaultUserJson}",    "OS-KSADM:password": "",    "email": "DRdefaultUserJson@rackspace.com",    "enabled": true,    "RAX-AUTH:defaultRegion" : "US"  }}'
testRunner.testCase.testSteps["POST - Create User - defaultUserJson - password null - json"].setPropertyValue("Request",defaultUserPasswordNullJson)

def defaultUserInvalidTokenJson = '{  "user": {    "username": "${#TestCase#DRdefaultUserJson}",    "email": "DRdefaultUserJson@rackspace.com",    "enabled": true,    "RAX-AUTH:defaultRegion" : "UK"  }}'
testRunner.testCase.testSteps["POST - Create User - defaultUserJson - invalid token - json"].setPropertyValue("Request",defaultUserInvalidTokenJson)


</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Create User - defaultUserJson - json"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users" methodName="Add user - addUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Create User - defaultUserJson - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{  "user": {    "username": "${#TestCase#DRdefaultUserJson}",    "email": "DRdefaultUserJson@rackspace.com",    "enabled": true,    "RAX-AUTH:defaultRegion" : "US"  }}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>"RAX-AUTH:defaultRegion":"US"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#UAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Create User - defaultUser1 null - xml"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users" methodName="Add user - addUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Create User - defaultUser1 null - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;user RAX-AUTH:defaultRegion="" email="DRdefaultUser1@rackspace.com" enabled="true" username="${#TestCase#DRdefaultUser1}" xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:RAX-AUTH="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#UAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Create User - defaultUser1Json null - json"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users" methodName="Add user - addUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Create User - defaultUser1Json null - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{  "user": {    "username": "${#TestCase#DRdefaultUser1Json}",    "email": "DRdefaultUser1Json@rackspace.com",    "enabled": true,    "RAX-AUTH:defaultRegion" : ""  }}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains"><con:configuration><token>"RAX-AUTH:defaultRegion":</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#UAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Create User - defaultUser2 empty string - xml"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users" methodName="Add user - addUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Create User - defaultUser2 empty string - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;user RAX-AUTH:defaultRegion="  " email="DRdefaultUser1@rackspace.com" enabled="true" username="${#TestCase#DRdefaultUser2}" xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:RAX-AUTH="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns4='http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0';
declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:user[1]/@ns4:defaultRegion</path><content>  </content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#UAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Create User - defaultUser2Json empty string - json"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users" methodName="Add user - addUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Create User - defaultUser2Json empty string - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{  "user": {    "username": "${#TestCase#DRdefaultUser2Json}",    "email": "DRdefaultUser2Json@rackspace.com",    "enabled": true,    "RAX-AUTH:defaultRegion" : "  "  }}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>"RAX-AUTH:defaultRegion":"  "</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#UAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Create User - defaultUser3 ignore spaces - xml"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users" methodName="Add user - addUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Create User - defaultUser3 ignore spaces - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;user RAX-AUTH:defaultRegion="  US " email="DRdefaultUser1@rackspace.com" enabled="true" username="${#TestCase#DRdefaultUser3}" xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:RAX-AUTH="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns4='http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0';
declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:user[1]/@ns4:defaultRegion</path><content>  US </content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#UAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Create User - defaultUser3Json ignore spaces - json"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users" methodName="Add user - addUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Create User - defaultUser3Json ignore spaces - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{  "user": {    "username": "${#TestCase#DRdefaultUser3Json}",    "email": "DRdefaultUser3Json@rackspace.com",    "enabled": true,    "RAX-AUTH:defaultRegion" : "  UK  "  }}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>"RAX-AUTH:defaultRegion":"UK"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#UAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store DUpassword - xml"><con:settings/><con:config><script>def DUpassword = context.expand( '${POST - Create User - defaultUser - xml#ResponseAsXml#declare namespace ns2=\'http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0\'; declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:user[1]/@ns2:password}' )
log.info "get DUpassword: " + DUpassword
testRunner.testCase.setPropertyValue("DUpassword",DUpassword)

def DUuserId = context.expand( '${POST - Create User - defaultUser - xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:user[1]/@id}' )
log.info "get DUuserId: " + DUuserId
testRunner.testCase.setPropertyValue("DUuserId", DUuserId)

def DUuserId1 = context.expand( '${POST - Create User - defaultUser1 null - xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:user[1]/@id}' )
log.info "get DUuserId1: " + DUuserId1
testRunner.testCase.setPropertyValue("DUuserId1", DUuserId1)

def DUuserId2 = context.expand( '${POST - Create User - defaultUser2 empty string - xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:user[1]/@id}' )
log.info "get DUuserId2: " + DUuserId2
testRunner.testCase.setPropertyValue("DUuserId2", DUuserId2)

def DUuserId3 = context.expand( '${POST - Create User - defaultUser3 ignore spaces - xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:user[1]/@id}' )
log.info "get DUuserId3: " + DUuserId3
testRunner.testCase.setPropertyValue("DUuserId3", DUuserId3)
</script></con:config></con:testStep><con:testStep type="groovy" name="Store - json"><con:settings/><con:config><script><![CDATA[def responseAsXml = context.expand( '${POST - Create User - defaultUserJson - json#ResponseAsXml}' )
x = responseAsXml.indexOf("<id>");
y = responseAsXml.indexOf("</id>");
DUuserIdJson = responseAsXml.substring(x+4,y);
log.info "get DUuserIdJson: " + DUuserIdJson
testRunner.testCase.setPropertyValue("DUuserIdJson", DUuserIdJson)

def responseAsXml1 = context.expand( '${POST - Create User - defaultUser1Json null - json#ResponseAsXml}' )
x = responseAsXml1.indexOf("<id>");
y = responseAsXml1.indexOf("</id>");
DUuserId1Json = responseAsXml1.substring(x+4,y);
log.info "get DUuserId1Json: " + DUuserId1Json
testRunner.testCase.setPropertyValue("DUuserId1Json", DUuserId1Json)

def responseAsXml2 = context.expand( '${POST - Create User - defaultUser2Json empty string - json#ResponseAsXml}' )
x = responseAsXml2.indexOf("<id>");
y = responseAsXml2.indexOf("</id>");
DUuserId2Json = responseAsXml2.substring(x+4,y);
log.info "get DUuserId2Json: " + DUuserId2Json
testRunner.testCase.setPropertyValue("DUuserId2Json", DUuserId2Json)

def responseAsXml3 = context.expand( '${POST - Create User - defaultUser3Json ignore spaces - json#ResponseAsXml}' )
x = responseAsXml3.indexOf("<id>");
y = responseAsXml3.indexOf("</id>");
DUuserId3Json = responseAsXml3.substring(x+4,y);
log.info "get DUuserId3Json: " + DUuserId3Json
testRunner.testCase.setPropertyValue("DUuserId3Json", DUuserId3Json)





]]></script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Create User - defaultUser - username null - xml"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users" methodName="Add user - addUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Create User - defaultUser - username null - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;user RAX-AUTH:defaultRegion="US" email="DRdefaultUser@rackspace.com" enabled="true" username="" xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:RAX-AUTH="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Username cannot be empty.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#UAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Create User - defaultUserJson - username null - json"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users" methodName="Add user - addUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Create User - defaultUserJson - username null - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{  "user": {    "username": "",    "email": "DRdefaultUserJson@rackspace.com",    "enabled": true,    "RAX-AUTH:defaultRegion" : "UK"  }}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Username cannot be empty.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#UAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Create User - defaultUser - password null - xml"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users" methodName="Add user - addUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Create User - defaultUser - password null - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;user OS-KSADM:password="" RAX-AUTH:defaultRegion="US" email="DRdefaultuser@rackspace.com" enabled="true" username="${#TestCase#DRdefaultuser}" xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:OS-KSADM="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0" xmlns:RAX-AUTH="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns4='http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0';
declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:user[1]/@ns4:defaultRegion</path><content>US</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#UAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Create User - defaultUserJson - password null - json"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users" methodName="Add user - addUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Create User - defaultUserJson - password null - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{  "user": {    "username": "${#TestCase#DRdefaultUserJson}",    "OS-KSADM:password": "",    "email": "DRdefaultUserJson@rackspace.com",    "enabled": true,    "RAX-AUTH:defaultRegion" : "US"  }}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>"RAX-AUTH:defaultRegion":"US"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#UAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Create User - defaultUser - invalid token - xml"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users" methodName="Add user - addUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Create User - defaultUser - invalid token - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;user RAX-AUTH:defaultRegion="US" email="DRdefaultUser@rackspace.com" enabled="true" username="${#TestCase#DRdefaultuser}" xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:RAX-AUTH="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="1234567890" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Create User - defaultUserJson - invalid token - json"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users" methodName="Add user - addUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Create User - defaultUserJson - invalid token - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{  "user": {    "username": "${#TestCase#DRdefaultUserJson}",    "email": "DRdefaultUserJson@rackspace.com",    "enabled": true,    "RAX-AUTH:defaultRegion" : "UK"  }}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="1234567890" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="UpdateUser Request - json"><con:settings/><con:config><script>def updateUserNullJson = '{  "user": {   "id": "${#TestCase#DUuserIdJson}",  "username": "${#TestCase#DRdefaultUserJson}",    "email": "DRdefaultUserJson@rackspace.com",    "enabled": true,    "RAX-AUTH:defaultRegion" : ""  }}'
testRunner.testCase.testSteps["POST - updateUser - defaultuser null - json"].setPropertyValue("Request", updateUserNullJson)

def updateUserEmptyStringJson = '{  "user": {   "id": "${#TestCase#DUuserId1Json}",  "username": "${#TestCase#DRdefaultUser1Json}",    "email": "DRdefaultUser1Json@rackspace.com",    "enabled": true,    "RAX-AUTH:defaultRegion" : "  "  }}'
testRunner.testCase.testSteps["POST - updateUser - defaultuser1 empty string - json"].setPropertyValue("Request", updateUserEmptyStringJson)

def updateUserIgnoreSpacesJson = '{  "user": {   "id": "${#TestCase#DUuserId2Json}",  "username": "${#TestCase#DRdefaultUser2Json}",    "email": "DRdefaultUser2Json@rackspace.com",    "enabled": true,    "RAX-AUTH:defaultRegion" : "  US  "  }}'
testRunner.testCase.testSteps["POST - updateUser - defaultuser2 ignore spaces - json"].setPropertyValue("Request", updateUserIgnoreSpacesJson)

def updateUserJson = '{  "user": {   "id": "${#TestCase#DUuserId3Json}",  "username": "${#TestCase#DRdefaultUser3Json}",    "email": "DRdefaultUser3Json@rackspace.com",    "enabled": true,    "RAX-AUTH:defaultRegion" : "UK"  }}'
testRunner.testCase.testSteps["POST - updateUser - defaultuser3 - json"].setPropertyValue("Request", updateUserJson)

def updateUserUsernameNullJson = '{  "user": {   "id": "${#TestCase#DUuserIdJson}",  "username": "",    "email": "DRdefaultUserJson@rackspace.com",    "enabled": true,    "RAX-AUTH:defaultRegion" : "US"  }}'
testRunner.testCase.testSteps["POST - updateUser - defaultuser - username null - json"].setPropertyValue("Request", updateUserUsernameNullJson)

def updateUserUsernameEmptyStringJson = '{  "user": {   "id": "${#TestCase#DUuserIdJson}",  "username": "  ",    "email": "DRdefaultUserJson@rackspace.com",    "enabled": true,    "RAX-AUTH:defaultRegion" : "US"  }}'
testRunner.testCase.testSteps["POST - updateUser - defaultuser - username empty string - json"].setPropertyValue("Request", updateUserUsernameEmptyStringJson)

def updateUserInvalidUserIdJson = '{  "user": {   "id": "${#TestCase#DUuserIdJson}",  "username": "${#TestCase#DRdefaultUserJson}",    "email": "DRdefaultUserJson@rackspace.com",    "enabled": true,    "RAX-AUTH:defaultRegion" : "UK"  }}'
testRunner.testCase.testSteps["POST - updateUser - defaultuser - invalid userId - json"].setPropertyValue("Request", updateUserInvalidUserIdJson)

def updateUserInvalidUserIdInPayloadJson = '{  "user": {   "id": "12345",  "username": "${#TestCase#DRdefaultUserJson}",    "email": "DRdefaultUserJson@rackspace.com",    "enabled": true,    "RAX-AUTH:defaultRegion" : "US"  }}'
testRunner.testCase.testSteps["POST - updateUser - defaultuser - invalid userId in Payload - json"].setPropertyValue("Request", updateUserInvalidUserIdInPayloadJson)

def updateUserInvalidUsernameJson = '{  "user": {   "id": "${#TestCase#DUuserIdJson}",  "username": "abcdefg2",    "email": "DRdefaultUserJson@rackspace.com",    "enabled": true,    "RAX-AUTH:defaultRegion" : "ORD"  }}'
testRunner.testCase.testSteps["POST - updateUser - defaultuser - invalid username - json"].setPropertyValue("Request", updateUserInvalidUsernameJson)

def updateUserDisabledJson = '{  "user": {   "id": "${#TestCase#DUuserIdJson}",  "username": "${#TestCase#DRdefaultUserJson}",    "email": "DRdefaultUserJson@rackspace.com",    "enabled": false,    "RAX-AUTH:defaultRegion" : "ORD"  }}'
testRunner.testCase.testSteps["POST - updateUser - defaultuser - disabled - json"].setPropertyValue("Request", updateUserDisabledJson)

def updateUserEnabledJson = '{  "user": {   "id": "${#TestCase#DUuserIdJson}",  "username": "${#TestCase#DRdefaultUserJson}",    "email": "DRdefaultUserJson@rackspace.com",    "enabled": true,    "RAX-AUTH:defaultRegion" : "US"  }}'
testRunner.testCase.testSteps["POST - updateUser - defaultuser - enabled - json"].setPropertyValue("Request", updateUserEnabledJson)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUser - defaultuser - username null - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user - updateUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUser - defaultuser - username null - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;user RAX-AUTH:defaultRegion="US" email="DRdefaultUser@rackspace.com" enabled="true" id="${#TestCase#DUuserId}" username="" xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:RAX-AUTH="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Username cannot be empty.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUser - defaultuser - username null - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user - updateUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUser - defaultuser - username null - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{  "user": {   "id": "${#TestCase#DUuserIdJson}",  "username": "",    "email": "DRdefaultUserJson@rackspace.com",    "enabled": true,    "RAX-AUTH:defaultRegion" : "US"  }}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Username cannot be empty.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUser - defaultuser - username empty string - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user - updateUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUser - defaultuser - username empty string - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;user RAX-AUTH:defaultRegion="US" email="DRdefaultUser@rackspace.com" enabled="true" id="${#TestCase#DUuserId}" username="  " xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:RAX-AUTH="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Username cannot be empty.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUser - defaultuser - username empty string - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user - updateUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUser - defaultuser - username empty string - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{  "user": {   "id": "${#TestCase#DUuserIdJson}",  "username": "  ",    "email": "DRdefaultUserJson@rackspace.com",    "enabled": true,    "RAX-AUTH:defaultRegion" : "US"  }}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Username cannot be empty.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUser - defaultuser - invalid userId - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user - updateUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUser - defaultuser - invalid userId - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;user RAX-AUTH:defaultRegion="" email="DRdefaultUser@rackspace.com" enabled="true" id="${#TestCase#DUuserId}" username="${#TestCase#DRdefaultUser}" xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:RAX-AUTH="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User with id: '12345' was not found.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="12345"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUser - defaultuser - invalid userId - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user - updateUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUser - defaultuser - invalid userId - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{  "user": {   "id": "${#TestCase#DUuserIdJson}",  "username": "${#TestCase#DRdefaultUserJson}",    "email": "DRdefaultUserJson@rackspace.com",    "enabled": true,    "RAX-AUTH:defaultRegion" : "UK"  }}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User with id: '12345' was not found.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="12345"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUser - defaultuser - invalid userId in Payload - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user - updateUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUser - defaultuser - invalid userId in Payload - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;user RAX-AUTH:defaultRegion="" email="DRdefaultUser@rackspace.com" enabled="true" id="12345" username="${#TestCase#DRdefaultUser}" xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:RAX-AUTH="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#DRdefaultUser}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace rax-auth='http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0';
declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:user[1]/@rax-auth:defaultRegion</path><content/><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUser - defaultuser - invalid userId in Payload - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user - updateUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUser - defaultuser - invalid userId in Payload - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{  "user": {   "id": "12345",  "username": "${#TestCase#DRdefaultUserJson}",    "email": "DRdefaultUserJson@rackspace.com",    "enabled": true,    "RAX-AUTH:defaultRegion" : "US"  }}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>"RAX-AUTH:defaultRegion":""</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUser - defaultuser - invalid username - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user - updateUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUser - defaultuser - invalid username - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;user RAX-AUTH:defaultRegion="US" email="DRdefaultUser@rackspace.com" enabled="true" id="${#TestCase#DUuserId}" username="abcdefg1" xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:RAX-AUTH="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#DRdefaultUser}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace rax-auth='http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0';
declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:user[1]/@rax-auth:defaultRegion</path><content>US</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUser - defaultuser - invalid username - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user - updateUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUser - defaultuser - invalid username - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{  "user": {   "id": "${#TestCase#DUuserIdJson}",  "username": "abcdefg2",    "email": "DRdefaultUserJson@rackspace.com",    "enabled": true,    "RAX-AUTH:defaultRegion" : "ORD"  }}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>"username":"abcdefg2"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUser - defaultuser - disabled - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user - updateUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUser - defaultuser - disabled - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;user RAX-AUTH:defaultRegion="US" email="DRdefaultUser@rackspace.com" enabled="false" id="${#TestCase#DUuserId}" username="${#TestCase#DRdefaultUser}" xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:RAX-AUTH="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#DRdefaultUser}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace rax-auth='http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0';
declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:user[1]/@rax-auth:defaultRegion</path><content>US</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:user[1]/@enabled</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUser - defaultuser - disabled - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user - updateUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUser - defaultuser - disabled - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{  "user": {   "id": "${#TestCase#DUuserIdJson}",  "username": "${#TestCase#DRdefaultUserJson}",    "email": "DRdefaultUserJson@rackspace.com",    "enabled": false,    "RAX-AUTH:defaultRegion" : "ORD"  }}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>"enabled":false</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUser - defaultuser - enabled - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user - updateUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUser - defaultuser - enabled - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;user RAX-AUTH:defaultRegion="US" email="DRdefaultUser@rackspace.com" enabled="true" id="${#TestCase#DUuserId}" username="${#TestCase#DRdefaultUser}" xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:RAX-AUTH="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#DRdefaultUser}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace rax-auth='http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0';
declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:user[1]/@rax-auth:defaultRegion</path><content>US</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:user[1]/@enabled</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUser - defaultuser - enabled - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user - updateUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUser - defaultuser - enabled - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{  "user": {   "id": "${#TestCase#DUuserIdJson}",  "username": "${#TestCase#DRdefaultUserJson}",    "email": "DRdefaultUserJson@rackspace.com",    "enabled": true,    "RAX-AUTH:defaultRegion" : "US"  }}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>"enabled":true</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUser - defaultuser null - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user - updateUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUser - defaultuser null - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;user RAX-AUTH:defaultRegion="" email="DRdefaultUser@rackspace.com" enabled="true" id="${#TestCase#DUuserId}" username="${#TestCase#DRdefaultUser}" xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:RAX-AUTH="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#DRdefaultUser}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace rax-auth='http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0';
declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:user[1]/@rax-auth:defaultRegion</path><content/><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUser - defaultuser null - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user - updateUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUser - defaultuser null - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{  "user": {   "id": "${#TestCase#DUuserIdJson}",  "username": "${#TestCase#DRdefaultUserJson}",    "email": "DRdefaultUserJson@rackspace.com",    "enabled": true,    "RAX-AUTH:defaultRegion" : ""  }}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>"RAX-AUTH:defaultRegion":""</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUser - defaultuser1 empty string - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user - updateUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUser - defaultuser1 empty string - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;user RAX-AUTH:defaultRegion="  " email="DRdefaultUser1@rackspace.com" enabled="true" id="${#TestCase#DUuserId1}" username="${#TestCase#DRdefaultUser1}" xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:RAX-AUTH="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#DRdefaultUser1}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace rax-auth='http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0';
declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:user[1]/@rax-auth:defaultRegion</path><content>  </content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserId1}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUser - defaultuser1 empty string - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user - updateUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUser - defaultuser1 empty string - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{  "user": {   "id": "${#TestCase#DUuserId1Json}",  "username": "${#TestCase#DRdefaultUser1Json}",    "email": "DRdefaultUser1Json@rackspace.com",    "enabled": true,    "RAX-AUTH:defaultRegion" : "  "  }}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#DRdefaultUser1Json}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>"RAX-AUTH:defaultRegion":"  "</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>"RAX-AUTH:defaultRegion":"  "</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserId1Json}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUser - defaultuser2 ignore spaces - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user - updateUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUser - defaultuser2 ignore spaces - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;user RAX-AUTH:defaultRegion=" US " email="DRdefaultUser2@rackspace.com" enabled="true" id="${#TestCase#DUuserId2}" username="${#TestCase#DRdefaultUser2}" xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:RAX-AUTH="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#DRdefaultUser2}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace rax-auth='http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0';
declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:user[1]/@rax-auth:defaultRegion</path><content> US </content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUser - defaultuser2 ignore spaces - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user - updateUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUser - defaultuser2 ignore spaces - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{  "user": {   "id": "${#TestCase#DUuserId2Json}",  "username": "${#TestCase#DRdefaultUser2Json}",    "email": "DRdefaultUser2Json@rackspace.com",    "enabled": true,    "RAX-AUTH:defaultRegion" : "  US  "  }}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#DRdefaultUser2Json}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>"RAX-AUTH:defaultRegion":"US"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserId2Json}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUser - defaultuser3 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user - updateUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUser - defaultuser3 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;user RAX-AUTH:defaultRegion="UK" email="DRdefaultUser3@rackspace.com" enabled="true" id="${#TestCase#DUuserId3}" username="${#TestCase#DRdefaultUser3}" xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:RAX-AUTH="http://docs.rackspace.com/identity/api/ext/RAX-AUTH/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#DRdefaultUser3}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserId3}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUser - defaultuser3 - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user - updateUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUser - defaultuser3 - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{  "user": {   "id": "${#TestCase#DUuserId3Json}",  "username": "${#TestCase#DRdefaultUser3Json}",    "email": "DRdefaultUser3Json@rackspace.com",    "enabled": true,    "RAX-AUTH:defaultRegion" : "UK"  }}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#DRdefaultUser3Json}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>"RAX-AUTH:defaultRegion":"UK"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserId3Json}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - user - defaultUser - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user - defaultUser - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - user - defaultUser - after deleted - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user - defaultUser - after deleted - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User with id: '${#TestCase#DUuserId}' was not found.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - user - defaultUserJson - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user - defaultUserJson - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserIdJson}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - user - defaultUser1 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user - defaultUser1 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserId1}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - user - defaultUser1Json - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user - defaultUser1Json - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserId1Json}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - user - defaultUser2 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user - defaultUser2 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - user - defaultUser2Json - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user - defaultUser2Json - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserId2Json}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - user - defaultUser3 - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user - defaultUser3 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserId3}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - user - defaultUser3Json - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user - defaultUser3Json - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserId3Json}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - user - UA - xml" disabled="true"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user - UA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#UAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>DRuserAdmin</con:name><con:value>DRuserAdmin</con:value></con:property><con:property><con:name>key</con:name><con:value>ba04b108b7cefcbcbf7c4d8bd05e3857</con:value></con:property><con:property><con:name>mossoId</con:name><con:value>5801084</con:value></con:property><con:property><con:name>nastId</con:name><con:value/></con:property><con:property><con:name>DRdefaultUser</con:name><con:value>DRdefaultUser</con:value></con:property><con:property><con:name>UAuserId</con:name><con:value>193469</con:value></con:property><con:property><con:name>UAtokenId</con:name><con:value/></con:property><con:property><con:name>DUpassword</con:name><con:value/></con:property><con:property><con:name>DUuserId</con:name><con:value/></con:property><con:property><con:name>DRdefaultUser1</con:name><con:value>DRdefaultUser1</con:value></con:property><con:property><con:name>DUuserId1</con:name><con:value/></con:property><con:property><con:name>DRdefaultUser2</con:name><con:value>DRdefaultUser2</con:value></con:property><con:property><con:name>DRdefaultUser3</con:name><con:value>DRdefaultUser3</con:value></con:property><con:property><con:name>DUuserId2</con:name><con:value/></con:property><con:property><con:name>DUuserId3</con:name><con:value/></con:property><con:property><con:name>DRuserAdminJson</con:name><con:value/></con:property><con:property><con:name>DRdefaultUserJson</con:name><con:value>DRdefaultUserJson</con:value></con:property><con:property><con:name>DUuserIdJson</con:name><con:value>194526</con:value></con:property><con:property><con:name>DRdefaultUser1Json</con:name><con:value>DRdefaultUser1Json</con:value></con:property><con:property><con:name>DRdefaultUser2Json</con:name><con:value>DRdefaultUser2Json</con:value></con:property><con:property><con:name>DRdefaultUser3Json</con:name><con:value>DRdefaultUser3Json</con:value></con:property><con:property><con:name>DUuserId1Json</con:name><con:value>194528</con:value></con:property><con:property><con:name>DUuserId2Json</con:name><con:value>194530</con:value></con:property><con:property><con:name>DUuserId3Json</con:name><con:value>194532</con:value></con:property><con:property><con:name>DRdefaultuserPw</con:name><con:value>Password1</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AtomHopper - Migration" searchProperties="true" id="0302a4f1-74a8-46ac-832b-f1fd07cca5e8" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="POST - token - CA - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - CA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#password}" username="${#TestSuite#username}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>token</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access/ns1:token/@id)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token"><con:settings/><con:config><script>def CAtokenId = context.expand( '${POST - token - CA - xml#Response#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:token[1]/@id}' )
log.info "get CAtokenId: " + CAtokenId 

testRunner.testCase.testSuite.setPropertyValue("CAtokenId", CAtokenId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="Auth1234" username="auth"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>token</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access/ns1:token/@id)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store token"><con:settings/><con:config><script>def tokenId = context.expand( '${POST - token - xml#ResponseAsXml#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:token[1]/@id}' )
log.info "get tokenId: " + tokenId
testRunner.testCase.testSuite.setPropertyValue("tokenId" , tokenId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Authenticate Application - xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/tokens" methodName="Authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Authenticate Application - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;authCredentials client_id="18e7a7032733486cd32f472d7bd58f709ac0d221" client_secret="${#TestSuite#clientSecret}" grant_type="CLIENT_CREDENTIALS" xmlns="http://idm.api.rackspace.com/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store tokenId"><con:settings/><con:config><script>def FAtokenId = context.expand( '${POST - Authenticate Application - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:auth[1]/ns3:access_token[1]/@id}' )
log.info "get FAtokenId: " + FAtokenId
testRunner.testCase.setPropertyValue("FAtokenId", FAtokenId)</script></con:config></con:testStep><con:testStep type="restrequest" name="Create Application - xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/applications" methodName="Add an Application" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create Application - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;application customerId="RCN-987-654-321" description="Foundation Test App" name="${#TestCase#appName}" xmlns="http://idm.api.rackspace.com/v1.0">&lt;roles/>&lt;/application></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns3='http://idm.api.rackspace.com/v1.0';
//ns3:application[1]/@name</path><content>${#TestCase#appName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#FAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store applicationId"><con:settings/><con:config><script>def applicationId = context.expand( '${Create Application - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:application[1]/@clientId}' )
log.info "get applicationId: " + applicationId

def applicationSecret = context.expand( '${Create Application - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:application[1]/ns3:secretCredentials[1]/@clientSecret}' )
log.info "get applicationSecret: " + applicationSecret

testRunner.testCase.setPropertyValue("applicationId",applicationId)
testRunner.testCase.setPropertyValue("applicationSecret",applicationSecret)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Authenticate Racker - xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/tokens" methodName="Authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Authenticate Racker - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8"?> &lt;rackerCredentials xmlns="http://idm.api.rackspace.com/v1.0" password="Water1098!" username="shan0433" client_secret="${#TestCase#applicationSecret}" client_id="${#TestCase#applicationId}" grant_type="PASSWORD" /></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store rackerTokenId"><con:settings/><con:config><script>def rackerTokenId = context.expand( '${POST - Authenticate Racker - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:auth[1]/ns3:access_token[1]/@id}' )
log.info "get rackerTokenId: " + rackerTokenId
testRunner.testCase.setPropertyValue("rackerTokenId", rackerTokenId)
</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - validate - xml"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - validate - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>token</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>roles</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:token[1]/@id</path><content>${#TestCase#rackerTokenId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns7:user[1]/ns7:roles[1]/ns7:role[1]/@name</path><content>Racker</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns7:user[1]/ns7:roles[1]/ns7:role[1]/@id</path><content>9</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 3"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns7:user[1]/ns7:roles[1]/ns7:role[2]/@name</path><content>Domain Users</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 4"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns7:user[1]/ns7:roles[1]/ns7:role[3]/@name</path><content>dl_RackGlobal</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 5"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns7:user[1]/ns7:roles[1]/ns7:role[4]/@name</path><content>fs_public</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 6"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns7:user[1]/ns7:roles[1]/ns7:role[5]/@name</path><content>dl_RackUSA</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 7"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns7:user[1]/ns7:roles[1]/ns7:role[6]/@name</path><content>af_sat6</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 8"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns7:user[1]/ns7:roles[1]/ns7:role[7]/@name</path><content>dl_it-qe.so</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#rackerTokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Create User - userAdmin - xml" disabled="true"><con:settings/><con:config service="Auth V1.1" resourcePath="/${#Project#pathv1.1}/users" methodName="POST - createUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Create User - userAdmin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:user enabled="true" id="${#TestCase#AHuserAdminMg}" key="${#TestCase#key}" mossoId="${#TestCase#mossoId}" nastId="${#TestCase#nastId}" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#basicAuth}</con:username><con:password>${#TestSuite#basicAuthPwd}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userByName- xml" disabled="true"><con:settings/><con:config service="identity-admin" methodName="Get a User by Name - getUserByName" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userByName- xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - userByName - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="UserId" disabled="true"><con:configuration><token>id="${#TestSuite#userId}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="UserName"><con:configuration><token> username="${#TestCase#AHuserAdminMg}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:user[1]) >=1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestCase#AHuserAdminMg}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store UAuserId" disabled="true"><con:settings/><con:config><script>def UAuserId = context.expand( '${GET - userByName- xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:user[1]/@id}' )
log.info "get UAuserId: " + UAuserId
testRunner.testCase.setPropertyValue("UAuserId" , UAuserId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Authenticate - userAdmin - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Authenticate - userAdmin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0"> &lt;apiKeyCredentials apiKey="${#TestCase#key}" username="${#TestCase#AHuserAdminMg}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/> &lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store UAtokenId"><con:settings/><con:config><script>def UAtokenId = context.expand( '${POST - Authenticate - userAdmin - xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info "UAtokenId: " + UAtokenId
testRunner.testCase.setPropertyValue("UAtokenId", UAtokenId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Create User - defaultUser - xml" disabled="true"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users" methodName="Add user - addUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Create User - defaultUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:user display-name="${#TestCase#AHdefaultUserMg}" email="defaultUser@rackspace.com" enabled="true" username="${#TestCase#AHdefaultUserMg}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#UAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store DUpassword" disabled="true"><con:settings/><con:config><script>def DUpassword = context.expand( '${POST - Create User - defaultUser - xml#ResponseAsXml#declare namespace ns2=\'http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0\'; declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:user[1]/@ns2:password}' )
log.info "get DUpassword: " + DUpassword
testRunner.testCase.setPropertyValue("DUpassword",DUpassword)



</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Authenticate - defaultUser - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Authenticate - defaultUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#DUpassword}" username="${#TestCase#AHdefaultUserMg}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Migrate User - xml"><con:settings/><con:config service="Migration Resource" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="migrateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Migrate User - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="X-Auth-Token" value="${#TestCase#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>//migrateUserResponseType[1]/users[1]/@valid</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>//migrateUserResponseType[1]/users[2]/username[1]</path><content>${#TestCase#AHuserAdminMg}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>//migrateUserResponseType[1]/users[1]/username[1]</path><content>${#TestCase#AHdefaultUserMg}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="username" value="${#TestCase#AHuserAdminMg}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - List Atom Hopper - aml"><con:settings/><con:config service="Atom Hopper" resourcePath="/${#Project#AHpath1}" methodName="GET - listAtomHopperDeleted" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - List Atom Hopper - aml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#atomHopperEndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://www.w3.org/2005/Atom';
//ns1:feed[1]/ns1:entry/ns1:user/@username</path><content>${#TestCase#AHdefaultUserMg}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://www.w3.org/2005/Atom';
//ns1:feed[1]/ns1:entry/ns1:user/@username</path><content>${#TestCase#AHuserAdminMg}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Unmigrate User - xml"><con:settings/><con:config service="Migration Resource" resourcePath="/${#Project#migrationPath}/users/{username}/unmigrate" methodName="unmigrateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Unmigrate User - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="X-Auth-Token" value="${#TestCase#rackerTokenId}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 202</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="username" value="${#TestCase#AHuserAdminMg}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - user - defaultUser - xml" disabled="true"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user - defaultUser - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="193084"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - user - xml" disabled="true"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#UAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DEL - Delete Application - xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/applications/{applicationId}" methodName="Delete an Application" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DEL - Delete Application - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="applicationId" value="${#TestCase#applicationId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#FAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>AHuserAdminMg</con:name><con:value>AHuserAdminMg3</con:value></con:property><con:property><con:name>key</con:name><con:value>ba04b108b7cefcbcbf7c4d8bd05e3857</con:value></con:property><con:property><con:name>mossoId</con:name><con:value>5800104</con:value></con:property><con:property><con:name>nastId</con:name><con:value>Nast12345</con:value></con:property><con:property><con:name>UAtokenId</con:name><con:value/></con:property><con:property><con:name>AHdefaultUserMg</con:name><con:value>AHdefaultUserMg2</con:value></con:property><con:property><con:name>DUpassword</con:name><con:value>YtlA9wHn</con:value></con:property><con:property><con:name>GAadmin</con:name><con:value>auth</con:value></con:property><con:property><con:name>GAadminPwd</con:name><con:value>Auth1234</con:value></con:property><con:property><con:name>UAuserId</con:name><con:value>193083</con:value></con:property><con:property><con:name>appName</con:name><con:value>AHfoundApp</con:value></con:property><con:property><con:name>FAtokenId</con:name><con:value/></con:property><con:property><con:name>applicationId</con:name><con:value/></con:property><con:property><con:name>applicationSecret</con:name><con:value/></con:property><con:property><con:name>rackerTokenId</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:properties><con:property><con:name>username</con:name><con:value>auth</con:value></con:property><con:property><con:name>password</con:name><con:value>auth123</con:value></con:property><con:property><con:name>tokenId</con:name><con:value/></con:property><con:property><con:name>clientSecret</con:name><con:value>password1</con:value></con:property><con:property><con:name>appName</con:name><con:value>foundAppTest01</con:value></con:property><con:property><con:name>appNameJson</con:name><con:value>foundAppTest02</con:value></con:property><con:property><con:name>applicationId</con:name><con:value/></con:property><con:property><con:name>applicationSecret</con:name><con:value/></con:property><con:property><con:name>applicationIdJson</con:name><con:value/></con:property><con:property><con:name>applicationSecretJson</con:name><con:value/></con:property><con:property><con:name>rackerTokenId</con:name><con:value/></con:property><con:property><con:name>rackerTokenIdJson</con:name><con:value/></con:property><con:property><con:name>rackerId</con:name><con:value/></con:property><con:property><con:name>rackerTokenId1</con:name><con:value/></con:property><con:property><con:name>CAtokenId</con:name><con:value/></con:property><con:property><con:name>basicAuth</con:name><con:value>auth</con:value></con:property><con:property><con:name>basicAuthpwd</con:name><con:value>auth123</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="Functional - Sprint13"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Existing Usernames" searchProperties="true" id="c399fd87-9e58-42d6-9bb9-793f1bd3137e" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="POST - token - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#CApassword}" username="${#TestSuite#CAusername}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>token id="</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access/ns1:token/@id)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Authenticate Application - xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/tokens" methodName="Authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Authenticate Application - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;authCredentials client_id="18e7a7032733486cd32f472d7bd58f709ac0d221" client_secret="${#TestSuite#clientSecret}" grant_type="CLIENT_CREDENTIALS" xmlns="http://idm.api.rackspace.com/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token"><con:settings/><con:config><script>def CAtokenId = context.expand( '${POST - token - xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info "get CAtokenId: " + CAtokenId
testRunner.testCase.setPropertyValue("CAtokenId", CAtokenId)

def FAtokenId = context.expand( '${POST - Authenticate Application - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:auth[1]/ns3:access_token[1]/@id}' )
log.info "get FAtokenId: " + FAtokenId
testRunner.testCase.setPropertyValue("FAtokenId", FAtokenId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Add User - UA - xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/users" methodName="Add a User" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Add User - UA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<user customerId="RCN-000-111-000" displayName="Alan Erwin" email="alan.erwin@example.org" firstName="Alan" lastName="Smith" middleName="Lee" personId="RPN-111-111-111" prefLanguage="US_en" region="SAT" timeZone="America/Chicago" username="${#TestCase#GAuserAdmin}" xmlns="http://idm.api.rackspace.com/v1.0">
<roles/><secret secretAnswer="Buddy" secretQuestion="What is your dogs name?"/>
<passwordCredentials>
<currentPassword password="C@n+f001me!"/>
</passwordCredentials>
</user>]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#FAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store UA"><con:settings/><con:config><script>def GAUAuserId = context.expand( '${POST - Add User - UA - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:user[1]/@id}' )
log.info "get GAUAuserId: " + GAUAuserId
testRunner.testCase.setPropertyValue("GAUAuserId", GAUAuserId)

def GAUAusername = context.expand( '${POST - Add User - UA - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:user[1]/@username}' )
log.info "get GAUAusername: " + GAUAusername
testRunner.testCase.setPropertyValue("GAUAusername", GAUAusername)

def GAUApassword = context.expand( '${POST - Add User - UA - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:user[1]/ns3:passwordCredentials[1]/ns3:currentPassword[1]/@password}' )
log.info "get GAUApassword: " + GAUApassword
testRunner.testCase.setPropertyValue("GAUApassword", GAUApassword)

</script></con:config></con:testStep><con:testStep type="restrequest" name="PUT - Add UserRole - UA - xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/users/{userId}/roles/{roleId}" methodName="Grant User a Global Role" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - Add UserRole - UA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#GAUAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#FAtokenId}"/>
  <con:entry key="roleId" value="3"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - UA - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - UA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#GAUApassword}" username="${#TestCase#GAuserAdmin}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access/ns1:token/@id)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Add User - DU - xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/users" methodName="Add a User" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Add User - DU - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<user customerId="RCN-000-111-000" displayName="Alan Erwin" email="alan.erwin@example.org" firstName="Alan" lastName="Smith" middleName="Lee" personId="RPN-111-111-111" prefLanguage="US_en" region="SAT" timeZone="America/Chicago" username="${#TestCase#GAdefaultUser}" xmlns="http://idm.api.rackspace.com/v1.0">
<roles/><secret secretAnswer="Buddy" secretQuestion="What is your dogs name?"/>
<passwordCredentials>
<currentPassword password="C@n+f001me!"/>
</passwordCredentials>
</user>]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#FAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store DU"><con:settings/><con:config><script>def GAonlyPassword = context.expand( '${POST - Add User - DU - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:user[1]/ns3:passwordCredentials[1]/ns3:currentPassword[1]/@password}' )
log.info "get GAonlyPassword: " + GAonlyPassword

def GAonlyUserId = context.expand( '${POST - Add User - DU - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:user[1]/@id}' )
log.info "get GAonlyUserId: " + GAonlyUserId

def GADUusername = context.expand( '${POST - Add User - DU - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:user[1]/@username}' )
log.info "get GADUusername: " + GADUusername

testRunner.testCase.setPropertyValue("GAonlyPassword", GAonlyPassword)
testRunner.testCase.setPropertyValue("GAonlyUserId", GAonlyUserId)
testRunner.testCase.setPropertyValue("GADUusername", GADUusername)</script></con:config></con:testStep><con:testStep type="restrequest" name="PUT - Add UserRole - DU - xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/users/{userId}/roles/{roleId}" methodName="Grant User a Global Role" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - Add UserRole - DU - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#GAonlyUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#FAtokenId}"/>
  <con:entry key="roleId" value="2"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - DU - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - DU - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#GAonlyPassword}" username="${#TestCase#GAdefaultUser}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access/ns1:token/@id)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Create User - userAdmin - xml"><con:settings/><con:config service="Auth V1.1" resourcePath="/${#Project#pathv1.1}/users" methodName="POST - createUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Create User - userAdmin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:user enabled="true" id="${#TestCase#UAusername}" key="${#TestCase#key}" mossoId="${#TestCase#mossoId}" nastId="${#TestCase#nastId}" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#CAusername}</con:username><con:password>${#TestSuite#CApassword}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userByName- xml"><con:settings/><con:config service="identity-admin" methodName="Get a User by Name - getUserByName" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userByName- xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - userByName - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="UserId" disabled="true"><con:configuration><token>id="${#TestSuite#userId}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="UserName"><con:configuration><token> username="${#TestCase#UAusername}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:user[1]) >=1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestCase#UAusername}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store UAuserId"><con:settings/><con:config><script>def UAuserId = context.expand( '${GET - userByName- xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:user[1]/@id}' )
log.info "get UAuserId: " + UAuserId
testRunner.testCase.setPropertyValue("UAuserId" , UAuserId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Authenticate - userAdmin - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Authenticate - userAdmin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0"> &lt;apiKeyCredentials apiKey="${#TestCase#key}" username="${#TestCase#UAusername}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/> &lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store UAtokenId"><con:settings/><con:config><script>def UAtokenId = context.expand( '${POST - Authenticate - userAdmin - xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info "get UAtokenId: " + UAtokenId
testRunner.testCase.setPropertyValue("UAtokenId", UAtokenId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Create User - userAdmin - 409 - xml"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users" methodName="Add user - addUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Create User - userAdmin - 409 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:user display-name="${#TestCase#GAUAusername}" email="userAdmin@rackspace.com" enabled="true" username="${#TestCase#GAUAusername}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 409</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Username ${#TestCase#GAUAusername} already exists</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains"><con:configuration><token>response-source: cloud-auth
</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#CAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Create User - defaultUser - 409 - xml"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users" methodName="Add user - addUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Create User - defaultUser - 409 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:user display-name="${#TestCase#DUusername}" email="defaultUser@rackspace.com" enabled="true" username="${#TestCase#GADUusername}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 409</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Username ${#TestCase#GADUusername} already exists</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" name="Not Contains"><con:configuration><token>response-source: cloud-auth
</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#UAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - user - defaultUser - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user - defaultUser - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#GAonlyUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE -  HARD Delete - DU - xml"><con:settings/><con:config service="GA-SoftDelete" resourcePath="/${#Project#pathSD}/softDeleted/users/{user_id}" methodName="Delete from soft delete - softDeleted" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE -  HARD Delete - DU - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestCase#GAonlyUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - user - UA - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user - UA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#GAUAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE -  HARD Delete - UA - xml"><con:settings/><con:config service="GA-SoftDelete" resourcePath="/${#Project#pathSD}/softDeleted/users/{user_id}" methodName="Delete from soft delete - softDeleted" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE -  HARD Delete - UA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestCase#GAUAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - user - userAdmin - xml"><con:settings/><con:config service="Auth V1.1" resourcePath="/${#Project#pathv1.1}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user - userAdmin - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#UAusername}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>tokenId</con:name><con:value>1589a9ab-c880-471e-9676-d1b3b30a8c04</con:value></con:property><con:property><con:name>FAtokenId</con:name><con:value/></con:property><con:property><con:name>GAdefaultUser</con:name><con:value>GAdefaultUserExists</con:value></con:property><con:property><con:name>GAonlyPassword</con:name><con:value/></con:property><con:property><con:name>GAonlyUserId</con:name><con:value/></con:property><con:property><con:name>UAusername</con:name><con:value>CAuserAdmin8923</con:value></con:property><con:property><con:name>key</con:name><con:value>ba04b108b7cefcbcbf7c4d8bd05e3857</con:value></con:property><con:property><con:name>mossoId</con:name><con:value>5801087</con:value></con:property><con:property><con:name>nastId</con:name><con:value/></con:property><con:property><con:name>CAtokenId</con:name><con:value/></con:property><con:property><con:name>UAtokenId</con:name><con:value/></con:property><con:property><con:name>GAuserAdmin</con:name><con:value>GAuserAdminExists</con:value></con:property><con:property><con:name>GAUAuserId</con:name><con:value/></con:property><con:property><con:name>GAUApassword</con:name><con:value/></con:property><con:property><con:name>GADUusername</con:name><con:value/></con:property><con:property><con:name>GAUAusername</con:name><con:value/></con:property><con:property><con:name>UAuserId</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Monitoring As a Service" searchProperties="true" id="859d3e62-093c-4bb8-b0e0-25f44f589b8e" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="POST - token - CA - xml" id="e8bc5213-d4c5-44eb-8553-2858de1ec961"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - CA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#CApassword}" username="${#TestSuite#CAusername}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>token</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access/ns1:token/@id)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - GA - xml" id="00bea01a-cb86-4b6e-8e48-5e729dec04df"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - GA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#GApassword}" username="${#TestSuite#GAusername}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>token</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access/ns1:token/@id)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store CA token" id="63298dca-e0de-446a-b7d7-e1da008ca6a0"><con:settings/><con:config><script>def CAtokenId = context.expand( '${POST - token - CA - xml#Response#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:token[1]/@id}' )
log.info "get CATokenId: " + CAtokenId 
testRunner.testCase.setPropertyValue("CAtokenId", CAtokenId)

def GAtokenId = context.expand( '${POST - token - GA - xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info "get GAtokenId: " + GAtokenId
testRunner.testCase.setPropertyValue("GAtokenId", GAtokenId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Authenticate Application - xml" id="44ef130d-710e-44fd-91c6-74085f866d14"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/tokens" methodName="Authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Authenticate Application - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;authCredentials client_id="18e7a7032733486cd32f472d7bd58f709ac0d221" client_secret="${#TestSuite#clientSecret}" grant_type="CLIENT_CREDENTIALS" xmlns="http://idm.api.rackspace.com/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store tokenId" id="a07fd99f-995a-494b-8ae9-93d1507c27b7"><con:settings/><con:config><script>def FAtokenId = context.expand( '${POST - Authenticate Application - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:auth[1]/ns3:access_token[1]/@id}' )
log.info "get FAtokenId: " + FAtokenId
testRunner.testCase.setPropertyValue("FAtokenId", FAtokenId)</script></con:config></con:testStep><con:testStep type="restrequest" name="Create Application - xml" id="37fdaea4-a94e-4d95-b1a6-cc3fde3c753f"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/applications" methodName="Add an Application" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create Application - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;application customerId="RCN-987-654-321" description="Foundation Test App" name="${#TestCase#appName}" xmlns="http://idm.api.rackspace.com/v1.0">&lt;roles/>&lt;/application></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns3='http://idm.api.rackspace.com/v1.0';
//ns3:application[1]/@name</path><content>${#TestCase#appName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#FAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store applicationId" id="dedcb139-8e2d-413e-94b6-97417d3f7e3e"><con:settings/><con:config><script>def applicationId = context.expand( '${Create Application - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:application[1]/@clientId}' )
log.info "get applicationId: " + applicationId

def applicationSecret = context.expand( '${Create Application - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:application[1]/ns3:secretCredentials[1]/@clientSecret}' )
log.info "get applicationSecret: " + applicationSecret

testRunner.testCase.setPropertyValue("applicationId",applicationId)
testRunner.testCase.setPropertyValue("applicationSecret",applicationSecret)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - CreateServiceAdmin - xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/users" methodName="Add a User" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - CreateServiceAdmin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<user customerId="RCN-000-111-000" displayName="test user" email="test.user@example.org" firstName="SAtest" lastName="Smith" middleName="Lee" personId="RPN-111-111-111" prefLanguage="US_en" region="SAT" timeZone="America/Chicago" username="${#TestCase#SAusername}" xmlns="http://idm.api.rackspace.com/v1.0">
<roles id="4"/><secret secretAnswer="Buddy" secretQuestion="What is your dogs name?"/>
<passwordCredentials>
<currentPassword password="${#TestCase#SApassword}"/>
</passwordCredentials>
</user>]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==201</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#FAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store SAuserId"><con:settings/><con:config><script>def userId = context.expand( '${POST - CreateServiceAdmin - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:user[1]/@id}' )
testRunner.testCase.setPropertyValue("SAuserId",userId)
log.info "get userId: " + userId
</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - addRole SA -xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/users/{userId}/roles/{roleId}" methodName="Grant User a Global Role" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addRole SA -xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#SAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#FAtokenId}"/>
  <con:entry key="roleId" value="4"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listServiceAdminRole -xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/users/{user_id}/roles" methodName="List User Global Roles - listUserGlobalRoles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listServiceAdminRole -xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:roles[1]/ns7:role[1]/@name</path><content>identity:service-admin</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestCase#SAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Authenticate ServiceAdmin - xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/tokens" methodName="Authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Authenticate ServiceAdmin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;authCredentials client_id="18e7a7032733486cd32f472d7bd58f709ac0d221" client_secret="password1" grant_type="PASSWORD" password="${#TestCase#SApassword}" username="${#TestCase#SAusername}" xmlns="http://idm.api.rackspace.com/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store SAtokenId"><con:settings/><con:config><script>def SAtokenId = context.expand( '${POST - Authenticate ServiceAdmin - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:auth[1]/ns3:access_token[1]/@id}' )
log.info "get SAtokenId: " + SAtokenId
testRunner.testCase.testSuite.setPropertyValue("SAtokenId",SAtokenId);

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="dc1659ba-430f-4cd0-b186-6667cc04ee61"><con:settings/><con:config><script>UAusername = "userAdmin"+ System.currentTimeMillis()
log.info UAusername
testRunner.testCase.setPropertyValue("UAusername", UAusername)
</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Create User - userAdmin - xml"><con:settings/><con:config service="Auth V1.1" resourcePath="/${#Project#pathv1.1}/users" methodName="POST - createUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Create User - userAdmin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:user enabled="true" id="${#TestCase#UAusername}" key="${#TestCase#key}" mossoId="${#TestCase#mossoId}" nastId="${#TestCase#nastId}" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#CAusername}</con:username><con:password>${#TestSuite#CApassword}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userByName- xml"><con:settings/><con:config service="identity-admin" methodName="Get a User by Name - getUserByName" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userByName- xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - userByName - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="UserId" disabled="true"><con:configuration><token>id="${#TestSuite#userId}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="UserName"><con:configuration><token> username="${#TestCase#UAusername}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:user[1]) >=1</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestCase#UAusername}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store UAuserId"><con:settings/><con:config><script>def UAuserId = context.expand( '${GET - userByName- xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:user[1]/@id}' )
log.info "get UAuserId: " + UAuserId
testRunner.testCase.setPropertyValue("UAuserId" , UAuserId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Authenticate - userAdmin - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Authenticate - userAdmin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0"> &lt;apiKeyCredentials apiKey="${#TestCase#key}" username="${#TestCase#UAusername}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/> &lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store UAtokenId"><con:settings/><con:config><script>def tenantId = context.expand( '${POST - Create User - userAdmin - xml#ResponseAsXml#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:user[1]/@mossoId}' )
log.info "get tenantId: " + tenantId
testRunner.testCase.setPropertyValue("tenantId", tenantId)

def UAtokenId = context.expand( '${POST - Authenticate - userAdmin - xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info "get UAtokenId: " + UAtokenId
testRunner.testCase.setPropertyValue("UAtokenId", UAtokenId)</script></con:config></con:testStep><con:testStep type="restrequest" name="Copy of GET - tokenById - validate - belongsTo - xml" id="181b1e44-13f3-4c0e-91d6-c95e1cb2773e"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of GET - tokenById - validate - belongsTo - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestSuite#tokenId}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:token[1]/@id</path><content>${#TestSuite#tokenId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#UAtokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#SAtokenId}"/>
  <con:entry key="belongsTo" value="${#TestCase#tenantId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Copy of Groovy Script" id="4202ef33-7af9-4bf7-a60a-02f89ee3df40"><con:settings/><con:config><script>DUusername = "defaultUser"+ System.currentTimeMillis()
log.info DUusername
testRunner.testCase.setPropertyValue("DUusername", DUusername)
</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Create User - defaultUser - xml" id="1d5f485d-06e7-4ccd-b90c-922ad4e61825"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users" methodName="Add user - addUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Create User - defaultUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:user display-name="${#TestCase#DUusername}" email="defaultUser@rackspace.com" enabled="true" username="${#TestCase#DUusername}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:user[1]/@username</path><content>${#TestCase#DUusername}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#UAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store DUpassword" id="c6ae3b12-6682-4b61-bf85-3bccb2a0bd35"><con:settings/><con:config><script>def DUpassword = context.expand( '${POST - Create User - defaultUser - xml#ResponseAsXml#declare namespace ns2=\'http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0\'; declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:user[1]/@ns2:password}' )
log.info "get DUpassword: " + DUpassword
testRunner.testCase.setPropertyValue("DUpassword", DUpassword)

def DUuserId = context.expand( '${POST - Create User - defaultUser - xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:user[1]/@id}' )
log.info "get DUuserId: "  + DUuserId
testRunner.testCase.setPropertyValue("DUuserId", DUuserId)</script></con:config></con:testStep><con:testStep type="restrequest" name="Copy of POST - token - CA - xml" id="87682a3c-1e71-494f-9192-496b9b36a11b"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of POST - token - CA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#DUpassword}" username="${#TestCase#DUusername}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>token</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access/ns1:token/@id)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - user - defaultUser - xml" id="0548f43f-c9f2-4545-97ca-67777e3b5223"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user - defaultUser - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - user - userAdmin - xml" id="9b9ca5ef-0697-475d-8e5f-927a58af730c"><con:settings/><con:config service="Auth V1.1" resourcePath="/${#Project#pathv1.1}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user - userAdmin - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#UAusername}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - user - SA - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - user - SA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#SAUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#CAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE -  HARD Delete - SA - xml"><con:settings/><con:config service="GA-SoftDelete" resourcePath="/${#Project#pathSD}/softDeleted/users/{user_id}" methodName="Delete from soft delete - softDeleted" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE -  HARD Delete - SA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestCase#SAUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#GAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DEL - Delete Application - xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/applications/{applicationId}" methodName="Delete an Application" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DEL - Delete Application - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="applicationId" value="${#TestCase#applicationId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#FAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>SAusername</con:name><con:value>cloudfiles</con:value></con:property><con:property><con:name>SApassword</con:name><con:value>Ud2ack8hibJ5bje2lks</con:value></con:property><con:property><con:name>FAtokenId</con:name><con:value>d3b7a924276c414288576d599668c7ea</con:value></con:property><con:property><con:name>SAuserId</con:name><con:value>10035437</con:value></con:property><con:property><con:name>CAtokenId</con:name><con:value>e973f4be-869a-42e2-b4d7-a7a770e87bf8</con:value></con:property><con:property><con:name>UAusername</con:name><con:value>userAdmin1343930257123</con:value></con:property><con:property><con:name>key</con:name><con:value>ba04b108b7cefcbcbf7c4d8bd05e3857</con:value></con:property><con:property><con:name>mossoId</con:name><con:value>5800524</con:value></con:property><con:property><con:name>nastId</con:name><con:value/></con:property><con:property><con:name>UAuserId</con:name><con:value>199159</con:value></con:property><con:property><con:name>UAtokenId</con:name><con:value>733e7e8e-114c-4db8-b3b7-b036d79f1e82</con:value></con:property><con:property><con:name>tenantName</con:name><con:value>testTenantMaas:1</con:value></con:property><con:property><con:name>tenantId</con:name><con:value>5800524</con:value></con:property><con:property><con:name>appName</con:name><con:value>maasFoundation</con:value></con:property><con:property><con:name>applicationId</con:name><con:value>9d4cd408d16e2660379a8e803b57110ba6c7f1bd</con:value></con:property><con:property><con:name>applicationSecret</con:name><con:value>6745f1753576f74f691b3b7c9c1d8166a8522cbd</con:value></con:property><con:property><con:name>roleName</con:name><con:value>maasRole</con:value></con:property><con:property><con:name>roleId</con:name><con:value>10014534</con:value></con:property><con:property><con:name>DUusername</con:name><con:value>defaultUser1343930260098</con:value></con:property><con:property><con:name>DUpassword</con:name><con:value>PDMKeEx6</con:value></con:property><con:property><con:name>GAtokenId</con:name><con:value>e973f4be-869a-42e2-b4d7-a7a770e87bf8</con:value></con:property><con:property><con:name>DUuserId</con:name><con:value>199160</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>44ef130d-710e-44fd-91c6-74085f866d14</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a07fd99f-995a-494b-8ae9-93d1507c27b7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e8bc5213-d4c5-44eb-8553-2858de1ec961</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>63298dca-e0de-446a-b7d7-e1da008ca6a0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>dc1659ba-430f-4cd0-b186-6667cc04ee61</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>37fdaea4-a94e-4d95-b1a6-cc3fde3c753f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>dedcb139-8e2d-413e-94b6-97417d3f7e3e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1d5f485d-06e7-4ccd-b90c-922ad4e61825</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4202ef33-7af9-4bf7-a60a-02f89ee3df40</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>87682a3c-1e71-494f-9192-496b9b36a11b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c6ae3b12-6682-4b61-bf85-3bccb2a0bd35</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>181b1e44-13f3-4c0e-91d6-c95e1cb2773e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>00bea01a-cb86-4b6e-8e48-5e729dec04df</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0548f43f-c9f2-4545-97ca-67777e3b5223</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9b9ca5ef-0697-475d-8e5f-927a58af730c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>CAusername</con:name><con:value>auth</con:value></con:property><con:property><con:name>CApassword</con:name><con:value>auth123</con:value></con:property><con:property><con:name>clientSecret</con:name><con:value>password1</con:value></con:property><con:property><con:name>SAtokenId</con:name><con:value>e701c67e299643ac8c7eb2d3d47b3b45</con:value></con:property><con:property><con:name>GAusername</con:name><con:value>auth</con:value></con:property><con:property><con:name>GApassword</con:name><con:value>Auth1234</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="Funcational - Sprint 14"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Sync tokens" searchProperties="true" id="3ab58952-2140-4e86-b509-2b8aaf90c7f6" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="POST - token - xml" id="e74d81a2-8cc7-4e42-8e90-2f6b1a7974a9"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#GAadminPwd}" username="${#TestSuite#GAadmin}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>token</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access/ns1:token/@id)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token" id="8c85ea0e-728f-4bf1-8d58-eb84169e5bea"><con:settings/><con:config><script>def tokenId = context.expand( '${POST - token - xml#ResponseAsXml#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:token[1]/@id}' )
log.info "get tokenId: " + tokenId
testRunner.testCase.testSuite.setPropertyValue("tokenId", tokenId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Authenticate Application - xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/tokens" methodName="Authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Authenticate Application - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;authCredentials client_id="18e7a7032733486cd32f472d7bd58f709ac0d221" client_secret="${#TestSuite#clientSecret}" grant_type="CLIENT_CREDENTIALS" xmlns="http://idm.api.rackspace.com/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store tokenId"><con:settings/><con:config><script>def FAtokenId = context.expand( '${POST - Authenticate Application - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:auth[1]/ns3:access_token[1]/@id}' )
log.info "get FAtokenId: " + FAtokenId
testRunner.testCase.setPropertyValue("FAtokenId", FAtokenId)</script></con:config></con:testStep><con:testStep type="restrequest" name="Create Application - xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/applications" methodName="Add an Application" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Create Application - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;application customerId="RCN-987-654-321" description="Foundation Test App" name="${#TestCase#appName}" xmlns="http://idm.api.rackspace.com/v1.0">&lt;roles/>&lt;/application></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns3='http://idm.api.rackspace.com/v1.0';
//ns3:application[1]/@name</path><content>${#TestCase#appName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#FAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store applicationId"><con:settings/><con:config><script>def applicationId = context.expand( '${Create Application - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:application[1]/@clientId}' )
log.info "get applicationId: " + applicationId

def applicationSecret = context.expand( '${Create Application - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:application[1]/ns3:secretCredentials[1]/@clientSecret}' )
log.info "get applicationSecret: " + applicationSecret

testRunner.testCase.setPropertyValue("applicationId",applicationId)
testRunner.testCase.setPropertyValue("applicationSecret",applicationSecret)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - CreateServiceAdmin - xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/users" methodName="Add a User" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - CreateServiceAdmin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request><![CDATA[<user customerId="RCN-000-111-000" displayName="test user" email="test.user@example.org" firstName="SAtest" lastName="Smith" middleName="Lee" personId="RPN-111-111-111" prefLanguage="US_en" region="SAT" timeZone="America/Chicago" username="${#TestCase#SAusername}" xmlns="http://idm.api.rackspace.com/v1.0">
<roles id="4"/><secret secretAnswer="Buddy" secretQuestion="What is your dogs name?"/>
<passwordCredentials>
<currentPassword password="${#TestCase#SApassword}"/>
</passwordCredentials>
</user>]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==201</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#FAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store SAuserId"><con:settings/><con:config><script>def userId = context.expand( '${POST - CreateServiceAdmin - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:user[1]/@id}' )
testRunner.testCase.setPropertyValue("SAuserId",userId)
log.info "get userId: " + userId
</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - addRole SA -xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/users/{userId}/roles/{roleId}" methodName="Grant User a Global Role" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addRole SA -xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#SAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#FAtokenId}"/>
  <con:entry key="roleId" value="4"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listServiceAdminRole -xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/users/{user_id}/roles" methodName="List User Global Roles - listUserGlobalRoles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listServiceAdminRole -xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:roles[1]/ns7:role[1]/@name</path><content>identity:service-admin</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestCase#SAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Authenticate ServiceAdmin - xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/tokens" methodName="Authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Authenticate ServiceAdmin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;authCredentials client_id="18e7a7032733486cd32f472d7bd58f709ac0d221" client_secret="password1" grant_type="PASSWORD" password="${#TestCase#SApassword}" username="${#TestCase#SAusername}" xmlns="http://idm.api.rackspace.com/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store SAtokenId"><con:settings/><con:config><script>def SAtokenId = context.expand( '${POST - Authenticate ServiceAdmin - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:auth[1]/ns3:access_token[1]/@id}' )
log.info "get SAtokenId: " + SAtokenId
testRunner.testCase.testSuite.setPropertyValue("SAtokenId",SAtokenId);

</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - Cloud - xml"><con:settings/><con:config service="identity-admin" resourcePath="/v2.0/tokens" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - Cloud - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#CAendpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#SApassword}" username="${#TestCase#SAusername}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - token - CA - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - CA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#SApassword}" username="${#TestCase#SAusername}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>token</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access/ns1:token/@id)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:access[1]/ns1:token)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1"><con:configuration><scriptText>def response = messageExchange.responseHeaders['response-source']
assert response.contains ("cloud-auth")
</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="compare" id="9ca84b8f-a99f-46a6-ae3f-587f5b89d141"><con:settings/><con:config><script>def CAtoken = context.expand( '${POST - token - Cloud - xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
def GAtoken = context.expand( '${POST - token - CA - xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info "get CAtoken: " + CAtoken
log.info "get GAtoken: " + GAtoken
assert CAtoken == GAtoken

testRunner.testCase.setPropertyValue("GAtoken", GAtoken)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - validate - xml" id="f489e895-d55a-4716-8cd9-6a008825f389"><con:settings/><con:config service="identity-admin" methodName="Validate Token - validateToken" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - validate - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>token</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>roles</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:token[1]/@id</path><content>${#TestCase#GAtoken}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1" disabled="true"><con:configuration><scriptText>def response = messageExchange.responseHeaders['response-source']

if (response.contains ("cloud-auth"))
{
	assert true;	
}
</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#GAtoken}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DEL - Delete Application - xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/applications/{applicationId}" methodName="Delete an Application" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DEL - Delete Application - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="applicationId" value="${#TestCase#applicationId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#FAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE deleteServiceAdmin - xml"><con:settings/><con:config service="FoundationAPI_New" resourcePath="/${#Project#foundationPath}/users/{userId}" methodName="Delete a User" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE deleteServiceAdmin - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#SAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#FAtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="HARD DELETE -  deleteServiceAdmin - xml"><con:settings/><con:config service="GA-SoftDelete" resourcePath="/${#Project#pathSD}/softDeleted/users/{user_id}" methodName="Delete from soft delete - softDeleted" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="HARD DELETE -  deleteServiceAdmin - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestCase#SAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>appName</con:name><con:value>syncTestApplication</con:value></con:property><con:property><con:name>FAtokenId</con:name><con:value>2e8a55cbfafc464aa33524ad157fad78</con:value></con:property><con:property><con:name>applicationId</con:name><con:value>1b34c86d9ff0a4922d825a7597f2ed6859bbeaea</con:value></con:property><con:property><con:name>applicationSecret</con:name><con:value>6836ea1c2a17d67fd9c71ed747ba9c7d026aa115</con:value></con:property><con:property><con:name>SAusername</con:name><con:value>cloudfiles</con:value></con:property><con:property><con:name>SApassword</con:name><con:value>Ud2ack8hibJ5bje2lks</con:value></con:property><con:property><con:name>SAuserId</con:name><con:value>10036011</con:value></con:property><con:property><con:name>GAtoken</con:name><con:value>90c281d7-5039-40d6-a93e-6ad05697883d</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>e74d81a2-8cc7-4e42-8e90-2f6b1a7974a9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8c85ea0e-728f-4bf1-8d58-eb84169e5bea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9ca84b8f-a99f-46a6-ae3f-587f5b89d141</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f489e895-d55a-4716-8cd9-6a008825f389</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>clientSecret</con:name><con:value>password1</con:value></con:property><con:property><con:name>FAtokenId</con:name><con:value>e3921ff97e4245c685d39c058f53b8fa</con:value></con:property><con:property><con:name>GAadmin</con:name><con:value>auth</con:value></con:property><con:property><con:name>GAadminPwd</con:name><con:value>Auth1234</con:value></con:property><con:property><con:name>tokenId</con:name><con:value>3ce1d71c-4c0c-4f5a-a079-ab648551b716</con:value></con:property><con:property><con:name>SAtokenId</con:name><con:value>65a181fb1eaa407ea48c2f0d792a6540</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:endpointStrategy xsi:type="con:DefaultEndpointStrategy" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:endpoint mode="COMPLEMENT" username="${#Project#username}" password="${#Project#password}" domain="">${#Project#Endpoint}</con:endpoint></con:endpointStrategy><con:requirements/><con:properties><con:property><con:name>Endpoint</con:name><con:value>https://d-api1.cidm.iad2.corp.rackspace.com:4932</con:value></con:property><con:property><con:name>path</con:name><con:value>cloud/v2.0</con:value></con:property><con:property><con:name>EndpointJson</con:name><con:value>https://d-api1.cidm.iad2.corp.rackspace.com</con:value></con:property><con:property><con:name>foundationPath</con:name><con:value>v1</con:value></con:property><con:property><con:name>pathv1.1</con:name><con:value>cloud/v1.1</con:value></con:property><con:property><con:name>pathSD</con:name><con:value>cloud/v2.0</con:value></con:property><con:property><con:name>migrationPath</con:name><con:value>migration/cloud</con:value></con:property><con:property><con:name>AHpath1</con:name><con:value>namespace/feed</con:value></con:property><con:property><con:name>AHpath2</con:name><con:value>namespace/feed</con:value></con:property><con:property><con:name>atomHopperEndPoint</con:name><con:value>http://10.4.39.67:8082</con:value></con:property><con:property><con:name>CAendpoint</con:name><con:value>https://auth.staging.us.ccp.rackspace.net</con:value></con:property></con:properties><con:wssContainer/><con:databaseConnectionContainer/><con:reporting><con:reportTemplates/><con:xmlTemplates/><con:parameters/></con:reporting><con:sensitiveInformation/></con:soapui-project>